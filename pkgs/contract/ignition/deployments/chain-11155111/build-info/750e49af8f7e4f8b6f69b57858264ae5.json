{
  "id": "750e49af8f7e4f8b6f69b57858264ae5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.30",
  "solcLongVersion": "0.8.30+commit.73712a01",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/DexFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"./DexPair.sol\";\n\n/**\n * @title DexFactory\n * @dev トークンペアの作成と管理を行うファクトリーコントラクト\n * @notice Uniswap V2のファクトリーパターンに基づいた実装\n */\ncontract DexFactory {\n    /// @dev ペア作成手数料の受取人アドレス\n    address public feeTo;\n    \n    /// @dev feeToを設定する権限を持つアドレス\n    address public feeToSetter;\n    \n    /// @dev トークンペアのマッピング (token0 => token1 => pairAddress)\n    mapping(address => mapping(address => address)) public getPair;\n    \n    /// @dev 作成されたペアのアドレス一覧\n    address[] public allPairs;\n    \n    /**\n     * @dev ペア作成時に発生するイベント\n     * @param token0 ペアの最初のトークンアドレス（アドレスの小さい方）\n     * @param token1 ペアの二番目のトークンアドレス（アドレスの大きい方）\n     * @param pair 作成されたペアのアドレス\n     * @param pairLength 現在のペア総数\n     */\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair,\n        uint256 pairLength\n    );\n    \n    /**\n     * @dev feeTo設定時に発生するイベント\n     * @param newFeeTo 新しいfeeToアドレス\n     */\n    event FeeToUpdated(address indexed newFeeTo);\n    \n    /**\n     * @dev feeToSetter設定時に発生するイベント\n     * @param newFeeToSetter 新しいfeeToSetterアドレス\n     */\n    event FeeToSetterUpdated(address indexed newFeeToSetter);\n    \n    /**\n     * @dev エラー：同一トークンペアの作成\n     */\n    error IdenticalTokens();\n    \n    /**\n     * @dev エラー：ゼロアドレスの指定\n     */\n    error ZeroAddress();\n    \n    /**\n     * @dev エラー：既に存在するペア\n     */\n    error PairAlreadyExists();\n    \n    /**\n     * @dev エラー：権限なし\n     */\n    error Unauthorized();\n    \n    /**\n     * @dev コンストラクタ\n     * @param _feeToSetter feeToSetterの初期アドレス\n     */\n    constructor(address _feeToSetter) {\n        if (_feeToSetter == address(0)) revert ZeroAddress();\n        feeToSetter = _feeToSetter;\n    }\n    \n    /**\n     * @dev 作成されたペアの総数を取得\n     * @return 作成されたペアの総数\n     */\n    function allPairsLength() external view returns (uint256) {\n        return allPairs.length;\n    }\n    \n    /**\n     * @dev 新しいトークンペアを作成\n     * @param tokenA 最初のトークンアドレス\n     * @param tokenB 二番目のトークンアドレス\n     * @return pair 作成されたペアのアドレス\n     */\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        // 同一トークンのチェック\n        if (tokenA == tokenB) revert IdenticalTokens();\n        \n        // トークンアドレスをソート（小さいアドレスをtoken0に）\n        (address token0, address token1) = tokenA < tokenB \n            ? (tokenA, tokenB) \n            : (tokenB, tokenA);\n        \n        // ゼロアドレスのチェック\n        if (token0 == address(0)) revert ZeroAddress();\n        \n        // 既存ペアの確認\n        if (getPair[token0][token1] != address(0)) revert PairAlreadyExists();\n        \n        // ペアコントラクトの作成\n        bytes memory bytecode = type(DexPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        \n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        \n        // ペアの初期化\n        DexPair(pair).initialize(token0, token1);\n        \n        // マッピングの更新\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // 双方向で参照可能にする\n        allPairs.push(pair);\n        \n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n    \n    /**\n     * @dev feeToアドレスを設定\n     * @param _feeTo 新しいfeeToアドレス\n     */\n    function setFeeTo(address _feeTo) external {\n        if (msg.sender != feeToSetter) revert Unauthorized();\n        feeTo = _feeTo;\n        emit FeeToUpdated(_feeTo);\n    }\n    \n    /**\n     * @dev feeToSetterアドレスを設定\n     * @param _feeToSetter 新しいfeeToSetterアドレス\n     */\n    function setFeeToSetter(address _feeToSetter) external {\n        if (msg.sender != feeToSetter) revert Unauthorized();\n        if (_feeToSetter == address(0)) revert ZeroAddress();\n        feeToSetter = _feeToSetter;\n        emit FeeToSetterUpdated(_feeToSetter);\n    }\n    \n    /**\n     * @dev 特定のペアアドレスを計算（CREATE2を使用）\n     * @param tokenA 最初のトークンアドレス\n     * @param tokenB 二番目のトークンアドレス\n     * @return pair 計算されたペアアドレス\n     */\n    function pairFor(address tokenA, address tokenB) external view returns (address pair) {\n        (address token0, address token1) = tokenA < tokenB \n            ? (tokenA, tokenB) \n            : (tokenB, tokenA);\n        \n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        bytes32 bytecodeHash = keccak256(type(DexPair).creationCode);\n        \n        pair = address(uint160(uint256(keccak256(abi.encodePacked(\n            bytes1(0xff),\n            address(this),\n            salt,\n            bytecodeHash\n        )))));\n    }\n}\n"
      },
      "contracts/DexPair.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * @title DexPair\n * @dev 流動性プールとLPトークンの機能を提供するペアコントラクト\n * @notice Uniswap V2のペアパターンに基づいた実装\n */\ncontract DexPair is ERC20, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    \n    /// @dev 最小流動性量（最初の流動性提供時にロックされる）\n    uint256 public constant MINIMUM_LIQUIDITY = 10**3;\n    \n    /// @dev ファクトリーコントラクトのアドレス\n    address public factory;\n    \n    /// @dev ペアの最初のトークンアドレス\n    address public token0;\n    \n    /// @dev ペアの二番目のトークンアドレス\n    address public token1;\n    \n    /// @dev 前回の各トークンのリザーブ量\n    uint112 private reserve0;\n    uint112 private reserve1;\n    uint32 private blockTimestampLast;\n    \n    /// @dev 累積価格（価格オラクル用）\n    uint256 public price0CumulativeLast;\n    uint256 public price1CumulativeLast;\n    \n    /// @dev kLast（手数料計算用）\n    uint256 public kLast;\n    \n    /**\n     * @dev スワップ時に発生するイベント\n     * @param sender スワップを実行したアドレス\n     * @param amount0In token0の入力量\n     * @param amount1In token1の入力量\n     * @param amount0Out token0の出力量\n     * @param amount1Out token1の出力量\n     * @param to 出力トークンの受取人\n     */\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    \n    /**\n     * @dev 流動性追加時に発生するイベント\n     * @param sender 流動性を追加したアドレス\n     * @param amount0 追加されたtoken0の量\n     * @param amount1 追加されたtoken1の量\n     */\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    \n    /**\n     * @dev 流動性削除時に発生するイベント\n     * @param sender 流動性を削除したアドレス\n     * @param amount0 削除されたtoken0の量\n     * @param amount1 削除されたtoken1の量\n     * @param to トークンの受取人\n     */\n    event Burn(\n        address indexed sender,\n        uint256 amount0,\n        uint256 amount1,\n        address indexed to\n    );\n    \n    /**\n     * @dev リザーブ同期時に発生するイベント\n     * @param reserve0 token0のリザーブ量\n     * @param reserve1 token1のリザーブ量\n     */\n    event Sync(uint112 reserve0, uint112 reserve1);\n    \n    /**\n     * @dev エラー：権限なし\n     */\n    error Unauthorized();\n    \n    /**\n     * @dev エラー：オーバーフロー\n     */\n    error Overflow();\n    \n    /**\n     * @dev エラー：不十分な流動性\n     */\n    error InsufficientLiquidity();\n    \n    /**\n     * @dev エラー：不十分な流動性をバーン\n     */\n    error InsufficientLiquidityBurned();\n    \n    /**\n     * @dev エラー：不十分な出力量\n     */\n    error InsufficientOutputAmount();\n    \n    /**\n     * @dev エラー：不十分な入力量\n     */\n    error InsufficientInputAmount();\n    \n    /**\n     * @dev エラー：不正なK値\n     */\n    error InvalidK();\n    \n    /**\n     * @dev エラー：無効な受取人アドレス\n     */\n    error InvalidTo();\n    \n    /**\n     * @dev コンストラクタ\n     */\n    constructor() ERC20(\"DEX LP Token\", \"DEX-LP\") {\n        factory = msg.sender;\n    }\n    \n    /**\n     * @dev ペアの初期化（ファクトリーから呼び出される）\n     * @param _token0 最初のトークンアドレス\n     * @param _token1 二番目のトークンアドレス\n     */\n    function initialize(address _token0, address _token1) external {\n        if (msg.sender != factory) revert Unauthorized();\n        token0 = _token0;\n        token1 = _token1;\n    }\n    \n    /**\n     * @dev 現在のリザーブ量と最終更新ブロック時刻を取得\n     * @return _reserve0 token0のリザーブ量\n     * @return _reserve1 token1のリザーブ量\n     * @return _blockTimestampLast 最終更新ブロック時刻\n     */\n    function getReserves() public view returns (\n        uint112 _reserve0,\n        uint112 _reserve1,\n        uint32 _blockTimestampLast\n    ) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n    \n    /**\n     * @dev 流動性をミント（流動性追加）\n     * @param to LPトークンの受取人アドレス\n     * @return liquidity ミントされたLPトークンの量\n     */\n    function mint(address to) external nonReentrant returns (uint256 liquidity) {\n        if (to == address(this)) revert InvalidTo();\n        \n        (uint112 _reserve0, uint112 _reserve1,) = getReserves();\n        uint256 balance0 = IERC20(token0).balanceOf(address(this));\n        uint256 balance1 = IERC20(token1).balanceOf(address(this));\n        uint256 amount0 = balance0 - _reserve0;\n        uint256 amount1 = balance1 - _reserve1;\n        \n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint256 _totalSupply = totalSupply();\n        \n        if (_totalSupply == 0) {\n            // 初回流動性提供\n            liquidity = _sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY;\n            _mint(address(0), MINIMUM_LIQUIDITY); // 永続的にロック\n        } else {\n            // 追加流動性提供\n            liquidity = _min(\n                (amount0 * _totalSupply) / _reserve0,\n                (amount1 * _totalSupply) / _reserve1\n            );\n        }\n        \n        if (liquidity == 0) revert InsufficientLiquidity();\n        _mint(to, liquidity);\n        \n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint256(reserve0) * reserve1;\n        \n        emit Mint(msg.sender, amount0, amount1);\n    }\n    \n    /**\n     * @dev 流動性をバーン（流動性削除）\n     * @param to トークンの受取人アドレス\n     * @return amount0 返却されるtoken0の量\n     * @return amount1 返却されるtoken1の量\n     */\n    function burn(address to) external nonReentrant returns (uint256 amount0, uint256 amount1) {\n        if (to == address(this)) revert InvalidTo();\n        \n        (uint112 _reserve0, uint112 _reserve1,) = getReserves();\n        address _token0 = token0;\n        address _token1 = token1;\n        uint256 balance0 = IERC20(_token0).balanceOf(address(this));\n        uint256 balance1 = IERC20(_token1).balanceOf(address(this));\n        uint256 liquidity = balanceOf(address(this));\n        \n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint256 _totalSupply = totalSupply();\n        \n        amount0 = (liquidity * balance0) / _totalSupply;\n        amount1 = (liquidity * balance1) / _totalSupply;\n        \n        if (amount0 == 0 || amount1 == 0) revert InsufficientLiquidityBurned();\n        \n        _burn(address(this), liquidity);\n        IERC20(_token0).safeTransfer(to, amount0);\n        IERC20(_token1).safeTransfer(to, amount1);\n        \n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n        \n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint256(reserve0) * reserve1;\n        \n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n    \n    /**\n     * @dev スワップ実行\n     * @param amount0Out token0の出力量\n     * @param amount1Out token1の出力量\n     * @param to 出力トークンの受取人\n     * @param data コールバック用データ\n     */\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external nonReentrant {\n        if (amount0Out == 0 && amount1Out == 0) revert InsufficientOutputAmount();\n        \n        (uint112 _reserve0, uint112 _reserve1,) = getReserves();\n        if (amount0Out >= _reserve0 || amount1Out >= _reserve1) revert InsufficientLiquidity();\n        \n        uint256 balance0;\n        uint256 balance1;\n        {\n            address _token0 = token0;\n            address _token1 = token1;\n            if (to == _token0 || to == _token1) revert InvalidTo();\n            \n            if (amount0Out > 0) IERC20(_token0).safeTransfer(to, amount0Out);\n            if (amount1Out > 0) IERC20(_token1).safeTransfer(to, amount1Out);\n            \n            // コールバック（フラッシュローン等）\n            if (data.length > 0) {\n                // IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n            }\n            \n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        \n        uint256 amount0In = balance0 > _reserve0 - amount0Out \n            ? balance0 - (_reserve0 - amount0Out) \n            : 0;\n        uint256 amount1In = balance1 > _reserve1 - amount1Out \n            ? balance1 - (_reserve1 - amount1Out) \n            : 0;\n        \n        if (amount0In == 0 && amount1In == 0) revert InsufficientInputAmount();\n        \n        {\n            // 手数料を考慮したK値チェック（0.3%手数料）\n            uint256 balance0Adjusted = (balance0 * 1000) - (amount0In * 3);\n            uint256 balance1Adjusted = (balance1 * 1000) - (amount1In * 3);\n            \n            if (balance0Adjusted * balance1Adjusted < uint256(_reserve0) * _reserve1 * 1000**2) {\n                revert InvalidK();\n            }\n        }\n        \n        _update(balance0, balance1, _reserve0, _reserve1);\n        \n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n    \n    /**\n     * @dev トークン残高をリザーブに同期\n     */\n    function sync() external nonReentrant {\n        _update(\n            IERC20(token0).balanceOf(address(this)),\n            IERC20(token1).balanceOf(address(this)),\n            reserve0,\n            reserve1\n        );\n    }\n    \n    /**\n     * @dev リザーブの更新\n     */\n    function _update(\n        uint256 balance0,\n        uint256 balance1,\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private {\n        if (balance0 > type(uint112).max || balance1 > type(uint112).max) {\n            revert Overflow();\n        }\n        \n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast;\n        \n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            price0CumulativeLast += uint256(_encode(_reserve1) / _reserve0) * timeElapsed;\n            price1CumulativeLast += uint256(_encode(_reserve0) / _reserve1) * timeElapsed;\n        }\n        \n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        \n        emit Sync(reserve0, reserve1);\n    }\n    \n    /**\n     * @dev 手数料のミント\n     */\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n        address feeTo = IFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint256 _kLast = kLast;\n        \n        if (feeOn) {\n            if (_kLast != 0) {\n                uint256 rootK = _sqrt(uint256(_reserve0) * _reserve1);\n                uint256 rootKLast = _sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint256 numerator = totalSupply() * (rootK - rootKLast);\n                    uint256 denominator = (rootK * 5) + rootKLast;\n                    uint256 liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n    \n    /**\n     * @dev 平方根の計算（バビロニア法）\n     */\n    function _sqrt(uint256 y) private pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n    \n    /**\n     * @dev 最小値を返す\n     */\n    function _min(uint256 x, uint256 y) private pure returns (uint256) {\n        return x < y ? x : y;\n    }\n    \n    /**\n     * @dev UQ112x112形式でエンコード\n     */\n    function _encode(uint112 y) private pure returns (uint224) {\n        return uint224(y) * uint224(2**112);\n    }\n}\n\n/**\n * @dev ファクトリーインターフェース\n */\ninterface IFactory {\n    function feeTo() external view returns (address);\n}\n"
      },
      "contracts/DexRouter.sol": {
        "content": ""
      },
      "contracts/TokenA.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title TokenA\n * @dev DEXで使用されるテストトークンA (TKA)\n * @notice フォーセット機能付きのERC20トークン\n */\ncontract TokenA is ERC20, Ownable, ReentrancyGuard {\n    /// @dev フォーセットで1回に取得できるトークン量\n    uint256 public constant FAUCET_AMOUNT = 100 * 10**18; // 100 TKA\n    \n    /// @dev フォーセットの制限時間（24時間）\n    uint256 public constant FAUCET_COOLDOWN = 24 hours;\n    \n    /// @dev 各アドレスの最後のフォーセット利用時刻\n    mapping(address => uint256) public lastFaucetTime;\n    \n    /**\n     * @dev フォーセット利用時に発生するイベント\n     * @param user フォーセットを利用したユーザーアドレス\n     * @param amount 取得したトークン量\n     * @param timestamp 利用時刻\n     */\n    event FaucetUsed(address indexed user, uint256 amount, uint256 timestamp);\n    \n    /**\n     * @dev フォーセット制限エラー\n     * @param user 制限にかかったユーザーアドレス\n     * @param remainingTime 次回利用まで待機する必要がある時間（秒）\n     */\n    error FaucetCooldownActive(address user, uint256 remainingTime);\n    \n    /**\n     * @dev コンストラクタ\n     * @param initialOwner 初期オーナーアドレス\n     */\n    constructor(address initialOwner) ERC20(\"TokenA\", \"TKA\") Ownable(initialOwner) {\n        // 初期供給はフォーセットのみで行う\n    }\n    \n    /**\n     * @dev フォーセット機能 - 誰でも1日1回100 TKAを取得可能\n     * @notice 24時間に1回のみ利用可能\n     */\n    function faucet() external nonReentrant {\n        address user = msg.sender;\n        uint256 currentTime = block.timestamp;\n        \n        // 前回のフォーセット利用から24時間経過しているかチェック\n        if (lastFaucetTime[user] + FAUCET_COOLDOWN > currentTime) {\n            uint256 remainingTime = (lastFaucetTime[user] + FAUCET_COOLDOWN) - currentTime;\n            revert FaucetCooldownActive(user, remainingTime);\n        }\n        \n        // フォーセット利用時刻を更新\n        lastFaucetTime[user] = currentTime;\n        \n        // トークンを発行してユーザーに送付\n        _mint(user, FAUCET_AMOUNT);\n        \n        emit FaucetUsed(user, FAUCET_AMOUNT, currentTime);\n    }\n    \n    /**\n     * @dev ユーザーが次にフォーセットを利用できるまでの残り時間を取得\n     * @param user 確認するユーザーアドレス\n     * @return remainingTime 残り時間（秒）、0の場合は利用可能\n     */\n    function getFaucetCooldownTime(address user) external view returns (uint256 remainingTime) {\n        uint256 currentTime = block.timestamp;\n        uint256 lastUsed = lastFaucetTime[user];\n        \n        if (lastUsed + FAUCET_COOLDOWN > currentTime) {\n            return (lastUsed + FAUCET_COOLDOWN) - currentTime;\n        }\n        \n        return 0;\n    }\n    \n    /**\n     * @dev ユーザーがフォーセットを利用可能かどうかを確認\n     * @param user 確認するユーザーアドレス\n     * @return canUse 利用可能な場合はtrue\n     */\n    function canUseFaucet(address user) external view returns (bool canUse) {\n        return lastFaucetTime[user] + FAUCET_COOLDOWN <= block.timestamp;\n    }\n    \n    /**\n     * @dev オーナーのみがトークンを発行可能（緊急時用）\n     * @param to 発行先アドレス\n     * @param amount 発行量\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n}\n"
      },
      "contracts/TokenB.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title TokenB\n * @dev DEXで使用されるテストトークンB (TKB)\n * @notice フォーセット機能付きのERC20トークン\n */\ncontract TokenB is ERC20, Ownable, ReentrancyGuard {\n    /// @dev フォーセットで1回に取得できるトークン量\n    uint256 public constant FAUCET_AMOUNT = 100 * 10**18; // 100 TKB\n    \n    /// @dev フォーセットの制限時間（24時間）\n    uint256 public constant FAUCET_COOLDOWN = 24 hours;\n    \n    /// @dev 各アドレスの最後のフォーセット利用時刻\n    mapping(address => uint256) public lastFaucetTime;\n    \n    /**\n     * @dev フォーセット利用時に発生するイベント\n     * @param user フォーセットを利用したユーザーアドレス\n     * @param amount 取得したトークン量\n     * @param timestamp 利用時刻\n     */\n    event FaucetUsed(address indexed user, uint256 amount, uint256 timestamp);\n    \n    /**\n     * @dev フォーセット制限エラー\n     * @param user 制限にかかったユーザーアドレス\n     * @param remainingTime 次回利用まで待機する必要がある時間（秒）\n     */\n    error FaucetCooldownActive(address user, uint256 remainingTime);\n    \n    /**\n     * @dev コンストラクタ\n     * @param initialOwner 初期オーナーアドレス\n     */\n    constructor(address initialOwner) ERC20(\"TokenB\", \"TKB\") Ownable(initialOwner) {\n        // 初期供給はフォーセットのみで行う\n    }\n    \n    /**\n     * @dev フォーセット機能 - 誰でも1日1回100 TKBを取得可能\n     * @notice 24時間に1回のみ利用可能\n     */\n    function faucet() external nonReentrant {\n        address user = msg.sender;\n        uint256 currentTime = block.timestamp;\n        \n        // 前回のフォーセット利用から24時間経過しているかチェック\n        if (lastFaucetTime[user] + FAUCET_COOLDOWN > currentTime) {\n            uint256 remainingTime = (lastFaucetTime[user] + FAUCET_COOLDOWN) - currentTime;\n            revert FaucetCooldownActive(user, remainingTime);\n        }\n        \n        // フォーセット利用時刻を更新\n        lastFaucetTime[user] = currentTime;\n        \n        // トークンを発行してユーザーに送付\n        _mint(user, FAUCET_AMOUNT);\n        \n        emit FaucetUsed(user, FAUCET_AMOUNT, currentTime);\n    }\n    \n    /**\n     * @dev ユーザーが次にフォーセットを利用できるまでの残り時間を取得\n     * @param user 確認するユーザーアドレス\n     * @return remainingTime 残り時間（秒）、0の場合は利用可能\n     */\n    function getFaucetCooldownTime(address user) external view returns (uint256 remainingTime) {\n        uint256 currentTime = block.timestamp;\n        uint256 lastUsed = lastFaucetTime[user];\n        \n        if (lastUsed + FAUCET_COOLDOWN > currentTime) {\n            return (lastUsed + FAUCET_COOLDOWN) - currentTime;\n        }\n        \n        return 0;\n    }\n    \n    /**\n     * @dev ユーザーがフォーセットを利用可能かどうかを確認\n     * @param user 確認するユーザーアドレス\n     * @return canUse 利用可能な場合はtrue\n     */\n    function canUseFaucet(address user) external view returns (bool canUse) {\n        return lastFaucetTime[user] + FAUCET_COOLDOWN <= block.timestamp;\n    }\n    \n    /**\n     * @dev オーナーのみがトークンを発行可能（緊急時用）\n     * @param to 発行先アドレス\n     * @param amount 発行量\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/DexRouter.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/DexRouter.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "3420",
        "formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.30;\"\n--> contracts/DexRouter.sol\n\n",
        "message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.30;\"",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/DexRouter.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1487
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 1488,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1487,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1487,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                1487
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1469,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC165": [
              1568
            ],
            "IERC20": [
              967
            ]
          },
          "id": 230,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 238,
              "src": "133:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "141:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 153,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 230,
              "sourceUnit": 234,
              "src": "170:38:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 152,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1568,
                    "src": "178:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 155,
                    "name": "IERC20",
                    "nameLocations": [
                      "590:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 967,
                    "src": "590:6:1"
                  },
                  "id": 156,
                  "nodeType": "InheritanceSpecifier",
                  "src": "590:6:1"
                },
                {
                  "baseName": {
                    "id": 157,
                    "name": "IERC165",
                    "nameLocations": [
                      "598:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1568,
                    "src": "598:7:1"
                  },
                  "id": 158,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:1"
                }
              ],
              "canonicalName": "IERC1363",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 154,
                "nodeType": "StructuredDocumentation",
                "src": "210:357:1",
                "text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
              },
              "fullyImplemented": false,
              "id": 229,
              "linearizedBaseContracts": [
                229,
                1568,
                967
              ],
              "name": "IERC1363",
              "nameLocation": "578:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:370:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "1296ee62",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "1532:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1556:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1548:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1568:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1560:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1547:27:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1593:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:6:1"
                  },
                  "scope": 229,
                  "src": "1523:76:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "1605:453:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "4000aea0",
                  "id": 180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "2072:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2096:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2088:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2108:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2100:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2130:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2115:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:48:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2154:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:1"
                  },
                  "scope": 229,
                  "src": "2063:97:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "2166:453:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "d8fbe994",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "2633:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2661:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2653:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2675:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2667:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2687:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2679:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:41:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2712:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:6:1"
                  },
                  "scope": 229,
                  "src": "2624:94:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:536:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "c1d34b89",
                  "id": 206,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "3274:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3302:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3294:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3316:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3308:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3308:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3328:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3320:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3350:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3335:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3293:62:1"
                  },
                  "returnParameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "3374:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3373:6:1"
                  },
                  "scope": 229,
                  "src": "3265:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "3386:390:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "3177029f",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "3790:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3813:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3805:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3805:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3830:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3822:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:32:1"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "3855:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3854:6:1"
                  },
                  "scope": 229,
                  "src": "3781:80:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "3867:478:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "cae9ca51",
                  "id": 228,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "4359:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4382:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4374:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4399:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4391:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4421:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4406:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:53:1"
                  },
                  "returnParameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "4445:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4445:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4444:6:1"
                  },
                  "scope": 229,
                  "src": "4350:101:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 230,
              "src": "568:3885:1",
              "usedErrors": [],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "107:4347:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1568
            ]
          },
          "id": 234,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 231,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 233,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 234,
              "sourceUnit": 1569,
              "src": "133:59:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 232,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1568,
                    "src": "141:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:87:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              967
            ]
          },
          "id": 238,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 235,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:25:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 237,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 238,
              "sourceUnit": 968,
              "src": "132:49:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 236,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "140:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:77:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              374
            ],
            "IERC20Errors": [
              279
            ],
            "IERC721Errors": [
              327
            ]
          },
          "id": 375,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 239,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 240,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:4",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 279,
              "linearizedBaseContracts": [
                279
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:4",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 249,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "654:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "670:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "687:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:4"
                  },
                  "src": "623:80:4"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:4",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 254,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "891:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:4"
                  },
                  "src": "866:41:4"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:4",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 259,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "1104:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:4"
                  },
                  "src": "1077:45:4"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:4",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 268,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "1511:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "1528:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "1547:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:4"
                  },
                  "src": "1478:85:4"
                },
                {
                  "documentation": {
                    "id": 269,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:4",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 273,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "1775:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:4"
                  },
                  "src": "1748:45:4"
                },
                {
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:4",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 278,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "2025:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:4"
                  },
                  "src": "1999:43:4"
                }
              ],
              "scope": 375,
              "src": "280:1764:4",
              "usedErrors": [
                249,
                254,
                259,
                268,
                273,
                278
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 280,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:4",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 327,
              "linearizedBaseContracts": [
                327
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 281,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:4",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 285,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "2469:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:4"
                  },
                  "src": "2444:40:4"
                },
                {
                  "documentation": {
                    "id": 286,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:4",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 290,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "2656:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:4"
                  },
                  "src": "2627:46:4"
                },
                {
                  "documentation": {
                    "id": 291,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:4",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 299,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "3000:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "3016:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "3033:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:4"
                  },
                  "src": "2973:75:4"
                },
                {
                  "documentation": {
                    "id": 300,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:4",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 304,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 302,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "3237:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:4"
                  },
                  "src": "3211:42:4"
                },
                {
                  "documentation": {
                    "id": 305,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:4",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 309,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 309,
                        "src": "3451:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:4"
                  },
                  "src": "3423:46:4"
                },
                {
                  "documentation": {
                    "id": 310,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:4",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 316,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "3760:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "3778:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:4"
                  },
                  "src": "3727:68:4"
                },
                {
                  "documentation": {
                    "id": 317,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:4",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 321,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "4008:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:4"
                  },
                  "src": "3980:46:4"
                },
                {
                  "documentation": {
                    "id": 322,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:4",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 326,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "4262:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:4"
                  },
                  "src": "4234:46:4"
                }
              ],
              "scope": 375,
              "src": "2190:2092:4",
              "usedErrors": [
                285,
                290,
                299,
                304,
                309,
                316,
                321,
                326
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 328,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:4",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 374,
              "linearizedBaseContracts": [
                374
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 329,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:4",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 339,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4860:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4876:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4893:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "4909:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:4"
                  },
                  "src": "4827:99:4"
                },
                {
                  "documentation": {
                    "id": 340,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:4",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 344,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "5116:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:4"
                  },
                  "src": "5089:43:4"
                },
                {
                  "documentation": {
                    "id": 345,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:4",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 349,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "5331:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:4"
                  },
                  "src": "5302:47:4"
                },
                {
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:4",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 356,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "5651:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "5669:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:4"
                  },
                  "src": "5616:68:4"
                },
                {
                  "documentation": {
                    "id": 357,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:4",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 361,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "5898:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:4"
                  },
                  "src": "5869:47:4"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:4",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 366,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 366,
                        "src": "6153:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:4"
                  },
                  "src": "6124:47:4"
                },
                {
                  "documentation": {
                    "id": 367,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:4",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 373,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "6494:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "6513:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:4"
                  },
                  "src": "6462:73:4"
                }
              ],
              "scope": 375,
              "src": "4430:2107:4",
              "usedErrors": [
                339,
                344,
                349,
                356,
                361,
                366,
                373
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1487
            ],
            "ERC20": [
              889
            ],
            "IERC20": [
              967
            ],
            "IERC20Errors": [
              279
            ],
            "IERC20Metadata": [
              993
            ]
          },
          "id": 890,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 376,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 378,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 968,
              "src": "131:36:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 377,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "139:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 380,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 994,
              "src": "168:63:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 379,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 993,
                    "src": "176:14:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 1488,
              "src": "232:48:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 381,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1487,
                    "src": "240:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 384,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 890,
              "sourceUnit": 375,
              "src": "281:65:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 383,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 279,
                    "src": "289:12:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 386,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1487,
                    "src": "1133:7:5"
                  },
                  "id": 387,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:5"
                },
                {
                  "baseName": {
                    "id": 388,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 967,
                    "src": "1142:6:5"
                  },
                  "id": 389,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:5"
                },
                {
                  "baseName": {
                    "id": 390,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 993,
                    "src": "1150:14:5"
                  },
                  "id": 391,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:5"
                },
                {
                  "baseName": {
                    "id": 392,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 279,
                    "src": "1166:12:5"
                  },
                  "id": 393,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:5"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 385,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:5",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 889,
              "linearizedBaseContracts": [
                889,
                279,
                993,
                967,
                1487
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1185:53:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 396,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:5",
                    "keyType": {
                      "id": 394,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 395,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1245:83:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 402,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:5",
                    "keyType": {
                      "id": 398,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 401,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:5",
                      "keyType": {
                        "id": 399,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 400,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1335:28:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1370:20:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "1396:22:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "1638:57:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 417,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "1648:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 418,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 412,
                            "src": "1656:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:5"
                      },
                      {
                        "expression": {
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 421,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "1671:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 422,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "1681:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:5",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 426,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "1594:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "1615:21:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:5"
                  },
                  "returnParameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:5"
                  },
                  "scope": 889,
                  "src": "1582:113:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    980
                  ],
                  "body": {
                    "id": 434,
                    "nodeType": "Block",
                    "src": "1820:29:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 432,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "1837:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 431,
                        "id": 433,
                        "nodeType": "Return",
                        "src": "1830:12:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 435,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:5"
                  },
                  "returnParameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 435,
                        "src": "1805:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:5"
                  },
                  "scope": 889,
                  "src": "1760:89:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    986
                  ],
                  "body": {
                    "id": 443,
                    "nodeType": "Block",
                    "src": "2024:31:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 441,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "2041:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 440,
                        "id": 442,
                        "nodeType": "Return",
                        "src": "2034:14:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 436,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:5",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 444,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:5"
                  },
                  "returnParameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "2009:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:5"
                  },
                  "scope": 889,
                  "src": "1962:93:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    992
                  ],
                  "body": {
                    "id": 452,
                    "nodeType": "Block",
                    "src": "2744:26:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 449,
                        "id": 451,
                        "nodeType": "Return",
                        "src": "2754:9:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 445,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:5",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 453,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:5"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 453,
                        "src": "2737:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:5"
                  },
                  "scope": 889,
                  "src": "2688:82:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    916
                  ],
                  "body": {
                    "id": 461,
                    "nodeType": "Block",
                    "src": "2864:36:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 459,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "2881:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 458,
                        "id": 460,
                        "nodeType": "Return",
                        "src": "2874:19:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 454,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:22:5",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "18160ddd",
                  "id": 462,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2812:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 455,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2823:2:5"
                  },
                  "returnParameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "2855:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2854:9:5"
                  },
                  "scope": 889,
                  "src": "2803:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    924
                  ],
                  "body": {
                    "id": 474,
                    "nodeType": "Block",
                    "src": "3007:42:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 470,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "3024:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 472,
                          "indexExpression": {
                            "id": 471,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "3034:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 469,
                        "id": 473,
                        "nodeType": "Return",
                        "src": "3017:25:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "2906:22:5",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "70a08231",
                  "id": 475,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2942:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2960:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "2952:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2951:17:5"
                  },
                  "returnParameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "2998:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2998:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:9:5"
                  },
                  "scope": 889,
                  "src": "2933:116:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    934
                  ],
                  "body": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "3319:103:5",
                    "statements": [
                      {
                        "assignments": [
                          486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 486,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3337:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 498,
                            "src": "3329:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3329:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 489,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 487,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1469,
                            "src": "3345:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3329:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 491,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "3377:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 492,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "3384:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 493,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "3388:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 490,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "3367:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 495,
                        "nodeType": "ExpressionStatement",
                        "src": "3367:27:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 484,
                        "id": 497,
                        "nodeType": "Return",
                        "src": "3404:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 476,
                    "nodeType": "StructuredDocumentation",
                    "src": "3055:184:5",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 499,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3253:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3270:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3262:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 480,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3282:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3274:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3261:27:5"
                  },
                  "returnParameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "3313:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3312:6:5"
                  },
                  "scope": 889,
                  "src": "3244:178:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    944
                  ],
                  "body": {
                    "id": 515,
                    "nodeType": "Block",
                    "src": "3544:51:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 509,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "3561:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 511,
                            "indexExpression": {
                              "id": 510,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "3573:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3561:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 513,
                          "indexExpression": {
                            "id": 512,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "3580:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 508,
                        "id": 514,
                        "nodeType": "Return",
                        "src": "3554:34:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 500,
                    "nodeType": "StructuredDocumentation",
                    "src": "3428:22:5",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 516,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3464:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3482:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "3474:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3497:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "3489:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:32:5"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "3535:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3534:9:5"
                  },
                  "scope": 889,
                  "src": "3455:140:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    954
                  ],
                  "body": {
                    "id": 539,
                    "nodeType": "Block",
                    "src": "3981:107:5",
                    "statements": [
                      {
                        "assignments": [
                          527
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 527,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3999:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 539,
                            "src": "3991:13:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 526,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3991:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 530,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 528,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1469,
                            "src": "4007:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4007:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3991:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 532,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "4038:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 533,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 519,
                              "src": "4045:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 534,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 521,
                              "src": "4054:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 531,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              780,
                              840
                            ],
                            "referencedDeclaration": 780,
                            "src": "4029:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:31:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4077:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 525,
                        "id": 538,
                        "nodeType": "Return",
                        "src": "4070:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 517,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:296:5",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 540,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3911:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 522,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3927:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "3919:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 521,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3944:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "3936:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:32:5"
                  },
                  "returnParameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "3975:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3974:6:5"
                  },
                  "scope": 889,
                  "src": "3902:186:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    966
                  ],
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "4773:151:5",
                    "statements": [
                      {
                        "assignments": [
                          553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 553,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4791:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 571,
                            "src": "4783:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4783:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 556,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 554,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1469,
                            "src": "4801:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:12:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4783:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 558,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "4839:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 559,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "4845:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 560,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "4854:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 557,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "4823:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "4823:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 564,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "4880:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 565,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "4886:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 566,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "4890:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 563,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "4870:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4870:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "4870:26:5"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 551,
                        "id": 570,
                        "nodeType": "Return",
                        "src": "4906:11:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 541,
                    "nodeType": "StructuredDocumentation",
                    "src": "4094:581:5",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4689:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4710:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4702:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4724:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4716:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4736:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4728:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4701:41:5"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4767:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:6:5"
                  },
                  "scope": 889,
                  "src": "4680:244:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "5366:231:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 582,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "5380:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5396:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5388:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 583,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5388:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5388:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5380:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 596,
                        "nodeType": "IfStatement",
                        "src": "5376:86:5",
                        "trueBody": {
                          "id": 595,
                          "nodeType": "Block",
                          "src": "5400:62:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 591,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5448:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 590,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5440:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 589,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5440:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 592,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5440:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 588,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "5421:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5421:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 594,
                              "nodeType": "RevertStatement",
                              "src": "5414:37:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 597,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "5475:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5489:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5481:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 598,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5481:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5481:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5475:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 611,
                        "nodeType": "IfStatement",
                        "src": "5471:86:5",
                        "trueBody": {
                          "id": 610,
                          "nodeType": "Block",
                          "src": "5493:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 606,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5543:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 605,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5535:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 604,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5535:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5535:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 603,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "5514:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5514:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 609,
                              "nodeType": "RevertStatement",
                              "src": "5507:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 613,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "5574:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 614,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "5580:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 615,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "5584:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 612,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "5566:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:24:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:24:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 573,
                    "nodeType": "StructuredDocumentation",
                    "src": "4930:362:5",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5306:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5324:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5316:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5338:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5330:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5350:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5342:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5342:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5315:41:5"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5366:0:5"
                  },
                  "scope": 889,
                  "src": "5297:300:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 695,
                    "nodeType": "Block",
                    "src": "5987:1032:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 629,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "6001:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6017:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6009:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 630,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6009:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6001:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 666,
                          "nodeType": "Block",
                          "src": "6175:362:5",
                          "statements": [
                            {
                              "assignments": [
                                641
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 641,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6197:11:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 666,
                                  "src": "6189:19:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 640,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6189:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 645,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 642,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "6211:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 644,
                                "indexExpression": {
                                  "id": 643,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 622,
                                  "src": "6221:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6211:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6189:37:5"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 646,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "6244:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 647,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "6258:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6244:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 656,
                              "nodeType": "IfStatement",
                              "src": "6240:115:5",
                              "trueBody": {
                                "id": 655,
                                "nodeType": "Block",
                                "src": "6265:90:5",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 650,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 622,
                                          "src": "6315:4:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 651,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 641,
                                          "src": "6321:11:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 652,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 626,
                                          "src": "6334:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 649,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 249,
                                        "src": "6290:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6290:50:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 654,
                                    "nodeType": "RevertStatement",
                                    "src": "6283:57:5"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 665,
                              "nodeType": "UncheckedBlock",
                              "src": "6368:159:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 663,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 657,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 397,
                                        "src": "6475:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 659,
                                      "indexExpression": {
                                        "id": 658,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 622,
                                        "src": "6485:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6475:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 660,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 641,
                                        "src": "6493:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 661,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 626,
                                        "src": "6507:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6493:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6475:37:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 664,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6475:37:5"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 667,
                        "nodeType": "IfStatement",
                        "src": "5997:540:5",
                        "trueBody": {
                          "id": 639,
                          "nodeType": "Block",
                          "src": "6021:148:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 635,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 405,
                                  "src": "6137:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 636,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "6153:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6137:21:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 638,
                              "nodeType": "ExpressionStatement",
                              "src": "6137:21:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 668,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "6551:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6565:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6557:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 669,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6557:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6551:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 687,
                          "nodeType": "Block",
                          "src": "6766:206:5",
                          "statements": [
                            {
                              "id": 686,
                              "nodeType": "UncheckedBlock",
                              "src": "6780:182:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 680,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 397,
                                        "src": "6925:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 682,
                                      "indexExpression": {
                                        "id": 681,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 624,
                                        "src": "6935:2:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6925:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 683,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 626,
                                      "src": "6942:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6925:22:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 685,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6925:22:5"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 688,
                        "nodeType": "IfStatement",
                        "src": "6547:425:5",
                        "trueBody": {
                          "id": 679,
                          "nodeType": "Block",
                          "src": "6569:191:5",
                          "statements": [
                            {
                              "id": 678,
                              "nodeType": "UncheckedBlock",
                              "src": "6583:167:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 674,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 405,
                                      "src": "6714:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 675,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 626,
                                      "src": "6730:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6714:21:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 677,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6714:21:5"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 690,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "6996:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 691,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "7002:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 692,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "7006:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 689,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "6987:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 694,
                        "nodeType": "EmitStatement",
                        "src": "6982:30:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 620,
                    "nodeType": "StructuredDocumentation",
                    "src": "5603:304:5",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 696,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5921:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5937:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "5929:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5951:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "5943:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5943:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5963:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "5955:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:41:5"
                  },
                  "returnParameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5987:0:5"
                  },
                  "scope": 889,
                  "src": "5912:1107:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 728,
                    "nodeType": "Block",
                    "src": "7418:152:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 704,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "7432:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7451:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7443:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 705,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7443:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7443:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7432:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 718,
                        "nodeType": "IfStatement",
                        "src": "7428:91:5",
                        "trueBody": {
                          "id": 717,
                          "nodeType": "Block",
                          "src": "7455:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 713,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7505:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 712,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7497:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 711,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7497:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7497:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 710,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "7476:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7476:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 716,
                              "nodeType": "RevertStatement",
                              "src": "7469:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7544:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7536:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 720,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7536:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 724,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "7548:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 725,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "7557:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 719,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "7528:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 727,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "7025:332:5",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 729,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7371:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7385:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "7377:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7402:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "7394:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7394:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7376:32:5"
                  },
                  "returnParameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7418:0:5"
                  },
                  "scope": 889,
                  "src": "7362:208:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 761,
                    "nodeType": "Block",
                    "src": "7944:150:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 737,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "7958:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7977:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7969:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 738,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7969:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7969:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7958:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 751,
                        "nodeType": "IfStatement",
                        "src": "7954:89:5",
                        "trueBody": {
                          "id": 750,
                          "nodeType": "Block",
                          "src": "7981:62:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 746,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8029:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8021:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 744,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8021:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 747,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 743,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "8002:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8002:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 749,
                              "nodeType": "RevertStatement",
                              "src": "7995:37:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 753,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "8060:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8077:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 754,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 758,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 734,
                              "src": "8081:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 752,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "8052:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 730,
                    "nodeType": "StructuredDocumentation",
                    "src": "7576:307:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 762,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7897:5:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 732,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7911:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "7903:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7903:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 734,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7928:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "7920:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7920:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7902:32:5"
                  },
                  "returnParameters": {
                    "id": 736,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7944:0:5"
                  },
                  "scope": 889,
                  "src": "7888:206:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 779,
                    "nodeType": "Block",
                    "src": "8704:54:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 773,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "8723:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 774,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "8730:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 775,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "8739:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8746:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 772,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              780,
                              840
                            ],
                            "referencedDeclaration": 840,
                            "src": "8714:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:37:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 763,
                    "nodeType": "StructuredDocumentation",
                    "src": "8100:525:5",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 780,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8639:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8656:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "8648:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8648:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8671:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "8663:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8663:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8688:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 780,
                        "src": "8680:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8680:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8647:47:5"
                  },
                  "returnParameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8704:0:5"
                  },
                  "scope": 889,
                  "src": "8630:128:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 839,
                    "nodeType": "Block",
                    "src": "9703:334:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 792,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 783,
                            "src": "9717:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9734:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 793,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9717:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 806,
                        "nodeType": "IfStatement",
                        "src": "9713:89:5",
                        "trueBody": {
                          "id": 805,
                          "nodeType": "Block",
                          "src": "9738:64:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 801,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9788:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9780:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 799,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9780:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9780:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 798,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 273,
                                  "src": "9759:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9759:32:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 804,
                              "nodeType": "RevertStatement",
                              "src": "9752:39:5"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 807,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "9815:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9834:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9826:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 808,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9826:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 821,
                        "nodeType": "IfStatement",
                        "src": "9811:90:5",
                        "trueBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "9838:63:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 816,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9887:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 815,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9879:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 814,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9879:7:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9879:10:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 813,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 278,
                                  "src": "9859:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9859:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 819,
                              "nodeType": "RevertStatement",
                              "src": "9852:38:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 822,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "9910:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 825,
                              "indexExpression": {
                                "id": 823,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "9922:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9910:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 826,
                            "indexExpression": {
                              "id": 824,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "9929:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9910:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 827,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "9940:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9910:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 829,
                        "nodeType": "ExpressionStatement",
                        "src": "9910:35:5"
                      },
                      {
                        "condition": {
                          "id": 830,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "9959:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 838,
                        "nodeType": "IfStatement",
                        "src": "9955:76:5",
                        "trueBody": {
                          "id": 837,
                          "nodeType": "Block",
                          "src": "9970:61:5",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 832,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 783,
                                    "src": "9998:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 833,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 785,
                                    "src": "10005:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 834,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "10014:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 831,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "9989:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9989:31:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 836,
                              "nodeType": "EmitStatement",
                              "src": "9984:36:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 781,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:836:5",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 840,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9614:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9631:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9623:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9623:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 785,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9646:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9638:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9638:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 787,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9663:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9655:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 786,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9655:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 789,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9675:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 840,
                        "src": "9670:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9622:63:5"
                  },
                  "returnParameters": {
                    "id": 791,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9703:0:5"
                  },
                  "scope": 889,
                  "src": "9605:432:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 887,
                    "nodeType": "Block",
                    "src": "10408:387:5",
                    "statements": [
                      {
                        "assignments": [
                          851
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 851,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10426:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 887,
                            "src": "10418:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 850,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10418:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 856,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 853,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "10455:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 854,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "10462:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 852,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "10445:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10445:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10418:52:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 857,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "10484:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10508:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 859,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10508:7:5",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 858,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10503:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10503:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10517:3:5",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10503:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 886,
                        "nodeType": "IfStatement",
                        "src": "10480:309:5",
                        "trueBody": {
                          "id": 885,
                          "nodeType": "Block",
                          "src": "10522:267:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 864,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 851,
                                  "src": "10540:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 865,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "10559:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10540:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 874,
                              "nodeType": "IfStatement",
                              "src": "10536:130:5",
                              "trueBody": {
                                "id": 873,
                                "nodeType": "Block",
                                "src": "10566:100:5",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 868,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 845,
                                          "src": "10618:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 869,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 851,
                                          "src": "10627:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 870,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 847,
                                          "src": "10645:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 867,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 268,
                                        "src": "10591:26:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 871,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10591:60:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 872,
                                    "nodeType": "RevertStatement",
                                    "src": "10584:67:5"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 884,
                              "nodeType": "UncheckedBlock",
                              "src": "10679:100:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 876,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 843,
                                        "src": "10716:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 877,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 845,
                                        "src": "10723:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 880,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 878,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 851,
                                          "src": "10732:16:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 879,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 847,
                                          "src": "10751:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10732:24:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 881,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10758:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 875,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        780,
                                        840
                                      ],
                                      "referencedDeclaration": 840,
                                      "src": "10707:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:57:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 883,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10707:57:5"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 841,
                    "nodeType": "StructuredDocumentation",
                    "src": "10043:271:5",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 888,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10328:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10352:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "10344:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10344:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10367:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "10359:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10384:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "10376:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10376:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10343:47:5"
                  },
                  "returnParameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10408:0:5"
                  },
                  "scope": 889,
                  "src": "10319:476:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 890,
              "src": "1106:9691:5",
              "usedErrors": [
                249,
                254,
                259,
                268,
                273,
                278
              ],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "105:10693:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              967
            ]
          },
          "id": 968,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 891,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 892,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:6",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 967,
              "linearizedBaseContracts": [
                967
              ],
              "name": "IERC20",
              "nameLocation": "215:6:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 893,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:6",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 901,
                  "name": "Transfer",
                  "nameLocation": "397:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 895,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "406:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 897,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "428:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 899,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "448:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:6"
                  },
                  "src": "391:72:6"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 902,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:6",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 910,
                  "name": "Approval",
                  "nameLocation": "628:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 904,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "637:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 906,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "660:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "685:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:6"
                  },
                  "src": "622:78:6"
                },
                {
                  "documentation": {
                    "id": 911,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:6",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 916,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:6"
                  },
                  "returnParameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "822:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:6"
                  },
                  "scope": 967,
                  "src": "776:55:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 917,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:6",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 924,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "932:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:6"
                  },
                  "returnParameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "972:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:6"
                  },
                  "scope": 967,
                  "src": "913:68:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 925,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:6",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 934,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "1223:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 929,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "1235:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 928,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:6"
                  },
                  "returnParameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "1268:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:6"
                  },
                  "scope": 967,
                  "src": "1205:69:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 935,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:6",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 944,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "1568:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 936,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "1583:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:6"
                  },
                  "returnParameters": {
                    "id": 943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "1623:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:6"
                  },
                  "scope": 967,
                  "src": "1549:83:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 945,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:6",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 954,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 950,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "2327:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "2344:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:6"
                  },
                  "returnParameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "2377:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:6"
                  },
                  "scope": 967,
                  "src": "2310:73:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 955,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:6",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 966,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 957,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2713:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 956,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 959,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2727:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 961,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2739:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 960,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:6"
                  },
                  "returnParameters": {
                    "id": 965,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "2772:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:6"
                  },
                  "scope": 967,
                  "src": "2691:87:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 968,
              "src": "205:2575:6",
              "usedErrors": [],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "106:2675:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              967
            ],
            "IERC20Metadata": [
              993
            ]
          },
          "id": 994,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 969,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 971,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 994,
              "sourceUnit": 968,
              "src": "151:37:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 970,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "159:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 973,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 967,
                    "src": "306:6:7"
                  },
                  "id": 974,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:7"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 972,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:7",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 993,
              "linearizedBaseContracts": [
                993,
                967
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 975,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:7",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 980,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 976,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:7"
                  },
                  "returnParameters": {
                    "id": 979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 980,
                        "src": "417:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:7"
                  },
                  "scope": 993,
                  "src": "378:54:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 981,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:7",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 986,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:7"
                  },
                  "returnParameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "540:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:7"
                  },
                  "scope": 993,
                  "src": "499:56:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 987,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:7",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 992,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:7"
                  },
                  "returnParameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "674:5:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:7"
                  },
                  "scope": 993,
                  "src": "631:50:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 994,
              "src": "278:405:7",
              "usedErrors": [],
              "usedEvents": [
                901,
                910
              ]
            }
          ],
          "src": "125:559:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "IERC1363": [
              229
            ],
            "IERC20": [
              967
            ],
            "SafeERC20": [
              1457
            ]
          },
          "id": 1458,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 995,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 997,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1458,
              "sourceUnit": 968,
              "src": "141:37:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 996,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "149:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
              "file": "../../../interfaces/IERC1363.sol",
              "id": 999,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1458,
              "sourceUnit": 230,
              "src": "179:58:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 998,
                    "name": "IERC1363",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "187:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1000,
                "nodeType": "StructuredDocumentation",
                "src": "239:458:8",
                "text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 1457,
              "linearizedBaseContracts": [
                1457
              ],
              "name": "SafeERC20",
              "nameLocation": "706:9:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1001,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:65:8",
                    "text": " @dev An operation with an ERC-20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 1005,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "798:24:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "831:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1005,
                        "src": "823:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:15:8"
                  },
                  "src": "792:46:8"
                },
                {
                  "documentation": {
                    "id": 1006,
                    "nodeType": "StructuredDocumentation",
                    "src": "844:71:8",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 1014,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "926:32:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1008,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "967:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1014,
                        "src": "959:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1007,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "984:16:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1014,
                        "src": "976:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1010:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1014,
                        "src": "1002:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:70:8"
                  },
                  "src": "920:109:8"
                },
                {
                  "body": {
                    "id": 1037,
                    "nodeType": "Block",
                    "src": "1291:88:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1026,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1018,
                              "src": "1321:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1029,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1018,
                                    "src": "1343:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1349:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 934,
                                  "src": "1343:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1031,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1020,
                                      "src": "1360:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1032,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1022,
                                      "src": "1364:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1033,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1359:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1027,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1328:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1332:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1328:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:43:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1025,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "1301:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:71:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1036,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:71:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1015,
                    "nodeType": "StructuredDocumentation",
                    "src": "1035:179:8",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 1038,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1228:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1018,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1248:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "1241:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1017,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1016,
                            "name": "IERC20",
                            "nameLocations": [
                              "1241:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "1241:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "1241:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1020,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1263:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "1255:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1019,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1275:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "1267:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1240:41:8"
                  },
                  "returnParameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:8"
                  },
                  "scope": 1457,
                  "src": "1219:160:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1064,
                    "nodeType": "Block",
                    "src": "1708:98:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1052,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1042,
                              "src": "1738:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1055,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1042,
                                    "src": "1760:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1766:12:8",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 966,
                                  "src": "1760:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1057,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1044,
                                      "src": "1781:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1058,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1046,
                                      "src": "1787:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1059,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1048,
                                      "src": "1791:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1060,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1780:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1053,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1745:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1749:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1745:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1745:53:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1051,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "1718:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:81:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1063,
                        "nodeType": "ExpressionStatement",
                        "src": "1718:81:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1039,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:228:8",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 1065,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1627:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1042,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1651:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "1644:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1041,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1040,
                            "name": "IERC20",
                            "nameLocations": [
                              "1644:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "1644:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "1644:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1044,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "1658:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1046,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1680:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "1672:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1048,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1692:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "1684:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:55:8"
                  },
                  "returnParameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:0:8"
                  },
                  "scope": 1457,
                  "src": "1618:188:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1090,
                    "nodeType": "Block",
                    "src": "2033:99:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1079,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "2074:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1082,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1069,
                                    "src": "2096:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2102:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 934,
                                  "src": "2096:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1084,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1071,
                                      "src": "2113:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1085,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1073,
                                      "src": "2117:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1086,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2112:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1080,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2081:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2085:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2081:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2081:43:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1078,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "2050:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2050:75:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1077,
                        "id": 1089,
                        "nodeType": "Return",
                        "src": "2043:82:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1066,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:126:8",
                    "text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 1091,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransfer",
                  "nameLocation": "1952:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1975:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "1968:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1068,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1067,
                            "name": "IERC20",
                            "nameLocations": [
                              "1968:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "1968:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "1968:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1071,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1990:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "1982:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1070,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2002:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "1994:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1967:41:8"
                  },
                  "returnParameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "2027:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:6:8"
                  },
                  "scope": 1457,
                  "src": "1943:189:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1119,
                    "nodeType": "Block",
                    "src": "2381:109:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1107,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1095,
                              "src": "2422:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1110,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1095,
                                    "src": "2444:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2450:12:8",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 966,
                                  "src": "2444:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1112,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1097,
                                      "src": "2465:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1113,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1099,
                                      "src": "2471:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1114,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1101,
                                      "src": "2475:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1115,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2464:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1108,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2429:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2433:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2429:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2429:53:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1106,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "2398:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:85:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1105,
                        "id": 1118,
                        "nodeType": "Return",
                        "src": "2391:92:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1092,
                    "nodeType": "StructuredDocumentation",
                    "src": "2138:130:8",
                    "text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 1120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransferFrom",
                  "nameLocation": "2282:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2309:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "2302:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1094,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1093,
                            "name": "IERC20",
                            "nameLocations": [
                              "2302:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "2302:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "2302:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1097,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2324:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "2316:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1096,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2338:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "2330:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "2342:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:55:8"
                  },
                  "returnParameters": {
                    "id": 1105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "2375:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:8"
                  },
                  "scope": 1457,
                  "src": "2273:217:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1150,
                    "nodeType": "Block",
                    "src": "3232:139:8",
                    "statements": [
                      {
                        "assignments": [
                          1132
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1132,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "3250:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1150,
                            "src": "3242:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1131,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3242:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1141,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1137,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3289:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1457",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1457",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 1136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3281:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1135,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3281:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3281:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1139,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "3296:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1133,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "3265:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:9:8",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 944,
                            "src": "3265:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3242:62:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1143,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "3327:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "3334:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1145,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1132,
                                "src": "3343:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1146,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1128,
                                "src": "3358:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3343:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1142,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "3314:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3314:50:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1149,
                        "nodeType": "ExpressionStatement",
                        "src": "3314:50:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1121,
                    "nodeType": "StructuredDocumentation",
                    "src": "2496:645:8",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1151,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "3155:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3184:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1151,
                        "src": "3177:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1123,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1122,
                            "name": "IERC20",
                            "nameLocations": [
                              "3177:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "3177:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "3177:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3199:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1151,
                        "src": "3191:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3216:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1151,
                        "src": "3208:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3176:46:8"
                  },
                  "returnParameters": {
                    "id": 1130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3232:0:8"
                  },
                  "scope": 1457,
                  "src": "3146:225:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1193,
                    "nodeType": "Block",
                    "src": "4137:370:8",
                    "statements": [
                      {
                        "id": 1192,
                        "nodeType": "UncheckedBlock",
                        "src": "4147:354:8",
                        "statements": [
                          {
                            "assignments": [
                              1163
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1163,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "4179:16:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 1192,
                                "src": "4171:24:8",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1162,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4171:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1172,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1168,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4222:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1457",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1457",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4214:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1166,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4214:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4214:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1170,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "4229:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1164,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1155,
                                  "src": "4198:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4204:9:8",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 944,
                                "src": "4198:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4198:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4171:66:8"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1173,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1163,
                                "src": "4255:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1174,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1159,
                                "src": "4274:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4255:36:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1183,
                            "nodeType": "IfStatement",
                            "src": "4251:160:8",
                            "trueBody": {
                              "id": 1182,
                              "nodeType": "Block",
                              "src": "4293:118:8",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 1177,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1157,
                                        "src": "4351:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1178,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1163,
                                        "src": "4360:16:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 1179,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1159,
                                        "src": "4378:17:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1176,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1014,
                                      "src": "4318:32:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (address,uint256,uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 1180,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4318:78:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 1181,
                                  "nodeType": "RevertStatement",
                                  "src": "4311:85:8"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1185,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1155,
                                  "src": "4437:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 1186,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1157,
                                  "src": "4444:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1187,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1163,
                                    "src": "4453:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1188,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1159,
                                    "src": "4472:17:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4453:36:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1184,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1241,
                                "src": "4424:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4424:66:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1191,
                            "nodeType": "ExpressionStatement",
                            "src": "4424:66:8"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1152,
                    "nodeType": "StructuredDocumentation",
                    "src": "3377:657:8",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1194,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "4048:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1155,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4077:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "4070:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1154,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1153,
                            "name": "IERC20",
                            "nameLocations": [
                              "4070:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "4070:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "4070:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4092:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "4084:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1159,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "4109:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "4101:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1158,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4069:58:8"
                  },
                  "returnParameters": {
                    "id": 1161,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4137:0:8"
                  },
                  "scope": 1457,
                  "src": "4039:468:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1240,
                    "nodeType": "Block",
                    "src": "5161:303:8",
                    "statements": [
                      {
                        "assignments": [
                          1206
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1206,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "5184:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1240,
                            "src": "5171:25:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1205,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5171:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1215,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1209,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1198,
                                "src": "5214:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5220:7:8",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 954,
                              "src": "5214:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1211,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "5230:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1212,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1202,
                                  "src": "5239:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1213,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5229:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 1207,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5199:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5203:10:8",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "5199:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5199:47:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5171:75:8"
                      },
                      {
                        "condition": {
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5261:45:8",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1217,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1198,
                                "src": "5286:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 1218,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1206,
                                "src": "5293:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1216,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1456,
                              "src": "5262:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5262:44:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1239,
                        "nodeType": "IfStatement",
                        "src": "5257:201:8",
                        "trueBody": {
                          "id": 1238,
                          "nodeType": "Block",
                          "src": "5308:150:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1222,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1198,
                                    "src": "5342:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1225,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1198,
                                          "src": "5364:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$967",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5370:7:8",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 954,
                                        "src": "5364:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 1227,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1200,
                                            "src": "5380:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 1228,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5389:1:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 1229,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5379:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1223,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5349:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1224,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5353:10:8",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "5349:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5349:43:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1221,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "5322:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5322:71:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1232,
                              "nodeType": "ExpressionStatement",
                              "src": "5322:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1234,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1198,
                                    "src": "5427:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 1235,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "5434:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1233,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1415,
                                  "src": "5407:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5407:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1237,
                              "nodeType": "ExpressionStatement",
                              "src": "5407:40:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1195,
                    "nodeType": "StructuredDocumentation",
                    "src": "4513:566:8",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
                  },
                  "id": 1241,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "5093:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5113:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "5106:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1197,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1196,
                            "name": "IERC20",
                            "nameLocations": [
                              "5106:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "5106:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "5106:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5128:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "5120:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5120:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1202,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5145:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "5137:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5137:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5105:46:8"
                  },
                  "returnParameters": {
                    "id": 1204,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5161:0:8"
                  },
                  "scope": 1457,
                  "src": "5084:380:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1283,
                    "nodeType": "Block",
                    "src": "5911:219:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1254,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1247,
                                "src": "5925:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5928:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5925:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5933:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5925:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5943:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5925:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6011:39:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1268,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1247,
                                  "src": "6034:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1269,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1249,
                                  "src": "6038:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1270,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1251,
                                  "src": "6045:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1266,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "6012:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6018:15:8",
                                "memberName": "transferAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 180,
                                "src": "6012:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6012:38:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1281,
                          "nodeType": "IfStatement",
                          "src": "6007:117:8",
                          "trueBody": {
                            "id": 1280,
                            "nodeType": "Block",
                            "src": "6052:72:8",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1276,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1245,
                                          "src": "6106:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1275,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6098:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1274,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6098:7:8",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1277,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6098:14:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1273,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "6073:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6073:40:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1279,
                                "nodeType": "RevertStatement",
                                "src": "6066:47:8"
                              }
                            ]
                          }
                        },
                        "id": 1282,
                        "nodeType": "IfStatement",
                        "src": "5921:203:8",
                        "trueBody": {
                          "id": 1265,
                          "nodeType": "Block",
                          "src": "5946:55:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1260,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1245,
                                    "src": "5973:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1261,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1247,
                                    "src": "5980:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1262,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1249,
                                    "src": "5984:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1259,
                                  "name": "safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1038,
                                  "src": "5960:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5960:30:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1264,
                              "nodeType": "ExpressionStatement",
                              "src": "5960:30:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1242,
                    "nodeType": "StructuredDocumentation",
                    "src": "5470:333:8",
                    "text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCallRelaxed",
                  "nameLocation": "5817:22:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1245,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5849:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "5840:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1244,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1243,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5840:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "5840:8:8"
                          },
                          "referencedDeclaration": 229,
                          "src": "5840:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1247,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5864:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "5856:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5856:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1249,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5876:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "5868:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5868:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1251,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5896:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1284,
                        "src": "5883:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5883:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5839:62:8"
                  },
                  "returnParameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5911:0:8"
                  },
                  "scope": 1457,
                  "src": "5808:322:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1330,
                    "nodeType": "Block",
                    "src": "6649:239:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1299,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1292,
                                "src": "6663:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6666:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "6663:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6671:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6663:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6681:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6663:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6759:49:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1314,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "6786:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1315,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1292,
                                  "src": "6792:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1316,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1294,
                                  "src": "6796:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1317,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1296,
                                  "src": "6803:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1312,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1288,
                                  "src": "6760:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6766:19:8",
                                "memberName": "transferFromAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 206,
                                "src": "6760:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6760:48:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1328,
                          "nodeType": "IfStatement",
                          "src": "6755:127:8",
                          "trueBody": {
                            "id": 1327,
                            "nodeType": "Block",
                            "src": "6810:72:8",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1323,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1288,
                                          "src": "6864:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1322,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6856:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1321,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6856:7:8",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6856:14:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1320,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "6831:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6831:40:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1326,
                                "nodeType": "RevertStatement",
                                "src": "6824:47:8"
                              }
                            ]
                          }
                        },
                        "id": 1329,
                        "nodeType": "IfStatement",
                        "src": "6659:223:8",
                        "trueBody": {
                          "id": 1311,
                          "nodeType": "Block",
                          "src": "6684:65:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1305,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1288,
                                    "src": "6715:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1306,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1290,
                                    "src": "6722:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1307,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1292,
                                    "src": "6728:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1308,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1294,
                                    "src": "6732:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1304,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1065,
                                  "src": "6698:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6698:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1310,
                              "nodeType": "ExpressionStatement",
                              "src": "6698:40:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1285,
                    "nodeType": "StructuredDocumentation",
                    "src": "6136:341:8",
                    "text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1331,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCallRelaxed",
                  "nameLocation": "6491:26:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1288,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6536:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "6527:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1287,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1286,
                            "name": "IERC1363",
                            "nameLocations": [
                              "6527:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "6527:8:8"
                          },
                          "referencedDeclaration": 229,
                          "src": "6527:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1290,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6559:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "6551:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6551:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1292,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6581:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "6573:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6573:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1294,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6601:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "6593:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "6616:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6517:122:8"
                  },
                  "returnParameters": {
                    "id": 1298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6649:0:8"
                  },
                  "scope": 1457,
                  "src": "6482:406:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1373,
                    "nodeType": "Block",
                    "src": "7655:218:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1344,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1337,
                                "src": "7669:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7672:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "7669:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7677:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7669:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7687:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7669:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7755:38:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1358,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1337,
                                  "src": "7777:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1359,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1339,
                                  "src": "7781:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1360,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1341,
                                  "src": "7788:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1356,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1335,
                                  "src": "7756:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$229",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7762:14:8",
                                "memberName": "approveAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 228,
                                "src": "7756:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7756:37:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1371,
                          "nodeType": "IfStatement",
                          "src": "7751:116:8",
                          "trueBody": {
                            "id": 1370,
                            "nodeType": "Block",
                            "src": "7795:72:8",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1366,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1335,
                                          "src": "7849:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$229",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1365,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7841:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1364,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7841:7:8",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7841:14:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1363,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "7816:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7816:40:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1369,
                                "nodeType": "RevertStatement",
                                "src": "7809:47:8"
                              }
                            ]
                          }
                        },
                        "id": 1372,
                        "nodeType": "IfStatement",
                        "src": "7665:202:8",
                        "trueBody": {
                          "id": 1355,
                          "nodeType": "Block",
                          "src": "7690:55:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1350,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1335,
                                    "src": "7717:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1351,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1337,
                                    "src": "7724:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1352,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1339,
                                    "src": "7728:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$229",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1349,
                                  "name": "forceApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1241,
                                  "src": "7704:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7704:30:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1354,
                              "nodeType": "ExpressionStatement",
                              "src": "7704:30:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1332,
                    "nodeType": "StructuredDocumentation",
                    "src": "6894:654:8",
                    "text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1374,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCallRelaxed",
                  "nameLocation": "7562:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1335,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7593:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "7584:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$229",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1334,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1333,
                            "name": "IERC1363",
                            "nameLocations": [
                              "7584:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 229,
                            "src": "7584:8:8"
                          },
                          "referencedDeclaration": 229,
                          "src": "7584:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$229",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1337,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7608:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "7600:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7600:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1339,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7620:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "7612:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1338,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7612:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7640:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "7627:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7583:62:8"
                  },
                  "returnParameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7655:0:8"
                  },
                  "scope": 1457,
                  "src": "7553:320:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1414,
                    "nodeType": "Block",
                    "src": "8440:650:8",
                    "statements": [
                      {
                        "assignments": [
                          1384
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1384,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "8458:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1414,
                            "src": "8450:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1383,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8450:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1385,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8450:18:8"
                      },
                      {
                        "assignments": [
                          1387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1387,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "8486:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1414,
                            "src": "8478:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1386,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8478:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1388,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8478:19:8"
                      },
                      {
                        "AST": {
                          "nativeSrc": "8532:396:8",
                          "nodeType": "YulBlock",
                          "src": "8532:396:8",
                          "statements": [
                            {
                              "nativeSrc": "8546:75:8",
                              "nodeType": "YulVariableDeclaration",
                              "src": "8546:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "8566:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8566:3:8"
                                    },
                                    "nativeSrc": "8566:5:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8566:5:8"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "8573:5:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8573:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8580:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8580:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8587:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8587:4:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8593:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "8593:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8583:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8583:3:8"
                                    },
                                    "nativeSrc": "8583:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8583:15:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8606:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8606:4:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "8600:5:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "8600:5:8"
                                    },
                                    "nativeSrc": "8600:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8600:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8613:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8613:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8616:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8616:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "8561:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8561:4:8"
                                },
                                "nativeSrc": "8561:60:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8561:60:8"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nativeSrc": "8550:7:8",
                                  "nodeType": "YulTypedName",
                                  "src": "8550:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "8682:157:8",
                                "nodeType": "YulBlock",
                                "src": "8682:157:8",
                                "statements": [
                                  {
                                    "nativeSrc": "8700:22:8",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8700:22:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8717:4:8",
                                          "nodeType": "YulLiteral",
                                          "src": "8717:4:8",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "8711:5:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8711:5:8"
                                      },
                                      "nativeSrc": "8711:11:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8711:11:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nativeSrc": "8704:3:8",
                                        "nodeType": "YulTypedName",
                                        "src": "8704:3:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8754:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "8754:3:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8759:1:8",
                                          "nodeType": "YulLiteral",
                                          "src": "8759:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8762:14:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "8762:14:8"
                                          },
                                          "nativeSrc": "8762:16:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8762:16:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nativeSrc": "8739:14:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8739:14:8"
                                      },
                                      "nativeSrc": "8739:40:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8739:40:8"
                                    },
                                    "nativeSrc": "8739:40:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8739:40:8"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8803:3:8",
                                          "nodeType": "YulIdentifier",
                                          "src": "8803:3:8"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8808:14:8",
                                            "nodeType": "YulIdentifier",
                                            "src": "8808:14:8"
                                          },
                                          "nativeSrc": "8808:16:8",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8808:16:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "8796:6:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "8796:6:8"
                                      },
                                      "nativeSrc": "8796:29:8",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8796:29:8"
                                    },
                                    "nativeSrc": "8796:29:8",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8796:29:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nativeSrc": "8673:7:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8673:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "8666:6:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8666:6:8"
                                },
                                "nativeSrc": "8666:15:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8666:15:8"
                              },
                              "nativeSrc": "8663:176:8",
                              "nodeType": "YulIf",
                              "src": "8663:176:8"
                            },
                            {
                              "nativeSrc": "8852:30:8",
                              "nodeType": "YulAssignment",
                              "src": "8852:30:8",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "8866:14:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8866:14:8"
                                },
                                "nativeSrc": "8866:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8866:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "8852:10:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8852:10:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8895:23:8",
                              "nodeType": "YulAssignment",
                              "src": "8895:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8916:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "8916:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "8910:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8910:5:8"
                                },
                                "nativeSrc": "8910:8:8",
                                "nodeType": "YulFunctionCall",
                                "src": "8910:8:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "8895:11:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "8895:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1380,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8587:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1380,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8606:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1384,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8852:10:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1387,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8895:11:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1378,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8573:5:8",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1389,
                        "nodeType": "InlineAssembly",
                        "src": "8507:421:8"
                      },
                      {
                        "condition": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1390,
                              "name": "returnSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1384,
                              "src": "8942:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8956:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8942:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1401,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1387,
                              "src": "8994:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9009:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8994:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8942:68:8",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1395,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1378,
                                      "src": "8968:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$967",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$967",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8960:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1393,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8960:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8960:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8975:4:8",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "8960:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8980:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8960:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8990:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8960:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1413,
                        "nodeType": "IfStatement",
                        "src": "8938:146:8",
                        "trueBody": {
                          "id": 1412,
                          "nodeType": "Block",
                          "src": "9012:72:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1408,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1378,
                                        "src": "9066:5:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$967",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$967",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 1407,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9058:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1406,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9058:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9058:14:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1405,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "9033:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9033:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1411,
                              "nodeType": "RevertStatement",
                              "src": "9026:47:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1375,
                    "nodeType": "StructuredDocumentation",
                    "src": "7879:486:8",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
                  },
                  "id": 1415,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "8379:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1378,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8406:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1415,
                        "src": "8399:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1377,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1376,
                            "name": "IERC20",
                            "nameLocations": [
                              "8399:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "8399:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "8399:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1380,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8426:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1415,
                        "src": "8413:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1379,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8413:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8398:33:8"
                  },
                  "returnParameters": {
                    "id": 1382,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8440:0:8"
                  },
                  "scope": 1457,
                  "src": "8370:720:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1455,
                    "nodeType": "Block",
                    "src": "9681:391:8",
                    "statements": [
                      {
                        "assignments": [
                          1427
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1427,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9696:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1455,
                            "src": "9691:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1426,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9691:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1428,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9691:12:8"
                      },
                      {
                        "assignments": [
                          1430
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1430,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "9721:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1455,
                            "src": "9713:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1429,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9713:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1431,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9713:18:8"
                      },
                      {
                        "assignments": [
                          1433
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1433,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "9749:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1455,
                            "src": "9741:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1432,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9741:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1434,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9741:19:8"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9795:174:8",
                          "nodeType": "YulBlock",
                          "src": "9795:174:8",
                          "statements": [
                            {
                              "nativeSrc": "9809:71:8",
                              "nodeType": "YulAssignment",
                              "src": "9809:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "9825:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9825:3:8"
                                    },
                                    "nativeSrc": "9825:5:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9825:5:8"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "9832:5:8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9832:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9839:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9839:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9846:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9846:4:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9852:4:8",
                                        "nodeType": "YulLiteral",
                                        "src": "9852:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9842:3:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9842:3:8"
                                    },
                                    "nativeSrc": "9842:15:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9842:15:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9865:4:8",
                                        "nodeType": "YulIdentifier",
                                        "src": "9865:4:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9859:5:8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9859:5:8"
                                    },
                                    "nativeSrc": "9859:11:8",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9859:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9872:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9872:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9875:4:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9875:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "9820:4:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:4:8"
                                },
                                "nativeSrc": "9820:60:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9820:60:8"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nativeSrc": "9809:7:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9809:7:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9893:30:8",
                              "nodeType": "YulAssignment",
                              "src": "9893:30:8",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "9907:14:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9907:14:8"
                                },
                                "nativeSrc": "9907:16:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9907:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "9893:10:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9893:10:8"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9936:23:8",
                              "nodeType": "YulAssignment",
                              "src": "9936:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9957:1:8",
                                    "nodeType": "YulLiteral",
                                    "src": "9957:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "9951:5:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9951:5:8"
                                },
                                "nativeSrc": "9951:8:8",
                                "nodeType": "YulFunctionCall",
                                "src": "9951:8:8"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "9936:11:8",
                                  "nodeType": "YulIdentifier",
                                  "src": "9936:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1421,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9846:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1421,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9865:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1430,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9893:10:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1433,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9936:11:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9809:7:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1419,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9832:5:8",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1435,
                        "nodeType": "InlineAssembly",
                        "src": "9770:199:8"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1436,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "9985:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1437,
                                    "name": "returnSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1430,
                                    "src": "9997:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10011:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9997:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1448,
                                    "name": "returnValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1433,
                                    "src": "10048:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1449,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10063:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10048:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9997:67:8",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1442,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1419,
                                            "src": "10023:5:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$967",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$967",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 1441,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "10015:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1440,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10015:7:8",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1443,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10015:14:8",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1444,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10030:4:8",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "10015:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10035:6:8",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10015:26:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10044:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10015:30:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1452,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9996:69:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9985:80:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1425,
                        "id": 1454,
                        "nodeType": "Return",
                        "src": "9978:87:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1416,
                    "nodeType": "StructuredDocumentation",
                    "src": "9096:491:8",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
                  },
                  "id": 1456,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "9601:23:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1419,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "9632:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "9625:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$967",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1418,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1417,
                            "name": "IERC20",
                            "nameLocations": [
                              "9625:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 967,
                            "src": "9625:6:8"
                          },
                          "referencedDeclaration": 967,
                          "src": "9625:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$967",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1421,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9652:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "9639:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9639:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9624:33:8"
                  },
                  "returnParameters": {
                    "id": 1425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1456,
                        "src": "9675:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1423,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9675:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9674:6:8"
                  },
                  "scope": 1457,
                  "src": "9592:480:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1458,
              "src": "698:9376:8",
              "usedErrors": [
                1005,
                1014
              ],
              "usedEvents": []
            }
          ],
          "src": "115:9960:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1487
            ]
          },
          "id": 1488,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1459,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:9"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1460,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:9",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1487,
              "linearizedBaseContracts": [
                1487
              ],
              "name": "Context",
              "nameLocation": "642:7:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1468,
                    "nodeType": "Block",
                    "src": "718:34:9",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1465,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1464,
                        "id": 1467,
                        "nodeType": "Return",
                        "src": "728:17:9"
                      }
                    ]
                  },
                  "id": 1469,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1461,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:9"
                  },
                  "returnParameters": {
                    "id": 1464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "709:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:9"
                  },
                  "scope": 1487,
                  "src": "656:96:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1477,
                    "nodeType": "Block",
                    "src": "825:32:9",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1474,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:9",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1473,
                        "id": 1476,
                        "nodeType": "Return",
                        "src": "835:15:9"
                      }
                    ]
                  },
                  "id": 1478,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:9"
                  },
                  "returnParameters": {
                    "id": 1473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1472,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "809:14:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1471,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:9"
                  },
                  "scope": 1487,
                  "src": "758:99:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1485,
                    "nodeType": "Block",
                    "src": "935:25:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1482,
                        "id": 1484,
                        "nodeType": "Return",
                        "src": "945:8:9"
                      }
                    ]
                  },
                  "id": 1486,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:9"
                  },
                  "returnParameters": {
                    "id": 1482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1481,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1486,
                        "src": "926:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:9"
                  },
                  "scope": 1487,
                  "src": "863:97:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1488,
              "src": "624:338:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1556
            ]
          },
          "id": 1557,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1489,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:10"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1490,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:10",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1556,
              "linearizedBaseContracts": [
                1556
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1493,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "1818:40:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1496,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "1864:36:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1498,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "1907:23:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1499,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:10",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 1501,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:10"
                  },
                  "src": "1994:37:10"
                },
                {
                  "body": {
                    "id": 1508,
                    "nodeType": "Block",
                    "src": "2051:38:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1504,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "2061:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1505,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1493,
                            "src": "2071:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1507,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:10"
                      }
                    ]
                  },
                  "id": 1509,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:10"
                  },
                  "returnParameters": {
                    "id": 1503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:10"
                  },
                  "scope": 1556,
                  "src": "2037:52:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1519,
                    "nodeType": "Block",
                    "src": "2490:79:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1512,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1536,
                            "src": "2500:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1514,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:10"
                      },
                      {
                        "id": 1515,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:10"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1516,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1544,
                            "src": "2542:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1518,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1510,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:10",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1520,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:10",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1511,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:10"
                  },
                  "src": "2466:103:10",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1535,
                    "nodeType": "Block",
                    "src": "2614:268:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1523,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "2702:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1524,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "2713:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1530,
                        "nodeType": "IfStatement",
                        "src": "2698:86:10",
                        "trueBody": {
                          "id": 1529,
                          "nodeType": "Block",
                          "src": "2722:62:10",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1526,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1501,
                                  "src": "2743:28:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1528,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1531,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "2858:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1532,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "2868:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1534,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:10"
                      }
                    ]
                  },
                  "id": 1536,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:10"
                  },
                  "returnParameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:10"
                  },
                  "scope": 1556,
                  "src": "2575:307:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1543,
                    "nodeType": "Block",
                    "src": "2926:170:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1539,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "3068:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1540,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1493,
                            "src": "3078:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1542,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:10"
                      }
                    ]
                  },
                  "id": 1544,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1537,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:10"
                  },
                  "returnParameters": {
                    "id": 1538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:10"
                  },
                  "scope": 1556,
                  "src": "2888:208:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1554,
                    "nodeType": "Block",
                    "src": "3339:42:10",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1550,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "3356:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1551,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "3367:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1549,
                        "id": 1553,
                        "nodeType": "Return",
                        "src": "3349:25:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1545,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:10",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1555,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:10"
                  },
                  "returnParameters": {
                    "id": 1549,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1548,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1555,
                        "src": "3333:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1547,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:10"
                  },
                  "scope": 1556,
                  "src": "3275:106:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1557,
              "src": "1030:2353:10",
              "usedErrors": [
                1501
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1568
            ]
          },
          "id": 1569,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1558,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:25:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1559,
                "nodeType": "StructuredDocumentation",
                "src": "142:280:11",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1568,
              "linearizedBaseContracts": [
                1568
              ],
              "name": "IERC165",
              "nameLocation": "433:7:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1560,
                    "nodeType": "StructuredDocumentation",
                    "src": "447:340:11",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1567,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "801:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1562,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "826:11:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1567,
                        "src": "819:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1561,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "819:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "818:20:11"
                  },
                  "returnParameters": {
                    "id": 1566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1565,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1567,
                        "src": "862:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1564,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "862:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "861:6:11"
                  },
                  "scope": 1568,
                  "src": "792:76:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1569,
              "src": "423:447:11",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:756:11"
        },
        "id": 11
      },
      "contracts/DexFactory.sol": {
        "ast": {
          "absolutePath": "contracts/DexFactory.sol",
          "exportedSymbols": {
            "Context": [
              1487
            ],
            "DexFactory": [
              1895
            ],
            "DexPair": [
              2979
            ],
            "ERC20": [
              889
            ],
            "IERC1363": [
              229
            ],
            "IERC20": [
              967
            ],
            "IERC20Errors": [
              279
            ],
            "IERC20Metadata": [
              993
            ],
            "IFactory": [
              2986
            ],
            "ReentrancyGuard": [
              1556
            ],
            "SafeERC20": [
              1457
            ]
          },
          "id": 1896,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1570,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "contracts/DexPair.sol",
              "file": "./DexPair.sol",
              "id": 1571,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1896,
              "sourceUnit": 2987,
              "src": "58:23:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "DexFactory",
              "contractDependencies": [
                2979
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1572,
                "nodeType": "StructuredDocumentation",
                "src": "83:194:12",
                "text": " @title DexFactory\n @dev トークンペアの作成と管理を行うファクトリーコントラクト\n @notice Uniswap V2のファクトリーパターンに基づいた実装"
              },
              "fullyImplemented": true,
              "id": 1895,
              "linearizedBaseContracts": [
                1895
              ],
              "name": "DexFactory",
              "nameLocation": "287:10:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 1573,
                    "nodeType": "StructuredDocumentation",
                    "src": "304:54:12",
                    "text": "@dev ペア作成手数料の受取人アドレス"
                  },
                  "functionSelector": "017e7e58",
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "feeTo",
                  "nameLocation": "378:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1895,
                  "src": "363:20:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1576,
                    "nodeType": "StructuredDocumentation",
                    "src": "394:56:12",
                    "text": "@dev feeToを設定する権限を持つアドレス"
                  },
                  "functionSelector": "094b7415",
                  "id": 1578,
                  "mutability": "mutable",
                  "name": "feeToSetter",
                  "nameLocation": "470:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1895,
                  "src": "455:26:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1579,
                    "nodeType": "StructuredDocumentation",
                    "src": "492:79:12",
                    "text": "@dev トークンペアのマッピング (token0 => token1 => pairAddress)"
                  },
                  "functionSelector": "e6a43905",
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "getPair",
                  "nameLocation": "631:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1895,
                  "src": "576:62:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                    "typeString": "mapping(address => mapping(address => address))"
                  },
                  "typeName": {
                    "id": 1584,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1580,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "584:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "576:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                      "typeString": "mapping(address => mapping(address => address))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1583,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 1581,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "603:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "595:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1582,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "614:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1586,
                    "nodeType": "StructuredDocumentation",
                    "src": "649:51:12",
                    "text": "@dev 作成されたペアのアドレス一覧"
                  },
                  "functionSelector": "1e3dd18b",
                  "id": 1589,
                  "mutability": "mutable",
                  "name": "allPairs",
                  "nameLocation": "722:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1895,
                  "src": "705:25:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1587,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "705:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1588,
                    "nodeType": "ArrayTypeName",
                    "src": "705:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1590,
                    "nodeType": "StructuredDocumentation",
                    "src": "741:366:12",
                    "text": " @dev ペア作成時に発生するイベント\n @param token0 ペアの最初のトークンアドレス（アドレスの小さい方）\n @param token1 ペアの二番目のトークンアドレス（アドレスの大きい方）\n @param pair 作成されたペアのアドレス\n @param pairLength 現在のペア総数"
                  },
                  "eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
                  "id": 1600,
                  "name": "PairCreated",
                  "nameLocation": "1118:11:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1592,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "1155:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1139:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1594,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "1187:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1171:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1593,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1171:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1596,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "1211:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1203:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1595,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1203:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1598,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pairLength",
                        "nameLocation": "1233:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "1225:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1225:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:120:12"
                  },
                  "src": "1112:138:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1601,
                    "nodeType": "StructuredDocumentation",
                    "src": "1260:115:12",
                    "text": " @dev feeTo設定時に発生するイベント\n @param newFeeTo 新しいfeeToアドレス"
                  },
                  "eventSelector": "9887df018dfa75103faf0f1388028e55a1124783c285d8d2cbcf62a067a6b844",
                  "id": 1605,
                  "name": "FeeToUpdated",
                  "nameLocation": "1386:12:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1603,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFeeTo",
                        "nameLocation": "1415:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1605,
                        "src": "1399:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1399:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1398:26:12"
                  },
                  "src": "1380:45:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1606,
                    "nodeType": "StructuredDocumentation",
                    "src": "1435:133:12",
                    "text": " @dev feeToSetter設定時に発生するイベント\n @param newFeeToSetter 新しいfeeToSetterアドレス"
                  },
                  "eventSelector": "021a5d032b24a495206270942f8c755327f3b27539f23099539ff95e2500b28d",
                  "id": 1610,
                  "name": "FeeToSetterUpdated",
                  "nameLocation": "1579:18:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1608,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFeeToSetter",
                        "nameLocation": "1614:14:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1610,
                        "src": "1598:30:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1607,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1598:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1597:32:12"
                  },
                  "src": "1573:57:12"
                },
                {
                  "documentation": {
                    "id": 1611,
                    "nodeType": "StructuredDocumentation",
                    "src": "1640:69:12",
                    "text": " @dev エラー：同一トークンペアの作成"
                  },
                  "errorSelector": "5c6d7b73",
                  "id": 1613,
                  "name": "IdenticalTokens",
                  "nameLocation": "1720:15:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1612,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1735:2:12"
                  },
                  "src": "1714:24:12"
                },
                {
                  "documentation": {
                    "id": 1614,
                    "nodeType": "StructuredDocumentation",
                    "src": "1748:63:12",
                    "text": " @dev エラー：ゼロアドレスの指定"
                  },
                  "errorSelector": "d92e233d",
                  "id": 1616,
                  "name": "ZeroAddress",
                  "nameLocation": "1822:11:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1615,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1833:2:12"
                  },
                  "src": "1816:20:12"
                },
                {
                  "documentation": {
                    "id": 1617,
                    "nodeType": "StructuredDocumentation",
                    "src": "1846:60:12",
                    "text": " @dev エラー：既に存在するペア"
                  },
                  "errorSelector": "c9bb25eb",
                  "id": 1619,
                  "name": "PairAlreadyExists",
                  "nameLocation": "1917:17:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1618,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1934:2:12"
                  },
                  "src": "1911:26:12"
                },
                {
                  "documentation": {
                    "id": 1620,
                    "nodeType": "StructuredDocumentation",
                    "src": "1947:48:12",
                    "text": " @dev エラー：権限なし"
                  },
                  "errorSelector": "82b42900",
                  "id": 1622,
                  "name": "Unauthorized",
                  "nameLocation": "2006:12:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1621,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2018:2:12"
                  },
                  "src": "2000:21:12"
                },
                {
                  "body": {
                    "id": 1642,
                    "nodeType": "Block",
                    "src": "2175:105:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1628,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1625,
                            "src": "2189:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2213:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2205:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1629,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2205:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2205:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2189:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1637,
                        "nodeType": "IfStatement",
                        "src": "2185:52:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1634,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "2224:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2224:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1636,
                          "nodeType": "RevertStatement",
                          "src": "2217:20:12"
                        }
                      },
                      {
                        "expression": {
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1638,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "2247:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1639,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1625,
                            "src": "2261:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2247:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1641,
                        "nodeType": "ExpressionStatement",
                        "src": "2247:26:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1623,
                    "nodeType": "StructuredDocumentation",
                    "src": "2031:105:12",
                    "text": " @dev コンストラクタ\n @param _feeToSetter feeToSetterの初期アドレス"
                  },
                  "id": 1643,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "_feeToSetter",
                        "nameLocation": "2161:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1643,
                        "src": "2153:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:22:12"
                  },
                  "returnParameters": {
                    "id": 1627,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2175:0:12"
                  },
                  "scope": 1895,
                  "src": "2141:139:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1652,
                    "nodeType": "Block",
                    "src": "2462:39:12",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1649,
                            "name": "allPairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1589,
                            "src": "2479:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2488:6:12",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2479:15:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1648,
                        "id": 1651,
                        "nodeType": "Return",
                        "src": "2472:22:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1644,
                    "nodeType": "StructuredDocumentation",
                    "src": "2290:109:12",
                    "text": " @dev 作成されたペアの総数を取得\n @return 作成されたペアの総数"
                  },
                  "functionSelector": "574f2ba3",
                  "id": 1653,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nameLocation": "2413:14:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1645,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2427:2:12"
                  },
                  "returnParameters": {
                    "id": 1648,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1647,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1653,
                        "src": "2453:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1646,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2453:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2452:9:12"
                  },
                  "scope": 1895,
                  "src": "2404:97:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1765,
                    "nodeType": "Block",
                    "src": "2830:1206:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1663,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1656,
                            "src": "2889:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1664,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "2899:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2889:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1669,
                        "nodeType": "IfStatement",
                        "src": "2885:46:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1666,
                              "name": "IdenticalTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "2914:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2914:17:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1668,
                          "nodeType": "RevertStatement",
                          "src": "2907:24:12"
                        }
                      },
                      {
                        "assignments": [
                          1671,
                          1673
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1671,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "3046:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1765,
                            "src": "3038:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1670,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3038:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1673,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "3062:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1765,
                            "src": "3054:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1672,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3054:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1684,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1674,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1656,
                              "src": "3072:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1675,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1658,
                              "src": "3081:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3072:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "components": [
                              {
                                "id": 1680,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1658,
                                "src": "3136:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1681,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1656,
                                "src": "3144:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1682,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3135:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "id": 1683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3072:79:12",
                          "trueExpression": {
                            "components": [
                              {
                                "id": 1677,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1656,
                                "src": "3104:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1678,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1658,
                                "src": "3112:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1679,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3103:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3037:114:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1685,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "3219:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3237:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3229:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1686,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3229:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3229:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3219:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1694,
                        "nodeType": "IfStatement",
                        "src": "3215:46:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1691,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "3248:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3248:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1693,
                          "nodeType": "RevertStatement",
                          "src": "3241:20:12"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1695,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1585,
                                "src": "3317:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 1697,
                              "indexExpression": {
                                "id": 1696,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1671,
                                "src": "3325:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3317:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1699,
                            "indexExpression": {
                              "id": 1698,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1673,
                              "src": "3333:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3317:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3352:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3344:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1700,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3344:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3344:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3317:37:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1708,
                        "nodeType": "IfStatement",
                        "src": "3313:69:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1705,
                              "name": "PairAlreadyExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1619,
                              "src": "3363:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3363:19:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1707,
                          "nodeType": "RevertStatement",
                          "src": "3356:26:12"
                        }
                      },
                      {
                        "assignments": [
                          1710
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1710,
                            "mutability": "mutable",
                            "name": "bytecode",
                            "nameLocation": "3459:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1765,
                            "src": "3446:21:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1709,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3446:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1715,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1712,
                                "name": "DexPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2979,
                                "src": "3475:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2979_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2979_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              ],
                              "id": 1711,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "3470:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3470:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_DexPair_$2979",
                              "typeString": "type(contract DexPair)"
                            }
                          },
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3484:12:12",
                          "memberName": "creationCode",
                          "nodeType": "MemberAccess",
                          "src": "3470:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3446:50:12"
                      },
                      {
                        "assignments": [
                          1717
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1717,
                            "mutability": "mutable",
                            "name": "salt",
                            "nameLocation": "3514:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1765,
                            "src": "3506:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1716,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3506:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1725,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1721,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1671,
                                  "src": "3548:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1722,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1673,
                                  "src": "3556:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1719,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3531:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3535:12:12",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3531:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3531:32:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1718,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3521:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3521:43:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3506:58:12"
                      },
                      {
                        "AST": {
                          "nativeSrc": "3592:84:12",
                          "nodeType": "YulBlock",
                          "src": "3592:84:12",
                          "statements": [
                            {
                              "nativeSrc": "3606:60:12",
                              "nodeType": "YulAssignment",
                              "src": "3606:60:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3622:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3622:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nativeSrc": "3629:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3629:8:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3639:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "3639:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3625:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3625:3:12"
                                    },
                                    "nativeSrc": "3625:17:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3625:17:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nativeSrc": "3650:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3650:8:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "3644:5:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3644:5:12"
                                    },
                                    "nativeSrc": "3644:15:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3644:15:12"
                                  },
                                  {
                                    "name": "salt",
                                    "nativeSrc": "3661:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3661:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nativeSrc": "3614:7:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3614:7:12"
                                },
                                "nativeSrc": "3614:52:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3614:52:12"
                              },
                              "variableNames": [
                                {
                                  "name": "pair",
                                  "nativeSrc": "3606:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3606:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1710,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3629:8:12",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1710,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3650:8:12",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1661,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3606:4:12",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1717,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3661:4:12",
                            "valueSize": 1
                          }
                        ],
                        "id": 1726,
                        "nodeType": "InlineAssembly",
                        "src": "3583:93:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1731,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "3749:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1732,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1673,
                              "src": "3757:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1728,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1661,
                                  "src": "3732:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1727,
                                "name": "DexPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2979,
                                "src": "3724:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2979_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              },
                              "id": 1729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3724:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexPair_$2979",
                                "typeString": "contract DexPair"
                              }
                            },
                            "id": 1730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3738:10:12",
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "3724:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3724:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1734,
                        "nodeType": "ExpressionStatement",
                        "src": "3724:40:12"
                      },
                      {
                        "expression": {
                          "id": 1741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1735,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1585,
                                "src": "3819:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 1738,
                              "indexExpression": {
                                "id": 1736,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1671,
                                "src": "3827:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3819:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1739,
                            "indexExpression": {
                              "id": 1737,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1673,
                              "src": "3835:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3819:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1740,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1661,
                            "src": "3845:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3819:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1742,
                        "nodeType": "ExpressionStatement",
                        "src": "3819:30:12"
                      },
                      {
                        "expression": {
                          "id": 1749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1743,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1585,
                                "src": "3859:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 1746,
                              "indexExpression": {
                                "id": 1744,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1673,
                                "src": "3867:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3859:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1747,
                            "indexExpression": {
                              "id": 1745,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "3875:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3859:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1748,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1661,
                            "src": "3885:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3859:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1750,
                        "nodeType": "ExpressionStatement",
                        "src": "3859:30:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1754,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1661,
                              "src": "3950:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1751,
                              "name": "allPairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1589,
                              "src": "3936:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3945:4:12",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3936:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3936:19:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1756,
                        "nodeType": "ExpressionStatement",
                        "src": "3936:19:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1758,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "3991:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1759,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1673,
                              "src": "3999:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1760,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1661,
                              "src": "4007:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1761,
                                "name": "allPairs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1589,
                                "src": "4013:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4022:6:12",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4013:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1757,
                            "name": "PairCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "3979:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3979:50:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1764,
                        "nodeType": "EmitStatement",
                        "src": "3974:55:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1654,
                    "nodeType": "StructuredDocumentation",
                    "src": "2511:230:12",
                    "text": " @dev 新しいトークンペアを作成\n @param tokenA 最初のトークンアドレス\n @param tokenB 二番目のトークンアドレス\n @return pair 作成されたペアのアドレス"
                  },
                  "functionSelector": "c9c65396",
                  "id": 1766,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "2755:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1656,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "2774:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "2766:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1655,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2766:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1658,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "2790:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "2782:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1657,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2782:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2765:32:12"
                  },
                  "returnParameters": {
                    "id": 1662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1661,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "2824:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1766,
                        "src": "2816:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2816:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2815:14:12"
                  },
                  "scope": 1895,
                  "src": "2746:1290:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1788,
                    "nodeType": "Block",
                    "src": "4192:128:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1772,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4206:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4210:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4206:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1774,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "4220:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4206:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1779,
                        "nodeType": "IfStatement",
                        "src": "4202:52:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1776,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1622,
                              "src": "4240:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4240:14:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1778,
                          "nodeType": "RevertStatement",
                          "src": "4233:21:12"
                        }
                      },
                      {
                        "expression": {
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1780,
                            "name": "feeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "4264:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1781,
                            "name": "_feeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1769,
                            "src": "4272:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4264:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1783,
                        "nodeType": "ExpressionStatement",
                        "src": "4264:14:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1785,
                              "name": "_feeTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1769,
                              "src": "4306:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1784,
                            "name": "FeeToUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1605,
                            "src": "4293:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4293:20:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1787,
                        "nodeType": "EmitStatement",
                        "src": "4288:25:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1767,
                    "nodeType": "StructuredDocumentation",
                    "src": "4046:98:12",
                    "text": " @dev feeToアドレスを設定\n @param _feeTo 新しいfeeToアドレス"
                  },
                  "functionSelector": "f46901ed",
                  "id": 1789,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nameLocation": "4158:8:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1769,
                        "mutability": "mutable",
                        "name": "_feeTo",
                        "nameLocation": "4175:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1789,
                        "src": "4167:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1768,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4167:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4166:16:12"
                  },
                  "returnParameters": {
                    "id": 1771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4192:0:12"
                  },
                  "scope": 1895,
                  "src": "4149:171:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1821,
                    "nodeType": "Block",
                    "src": "4506:214:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1795,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4520:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4524:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4520:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1797,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "4534:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4520:25:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1802,
                        "nodeType": "IfStatement",
                        "src": "4516:52:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1799,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1622,
                              "src": "4554:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4554:14:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1801,
                          "nodeType": "RevertStatement",
                          "src": "4547:21:12"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1803,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "4582:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4606:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4598:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1804,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4598:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4598:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4582:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1812,
                        "nodeType": "IfStatement",
                        "src": "4578:52:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1809,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "4617:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4617:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1811,
                          "nodeType": "RevertStatement",
                          "src": "4610:20:12"
                        }
                      },
                      {
                        "expression": {
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1813,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "4640:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1814,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "4654:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4640:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1816,
                        "nodeType": "ExpressionStatement",
                        "src": "4640:26:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1818,
                              "name": "_feeToSetter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "4700:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1817,
                            "name": "FeeToSetterUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "4681:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4681:32:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1820,
                        "nodeType": "EmitStatement",
                        "src": "4676:37:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1790,
                    "nodeType": "StructuredDocumentation",
                    "src": "4330:116:12",
                    "text": " @dev feeToSetterアドレスを設定\n @param _feeToSetter 新しいfeeToSetterアドレス"
                  },
                  "functionSelector": "a2e74af6",
                  "id": 1822,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nameLocation": "4460:14:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "_feeToSetter",
                        "nameLocation": "4483:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "4475:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4475:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4474:22:12"
                  },
                  "returnParameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4506:0:12"
                  },
                  "scope": 1895,
                  "src": "4451:269:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1893,
                    "nodeType": "Block",
                    "src": "5070:465:12",
                    "statements": [
                      {
                        "assignments": [
                          1833,
                          1835
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1833,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "5089:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1893,
                            "src": "5081:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1832,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5081:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1835,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "5105:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1893,
                            "src": "5097:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1834,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5097:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1846,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1836,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1825,
                              "src": "5115:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1837,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1827,
                              "src": "5124:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5115:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "components": [
                              {
                                "id": 1842,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1827,
                                "src": "5179:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1843,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1825,
                                "src": "5187:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1844,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5178:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5115:79:12",
                          "trueExpression": {
                            "components": [
                              {
                                "id": 1839,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1825,
                                "src": "5147:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1840,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1827,
                                "src": "5155:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1841,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5146:16:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5080:114:12"
                      },
                      {
                        "assignments": [
                          1848
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1848,
                            "mutability": "mutable",
                            "name": "salt",
                            "nameLocation": "5221:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1893,
                            "src": "5213:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1847,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5213:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1856,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1852,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1833,
                                  "src": "5255:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1853,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1835,
                                  "src": "5263:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1850,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5238:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5242:12:12",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5238:16:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5238:32:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1849,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5228:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5228:43:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5213:58:12"
                      },
                      {
                        "assignments": [
                          1858
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1858,
                            "mutability": "mutable",
                            "name": "bytecodeHash",
                            "nameLocation": "5289:12:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1893,
                            "src": "5281:20:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1857,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5281:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1865,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1861,
                                    "name": "DexPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2979,
                                    "src": "5319:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DexPair_$2979_$",
                                      "typeString": "type(contract DexPair)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_DexPair_$2979_$",
                                      "typeString": "type(contract DexPair)"
                                    }
                                  ],
                                  "id": 1860,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "5314:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5314:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_DexPair_$2979",
                                  "typeString": "type(contract DexPair)"
                                }
                              },
                              "id": 1863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5328:12:12",
                              "memberName": "creationCode",
                              "nodeType": "MemberAccess",
                              "src": "5314:26:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1859,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5304:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5304:37:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5281:60:12"
                      },
                      {
                        "expression": {
                          "id": 1891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1866,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1830,
                            "src": "5360:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30786666",
                                                    "id": 1878,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "5438:4:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    },
                                                    "value": "0xff"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    }
                                                  ],
                                                  "id": 1877,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "5431:6:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_bytes1_$",
                                                    "typeString": "type(bytes1)"
                                                  },
                                                  "typeName": {
                                                    "id": 1876,
                                                    "name": "bytes1",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "5431:6:12",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1879,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5431:12:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 1882,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "5465:4:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_DexFactory_$1895",
                                                      "typeString": "contract DexFactory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_DexFactory_$1895",
                                                      "typeString": "contract DexFactory"
                                                    }
                                                  ],
                                                  "id": 1881,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "5457:7:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 1880,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "5457:7:12",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1883,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5457:13:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 1884,
                                                "name": "salt",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1848,
                                                "src": "5484:4:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "id": 1885,
                                                "name": "bytecodeHash",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1858,
                                                "src": "5502:12:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "id": 1874,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "5401:3:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 1875,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "5405:12:12",
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "5401:16:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 1886,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5401:123:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 1873,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "5391:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 1887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5391:134:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 1872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5383:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1871,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5383:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5383:143:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1870,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5375:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 1869,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5375:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5375:152:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5367:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1867,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5367:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5367:161:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5360:168:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1892,
                        "nodeType": "ExpressionStatement",
                        "src": "5360:168:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1823,
                    "nodeType": "StructuredDocumentation",
                    "src": "4730:249:12",
                    "text": " @dev 特定のペアアドレスを計算（CREATE2を使用）\n @param tokenA 最初のトークンアドレス\n @param tokenB 二番目のトークンアドレス\n @return pair 計算されたペアアドレス"
                  },
                  "functionSelector": "96ed28f9",
                  "id": 1894,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pairFor",
                  "nameLocation": "4993:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1825,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "5009:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1894,
                        "src": "5001:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5001:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1827,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "5025:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1894,
                        "src": "5017:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5017:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5000:32:12"
                  },
                  "returnParameters": {
                    "id": 1831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1830,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "5064:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1894,
                        "src": "5056:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1829,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5056:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5055:14:12"
                  },
                  "scope": 1895,
                  "src": "4984:551:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1896,
              "src": "278:5259:12",
              "usedErrors": [
                1613,
                1616,
                1619,
                1622
              ],
              "usedEvents": [
                1600,
                1605,
                1610
              ]
            }
          ],
          "src": "32:5506:12"
        },
        "id": 12
      },
      "contracts/DexPair.sol": {
        "ast": {
          "absolutePath": "contracts/DexPair.sol",
          "exportedSymbols": {
            "Context": [
              1487
            ],
            "DexPair": [
              2979
            ],
            "ERC20": [
              889
            ],
            "IERC1363": [
              229
            ],
            "IERC20": [
              967
            ],
            "IERC20Errors": [
              279
            ],
            "IERC20Metadata": [
              993
            ],
            "IFactory": [
              2986
            ],
            "ReentrancyGuard": [
              1556
            ],
            "SafeERC20": [
              1457
            ]
          },
          "id": 2987,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1897,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1898,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2987,
              "sourceUnit": 890,
              "src": "58:55:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1899,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2987,
              "sourceUnit": 1557,
              "src": "114:59:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1900,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2987,
              "sourceUnit": 968,
              "src": "174:56:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1901,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2987,
              "sourceUnit": 1458,
              "src": "231:65:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1903,
                    "name": "ERC20",
                    "nameLocations": [
                      "500:5:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 889,
                    "src": "500:5:13"
                  },
                  "id": 1904,
                  "nodeType": "InheritanceSpecifier",
                  "src": "500:5:13"
                },
                {
                  "baseName": {
                    "id": 1905,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "507:15:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1556,
                    "src": "507:15:13"
                  },
                  "id": 1906,
                  "nodeType": "InheritanceSpecifier",
                  "src": "507:15:13"
                }
              ],
              "canonicalName": "DexPair",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1902,
                "nodeType": "StructuredDocumentation",
                "src": "298:181:13",
                "text": " @title DexPair\n @dev 流動性プールとLPトークンの機能を提供するペアコントラクト\n @notice Uniswap V2のペアパターンに基づいた実装"
              },
              "fullyImplemented": true,
              "id": 2979,
              "linearizedBaseContracts": [
                2979,
                1556,
                889,
                279,
                993,
                967,
                1487
              ],
              "name": "DexPair",
              "nameLocation": "489:7:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 1910,
                  "libraryName": {
                    "id": 1907,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "535:9:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1457,
                    "src": "535:9:13"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "529:27:13",
                  "typeName": {
                    "id": 1909,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1908,
                      "name": "IERC20",
                      "nameLocations": [
                        "549:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 967,
                      "src": "549:6:13"
                    },
                    "referencedDeclaration": 967,
                    "src": "549:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$967",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1911,
                    "nodeType": "StructuredDocumentation",
                    "src": "566:81:13",
                    "text": "@dev 最小流動性量（最初の流動性提供時にロックされる）"
                  },
                  "functionSelector": "ba9a7a56",
                  "id": 1916,
                  "mutability": "constant",
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "676:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "652:49:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "id": 1915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "696:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 1914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "696:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1917,
                    "nodeType": "StructuredDocumentation",
                    "src": "712:60:13",
                    "text": "@dev ファクトリーコントラクトのアドレス"
                  },
                  "functionSelector": "c45a0155",
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "792:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "777:22:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1920,
                    "nodeType": "StructuredDocumentation",
                    "src": "810:51:13",
                    "text": "@dev ペアの最初のトークンアドレス"
                  },
                  "functionSelector": "0dfe1681",
                  "id": 1922,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "881:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "866:21:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1923,
                    "nodeType": "StructuredDocumentation",
                    "src": "898:54:13",
                    "text": "@dev ペアの二番目のトークンアドレス"
                  },
                  "functionSelector": "d21220a7",
                  "id": 1925,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "972:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "957:21:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1926,
                    "nodeType": "StructuredDocumentation",
                    "src": "989:51:13",
                    "text": "@dev 前回の各トークンのリザーブ量"
                  },
                  "id": 1928,
                  "mutability": "mutable",
                  "name": "reserve0",
                  "nameLocation": "1061:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "1045:24:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1927,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "reserve1",
                  "nameLocation": "1091:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "1075:24:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "blockTimestampLast",
                  "nameLocation": "1120:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "1105:33:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1933,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:48:13",
                    "text": "@dev 累積価格（価格オラクル用）"
                  },
                  "functionSelector": "5909c0d5",
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "price0CumulativeLast",
                  "nameLocation": "1217:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "1202:35:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5a3d5493",
                  "id": 1937,
                  "mutability": "mutable",
                  "name": "price1CumulativeLast",
                  "nameLocation": "1258:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "1243:35:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1938,
                    "nodeType": "StructuredDocumentation",
                    "src": "1289:38:13",
                    "text": "@dev kLast（手数料計算用）"
                  },
                  "functionSelector": "7464fc3d",
                  "id": 1940,
                  "mutability": "mutable",
                  "name": "kLast",
                  "nameLocation": "1347:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2979,
                  "src": "1332:20:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1941,
                    "nodeType": "StructuredDocumentation",
                    "src": "1363:349:13",
                    "text": " @dev スワップ時に発生するイベント\n @param sender スワップを実行したアドレス\n @param amount0In token0の入力量\n @param amount1In token1の入力量\n @param amount0Out token0の出力量\n @param amount1Out token1の出力量\n @param to 出力トークンの受取人"
                  },
                  "eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
                  "id": 1955,
                  "name": "Swap",
                  "nameLocation": "1723:4:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1943,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1753:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "1737:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1942,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1737:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1945,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "1777:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "1769:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1769:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1947,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "1804:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "1796:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1946,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1796:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1949,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "1831:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "1823:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1948,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1823:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1951,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "1859:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "1851:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1950,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1953,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1895:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "1879:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1952,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1879:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1727:176:13"
                  },
                  "src": "1717:187:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1956,
                    "nodeType": "StructuredDocumentation",
                    "src": "1914:227:13",
                    "text": " @dev 流動性追加時に発生するイベント\n @param sender 流動性を追加したアドレス\n @param amount0 追加されたtoken0の量\n @param amount1 追加されたtoken1の量"
                  },
                  "eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
                  "id": 1964,
                  "name": "Mint",
                  "nameLocation": "2152:4:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1963,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1958,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2173:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1964,
                        "src": "2157:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1957,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2157:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1960,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2189:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1964,
                        "src": "2181:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1959,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2181:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1962,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2206:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1964,
                        "src": "2198:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1961,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2198:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2156:58:13"
                  },
                  "src": "2146:69:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1965,
                    "nodeType": "StructuredDocumentation",
                    "src": "2225:269:13",
                    "text": " @dev 流動性削除時に発生するイベント\n @param sender 流動性を削除したアドレス\n @param amount0 削除されたtoken0の量\n @param amount1 削除されたtoken1の量\n @param to トークンの受取人"
                  },
                  "eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
                  "id": 1975,
                  "name": "Burn",
                  "nameLocation": "2505:4:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1974,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1967,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2535:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1975,
                        "src": "2519:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1966,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2519:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1969,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2559:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1975,
                        "src": "2551:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1968,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2551:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1971,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2584:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1975,
                        "src": "2576:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1970,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2576:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1973,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2617:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1975,
                        "src": "2601:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1972,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2601:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2509:116:13"
                  },
                  "src": "2499:127:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1976,
                    "nodeType": "StructuredDocumentation",
                    "src": "2636:168:13",
                    "text": " @dev リザーブ同期時に発生するイベント\n @param reserve0 token0のリザーブ量\n @param reserve1 token1のリザーブ量"
                  },
                  "eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
                  "id": 1982,
                  "name": "Sync",
                  "nameLocation": "2815:4:13",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1978,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "2828:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2820:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1977,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2820:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1980,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "2846:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1982,
                        "src": "2838:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1979,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2838:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2819:36:13"
                  },
                  "src": "2809:47:13"
                },
                {
                  "documentation": {
                    "id": 1983,
                    "nodeType": "StructuredDocumentation",
                    "src": "2866:48:13",
                    "text": " @dev エラー：権限なし"
                  },
                  "errorSelector": "82b42900",
                  "id": 1985,
                  "name": "Unauthorized",
                  "nameLocation": "2925:12:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1984,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2937:2:13"
                  },
                  "src": "2919:21:13"
                },
                {
                  "documentation": {
                    "id": 1986,
                    "nodeType": "StructuredDocumentation",
                    "src": "2950:57:13",
                    "text": " @dev エラー：オーバーフロー"
                  },
                  "errorSelector": "35278d12",
                  "id": 1988,
                  "name": "Overflow",
                  "nameLocation": "3018:8:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1987,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3026:2:13"
                  },
                  "src": "3012:17:13"
                },
                {
                  "documentation": {
                    "id": 1989,
                    "nodeType": "StructuredDocumentation",
                    "src": "3039:57:13",
                    "text": " @dev エラー：不十分な流動性"
                  },
                  "errorSelector": "bb55fd27",
                  "id": 1991,
                  "name": "InsufficientLiquidity",
                  "nameLocation": "3107:21:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3128:2:13"
                  },
                  "src": "3101:30:13"
                },
                {
                  "documentation": {
                    "id": 1992,
                    "nodeType": "StructuredDocumentation",
                    "src": "3141:69:13",
                    "text": " @dev エラー：不十分な流動性をバーン"
                  },
                  "errorSelector": "749383ad",
                  "id": 1994,
                  "name": "InsufficientLiquidityBurned",
                  "nameLocation": "3221:27:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1993,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3248:2:13"
                  },
                  "src": "3215:36:13"
                },
                {
                  "documentation": {
                    "id": 1995,
                    "nodeType": "StructuredDocumentation",
                    "src": "3261:57:13",
                    "text": " @dev エラー：不十分な出力量"
                  },
                  "errorSelector": "42301c23",
                  "id": 1997,
                  "name": "InsufficientOutputAmount",
                  "nameLocation": "3329:24:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1996,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3353:2:13"
                  },
                  "src": "3323:33:13"
                },
                {
                  "documentation": {
                    "id": 1998,
                    "nodeType": "StructuredDocumentation",
                    "src": "3366:57:13",
                    "text": " @dev エラー：不十分な入力量"
                  },
                  "errorSelector": "098fb561",
                  "id": 2000,
                  "name": "InsufficientInputAmount",
                  "nameLocation": "3434:23:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1999,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3457:2:13"
                  },
                  "src": "3428:32:13"
                },
                {
                  "documentation": {
                    "id": 2001,
                    "nodeType": "StructuredDocumentation",
                    "src": "3470:49:13",
                    "text": " @dev エラー：不正なK値"
                  },
                  "errorSelector": "bd8bc364",
                  "id": 2003,
                  "name": "InvalidK",
                  "nameLocation": "3530:8:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2002,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3538:2:13"
                  },
                  "src": "3524:17:13"
                },
                {
                  "documentation": {
                    "id": 2004,
                    "nodeType": "StructuredDocumentation",
                    "src": "3551:66:13",
                    "text": " @dev エラー：無効な受取人アドレス"
                  },
                  "errorSelector": "290fa188",
                  "id": 2006,
                  "name": "InvalidTo",
                  "nameLocation": "3628:9:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2005,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3637:2:13"
                  },
                  "src": "3622:18:13"
                },
                {
                  "body": {
                    "id": 2019,
                    "nodeType": "Block",
                    "src": "3746:37:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2014,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "3756:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2015,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3766:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3770:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3766:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3756:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2018,
                        "nodeType": "ExpressionStatement",
                        "src": "3756:20:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2007,
                    "nodeType": "StructuredDocumentation",
                    "src": "3650:45:13",
                    "text": " @dev コンストラクタ"
                  },
                  "id": 2020,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "444558204c5020546f6b656e",
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3720:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_03cdc1b3942c53ee9c2070aaa3b60e6c18aae77653867f02fd9cd306602f7236",
                            "typeString": "literal_string \"DEX LP Token\""
                          },
                          "value": "DEX LP Token"
                        },
                        {
                          "hexValue": "4445582d4c50",
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3736:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_488dd486e3807b8e6ac07ed38226df40be52111460590ebc3909eadd7ae3bb67",
                            "typeString": "literal_string \"DEX-LP\""
                          },
                          "value": "DEX-LP"
                        }
                      ],
                      "id": 2012,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2009,
                        "name": "ERC20",
                        "nameLocations": [
                          "3714:5:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 889,
                        "src": "3714:5:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3714:31:13"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2008,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3711:2:13"
                  },
                  "returnParameters": {
                    "id": 2013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3746:0:13"
                  },
                  "scope": 2979,
                  "src": "3700:83:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2044,
                    "nodeType": "Block",
                    "src": "4066:117:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2028,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4080:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4084:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4080:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2030,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "4094:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4080:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2035,
                        "nodeType": "IfStatement",
                        "src": "4076:48:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2032,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1985,
                              "src": "4110:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4110:14:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2034,
                          "nodeType": "RevertStatement",
                          "src": "4103:21:13"
                        }
                      },
                      {
                        "expression": {
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2036,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1922,
                            "src": "4134:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2037,
                            "name": "_token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2023,
                            "src": "4143:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4134:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2039,
                        "nodeType": "ExpressionStatement",
                        "src": "4134:16:13"
                      },
                      {
                        "expression": {
                          "id": 2042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2040,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1925,
                            "src": "4160:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2041,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2025,
                            "src": "4169:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4160:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2043,
                        "nodeType": "ExpressionStatement",
                        "src": "4160:16:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2021,
                    "nodeType": "StructuredDocumentation",
                    "src": "3793:205:13",
                    "text": " @dev ペアの初期化（ファクトリーから呼び出される）\n @param _token0 最初のトークンアドレス\n @param _token1 二番目のトークンアドレス"
                  },
                  "functionSelector": "485cc955",
                  "id": 2045,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "4012:10:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2023,
                        "mutability": "mutable",
                        "name": "_token0",
                        "nameLocation": "4031:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2045,
                        "src": "4023:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2022,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4023:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2025,
                        "mutability": "mutable",
                        "name": "_token1",
                        "nameLocation": "4048:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2045,
                        "src": "4040:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2024,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4040:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4022:34:13"
                  },
                  "returnParameters": {
                    "id": 2027,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4066:0:13"
                  },
                  "scope": 2979,
                  "src": "4003:180:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2067,
                    "nodeType": "Block",
                    "src": "4594:117:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2055,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2049,
                            "src": "4604:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2056,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "4616:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "4604:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2058,
                        "nodeType": "ExpressionStatement",
                        "src": "4604:20:13"
                      },
                      {
                        "expression": {
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2059,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2051,
                            "src": "4634:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2060,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "4646:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "4634:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2062,
                        "nodeType": "ExpressionStatement",
                        "src": "4634:20:13"
                      },
                      {
                        "expression": {
                          "id": 2065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2063,
                            "name": "_blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2053,
                            "src": "4664:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2064,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "4686:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4664:40:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 2066,
                        "nodeType": "ExpressionStatement",
                        "src": "4664:40:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2046,
                    "nodeType": "StructuredDocumentation",
                    "src": "4193:256:13",
                    "text": " @dev 現在のリザーブ量と最終更新ブロック時刻を取得\n @return _reserve0 token0のリザーブ量\n @return _reserve1 token1のリザーブ量\n @return _blockTimestampLast 最終更新ブロック時刻"
                  },
                  "functionSelector": "0902f1ac",
                  "id": 2068,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "4463:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2047,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4474:2:13"
                  },
                  "returnParameters": {
                    "id": 2054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2049,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "4515:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2068,
                        "src": "4507:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2048,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "4507:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2051,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "4542:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2068,
                        "src": "4534:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2050,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "4534:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2053,
                        "mutability": "mutable",
                        "name": "_blockTimestampLast",
                        "nameLocation": "4568:19:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2068,
                        "src": "4561:26:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2052,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4561:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4497:96:13"
                  },
                  "scope": 2979,
                  "src": "4454:257:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2221,
                    "nodeType": "Block",
                    "src": "4988:1196:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2078,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2071,
                            "src": "5002:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2081,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5016:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexPair_$2979",
                                  "typeString": "contract DexPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexPair_$2979",
                                  "typeString": "contract DexPair"
                                }
                              ],
                              "id": 2080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5008:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2079,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5008:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5008:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5002:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2087,
                        "nodeType": "IfStatement",
                        "src": "4998:43:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2084,
                              "name": "InvalidTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2006,
                              "src": "5030:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5030:11:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2086,
                          "nodeType": "RevertStatement",
                          "src": "5023:18:13"
                        }
                      },
                      {
                        "assignments": [
                          2089,
                          2091,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2089,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "5069:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5061:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2088,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "5061:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2091,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "5088:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5080:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2090,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "5080:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2094,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2092,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2068,
                            "src": "5102:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 2093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5102:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5060:55:13"
                      },
                      {
                        "assignments": [
                          2096
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2096,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "5133:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5125:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2095,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5125:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2106,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2103,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5177:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5169:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2101,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5169:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5169:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2098,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1922,
                                  "src": "5151:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2097,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "5144:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5144:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5159:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 924,
                            "src": "5144:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5144:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5125:58:13"
                      },
                      {
                        "assignments": [
                          2108
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2108,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "5201:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5193:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2107,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5193:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2118,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2115,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5245:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5237:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2113,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5237:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5237:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2110,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1925,
                                  "src": "5219:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2109,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "5212:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5212:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5227:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 924,
                            "src": "5212:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5212:39:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5193:58:13"
                      },
                      {
                        "assignments": [
                          2120
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2120,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "5269:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5261:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2119,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5261:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2124,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2121,
                            "name": "balance0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "5279:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2122,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2089,
                            "src": "5290:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "5279:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5261:38:13"
                      },
                      {
                        "assignments": [
                          2126
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2126,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "5317:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5309:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2125,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5309:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2130,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2127,
                            "name": "balance1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2108,
                            "src": "5327:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2128,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2091,
                            "src": "5338:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "5327:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5309:38:13"
                      },
                      {
                        "assignments": [
                          2132
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2132,
                            "mutability": "mutable",
                            "name": "feeOn",
                            "nameLocation": "5371:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5366:10:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2131,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5366:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2137,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2134,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2089,
                              "src": "5388:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2135,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2091,
                              "src": "5399:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2133,
                            "name": "_mintFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "5379:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
                              "typeString": "function (uint112,uint112) returns (bool)"
                            }
                          },
                          "id": 2136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5379:30:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5366:43:13"
                      },
                      {
                        "assignments": [
                          2139
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2139,
                            "mutability": "mutable",
                            "name": "_totalSupply",
                            "nameLocation": "5427:12:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2221,
                            "src": "5419:20:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2138,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5419:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2142,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2140,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "5442:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5442:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5419:36:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2143,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2139,
                            "src": "5478:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5494:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5478:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2182,
                          "nodeType": "Block",
                          "src": "5696:200:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2165,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2076,
                                  "src": "5747:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2169,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2167,
                                              "name": "amount0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2120,
                                              "src": "5782:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2168,
                                              "name": "_totalSupply",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2139,
                                              "src": "5792:12:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5782:22:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2170,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5781:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2171,
                                        "name": "_reserve0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2089,
                                        "src": "5808:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "5781:36:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2178,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2175,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2173,
                                              "name": "amount1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2126,
                                              "src": "5836:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2174,
                                              "name": "_totalSupply",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2139,
                                              "src": "5846:12:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5836:22:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2176,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5835:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2177,
                                        "name": "_reserve1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2091,
                                        "src": "5862:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "5835:36:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2166,
                                    "name": "_min",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2957,
                                    "src": "5759:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5759:126:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5747:138:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2181,
                              "nodeType": "ExpressionStatement",
                              "src": "5747:138:13"
                            }
                          ]
                        },
                        "id": 2183,
                        "nodeType": "IfStatement",
                        "src": "5474:422:13",
                        "trueBody": {
                          "id": 2164,
                          "nodeType": "Block",
                          "src": "5497:193:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2146,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2076,
                                  "src": "5548:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2150,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2148,
                                          "name": "amount0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2120,
                                          "src": "5566:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 2149,
                                          "name": "amount1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2126,
                                          "src": "5576:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5566:17:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2147,
                                      "name": "_sqrt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2939,
                                      "src": "5560:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5560:24:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2152,
                                    "name": "MINIMUM_LIQUIDITY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1916,
                                    "src": "5587:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5560:44:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5548:56:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2155,
                              "nodeType": "ExpressionStatement",
                              "src": "5548:56:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 2159,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5632:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 2158,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5624:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2157,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5624:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2160,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5624:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2161,
                                    "name": "MINIMUM_LIQUIDITY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1916,
                                    "src": "5636:17:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2156,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 729,
                                  "src": "5618:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 2162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5618:36:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2163,
                              "nodeType": "ExpressionStatement",
                              "src": "5618:36:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2184,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "5918:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5931:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5918:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2190,
                        "nodeType": "IfStatement",
                        "src": "5914:50:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2187,
                              "name": "InsufficientLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "5941:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5941:23:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2189,
                          "nodeType": "RevertStatement",
                          "src": "5934:30:13"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2192,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2071,
                              "src": "5980:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2193,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2076,
                              "src": "5984:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2191,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "5974:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5974:20:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2195,
                        "nodeType": "ExpressionStatement",
                        "src": "5974:20:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2197,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2096,
                              "src": "6021:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2198,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2108,
                              "src": "6031:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2199,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2089,
                              "src": "6041:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2200,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2091,
                              "src": "6052:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2196,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779,
                              696
                            ],
                            "referencedDeclaration": 2779,
                            "src": "6013:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6013:49:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2202,
                        "nodeType": "ExpressionStatement",
                        "src": "6013:49:13"
                      },
                      {
                        "condition": {
                          "id": 2203,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2132,
                          "src": "6076:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2213,
                        "nodeType": "IfStatement",
                        "src": "6072:47:13",
                        "trueBody": {
                          "expression": {
                            "id": 2211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2204,
                              "name": "kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1940,
                              "src": "6083:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2207,
                                    "name": "reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1928,
                                    "src": "6099:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 2206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6091:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2205,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6091:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6091:17:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2209,
                                "name": "reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1930,
                                "src": "6111:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "src": "6091:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6083:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2212,
                          "nodeType": "ExpressionStatement",
                          "src": "6083:36:13"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2215,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6148:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6152:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6148:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2217,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2120,
                              "src": "6160:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2218,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2126,
                              "src": "6169:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2214,
                            "name": "Mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1964,
                            "src": "6143:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6143:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2220,
                        "nodeType": "EmitStatement",
                        "src": "6138:39:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2069,
                    "nodeType": "StructuredDocumentation",
                    "src": "4721:186:13",
                    "text": " @dev 流動性をミント（流動性追加）\n @param to LPトークンの受取人アドレス\n @return liquidity ミントされたLPトークンの量"
                  },
                  "functionSelector": "6a627842",
                  "id": 2222,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2074,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2073,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4947:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1520,
                        "src": "4947:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4947:12:13"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "4921:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2072,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2071,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4934:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2222,
                        "src": "4926:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2070,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4926:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4925:12:13"
                  },
                  "returnParameters": {
                    "id": 2077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2076,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "4977:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2222,
                        "src": "4969:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4969:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4968:19:13"
                  },
                  "scope": 2979,
                  "src": "4912:1272:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2407,
                    "nodeType": "Block",
                    "src": "6512:1184:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2234,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "6526:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2237,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6540:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexPair_$2979",
                                  "typeString": "contract DexPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexPair_$2979",
                                  "typeString": "contract DexPair"
                                }
                              ],
                              "id": 2236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6532:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2235,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6532:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6532:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6526:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2243,
                        "nodeType": "IfStatement",
                        "src": "6522:43:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2240,
                              "name": "InvalidTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2006,
                              "src": "6554:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6554:11:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2242,
                          "nodeType": "RevertStatement",
                          "src": "6547:18:13"
                        }
                      },
                      {
                        "assignments": [
                          2245,
                          2247,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2245,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "6593:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6585:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2244,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "6585:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2247,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "6612:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6604:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2246,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "6604:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2250,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2248,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2068,
                            "src": "6626:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6626:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6584:55:13"
                      },
                      {
                        "assignments": [
                          2252
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2252,
                            "mutability": "mutable",
                            "name": "_token0",
                            "nameLocation": "6657:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6649:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2251,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6649:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2254,
                        "initialValue": {
                          "id": 2253,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1922,
                          "src": "6667:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6649:24:13"
                      },
                      {
                        "assignments": [
                          2256
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2256,
                            "mutability": "mutable",
                            "name": "_token1",
                            "nameLocation": "6691:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6683:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2255,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6683:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2258,
                        "initialValue": {
                          "id": 2257,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1925,
                          "src": "6701:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6683:24:13"
                      },
                      {
                        "assignments": [
                          2260
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2260,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "6725:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6717:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2259,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6717:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2270,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2267,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6770:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6762:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2265,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6762:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6762:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2262,
                                  "name": "_token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2252,
                                  "src": "6743:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2261,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "6736:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6736:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6752:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 924,
                            "src": "6736:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6736:40:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6717:59:13"
                      },
                      {
                        "assignments": [
                          2272
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2272,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "6794:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6786:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2271,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6786:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2282,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2279,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6839:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6831:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2277,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6831:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6831:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2274,
                                  "name": "_token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2256,
                                  "src": "6812:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2273,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "6805:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6805:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6821:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 924,
                            "src": "6805:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6805:40:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6786:59:13"
                      },
                      {
                        "assignments": [
                          2284
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2284,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nameLocation": "6863:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6855:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2283,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6855:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2291,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2288,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6893:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6885:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2286,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6885:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6885:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2285,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "6875:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6875:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6855:44:13"
                      },
                      {
                        "assignments": [
                          2293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2293,
                            "mutability": "mutable",
                            "name": "feeOn",
                            "nameLocation": "6923:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6918:10:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2292,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6918:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2298,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2295,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2245,
                              "src": "6940:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2296,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2247,
                              "src": "6951:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2294,
                            "name": "_mintFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "6931:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
                              "typeString": "function (uint112,uint112) returns (bool)"
                            }
                          },
                          "id": 2297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6931:30:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6918:43:13"
                      },
                      {
                        "assignments": [
                          2300
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2300,
                            "mutability": "mutable",
                            "name": "_totalSupply",
                            "nameLocation": "6979:12:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2407,
                            "src": "6971:20:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2299,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6971:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2303,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2301,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "6994:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6994:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6971:36:13"
                      },
                      {
                        "expression": {
                          "id": 2311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2304,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2230,
                            "src": "7026:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2305,
                                    "name": "liquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2284,
                                    "src": "7037:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2306,
                                    "name": "balance0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2260,
                                    "src": "7049:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7037:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2308,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7036:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 2309,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2300,
                              "src": "7061:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7036:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7026:47:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2312,
                        "nodeType": "ExpressionStatement",
                        "src": "7026:47:13"
                      },
                      {
                        "expression": {
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2313,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2232,
                            "src": "7083:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2314,
                                    "name": "liquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2284,
                                    "src": "7094:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2315,
                                    "name": "balance1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2272,
                                    "src": "7106:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7094:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2317,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7093:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 2318,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2300,
                              "src": "7118:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7093:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7083:47:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2321,
                        "nodeType": "ExpressionStatement",
                        "src": "7083:47:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2322,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "7153:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7164:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7153:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2325,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2232,
                              "src": "7169:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7180:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7169:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7153:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2332,
                        "nodeType": "IfStatement",
                        "src": "7149:70:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2329,
                              "name": "InsufficientLiquidityBurned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1994,
                              "src": "7190:27:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7190:29:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2331,
                          "nodeType": "RevertStatement",
                          "src": "7183:36:13"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2336,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7252:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2979",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7244:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2334,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7244:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7244:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2338,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2284,
                              "src": "7259:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2333,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "7238:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7238:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2340,
                        "nodeType": "ExpressionStatement",
                        "src": "7238:31:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2345,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2225,
                              "src": "7308:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2346,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "7312:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2342,
                                  "name": "_token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2252,
                                  "src": "7286:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2341,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "7279:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7279:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7295:12:13",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1038,
                            "src": "7279:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7279:41:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2348,
                        "nodeType": "ExpressionStatement",
                        "src": "7279:41:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2353,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2225,
                              "src": "7359:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2354,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2232,
                              "src": "7363:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2350,
                                  "name": "_token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2256,
                                  "src": "7337:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2349,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "7330:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7330:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$967",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7346:12:13",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1038,
                            "src": "7330:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7330:41:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2356,
                        "nodeType": "ExpressionStatement",
                        "src": "7330:41:13"
                      },
                      {
                        "expression": {
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2357,
                            "name": "balance0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2260,
                            "src": "7390:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2364,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7435:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DexPair_$2979",
                                      "typeString": "contract DexPair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DexPair_$2979",
                                      "typeString": "contract DexPair"
                                    }
                                  ],
                                  "id": 2363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7427:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2362,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7427:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7427:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2359,
                                    "name": "_token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2252,
                                    "src": "7408:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2358,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 967,
                                  "src": "7401:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 2360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7401:15:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7417:9:13",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "7401:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7401:40:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7390:51:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2368,
                        "nodeType": "ExpressionStatement",
                        "src": "7390:51:13"
                      },
                      {
                        "expression": {
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2369,
                            "name": "balance1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2272,
                            "src": "7451:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2376,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7496:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DexPair_$2979",
                                      "typeString": "contract DexPair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DexPair_$2979",
                                      "typeString": "contract DexPair"
                                    }
                                  ],
                                  "id": 2375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7488:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2374,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7488:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7488:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2371,
                                    "name": "_token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2256,
                                    "src": "7469:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2370,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 967,
                                  "src": "7462:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 2372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7462:15:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$967",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7478:9:13",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 924,
                              "src": "7462:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7462:40:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7451:51:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2380,
                        "nodeType": "ExpressionStatement",
                        "src": "7451:51:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2382,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2260,
                              "src": "7529:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2383,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2272,
                              "src": "7539:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2384,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2245,
                              "src": "7549:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2385,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2247,
                              "src": "7560:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2381,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779,
                              696
                            ],
                            "referencedDeclaration": 2779,
                            "src": "7521:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7521:49:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2387,
                        "nodeType": "ExpressionStatement",
                        "src": "7521:49:13"
                      },
                      {
                        "condition": {
                          "id": 2388,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2293,
                          "src": "7584:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2398,
                        "nodeType": "IfStatement",
                        "src": "7580:47:13",
                        "trueBody": {
                          "expression": {
                            "id": 2396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2389,
                              "name": "kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1940,
                              "src": "7591:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2392,
                                    "name": "reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1928,
                                    "src": "7607:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 2391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7599:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2390,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7599:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7599:17:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2394,
                                "name": "reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1930,
                                "src": "7619:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "src": "7599:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7591:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2397,
                          "nodeType": "ExpressionStatement",
                          "src": "7591:36:13"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2400,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7656:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7660:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7656:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2402,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "7668:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2403,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2232,
                              "src": "7677:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2404,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2225,
                              "src": "7686:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2399,
                            "name": "Burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "7651:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,address)"
                            }
                          },
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7651:38:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2406,
                        "nodeType": "EmitStatement",
                        "src": "7646:43:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2223,
                    "nodeType": "StructuredDocumentation",
                    "src": "6194:222:13",
                    "text": " @dev 流動性をバーン（流動性削除）\n @param to トークンの受取人アドレス\n @return amount0 返却されるtoken0の量\n @return amount1 返却されるtoken1の量"
                  },
                  "functionSelector": "89afcb44",
                  "id": 2408,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2228,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2227,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6456:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1520,
                        "src": "6456:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6456:12:13"
                    }
                  ],
                  "name": "burn",
                  "nameLocation": "6430:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2225,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6443:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2408,
                        "src": "6435:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6435:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6434:12:13"
                  },
                  "returnParameters": {
                    "id": 2233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2230,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "6486:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2408,
                        "src": "6478:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6478:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2232,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "6503:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2408,
                        "src": "6495:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2231,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6495:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6477:34:13"
                  },
                  "scope": 2979,
                  "src": "6421:1275:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2635,
                    "nodeType": "Block",
                    "src": "8086:1957:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2422,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2411,
                              "src": "8100:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8114:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8100:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2425,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2413,
                              "src": "8119:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8133:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8119:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8100:34:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2432,
                        "nodeType": "IfStatement",
                        "src": "8096:73:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2429,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1997,
                              "src": "8143:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8143:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2431,
                          "nodeType": "RevertStatement",
                          "src": "8136:33:13"
                        }
                      },
                      {
                        "assignments": [
                          2434,
                          2436,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2434,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "8197:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2635,
                            "src": "8189:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2433,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "8189:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2436,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "8216:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2635,
                            "src": "8208:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2435,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "8208:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2439,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2437,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2068,
                            "src": "8230:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 2438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8230:13:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8188:55:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2440,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2411,
                              "src": "8257:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2441,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2434,
                              "src": "8271:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "8257:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2443,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2413,
                              "src": "8284:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2444,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2436,
                              "src": "8298:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "8284:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8257:50:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2450,
                        "nodeType": "IfStatement",
                        "src": "8253:86:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2447,
                              "name": "InsufficientLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "8316:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8316:23:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2449,
                          "nodeType": "RevertStatement",
                          "src": "8309:30:13"
                        }
                      },
                      {
                        "assignments": [
                          2452
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2452,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "8366:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2635,
                            "src": "8358:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2451,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8358:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2453,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8358:16:13"
                      },
                      {
                        "assignments": [
                          2455
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2455,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "8392:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2635,
                            "src": "8384:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2454,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8384:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2456,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8384:16:13"
                      },
                      {
                        "id": 2530,
                        "nodeType": "Block",
                        "src": "8410:693:13",
                        "statements": [
                          {
                            "assignments": [
                              2458
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2458,
                                "mutability": "mutable",
                                "name": "_token0",
                                "nameLocation": "8432:7:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 2530,
                                "src": "8424:15:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 2457,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8424:7:13",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2460,
                            "initialValue": {
                              "id": 2459,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1922,
                              "src": "8442:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8424:24:13"
                          },
                          {
                            "assignments": [
                              2462
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2462,
                                "mutability": "mutable",
                                "name": "_token1",
                                "nameLocation": "8470:7:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 2530,
                                "src": "8462:15:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 2461,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8462:7:13",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2464,
                            "initialValue": {
                              "id": 2463,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "8480:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8462:24:13"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2465,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2415,
                                  "src": "8504:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2466,
                                  "name": "_token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2458,
                                  "src": "8510:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8504:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2468,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2415,
                                  "src": "8521:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2469,
                                  "name": "_token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2462,
                                  "src": "8527:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8521:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8504:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2475,
                            "nodeType": "IfStatement",
                            "src": "8500:54:13",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2472,
                                  "name": "InvalidTo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2006,
                                  "src": "8543:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8543:11:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2474,
                              "nodeType": "RevertStatement",
                              "src": "8536:18:13"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2476,
                                "name": "amount0Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2411,
                                "src": "8585:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8598:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8585:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2487,
                            "nodeType": "IfStatement",
                            "src": "8581:64:13",
                            "trueBody": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2483,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2415,
                                    "src": "8630:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2484,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2411,
                                    "src": "8634:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2480,
                                        "name": "_token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2458,
                                        "src": "8608:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2479,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 967,
                                      "src": "8601:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8601:15:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8617:12:13",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1038,
                                  "src": "8601:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 2485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8601:44:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2486,
                              "nodeType": "ExpressionStatement",
                              "src": "8601:44:13"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2488,
                                "name": "amount1Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2413,
                                "src": "8663:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8676:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8663:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2499,
                            "nodeType": "IfStatement",
                            "src": "8659:64:13",
                            "trueBody": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2495,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2415,
                                    "src": "8708:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2496,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2413,
                                    "src": "8712:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2492,
                                        "name": "_token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2462,
                                        "src": "8686:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2491,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 967,
                                      "src": "8679:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8679:15:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8695:12:13",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1038,
                                  "src": "8679:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 2497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8679:44:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2498,
                              "nodeType": "ExpressionStatement",
                              "src": "8679:44:13"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2500,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2417,
                                  "src": "8821:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 2501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8826:6:13",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "8821:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8835:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8821:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2505,
                            "nodeType": "IfStatement",
                            "src": "8817:133:13",
                            "trueBody": {
                              "id": 2504,
                              "nodeType": "Block",
                              "src": "8838:112:13",
                              "statements": []
                            }
                          },
                          {
                            "expression": {
                              "id": 2516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2506,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2452,
                                "src": "8976:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2513,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "9021:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DexPair_$2979",
                                          "typeString": "contract DexPair"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DexPair_$2979",
                                          "typeString": "contract DexPair"
                                        }
                                      ],
                                      "id": 2512,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9013:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2511,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9013:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9013:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2508,
                                        "name": "_token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2458,
                                        "src": "8994:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2507,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 967,
                                      "src": "8987:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8987:15:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9003:9:13",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 924,
                                  "src": "8987:25:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8987:40:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8976:51:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2517,
                            "nodeType": "ExpressionStatement",
                            "src": "8976:51:13"
                          },
                          {
                            "expression": {
                              "id": 2528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2518,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2455,
                                "src": "9041:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2525,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "9086:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DexPair_$2979",
                                          "typeString": "contract DexPair"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DexPair_$2979",
                                          "typeString": "contract DexPair"
                                        }
                                      ],
                                      "id": 2524,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9078:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2523,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9078:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9078:13:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2520,
                                        "name": "_token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2462,
                                        "src": "9059:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2519,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 967,
                                      "src": "9052:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9052:15:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$967",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9068:9:13",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 924,
                                  "src": "9052:25:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9052:40:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9041:51:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2529,
                            "nodeType": "ExpressionStatement",
                            "src": "9041:51:13"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          2532
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2532,
                            "mutability": "mutable",
                            "name": "amount0In",
                            "nameLocation": "9129:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2635,
                            "src": "9121:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2531,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9121:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2546,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2533,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "9141:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2534,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2434,
                                "src": "9152:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2535,
                                "name": "amount0Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2411,
                                "src": "9164:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9152:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9141:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 2544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9241:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 2545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9141:101:13",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2538,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "9190:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2539,
                                    "name": "_reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2434,
                                    "src": "9202:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2540,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2411,
                                    "src": "9214:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9202:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2542,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9201:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9190:35:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9121:121:13"
                      },
                      {
                        "assignments": [
                          2548
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2548,
                            "mutability": "mutable",
                            "name": "amount1In",
                            "nameLocation": "9260:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2635,
                            "src": "9252:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2547,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9252:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2562,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2549,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2455,
                              "src": "9272:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2550,
                                "name": "_reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2436,
                                "src": "9283:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2551,
                                "name": "amount1Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2413,
                                "src": "9295:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9283:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9272:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 2560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9372:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9272:101:13",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2554,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2455,
                              "src": "9321:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2555,
                                    "name": "_reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2436,
                                    "src": "9333:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2556,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2413,
                                    "src": "9345:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9333:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2558,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9332:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9321:35:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9252:121:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2563,
                              "name": "amount0In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2532,
                              "src": "9396:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9409:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9396:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2566,
                              "name": "amount1In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2548,
                              "src": "9414:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9427:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9414:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9396:32:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2573,
                        "nodeType": "IfStatement",
                        "src": "9392:70:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2570,
                              "name": "InsufficientInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2000,
                              "src": "9437:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9437:25:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2572,
                          "nodeType": "RevertStatement",
                          "src": "9430:32:13"
                        }
                      },
                      {
                        "id": 2617,
                        "nodeType": "Block",
                        "src": "9481:398:13",
                        "statements": [
                          {
                            "assignments": [
                              2575
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2575,
                                "mutability": "mutable",
                                "name": "balance0Adjusted",
                                "nameLocation": "9578:16:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 2617,
                                "src": "9570:24:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2574,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9570:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2585,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2576,
                                      "name": "balance0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2452,
                                      "src": "9598:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31303030",
                                      "id": 2577,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9609:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "src": "9598:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2579,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9597:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2580,
                                      "name": "amount0In",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2532,
                                      "src": "9618:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "33",
                                      "id": 2581,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9630:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "src": "9618:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2583,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9617:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9597:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9570:62:13"
                          },
                          {
                            "assignments": [
                              2587
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2587,
                                "mutability": "mutable",
                                "name": "balance1Adjusted",
                                "nameLocation": "9654:16:13",
                                "nodeType": "VariableDeclaration",
                                "scope": 2617,
                                "src": "9646:24:13",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2586,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9646:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2597,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2588,
                                      "name": "balance1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2455,
                                      "src": "9674:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31303030",
                                      "id": 2589,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9685:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "src": "9674:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2591,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9673:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2592,
                                      "name": "amount1In",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2548,
                                      "src": "9694:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "33",
                                      "id": 2593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9706:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "src": "9694:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2595,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9693:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9673:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9646:62:13"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2598,
                                  "name": "balance0Adjusted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2575,
                                  "src": "9739:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2599,
                                  "name": "balance1Adjusted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2587,
                                  "src": "9758:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9739:35:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 2603,
                                        "name": "_reserve0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2434,
                                        "src": "9785:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      ],
                                      "id": 2602,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9777:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2601,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9777:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9777:18:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2605,
                                    "name": "_reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2436,
                                    "src": "9798:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "src": "9777:30:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "id": 2609,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31303030",
                                    "id": 2607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9810:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 2608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9816:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "9810:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                },
                                "src": "9777:40:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9739:78:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2616,
                            "nodeType": "IfStatement",
                            "src": "9735:134:13",
                            "trueBody": {
                              "id": 2615,
                              "nodeType": "Block",
                              "src": "9819:50:13",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2612,
                                      "name": "InvalidK",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2003,
                                      "src": "9844:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                        "typeString": "function () pure returns (error)"
                                      }
                                    },
                                    "id": 2613,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9844:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 2614,
                                  "nodeType": "RevertStatement",
                                  "src": "9837:17:13"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2619,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2452,
                              "src": "9905:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2620,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2455,
                              "src": "9915:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2621,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2434,
                              "src": "9925:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2622,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2436,
                              "src": "9936:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2618,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779,
                              696
                            ],
                            "referencedDeclaration": 2779,
                            "src": "9897:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9897:49:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2624,
                        "nodeType": "ExpressionStatement",
                        "src": "9897:49:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2626,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9975:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9979:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9975:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2628,
                              "name": "amount0In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2532,
                              "src": "9987:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2629,
                              "name": "amount1In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2548,
                              "src": "9998:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2630,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2411,
                              "src": "10009:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2631,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2413,
                              "src": "10021:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2632,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2415,
                              "src": "10033:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2625,
                            "name": "Swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "9970:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,uint256,address)"
                            }
                          },
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9970:66:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2634,
                        "nodeType": "EmitStatement",
                        "src": "9965:71:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2409,
                    "nodeType": "StructuredDocumentation",
                    "src": "7706:228:13",
                    "text": " @dev スワップ実行\n @param amount0Out token0の出力量\n @param amount1Out token1の出力量\n @param to 出力トークンの受取人\n @param data コールバック用データ"
                  },
                  "functionSelector": "022c0d9f",
                  "id": 2636,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2420,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2419,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "8073:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1520,
                        "src": "8073:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8073:12:13"
                    }
                  ],
                  "name": "swap",
                  "nameLocation": "7948:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2411,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "7970:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2636,
                        "src": "7962:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2410,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7962:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2413,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "7998:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2636,
                        "src": "7990:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7990:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2415,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "8026:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2636,
                        "src": "8018:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8018:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2417,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8053:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2636,
                        "src": "8038:19:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2416,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8038:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7952:111:13"
                  },
                  "returnParameters": {
                    "id": 2421,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8086:0:13"
                  },
                  "scope": 2979,
                  "src": "7939:2104:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2665,
                    "nodeType": "Block",
                    "src": "10162:184:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2649,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "10226:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DexPair_$2979",
                                        "typeString": "contract DexPair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DexPair_$2979",
                                        "typeString": "contract DexPair"
                                      }
                                    ],
                                    "id": 2648,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10218:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2647,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10218:7:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10218:13:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2644,
                                      "name": "token0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1922,
                                      "src": "10200:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2643,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 967,
                                    "src": "10193:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 2645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10193:14:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10208:9:13",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 924,
                                "src": "10193:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 2651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10193:39:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2658,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "10279:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DexPair_$2979",
                                        "typeString": "contract DexPair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DexPair_$2979",
                                        "typeString": "contract DexPair"
                                      }
                                    ],
                                    "id": 2657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10271:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2656,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10271:7:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10271:13:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2653,
                                      "name": "token1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1925,
                                      "src": "10253:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2652,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 967,
                                    "src": "10246:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 2654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10246:14:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$967",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10261:9:13",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 924,
                                "src": "10246:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 2660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10246:39:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2661,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1928,
                              "src": "10299:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2662,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "10321:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2642,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2779,
                              696
                            ],
                            "referencedDeclaration": 2779,
                            "src": "10172:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10172:167:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2664,
                        "nodeType": "ExpressionStatement",
                        "src": "10172:167:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2637,
                    "nodeType": "StructuredDocumentation",
                    "src": "10053:66:13",
                    "text": " @dev トークン残高をリザーブに同期"
                  },
                  "functionSelector": "fff6cae9",
                  "id": 2666,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2640,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2639,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "10149:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1520,
                        "src": "10149:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10149:12:13"
                    }
                  ],
                  "name": "sync",
                  "nameLocation": "10133:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2638,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10137:2:13"
                  },
                  "returnParameters": {
                    "id": 2641,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10162:0:13"
                  },
                  "scope": 2979,
                  "src": "10124:222:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2778,
                    "nodeType": "Block",
                    "src": "10543:710:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2678,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2669,
                              "src": "10557:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10573:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    },
                                    "typeName": {
                                      "id": 2680,
                                      "name": "uint112",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10573:7:13",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    }
                                  ],
                                  "id": 2679,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "10568:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10568:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint112",
                                  "typeString": "type(uint112)"
                                }
                              },
                              "id": 2683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10582:3:13",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "10568:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "10557:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2685,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2671,
                              "src": "10589:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2688,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10605:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    },
                                    "typeName": {
                                      "id": 2687,
                                      "name": "uint112",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10605:7:13",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    }
                                  ],
                                  "id": 2686,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "10600:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10600:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint112",
                                  "typeString": "type(uint112)"
                                }
                              },
                              "id": 2690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10614:3:13",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "10600:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "10589:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10557:60:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2697,
                        "nodeType": "IfStatement",
                        "src": "10553:108:13",
                        "trueBody": {
                          "id": 2696,
                          "nodeType": "Block",
                          "src": "10619:42:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2693,
                                  "name": "Overflow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1988,
                                  "src": "10640:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10640:10:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2695,
                              "nodeType": "RevertStatement",
                              "src": "10633:17:13"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2699
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2699,
                            "mutability": "mutable",
                            "name": "blockTimestamp",
                            "nameLocation": "10686:14:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2778,
                            "src": "10679:21:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 2698,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10679:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2709,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2702,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10710:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10716:9:13",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10710:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                },
                                "id": 2706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 2704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10728:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 2705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10731:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "10728:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                }
                              },
                              "src": "10710:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10703:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2700,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10703:6:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10703:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10679:55:13"
                      },
                      {
                        "assignments": [
                          2711
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2711,
                            "mutability": "mutable",
                            "name": "timeElapsed",
                            "nameLocation": "10751:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2778,
                            "src": "10744:18:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 2710,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10744:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2715,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2712,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2699,
                            "src": "10765:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2713,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "10782:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10765:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10744:56:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 2718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2716,
                                "name": "timeElapsed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2711,
                                "src": "10823:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10837:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10823:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 2721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2719,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2673,
                                "src": "10842:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10855:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10842:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10823:33:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "id": 2725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2723,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2675,
                              "src": "10860:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10873:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10860:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10823:51:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2754,
                        "nodeType": "IfStatement",
                        "src": "10819:250:13",
                        "trueBody": {
                          "id": 2753,
                          "nodeType": "Block",
                          "src": "10876:193:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2727,
                                  "name": "price0CumulativeLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1935,
                                  "src": "10890:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        },
                                        "id": 2734,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 2731,
                                              "name": "_reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2675,
                                              "src": "10930:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "id": 2730,
                                            "name": "_encode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2978,
                                            "src": "10922:7:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
                                              "typeString": "function (uint112) pure returns (uint224)"
                                            }
                                          },
                                          "id": 2732,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10922:18:13",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint224",
                                            "typeString": "uint224"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2733,
                                          "name": "_reserve0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2673,
                                          "src": "10943:9:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        },
                                        "src": "10922:30:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 2729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10914:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2728,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10914:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2735,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10914:39:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2736,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2711,
                                    "src": "10956:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "10914:53:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10890:77:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2739,
                              "nodeType": "ExpressionStatement",
                              "src": "10890:77:13"
                            },
                            {
                              "expression": {
                                "id": 2751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2740,
                                  "name": "price1CumulativeLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1937,
                                  "src": "10981:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        },
                                        "id": 2747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 2744,
                                              "name": "_reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2673,
                                              "src": "11021:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "id": 2743,
                                            "name": "_encode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2978,
                                            "src": "11013:7:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
                                              "typeString": "function (uint112) pure returns (uint224)"
                                            }
                                          },
                                          "id": 2745,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11013:18:13",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint224",
                                            "typeString": "uint224"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2746,
                                          "name": "_reserve1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2675,
                                          "src": "11034:9:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        },
                                        "src": "11013:30:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 2742,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11005:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2741,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11005:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11005:39:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2749,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2711,
                                    "src": "11047:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "11005:53:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10981:77:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2752,
                              "nodeType": "ExpressionStatement",
                              "src": "10981:77:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2755,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "11087:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2758,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2669,
                                "src": "11106:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11098:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 2756,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "11098:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11098:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "11087:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2761,
                        "nodeType": "ExpressionStatement",
                        "src": "11087:28:13"
                      },
                      {
                        "expression": {
                          "id": 2767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2762,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "11125:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2765,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2671,
                                "src": "11144:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11136:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 2763,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "11136:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11136:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "11125:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2768,
                        "nodeType": "ExpressionStatement",
                        "src": "11125:28:13"
                      },
                      {
                        "expression": {
                          "id": 2771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2769,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "11163:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2770,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2699,
                            "src": "11184:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11163:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 2772,
                        "nodeType": "ExpressionStatement",
                        "src": "11163:35:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2774,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1928,
                              "src": "11227:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2775,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "11237:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2773,
                            "name": "Sync",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "11222:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint112,uint112)"
                            }
                          },
                          "id": 2776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11222:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2777,
                        "nodeType": "EmitStatement",
                        "src": "11217:29:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2667,
                    "nodeType": "StructuredDocumentation",
                    "src": "10356:45:13",
                    "text": " @dev リザーブの更新"
                  },
                  "id": 2779,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "10415:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2669,
                        "mutability": "mutable",
                        "name": "balance0",
                        "nameLocation": "10440:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2779,
                        "src": "10432:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10432:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2671,
                        "mutability": "mutable",
                        "name": "balance1",
                        "nameLocation": "10466:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2779,
                        "src": "10458:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10458:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2673,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "10492:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2779,
                        "src": "10484:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2672,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "10484:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2675,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "10519:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2779,
                        "src": "10511:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2674,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "10511:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10422:112:13"
                  },
                  "returnParameters": {
                    "id": 2677,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10543:0:13"
                  },
                  "scope": 2979,
                  "src": "10406:847:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2883,
                    "nodeType": "Block",
                    "src": "11398:723:13",
                    "statements": [
                      {
                        "assignments": [
                          2790
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2790,
                            "mutability": "mutable",
                            "name": "feeTo",
                            "nameLocation": "11416:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2883,
                            "src": "11408:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2789,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11408:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2796,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2792,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1919,
                                  "src": "11433:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2791,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2986,
                                "src": "11424:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$2986_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11424:17:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$2986",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11442:5:13",
                            "memberName": "feeTo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2985,
                            "src": "11424:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11424:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11408:41:13"
                      },
                      {
                        "expression": {
                          "id": 2804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2797,
                            "name": "feeOn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2787,
                            "src": "11459:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2798,
                              "name": "feeTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "11467:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2801,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11484:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11476:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2799,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11476:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11476:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11467:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11459:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2805,
                        "nodeType": "ExpressionStatement",
                        "src": "11459:27:13"
                      },
                      {
                        "assignments": [
                          2807
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2807,
                            "mutability": "mutable",
                            "name": "_kLast",
                            "nameLocation": "11504:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2883,
                            "src": "11496:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2806,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11496:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2809,
                        "initialValue": {
                          "id": 2808,
                          "name": "kLast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1940,
                          "src": "11513:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11496:22:13"
                      },
                      {
                        "condition": {
                          "id": 2810,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2787,
                          "src": "11541:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2873,
                              "name": "_kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2807,
                              "src": "12068:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12078:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12068:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2881,
                          "nodeType": "IfStatement",
                          "src": "12064:51:13",
                          "trueBody": {
                            "id": 2880,
                            "nodeType": "Block",
                            "src": "12081:34:13",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2876,
                                    "name": "kLast",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1940,
                                    "src": "12095:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 2877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12103:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "12095:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2879,
                                "nodeType": "ExpressionStatement",
                                "src": "12095:9:13"
                              }
                            ]
                          }
                        },
                        "id": 2882,
                        "nodeType": "IfStatement",
                        "src": "11537:578:13",
                        "trueBody": {
                          "id": 2872,
                          "nodeType": "Block",
                          "src": "11548:510:13",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2811,
                                  "name": "_kLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2807,
                                  "src": "11566:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11576:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11566:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2871,
                              "nodeType": "IfStatement",
                              "src": "11562:486:13",
                              "trueBody": {
                                "id": 2870,
                                "nodeType": "Block",
                                "src": "11579:469:13",
                                "statements": [
                                  {
                                    "assignments": [
                                      2815
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2815,
                                        "mutability": "mutable",
                                        "name": "rootK",
                                        "nameLocation": "11605:5:13",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2870,
                                        "src": "11597:13:13",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2814,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11597:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2824,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2822,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "id": 2819,
                                                "name": "_reserve0",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2782,
                                                "src": "11627:9:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              ],
                                              "id": 2818,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "11619:7:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 2817,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11619:7:13",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2820,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "11619:18:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 2821,
                                            "name": "_reserve1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2784,
                                            "src": "11640:9:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          },
                                          "src": "11619:30:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2816,
                                        "name": "_sqrt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2939,
                                        "src": "11613:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2823,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11613:37:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "11597:53:13"
                                  },
                                  {
                                    "assignments": [
                                      2826
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2826,
                                        "mutability": "mutable",
                                        "name": "rootKLast",
                                        "nameLocation": "11676:9:13",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2870,
                                        "src": "11668:17:13",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2825,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11668:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2830,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 2828,
                                          "name": "_kLast",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2807,
                                          "src": "11694:6:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2827,
                                        "name": "_sqrt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2939,
                                        "src": "11688:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2829,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11688:13:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "11668:33:13"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2833,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2831,
                                        "name": "rootK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2815,
                                        "src": "11723:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 2832,
                                        "name": "rootKLast",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2826,
                                        "src": "11731:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11723:17:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2869,
                                    "nodeType": "IfStatement",
                                    "src": "11719:315:13",
                                    "trueBody": {
                                      "id": 2868,
                                      "nodeType": "Block",
                                      "src": "11742:292:13",
                                      "statements": [
                                        {
                                          "assignments": [
                                            2835
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 2835,
                                              "mutability": "mutable",
                                              "name": "numerator",
                                              "nameLocation": "11772:9:13",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 2868,
                                              "src": "11764:17:13",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 2834,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11764:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 2843,
                                          "initialValue": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2842,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 2836,
                                                "name": "totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 462,
                                                "src": "11784:11:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                  "typeString": "function () view returns (uint256)"
                                                }
                                              },
                                              "id": 2837,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11784:13:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2840,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2838,
                                                    "name": "rootK",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2815,
                                                    "src": "11801:5:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "id": 2839,
                                                    "name": "rootKLast",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2826,
                                                    "src": "11809:9:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "11801:17:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2841,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "11800:19:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11784:35:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "11764:55:13"
                                        },
                                        {
                                          "assignments": [
                                            2845
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 2845,
                                              "mutability": "mutable",
                                              "name": "denominator",
                                              "nameLocation": "11849:11:13",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 2868,
                                              "src": "11841:19:13",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 2844,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11841:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 2852,
                                          "initialValue": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2851,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2848,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2846,
                                                    "name": "rootK",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2815,
                                                    "src": "11864:5:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "35",
                                                    "id": 2847,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11872:1:13",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_5_by_1",
                                                      "typeString": "int_const 5"
                                                    },
                                                    "value": "5"
                                                  },
                                                  "src": "11864:9:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2849,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "11863:11:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 2850,
                                              "name": "rootKLast",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2826,
                                              "src": "11877:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11863:23:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "11841:45:13"
                                        },
                                        {
                                          "assignments": [
                                            2854
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 2854,
                                              "mutability": "mutable",
                                              "name": "liquidity",
                                              "nameLocation": "11916:9:13",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 2868,
                                              "src": "11908:17:13",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 2853,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11908:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 2858,
                                          "initialValue": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2857,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2855,
                                              "name": "numerator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2835,
                                              "src": "11928:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "id": 2856,
                                              "name": "denominator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2845,
                                              "src": "11940:11:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11928:23:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "11908:43:13"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2861,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2859,
                                              "name": "liquidity",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2854,
                                              "src": "11977:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "hexValue": "30",
                                              "id": 2860,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11989:1:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "src": "11977:13:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2867,
                                          "nodeType": "IfStatement",
                                          "src": "11973:42:13",
                                          "trueBody": {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 2863,
                                                  "name": "feeTo",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2790,
                                                  "src": "11998:5:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "id": 2864,
                                                  "name": "liquidity",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2854,
                                                  "src": "12005:9:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "id": 2862,
                                                "name": "_mint",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 729,
                                                "src": "11992:5:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                  "typeString": "function (address,uint256)"
                                                }
                                              },
                                              "id": 2865,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11992:23:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 2866,
                                            "nodeType": "ExpressionStatement",
                                            "src": "11992:23:13"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2780,
                    "nodeType": "StructuredDocumentation",
                    "src": "11263:45:13",
                    "text": " @dev 手数料のミント"
                  },
                  "id": 2884,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mintFee",
                  "nameLocation": "11322:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2785,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2782,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "11339:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2884,
                        "src": "11331:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2781,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "11331:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2784,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "11358:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2884,
                        "src": "11350:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2783,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "11350:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11330:38:13"
                  },
                  "returnParameters": {
                    "id": 2788,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2787,
                        "mutability": "mutable",
                        "name": "feeOn",
                        "nameLocation": "11391:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2884,
                        "src": "11386:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2786,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11386:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11385:12:13"
                  },
                  "scope": 2979,
                  "src": "11313:808:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2938,
                    "nodeType": "Block",
                    "src": "12261:242:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2892,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2887,
                            "src": "12275:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 2893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12279:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "12275:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2928,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2887,
                              "src": "12459:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12464:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12459:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2936,
                          "nodeType": "IfStatement",
                          "src": "12455:42:13",
                          "trueBody": {
                            "id": 2935,
                            "nodeType": "Block",
                            "src": "12467:30:13",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2931,
                                    "name": "z",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2890,
                                    "src": "12481:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 2932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12485:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "12481:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2934,
                                "nodeType": "ExpressionStatement",
                                "src": "12481:5:13"
                              }
                            ]
                          }
                        },
                        "id": 2937,
                        "nodeType": "IfStatement",
                        "src": "12271:226:13",
                        "trueBody": {
                          "id": 2927,
                          "nodeType": "Block",
                          "src": "12282:167:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2895,
                                  "name": "z",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2890,
                                  "src": "12296:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2896,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2887,
                                  "src": "12300:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12296:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2898,
                              "nodeType": "ExpressionStatement",
                              "src": "12296:5:13"
                            },
                            {
                              "assignments": [
                                2900
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2900,
                                  "mutability": "mutable",
                                  "name": "x",
                                  "nameLocation": "12323:1:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2927,
                                  "src": "12315:9:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2899,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12315:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2906,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2903,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2901,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2887,
                                    "src": "12327:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 2902,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12331:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "12327:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2904,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12335:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12327:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12315:21:13"
                            },
                            {
                              "body": {
                                "id": 2925,
                                "nodeType": "Block",
                                "src": "12364:75:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2912,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2910,
                                        "name": "z",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2890,
                                        "src": "12382:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2911,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2900,
                                        "src": "12386:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12382:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2913,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12382:5:13"
                                  },
                                  {
                                    "expression": {
                                      "id": 2923,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2914,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2900,
                                        "src": "12405:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2922,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2919,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2917,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2915,
                                                  "name": "y",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2887,
                                                  "src": "12410:1:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                  "id": 2916,
                                                  "name": "x",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2900,
                                                  "src": "12414:1:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "12410:5:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "id": 2918,
                                                "name": "x",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2900,
                                                "src": "12418:1:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "12410:9:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2920,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "12409:11:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 2921,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12423:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "12409:15:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12405:19:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2924,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12405:19:13"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2907,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2900,
                                  "src": "12357:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 2908,
                                  "name": "z",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2890,
                                  "src": "12361:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12357:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2926,
                              "nodeType": "WhileStatement",
                              "src": "12350:89:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2885,
                    "nodeType": "StructuredDocumentation",
                    "src": "12131:66:13",
                    "text": " @dev 平方根の計算（バビロニア法）"
                  },
                  "id": 2939,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_sqrt",
                  "nameLocation": "12211:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2887,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "12225:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2939,
                        "src": "12217:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2886,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12217:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12216:11:13"
                  },
                  "returnParameters": {
                    "id": 2891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2890,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "12258:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2939,
                        "src": "12250:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2889,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12250:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12249:11:13"
                  },
                  "scope": 2979,
                  "src": "12202:301:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2956,
                    "nodeType": "Block",
                    "src": "12627:37:13",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2949,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2942,
                              "src": "12644:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 2950,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2944,
                              "src": "12648:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12644:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2953,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "12656:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "12644:13:13",
                          "trueExpression": {
                            "id": 2952,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2942,
                            "src": "12652:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2948,
                        "id": 2955,
                        "nodeType": "Return",
                        "src": "12637:20:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2940,
                    "nodeType": "StructuredDocumentation",
                    "src": "12513:42:13",
                    "text": " @dev 最小値を返す"
                  },
                  "id": 2957,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_min",
                  "nameLocation": "12569:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2945,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2942,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "12582:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2957,
                        "src": "12574:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12574:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2944,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "12593:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2957,
                        "src": "12585:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2943,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12585:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12573:22:13"
                  },
                  "returnParameters": {
                    "id": 2948,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2947,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2957,
                        "src": "12618:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2946,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12618:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12617:9:13"
                  },
                  "scope": 2979,
                  "src": "12560:104:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2977,
                    "nodeType": "Block",
                    "src": "12795:52:13",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          "id": 2975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2967,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2960,
                                "src": "12820:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              ],
                              "id": 2966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12812:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint224_$",
                                "typeString": "type(uint224)"
                              },
                              "typeName": {
                                "id": 2965,
                                "name": "uint224",
                                "nodeType": "ElementaryTypeName",
                                "src": "12812:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12812:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                  "typeString": "int_const 5192...(26 digits omitted)...0096"
                                },
                                "id": 2973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 2971,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12833:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "313132",
                                  "id": 2972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12836:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_112_by_1",
                                    "typeString": "int_const 112"
                                  },
                                  "value": "112"
                                },
                                "src": "12833:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                  "typeString": "int_const 5192...(26 digits omitted)...0096"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                  "typeString": "int_const 5192...(26 digits omitted)...0096"
                                }
                              ],
                              "id": 2970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12825:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint224_$",
                                "typeString": "type(uint224)"
                              },
                              "typeName": {
                                "id": 2969,
                                "name": "uint224",
                                "nodeType": "ElementaryTypeName",
                                "src": "12825:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12825:15:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "12812:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "functionReturnParameters": 2964,
                        "id": 2976,
                        "nodeType": "Return",
                        "src": "12805:35:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2958,
                    "nodeType": "StructuredDocumentation",
                    "src": "12674:57:13",
                    "text": " @dev UQ112x112形式でエンコード"
                  },
                  "id": 2978,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_encode",
                  "nameLocation": "12745:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2961,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2960,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "12761:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2978,
                        "src": "12753:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2959,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "12753:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12752:11:13"
                  },
                  "returnParameters": {
                    "id": 2964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2963,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2978,
                        "src": "12786:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 2962,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "12786:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12785:9:13"
                  },
                  "scope": 2979,
                  "src": "12736:111:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 2987,
              "src": "480:12369:13",
              "usedErrors": [
                249,
                254,
                259,
                268,
                273,
                278,
                1005,
                1501,
                1985,
                1988,
                1991,
                1994,
                1997,
                2000,
                2003,
                2006
              ],
              "usedEvents": [
                901,
                910,
                1955,
                1964,
                1975,
                1982
              ]
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2980,
                "nodeType": "StructuredDocumentation",
                "src": "12851:58:13",
                "text": " @dev ファクトリーインターフェース"
              },
              "fullyImplemented": false,
              "id": 2986,
              "linearizedBaseContracts": [
                2986
              ],
              "name": "IFactory",
              "nameLocation": "12920:8:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "017e7e58",
                  "id": 2985,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nameLocation": "12944:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2981,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12949:2:13"
                  },
                  "returnParameters": {
                    "id": 2984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2983,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2985,
                        "src": "12975:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2982,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12975:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12974:9:13"
                  },
                  "scope": 2986,
                  "src": "12935:49:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2987,
              "src": "12910:76:13",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:12955:13"
        },
        "id": 13
      },
      "contracts/DexRouter.sol": {
        "ast": {
          "absolutePath": "contracts/DexRouter.sol",
          "exportedSymbols": {},
          "id": 2988,
          "nodeType": "SourceUnit",
          "nodes": [],
          "src": "0:0:14"
        },
        "id": 14
      },
      "contracts/TokenA.sol": {
        "ast": {
          "absolutePath": "contracts/TokenA.sol",
          "exportedSymbols": {
            "Context": [
              1487
            ],
            "ERC20": [
              889
            ],
            "IERC20": [
              967
            ],
            "IERC20Errors": [
              279
            ],
            "IERC20Metadata": [
              993
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1556
            ],
            "TokenA": [
              3176
            ]
          },
          "id": 3177,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2989,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:15"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2990,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3177,
              "sourceUnit": 890,
              "src": "58:55:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2991,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3177,
              "sourceUnit": 148,
              "src": "114:52:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 2992,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3177,
              "sourceUnit": 1557,
              "src": "167:59:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2994,
                    "name": "ERC20",
                    "nameLocations": [
                      "392:5:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 889,
                    "src": "392:5:15"
                  },
                  "id": 2995,
                  "nodeType": "InheritanceSpecifier",
                  "src": "392:5:15"
                },
                {
                  "baseName": {
                    "id": 2996,
                    "name": "Ownable",
                    "nameLocations": [
                      "399:7:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "399:7:15"
                  },
                  "id": 2997,
                  "nodeType": "InheritanceSpecifier",
                  "src": "399:7:15"
                },
                {
                  "baseName": {
                    "id": 2998,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "408:15:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1556,
                    "src": "408:15:15"
                  },
                  "id": 2999,
                  "nodeType": "InheritanceSpecifier",
                  "src": "408:15:15"
                }
              ],
              "canonicalName": "TokenA",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2993,
                "nodeType": "StructuredDocumentation",
                "src": "228:144:15",
                "text": " @title TokenA\n @dev DEXで使用されるテストトークンA (TKA)\n @notice フォーセット機能付きのERC20トークン"
              },
              "fullyImplemented": true,
              "id": 3176,
              "linearizedBaseContracts": [
                3176,
                1556,
                147,
                889,
                279,
                993,
                967,
                1487
              ],
              "name": "TokenA",
              "nameLocation": "382:6:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 3000,
                    "nodeType": "StructuredDocumentation",
                    "src": "430:67:15",
                    "text": "@dev フォーセットで1回に取得できるトークン量"
                  },
                  "functionSelector": "76697640",
                  "id": 3007,
                  "mutability": "constant",
                  "name": "FAUCET_AMOUNT",
                  "nameLocation": "526:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "502:52:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000000000000000_by_1",
                      "typeString": "int_const 100000000000000000000"
                    },
                    "id": 3006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 3002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "542:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 3005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 3003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "548:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 3004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "552:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "548:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "542:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000000_by_1",
                      "typeString": "int_const 100000000000000000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 3008,
                    "nodeType": "StructuredDocumentation",
                    "src": "576:56:15",
                    "text": "@dev フォーセットの制限時間（24時間）"
                  },
                  "functionSelector": "7d1d5d19",
                  "id": 3011,
                  "mutability": "constant",
                  "name": "FAUCET_COOLDOWN",
                  "nameLocation": "661:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "637:50:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3234",
                    "id": 3010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "679:8:15",
                    "subdenomination": "hours",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86400_by_1",
                      "typeString": "int_const 86400"
                    },
                    "value": "24"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 3012,
                    "nodeType": "StructuredDocumentation",
                    "src": "698:66:15",
                    "text": "@dev 各アドレスの最後のフォーセット利用時刻"
                  },
                  "functionSelector": "7bc1f6cc",
                  "id": 3016,
                  "mutability": "mutable",
                  "name": "lastFaucetTime",
                  "nameLocation": "804:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "769:49:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 3015,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3013,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "777:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "769:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3014,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "788:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3017,
                    "nodeType": "StructuredDocumentation",
                    "src": "829:241:15",
                    "text": " @dev フォーセット利用時に発生するイベント\n @param user フォーセットを利用したユーザーアドレス\n @param amount 取得したトークン量\n @param timestamp 利用時刻"
                  },
                  "eventSelector": "1471294b27bd6e7d297998c0fd0fb313349f2f6c782cc696d9279410a9557574",
                  "id": 3025,
                  "name": "FaucetUsed",
                  "nameLocation": "1081:10:15",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3019,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1108:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3025,
                        "src": "1092:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3021,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1122:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3025,
                        "src": "1114:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3020,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3023,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1138:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3025,
                        "src": "1130:17:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1130:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1091:57:15"
                  },
                  "src": "1075:74:15"
                },
                {
                  "documentation": {
                    "id": 3026,
                    "nodeType": "StructuredDocumentation",
                    "src": "1159:211:15",
                    "text": " @dev フォーセット制限エラー\n @param user 制限にかかったユーザーアドレス\n @param remainingTime 次回利用まで待機する必要がある時間（秒）"
                  },
                  "errorSelector": "37f86cfd",
                  "id": 3032,
                  "name": "FaucetCooldownActive",
                  "nameLocation": "1381:20:15",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3028,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1410:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3032,
                        "src": "1402:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3030,
                        "mutability": "mutable",
                        "name": "remainingTime",
                        "nameLocation": "1424:13:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3032,
                        "src": "1416:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3029,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1416:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1401:37:15"
                  },
                  "src": "1375:64:15"
                },
                {
                  "body": {
                    "id": 3045,
                    "nodeType": "Block",
                    "src": "1636:67:15",
                    "statements": []
                  },
                  "documentation": {
                    "id": 3033,
                    "nodeType": "StructuredDocumentation",
                    "src": "1449:103:15",
                    "text": " @dev コンストラクタ\n @param initialOwner 初期オーナーアドレス"
                  },
                  "id": 3046,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e41",
                          "id": 3038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1597:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891",
                            "typeString": "literal_string \"TokenA\""
                          },
                          "value": "TokenA"
                        },
                        {
                          "hexValue": "544b41",
                          "id": 3039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1607:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2487c49f05a4d0607f1ae07d97f7fbcb949677c47340370a6a8901d76e6d7481",
                            "typeString": "literal_string \"TKA\""
                          },
                          "value": "TKA"
                        }
                      ],
                      "id": 3040,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3037,
                        "name": "ERC20",
                        "nameLocations": [
                          "1591:5:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 889,
                        "src": "1591:5:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1591:22:15"
                    },
                    {
                      "arguments": [
                        {
                          "id": 3042,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3035,
                          "src": "1622:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3043,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3041,
                        "name": "Ownable",
                        "nameLocations": [
                          "1614:7:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1614:7:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1614:21:15"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3036,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3035,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1577:12:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3046,
                        "src": "1569:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1568:22:15"
                  },
                  "returnParameters": {
                    "id": 3044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1636:0:15"
                  },
                  "scope": 3176,
                  "src": "1557:146:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3104,
                    "nodeType": "Block",
                    "src": "1897:699:15",
                    "statements": [
                      {
                        "assignments": [
                          3053
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3053,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "1915:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3104,
                            "src": "1907:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3052,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1907:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3056,
                        "initialValue": {
                          "expression": {
                            "id": 3054,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1922:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1926:6:15",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1922:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1907:25:15"
                      },
                      {
                        "assignments": [
                          3058
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3058,
                            "mutability": "mutable",
                            "name": "currentTime",
                            "nameLocation": "1950:11:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3104,
                            "src": "1942:19:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3057,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1942:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3061,
                        "initialValue": {
                          "expression": {
                            "id": 3059,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1964:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1970:9:15",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1964:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1942:37:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3062,
                                "name": "lastFaucetTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3016,
                                "src": "2094:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3064,
                              "indexExpression": {
                                "id": 3063,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3053,
                                "src": "2109:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2094:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3065,
                              "name": "FAUCET_COOLDOWN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3011,
                              "src": "2117:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2094:38:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3067,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3058,
                            "src": "2135:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2094:52:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3086,
                        "nodeType": "IfStatement",
                        "src": "2090:223:15",
                        "trueBody": {
                          "id": 3085,
                          "nodeType": "Block",
                          "src": "2148:165:15",
                          "statements": [
                            {
                              "assignments": [
                                3070
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3070,
                                  "mutability": "mutable",
                                  "name": "remainingTime",
                                  "nameLocation": "2170:13:15",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3085,
                                  "src": "2162:21:15",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3069,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2162:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3079,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3075,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 3071,
                                          "name": "lastFaucetTime",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3016,
                                          "src": "2187:14:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 3073,
                                        "indexExpression": {
                                          "id": 3072,
                                          "name": "user",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3053,
                                          "src": "2202:4:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2187:20:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 3074,
                                        "name": "FAUCET_COOLDOWN",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3011,
                                        "src": "2210:15:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2187:38:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3076,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2186:40:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3077,
                                  "name": "currentTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3058,
                                  "src": "2229:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2186:54:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2162:78:15"
                            },
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 3081,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3053,
                                    "src": "2282:4:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3082,
                                    "name": "remainingTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3070,
                                    "src": "2288:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3080,
                                  "name": "FaucetCooldownActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3032,
                                  "src": "2261:20:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (address,uint256) pure returns (error)"
                                  }
                                },
                                "id": 3083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2261:41:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3084,
                              "nodeType": "RevertStatement",
                              "src": "2254:48:15"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3087,
                              "name": "lastFaucetTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3016,
                              "src": "2382:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3089,
                            "indexExpression": {
                              "id": 3088,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "2397:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2382:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3090,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3058,
                            "src": "2405:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2382:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3092,
                        "nodeType": "ExpressionStatement",
                        "src": "2382:34:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3094,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "2501:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3095,
                              "name": "FAUCET_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "2507:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3093,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "2495:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2495:26:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3097,
                        "nodeType": "ExpressionStatement",
                        "src": "2495:26:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3099,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "2556:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3100,
                              "name": "FAUCET_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "2562:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3101,
                              "name": "currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3058,
                              "src": "2577:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3098,
                            "name": "FaucetUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3025,
                            "src": "2545:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 3102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2545:44:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3103,
                        "nodeType": "EmitStatement",
                        "src": "2540:49:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3047,
                    "nodeType": "StructuredDocumentation",
                    "src": "1713:139:15",
                    "text": " @dev フォーセット機能 - 誰でも1日1回100 TKAを取得可能\n @notice 24時間に1回のみ利用可能"
                  },
                  "functionSelector": "de5f72fd",
                  "id": 3105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3050,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3049,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1884:12:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1520,
                        "src": "1884:12:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1884:12:15"
                    }
                  ],
                  "name": "faucet",
                  "nameLocation": "1866:6:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3048,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1872:2:15"
                  },
                  "returnParameters": {
                    "id": 3051,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1897:0:15"
                  },
                  "scope": 3176,
                  "src": "1857:739:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3140,
                    "nodeType": "Block",
                    "src": "2948:268:15",
                    "statements": [
                      {
                        "assignments": [
                          3114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3114,
                            "mutability": "mutable",
                            "name": "currentTime",
                            "nameLocation": "2966:11:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3140,
                            "src": "2958:19:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3113,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2958:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3117,
                        "initialValue": {
                          "expression": {
                            "id": 3115,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2980:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2986:9:15",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2980:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2958:37:15"
                      },
                      {
                        "assignments": [
                          3119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3119,
                            "mutability": "mutable",
                            "name": "lastUsed",
                            "nameLocation": "3013:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3140,
                            "src": "3005:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3118,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3005:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3123,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3120,
                            "name": "lastFaucetTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3016,
                            "src": "3024:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3122,
                          "indexExpression": {
                            "id": 3121,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3108,
                            "src": "3039:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3005:39:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3124,
                              "name": "lastUsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "3067:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3125,
                              "name": "FAUCET_COOLDOWN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3011,
                              "src": "3078:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3067:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3127,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3114,
                            "src": "3096:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3067:40:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3137,
                        "nodeType": "IfStatement",
                        "src": "3063:120:15",
                        "trueBody": {
                          "id": 3136,
                          "nodeType": "Block",
                          "src": "3109:74:15",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3131,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3129,
                                        "name": "lastUsed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3119,
                                        "src": "3131:8:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 3130,
                                        "name": "FAUCET_COOLDOWN",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3011,
                                        "src": "3142:15:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3131:26:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3132,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3130:28:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3133,
                                  "name": "currentTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3114,
                                  "src": "3161:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3130:42:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 3112,
                              "id": 3135,
                              "nodeType": "Return",
                              "src": "3123:49:15"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 3138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3208:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 3112,
                        "id": 3139,
                        "nodeType": "Return",
                        "src": "3201:8:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3106,
                    "nodeType": "StructuredDocumentation",
                    "src": "2606:246:15",
                    "text": " @dev ユーザーが次にフォーセットを利用できるまでの残り時間を取得\n @param user 確認するユーザーアドレス\n @return remainingTime 残り時間（秒）、0の場合は利用可能"
                  },
                  "functionSelector": "70519516",
                  "id": 3141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFaucetCooldownTime",
                  "nameLocation": "2866:21:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3108,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2896:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3141,
                        "src": "2888:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2888:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2887:14:15"
                  },
                  "returnParameters": {
                    "id": 3112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3111,
                        "mutability": "mutable",
                        "name": "remainingTime",
                        "nameLocation": "2933:13:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3141,
                        "src": "2925:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2925:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2924:23:15"
                  },
                  "scope": 3176,
                  "src": "2857:359:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3158,
                    "nodeType": "Block",
                    "src": "3503:81:15",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3149,
                                "name": "lastFaucetTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3016,
                                "src": "3520:14:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3151,
                              "indexExpression": {
                                "id": 3150,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3144,
                                "src": "3535:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3520:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3152,
                              "name": "FAUCET_COOLDOWN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3011,
                              "src": "3543:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3520:38:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 3154,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3562:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3568:9:15",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3562:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3520:57:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3148,
                        "id": 3157,
                        "nodeType": "Return",
                        "src": "3513:64:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3142,
                    "nodeType": "StructuredDocumentation",
                    "src": "3226:200:15",
                    "text": " @dev ユーザーがフォーセットを利用可能かどうかを確認\n @param user 確認するユーザーアドレス\n @return canUse 利用可能な場合はtrue"
                  },
                  "functionSelector": "780768fc",
                  "id": 3159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canUseFaucet",
                  "nameLocation": "3440:12:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3144,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3461:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3159,
                        "src": "3453:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3453:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3452:14:15"
                  },
                  "returnParameters": {
                    "id": 3148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3147,
                        "mutability": "mutable",
                        "name": "canUse",
                        "nameLocation": "3495:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3159,
                        "src": "3490:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3146,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3490:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3489:13:15"
                  },
                  "scope": 3176,
                  "src": "3431:153:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3174,
                    "nodeType": "Block",
                    "src": "3820:34:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3170,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3162,
                              "src": "3836:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3171,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3164,
                              "src": "3840:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3169,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "3830:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3830:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3173,
                        "nodeType": "ExpressionStatement",
                        "src": "3830:17:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3160,
                    "nodeType": "StructuredDocumentation",
                    "src": "3594:160:15",
                    "text": " @dev オーナーのみがトークンを発行可能（緊急時用）\n @param to 発行先アドレス\n @param amount 発行量"
                  },
                  "functionSelector": "40c10f19",
                  "id": 3175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3167,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3166,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3810:9:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3810:9:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3810:9:15"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "3768:4:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3162,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3781:2:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3175,
                        "src": "3773:10:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3773:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3164,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3793:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3175,
                        "src": "3785:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3785:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3772:28:15"
                  },
                  "returnParameters": {
                    "id": 3168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3820:0:15"
                  },
                  "scope": 3176,
                  "src": "3759:95:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3177,
              "src": "373:3483:15",
              "usedErrors": [
                13,
                18,
                249,
                254,
                259,
                268,
                273,
                278,
                1501,
                3032
              ],
              "usedEvents": [
                24,
                901,
                910,
                3025
              ]
            }
          ],
          "src": "32:3825:15"
        },
        "id": 15
      },
      "contracts/TokenB.sol": {
        "ast": {
          "absolutePath": "contracts/TokenB.sol",
          "exportedSymbols": {
            "Context": [
              1487
            ],
            "ERC20": [
              889
            ],
            "IERC20": [
              967
            ],
            "IERC20Errors": [
              279
            ],
            "IERC20Metadata": [
              993
            ],
            "Ownable": [
              147
            ],
            "ReentrancyGuard": [
              1556
            ],
            "TokenB": [
              3365
            ]
          },
          "id": 3366,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3178,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:16"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 3179,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3366,
              "sourceUnit": 890,
              "src": "58:55:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 3180,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3366,
              "sourceUnit": 148,
              "src": "114:52:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 3181,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3366,
              "sourceUnit": 1557,
              "src": "167:59:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3183,
                    "name": "ERC20",
                    "nameLocations": [
                      "392:5:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 889,
                    "src": "392:5:16"
                  },
                  "id": 3184,
                  "nodeType": "InheritanceSpecifier",
                  "src": "392:5:16"
                },
                {
                  "baseName": {
                    "id": 3185,
                    "name": "Ownable",
                    "nameLocations": [
                      "399:7:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "399:7:16"
                  },
                  "id": 3186,
                  "nodeType": "InheritanceSpecifier",
                  "src": "399:7:16"
                },
                {
                  "baseName": {
                    "id": 3187,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "408:15:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1556,
                    "src": "408:15:16"
                  },
                  "id": 3188,
                  "nodeType": "InheritanceSpecifier",
                  "src": "408:15:16"
                }
              ],
              "canonicalName": "TokenB",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3182,
                "nodeType": "StructuredDocumentation",
                "src": "228:144:16",
                "text": " @title TokenB\n @dev DEXで使用されるテストトークンB (TKB)\n @notice フォーセット機能付きのERC20トークン"
              },
              "fullyImplemented": true,
              "id": 3365,
              "linearizedBaseContracts": [
                3365,
                1556,
                147,
                889,
                279,
                993,
                967,
                1487
              ],
              "name": "TokenB",
              "nameLocation": "382:6:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 3189,
                    "nodeType": "StructuredDocumentation",
                    "src": "430:67:16",
                    "text": "@dev フォーセットで1回に取得できるトークン量"
                  },
                  "functionSelector": "76697640",
                  "id": 3196,
                  "mutability": "constant",
                  "name": "FAUCET_AMOUNT",
                  "nameLocation": "526:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "502:52:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000000000000000_by_1",
                      "typeString": "int_const 100000000000000000000"
                    },
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 3191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "542:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 3192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "548:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 3193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "552:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "548:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "542:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000000_by_1",
                      "typeString": "int_const 100000000000000000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 3197,
                    "nodeType": "StructuredDocumentation",
                    "src": "576:56:16",
                    "text": "@dev フォーセットの制限時間（24時間）"
                  },
                  "functionSelector": "7d1d5d19",
                  "id": 3200,
                  "mutability": "constant",
                  "name": "FAUCET_COOLDOWN",
                  "nameLocation": "661:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "637:50:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3234",
                    "id": 3199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "679:8:16",
                    "subdenomination": "hours",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86400_by_1",
                      "typeString": "int_const 86400"
                    },
                    "value": "24"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 3201,
                    "nodeType": "StructuredDocumentation",
                    "src": "698:66:16",
                    "text": "@dev 各アドレスの最後のフォーセット利用時刻"
                  },
                  "functionSelector": "7bc1f6cc",
                  "id": 3205,
                  "mutability": "mutable",
                  "name": "lastFaucetTime",
                  "nameLocation": "804:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3365,
                  "src": "769:49:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 3204,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3202,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "777:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "769:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3203,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "788:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3206,
                    "nodeType": "StructuredDocumentation",
                    "src": "829:241:16",
                    "text": " @dev フォーセット利用時に発生するイベント\n @param user フォーセットを利用したユーザーアドレス\n @param amount 取得したトークン量\n @param timestamp 利用時刻"
                  },
                  "eventSelector": "1471294b27bd6e7d297998c0fd0fb313349f2f6c782cc696d9279410a9557574",
                  "id": 3214,
                  "name": "FaucetUsed",
                  "nameLocation": "1081:10:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3208,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1108:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3214,
                        "src": "1092:20:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1092:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3210,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1122:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3214,
                        "src": "1114:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3212,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1138:9:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3214,
                        "src": "1130:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3211,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1130:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1091:57:16"
                  },
                  "src": "1075:74:16"
                },
                {
                  "documentation": {
                    "id": 3215,
                    "nodeType": "StructuredDocumentation",
                    "src": "1159:211:16",
                    "text": " @dev フォーセット制限エラー\n @param user 制限にかかったユーザーアドレス\n @param remainingTime 次回利用まで待機する必要がある時間（秒）"
                  },
                  "errorSelector": "37f86cfd",
                  "id": 3221,
                  "name": "FaucetCooldownActive",
                  "nameLocation": "1381:20:16",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3217,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1410:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3221,
                        "src": "1402:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1402:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3219,
                        "mutability": "mutable",
                        "name": "remainingTime",
                        "nameLocation": "1424:13:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3221,
                        "src": "1416:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1416:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1401:37:16"
                  },
                  "src": "1375:64:16"
                },
                {
                  "body": {
                    "id": 3234,
                    "nodeType": "Block",
                    "src": "1636:67:16",
                    "statements": []
                  },
                  "documentation": {
                    "id": 3222,
                    "nodeType": "StructuredDocumentation",
                    "src": "1449:103:16",
                    "text": " @dev コンストラクタ\n @param initialOwner 初期オーナーアドレス"
                  },
                  "id": 3235,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e42",
                          "id": 3227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1597:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2",
                            "typeString": "literal_string \"TokenB\""
                          },
                          "value": "TokenB"
                        },
                        {
                          "hexValue": "544b42",
                          "id": 3228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1607:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca",
                            "typeString": "literal_string \"TKB\""
                          },
                          "value": "TKB"
                        }
                      ],
                      "id": 3229,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3226,
                        "name": "ERC20",
                        "nameLocations": [
                          "1591:5:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 889,
                        "src": "1591:5:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1591:22:16"
                    },
                    {
                      "arguments": [
                        {
                          "id": 3231,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3224,
                          "src": "1622:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3232,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3230,
                        "name": "Ownable",
                        "nameLocations": [
                          "1614:7:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1614:7:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1614:21:16"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3224,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1577:12:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3235,
                        "src": "1569:20:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1568:22:16"
                  },
                  "returnParameters": {
                    "id": 3233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1636:0:16"
                  },
                  "scope": 3365,
                  "src": "1557:146:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3293,
                    "nodeType": "Block",
                    "src": "1897:699:16",
                    "statements": [
                      {
                        "assignments": [
                          3242
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3242,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "1915:4:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3293,
                            "src": "1907:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3241,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1907:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3245,
                        "initialValue": {
                          "expression": {
                            "id": 3243,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1922:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1926:6:16",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1922:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1907:25:16"
                      },
                      {
                        "assignments": [
                          3247
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3247,
                            "mutability": "mutable",
                            "name": "currentTime",
                            "nameLocation": "1950:11:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3293,
                            "src": "1942:19:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3246,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1942:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3250,
                        "initialValue": {
                          "expression": {
                            "id": 3248,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1964:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1970:9:16",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1964:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1942:37:16"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3251,
                                "name": "lastFaucetTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3205,
                                "src": "2094:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3253,
                              "indexExpression": {
                                "id": 3252,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3242,
                                "src": "2109:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2094:20:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3254,
                              "name": "FAUCET_COOLDOWN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "2117:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2094:38:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3256,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "2135:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2094:52:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3275,
                        "nodeType": "IfStatement",
                        "src": "2090:223:16",
                        "trueBody": {
                          "id": 3274,
                          "nodeType": "Block",
                          "src": "2148:165:16",
                          "statements": [
                            {
                              "assignments": [
                                3259
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3259,
                                  "mutability": "mutable",
                                  "name": "remainingTime",
                                  "nameLocation": "2170:13:16",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3274,
                                  "src": "2162:21:16",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3258,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2162:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3268,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3264,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 3260,
                                          "name": "lastFaucetTime",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3205,
                                          "src": "2187:14:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 3262,
                                        "indexExpression": {
                                          "id": 3261,
                                          "name": "user",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3242,
                                          "src": "2202:4:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2187:20:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 3263,
                                        "name": "FAUCET_COOLDOWN",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3200,
                                        "src": "2210:15:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2187:38:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3265,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2186:40:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3266,
                                  "name": "currentTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3247,
                                  "src": "2229:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2186:54:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2162:78:16"
                            },
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 3270,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3242,
                                    "src": "2282:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3271,
                                    "name": "remainingTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3259,
                                    "src": "2288:13:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3269,
                                  "name": "FaucetCooldownActive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3221,
                                  "src": "2261:20:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (address,uint256) pure returns (error)"
                                  }
                                },
                                "id": 3272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2261:41:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3273,
                              "nodeType": "RevertStatement",
                              "src": "2254:48:16"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3276,
                              "name": "lastFaucetTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3205,
                              "src": "2382:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3278,
                            "indexExpression": {
                              "id": 3277,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3242,
                              "src": "2397:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2382:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3279,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "2405:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2382:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3281,
                        "nodeType": "ExpressionStatement",
                        "src": "2382:34:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3283,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3242,
                              "src": "2501:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3284,
                              "name": "FAUCET_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3196,
                              "src": "2507:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3282,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "2495:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2495:26:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3286,
                        "nodeType": "ExpressionStatement",
                        "src": "2495:26:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3288,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3242,
                              "src": "2556:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3289,
                              "name": "FAUCET_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3196,
                              "src": "2562:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3290,
                              "name": "currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3247,
                              "src": "2577:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3287,
                            "name": "FaucetUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3214,
                            "src": "2545:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 3291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2545:44:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3292,
                        "nodeType": "EmitStatement",
                        "src": "2540:49:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3236,
                    "nodeType": "StructuredDocumentation",
                    "src": "1713:139:16",
                    "text": " @dev フォーセット機能 - 誰でも1日1回100 TKBを取得可能\n @notice 24時間に1回のみ利用可能"
                  },
                  "functionSelector": "de5f72fd",
                  "id": 3294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3239,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3238,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1884:12:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1520,
                        "src": "1884:12:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1884:12:16"
                    }
                  ],
                  "name": "faucet",
                  "nameLocation": "1866:6:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1872:2:16"
                  },
                  "returnParameters": {
                    "id": 3240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1897:0:16"
                  },
                  "scope": 3365,
                  "src": "1857:739:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3329,
                    "nodeType": "Block",
                    "src": "2948:268:16",
                    "statements": [
                      {
                        "assignments": [
                          3303
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3303,
                            "mutability": "mutable",
                            "name": "currentTime",
                            "nameLocation": "2966:11:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3329,
                            "src": "2958:19:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3302,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2958:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3306,
                        "initialValue": {
                          "expression": {
                            "id": 3304,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2980:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2986:9:16",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2980:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2958:37:16"
                      },
                      {
                        "assignments": [
                          3308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3308,
                            "mutability": "mutable",
                            "name": "lastUsed",
                            "nameLocation": "3013:8:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3329,
                            "src": "3005:16:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3307,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3005:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3312,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3309,
                            "name": "lastFaucetTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3205,
                            "src": "3024:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3311,
                          "indexExpression": {
                            "id": 3310,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3297,
                            "src": "3039:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3005:39:16"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3313,
                              "name": "lastUsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3308,
                              "src": "3067:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3314,
                              "name": "FAUCET_COOLDOWN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "3078:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3067:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3316,
                            "name": "currentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3303,
                            "src": "3096:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3067:40:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3326,
                        "nodeType": "IfStatement",
                        "src": "3063:120:16",
                        "trueBody": {
                          "id": 3325,
                          "nodeType": "Block",
                          "src": "3109:74:16",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3318,
                                        "name": "lastUsed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3308,
                                        "src": "3131:8:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 3319,
                                        "name": "FAUCET_COOLDOWN",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3200,
                                        "src": "3142:15:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3131:26:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3321,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3130:28:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3322,
                                  "name": "currentTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3303,
                                  "src": "3161:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3130:42:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 3301,
                              "id": 3324,
                              "nodeType": "Return",
                              "src": "3123:49:16"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 3327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3208:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 3301,
                        "id": 3328,
                        "nodeType": "Return",
                        "src": "3201:8:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3295,
                    "nodeType": "StructuredDocumentation",
                    "src": "2606:246:16",
                    "text": " @dev ユーザーが次にフォーセットを利用できるまでの残り時間を取得\n @param user 確認するユーザーアドレス\n @return remainingTime 残り時間（秒）、0の場合は利用可能"
                  },
                  "functionSelector": "70519516",
                  "id": 3330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFaucetCooldownTime",
                  "nameLocation": "2866:21:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3297,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2896:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3330,
                        "src": "2888:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2888:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2887:14:16"
                  },
                  "returnParameters": {
                    "id": 3301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3300,
                        "mutability": "mutable",
                        "name": "remainingTime",
                        "nameLocation": "2933:13:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3330,
                        "src": "2925:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2925:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2924:23:16"
                  },
                  "scope": 3365,
                  "src": "2857:359:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3347,
                    "nodeType": "Block",
                    "src": "3503:81:16",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 3338,
                                "name": "lastFaucetTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3205,
                                "src": "3520:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3340,
                              "indexExpression": {
                                "id": 3339,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3333,
                                "src": "3535:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3520:20:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3341,
                              "name": "FAUCET_COOLDOWN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "3543:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3520:38:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 3343,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3562:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3568:9:16",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3562:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3520:57:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3337,
                        "id": 3346,
                        "nodeType": "Return",
                        "src": "3513:64:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3331,
                    "nodeType": "StructuredDocumentation",
                    "src": "3226:200:16",
                    "text": " @dev ユーザーがフォーセットを利用可能かどうかを確認\n @param user 確認するユーザーアドレス\n @return canUse 利用可能な場合はtrue"
                  },
                  "functionSelector": "780768fc",
                  "id": 3348,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canUseFaucet",
                  "nameLocation": "3440:12:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3333,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3461:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3348,
                        "src": "3453:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3453:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3452:14:16"
                  },
                  "returnParameters": {
                    "id": 3337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3336,
                        "mutability": "mutable",
                        "name": "canUse",
                        "nameLocation": "3495:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3348,
                        "src": "3490:11:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3335,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3490:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3489:13:16"
                  },
                  "scope": 3365,
                  "src": "3431:153:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3363,
                    "nodeType": "Block",
                    "src": "3820:34:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3359,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3351,
                              "src": "3836:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3360,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3353,
                              "src": "3840:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3358,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "3830:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3830:17:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3362,
                        "nodeType": "ExpressionStatement",
                        "src": "3830:17:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3349,
                    "nodeType": "StructuredDocumentation",
                    "src": "3594:160:16",
                    "text": " @dev オーナーのみがトークンを発行可能（緊急時用）\n @param to 発行先アドレス\n @param amount 発行量"
                  },
                  "functionSelector": "40c10f19",
                  "id": 3364,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3356,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3355,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3810:9:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3810:9:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3810:9:16"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "3768:4:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3351,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3781:2:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3364,
                        "src": "3773:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3773:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3353,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3793:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3364,
                        "src": "3785:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3785:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3772:28:16"
                  },
                  "returnParameters": {
                    "id": 3357,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3820:0:16"
                  },
                  "scope": 3365,
                  "src": "3759:95:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3366,
              "src": "373:3483:16",
              "usedErrors": [
                13,
                18,
                249,
                254,
                259,
                268,
                273,
                278,
                1501,
                3221
              ],
              "usedEvents": [
                24,
                901,
                910,
                3214
              ]
            }
          ],
          "src": "32:3825:16"
        },
        "id": 16
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "IERC1363": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256)": "3177029f",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256)": "1296ee62",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromAndCall(address,address,uint256)": "d8fbe994",
              "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_unbounded": {
                  "entryPoint": 33,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 39,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234601d57600e6021565b603f602d823930815050603f90f35b6027565b60405190565b600080fdfe6080604052600080fdfea26469706673582212202e3ba1a601c76a27521573f36dd0c7b04d8ec8020867bd779aeda7d0dd28b1df64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1D JUMPI PUSH1 0xE PUSH1 0x21 JUMP JUMPDEST PUSH1 0x3F PUSH1 0x2D DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x27 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXTCODESIZE LOG1 0xA6 ADD 0xC7 PUSH11 0x27521573F36DD0C7B04D8E 0xC8 MUL ADDMOD PUSH8 0xBD779AEDA7D0DD28 0xB1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "698:9376:8:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea26469706673582212202e3ba1a601c76a27521573f36dd0c7b04d8ec8020867bd779aeda7d0dd28b1df64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXTCODESIZE LOG1 0xA6 ADD 0xC7 PUSH11 0x27521573F36DD0C7B04D8E 0xC8 MUL ADDMOD PUSH8 0xBD779AEDA7D0DD28 0xB1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "698:9376:8:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "contracts/DexFactory.sol": {
        "DexFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeToSetter",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "IdenticalTokens",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "PairAlreadyExists",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ZeroAddress",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newFeeToSetter",
                  "type": "address"
                }
              ],
              "name": "FeeToSetterUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newFeeTo",
                  "type": "address"
                }
              ],
              "name": "FeeToUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pairLength",
                  "type": "uint256"
                }
              ],
              "name": "PairCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "pairFor",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeTo",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeToSetter",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 134,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 52,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constructor_DexFactory": {
                  "entryPoint": 455,
                  "id": 1643,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 317,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 368,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_DexFactory": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 95,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 286,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 73,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 58,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 155,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 63,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 335,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 341,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 423,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461002f576100196100146100fa565b6101c7565b610021610034565b61436a610213823961436a90f35b61003a565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906100699061003f565b810190811060018060401b0382111761008157604052565b610049565b90610099610092610034565b928361005f565b565b600080fd5b60018060a01b031690565b6100b4906100a0565b90565b6100c0816100ab565b036100c757565b600080fd5b905051906100d9826100b7565b565b906020828203126100f5576100f2916000016100cc565b90565b61009b565b61011861457d8038038061010d81610086565b9283398101906100db565b90565b90565b90565b61013561013061013a9261011b565b61011e565b6100a0565b90565b61014690610121565b90565b60000190565b60001b90565b9061016660018060a01b039161014f565b9181191691161790565b61018461017f610189926100a0565b61011e565b6100a0565b90565b61019590610170565b90565b6101a19061018c565b90565b90565b906101bc6101b76101c392610198565b6101a4565b8254610155565b9055565b806101e36101dd6101d8600061013d565b6100ab565b916100ab565b146101f5576101f39060016101a7565b565b600063d92e233d60e01b81528061020e60048201610149565b0390fdfe60806040526004361015610013575b610520565b61001e6000356100ad565b8063017e7e58146100a8578063094b7415146100a35780631e3dd18b1461009e578063574f2ba31461009957806396ed28f914610094578063a2e74af61461008f578063c9c653961461008a578063e6a43905146100855763f46901ed0361000e576104ed565b6104b7565b6103f8565b6103c5565b61036a565b6102e3565b61028b565b610195565b610150565b60e01c90565b60405190565b600080fd5b600080fd5b60009103126100ce57565b6100be565b1c90565b60018060a01b031690565b6100f29060086100f793026100d3565b6100d7565b90565b9061010591546100e2565b90565b6101136000806100fa565b90565b60018060a01b031690565b61012a90610116565b90565b61013690610121565b9052565b919061014e9060006020850194019061012d565b565b34610180576101603660046100c3565b61017c61016b610108565b6101736100b3565b9182918261013a565b0390f35b6100b9565b61019260016000906100fa565b90565b346101c5576101a53660046100c3565b6101c16101b0610185565b6101b86100b3565b9182918261013a565b0390f35b6100b9565b90565b6101d6816101ca565b036101dd57565b600080fd5b905035906101ef826101cd565b565b9060208282031261020b57610208916000016101e2565b90565b6100be565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b61023e81610226565b8210156102595761025060019161022a565b91020190600090565b610210565b600361026981610226565b821015610286576102839161027d91610235565b906100fa565b90565b600080fd5b346102bb576102b76102a66102a13660046101f1565b61025e565b6102ae6100b3565b9182918261013a565b0390f35b6100b9565b6102c9906101ca565b9052565b91906102e1906000602085019401906102c0565b565b34610313576102f33660046100c3565b61030f6102fe61052a565b6103066100b3565b918291826102cd565b0390f35b6100b9565b61032181610121565b0361032857565b600080fd5b9050359061033a82610318565b565b91906040838203126103655780610359610362926000860161032d565b9360200161032d565b90565b6100be565b3461039b5761039761038661038036600461033c565b906106f7565b61038e6100b3565b9182918261013a565b0390f35b6100b9565b906020828203126103ba576103b79160000161032d565b90565b6100be565b60000190565b346103f3576103dd6103d83660046103a0565b61088f565b6103e56100b3565b806103ef816103bf565b0390f35b6100b9565b346104295761042561041461040e36600461033c565b90610aaf565b61041c6100b3565b9182918261013a565b0390f35b6100b9565b90565b61044561044061044a92610116565b61042e565b610116565b90565b61045690610431565b90565b6104629061044d565b90565b9061046f90610459565b600052602052604060002090565b9061048790610459565b600052602052604060002090565b6104af6104b4926104aa600293600094610465565b61047d565b6100fa565b90565b346104e8576104e46104d36104cd36600461033c565b90610495565b6104db6100b3565b9182918261013a565b0390f35b6100b9565b3461051b576105056105003660046103a0565b610d4d565b61050d6100b3565b80610517816103bf565b0390f35b6100b9565b600080fd5b600090565b610532610525565b5061053d6003610226565b90565b600090565b60601b90565b61055490610545565b90565b6105609061054b565b90565b61056f61057491610121565b610557565b9052565b60148161058a61059293839695610563565b018092610563565b0190565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906105c090610596565b810190811067ffffffffffffffff8211176105da57604052565b6105a0565b60200190565b5190565b906105fc6105f56100b3565b92836105b6565b565b90565b60ff60f81b1690565b60f81b90565b61062461061f610629926105fe565b61060a565b610601565b90565b6106359061044d565b90565b90565b61064761064c91610601565b610638565b9052565b90565b90565b61066261066791610650565b610653565b9052565b9261069960146106a19461069160018861068960209b9a8c9961063b565b018092610563565b018092610656565b018092610656565b0190565b60001c90565b6106bf6106ba6106c4926101ca565b61042e565b6101ca565b90565b6106d36106d8916106a5565b6106ab565b90565b6106ef6106ea6106f4926101ca565b61042e565b610116565b90565b6107e86107f2926107ed9261070a610540565b508061071e61071884610121565b91610121565b106000146107f557610751905b6107426107366100b3565b93849260208401610578565b602082018103825203826105b6565b61076361075d826105e5565b916105df565b206107d061355d610776602082016105e9565b90808252610dd8602083013961079461078e826105e5565b916105df565b206107c16107a260ff610610565b916107ac3061062c565b946107b56100b3565b9586946020860161066b565b602082018103825203826105b6565b6107e26107dc826105e5565b916105df565b206106c7565b6106db565b61044d565b90565b906107519061072b565b61080b610810916106a5565b6100d7565b90565b61081d90546107ff565b90565b90565b61083761083261083c92610820565b61042e565b610116565b90565b61084890610823565b90565b60001b90565b9061086260018060a01b039161084b565b9181191691161790565b90565b9061088461087f61088b92610459565b61086c565b8254610851565b9055565b336108ab6108a56108a06001610813565b610121565b91610121565b0361093b57806108cc6108c66108c1600061083f565b610121565b91610121565b1461091e576108dc81600161086f565b6109067f021a5d032b24a495206270942f8c755327f3b27539f23099539ff95e2500b28d91610459565b9061090f6100b3565b80610919816103bf565b0390a2565b600063d92e233d60e01b815280610937600482016103bf565b0390fd5b60006282b42960e81b815280610953600482016103bf565b0390fd5b61096090610431565b90565b61096c90610957565b90565b6109789061044d565b90565b600080fd5b60e01b90565b600091031261099157565b6100be565b9160206109b89294936109b16040820196600083019061012d565b019061012d565b565b6109c26100b3565b3d6000823e3d90fd5b90565b600052602060002090565b5490565b6109e6816109d9565b821015610a01576109f86001916109ce565b91020190600090565b610210565b1b90565b91906008610a2a910291610a2460018060a01b0384610a06565b92610a06565b9181191691161790565b9190610a4a610a45610a5293610459565b61086c565b908354610a0a565b9055565b9081549168010000000000000000831015610a865782610a7e916001610a84950181556109dd565b90610a34565b565b6105a0565b916020610aad929493610aa66040820196600083019061012d565b01906102c0565b565b919091610aba610540565b5080610ace610ac885610121565b91610121565b14610d305780610ae6610ae085610121565b91610121565b10600014610d2a575b9182610b0c610b06610b01600061083f565b610121565b91610121565b14610d0d57610b2f610b2a610b2360028690610465565b839061047d565b610813565b610b4a610b44610b3f600061083f565b610121565b91610121565b03610cf05761355d610b5e602082016105e9565b90808252610dd8602083013983610b968391610b87610b7b6100b3565b93849260208401610578565b602082018103825203826105b6565b610ba8610ba2826105e5565b916105df565b20906020815191016000f592610bc5610bc085610963565b61096f565b63485cc955828492803b15610ceb57610bf260008094610bfd610be66100b3565b97889687958694610980565b845260048401610996565b03925af18015610ce657610cb9575b50610c2c84610c27610c2060028590610465565b859061047d565b61086f565b610c4b84610c46610c3f60028690610465565b849061047d565b61086f565b610c5f610c5860036109cb565b8590610a56565b908391610c6c6003610226565b610c9f610c997f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e993610459565b93610459565b93610cb4610cab6100b3565b92839283610a8b565b0390a3565b610cd99060003d8111610cdf575b610cd181836105b6565b810190610986565b38610c0c565b503d610cc7565b6109ba565b61097b565b600063c9bb25eb60e01b815280610d09600482016103bf565b0390fd5b600063d92e233d60e01b815280610d26600482016103bf565b0390fd5b91610aef565b6000635c6d7b7360e01b815280610d49600482016103bf565b0390fd5b33610d69610d63610d5e6001610813565b610121565b91610121565b03610dbb57610d7981600061086f565b610da37f9887df018dfa75103faf0f1388028e55a1124783c285d8d2cbcf62a067a6b84491610459565b90610dac6100b3565b80610db6816103bf565b0390a2565b60006282b42960e81b815280610dd3600482016103bf565b0390fdfe608060405234610027576100116101e9565b61001961002c565b613056610507823961305690f35b610032565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061006190610037565b810190811060018060401b0382111761007957604052565b610041565b9061009161008a61002c565b9283610057565b565b60018060401b0381116100af576100ab602091610037565b0190565b610041565b906100c66100c183610093565b61007e565b918252565b60007f444558204c5020546f6b656e0000000000000000000000000000000000000000910152565b6100fd600c6100b4565b9061010a602083016100cb565b565b6101146100f3565b90565b60007f4445582d4c500000000000000000000000000000000000000000000000000000910152565b61014960066100b4565b9061015660208301610117565b565b61016061013f565b90565b60001b90565b9061017a60018060a01b0391610163565b9181191691161790565b60018060a01b031690565b90565b6101a66101a16101ab92610184565b61018f565b610184565b90565b6101b790610192565b90565b6101c3906101ae565b90565b90565b906101de6101d96101e5926101ba565b6101c6565b8254610169565b9055565b6102026101f461010c565b6101fc610158565b90610294565b61020d3360066101c9565b565b90565b90565b61022961022461022e9261020f565b61018f565b610212565b90565b61023b6001610215565b90565b9061024b60001991610163565b9181191691161790565b61026961026461026e92610212565b61018f565b610212565b90565b90565b9061028961028461029092610255565b610271565b825461023e565b9055565b9061029e916104ee565b6102b06102a9610231565b6005610274565b565b5190565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156102ec575b60208310146102e757565b6102b6565b91607f16916102dc565b600052602060002090565b601f602091010490565b1b90565b9190600861032b9102916103256000198461030b565b9261030b565b9181191691161790565b919061034b61034661035393610255565b610271565b90835461030f565b9055565b600090565b61036e91610368610357565b91610335565b565b5b81811061037c575050565b8061038a600060019361035c565b01610371565b9190601f81116103a0575b505050565b6103ac6103d1936102f6565b9060206103b884610301565b830193106103d9575b6103ca90610301565b0190610370565b38808061039b565b91506103ca819290506103c1565b1c90565b906103fc90600019906008026103e7565b191690565b8161040b916103eb565b906002021790565b9061041d816102b2565b9060018060401b0382116104dd5761043f8261043985546102cc565b85610390565b602090601f83116001146104745791809161046393600092610468575b5050610401565b90555b565b9091500151388061045c565b601f19831691610483856102f6565b9260005b8181106104c5575091600293918560019694106104ab575b50505002019055610466565b6104bb910151601f8416906103eb565b905538808061049f565b91936020600181928787015181550195019201610487565b610041565b906104ec91610413565b565b906104fd6105049260036104e2565b60046104e2565b56fe60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119bf565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119eb565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e4c565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6a565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e80565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611eba565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a9261204c565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612082565b610d11565b610acf612107565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612460565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b919091612167565b8d8d610dee565b6111938d61118b86610b60565b908d91612167565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e61269c565b9190916126a9565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb61269c565b829084916126fa565b919091612789565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612082565b611687565b906115cf612107565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b61161d61161861162292610ad1565b61094d565b6101bf565b90565b61162e90611609565b90565b9061163e6000199161151b565b9181191691161790565b61165c61165761166192610198565b61094d565b610198565b90565b90565b9061167c61167761168392611648565b611664565b8254611631565b9055565b91909150816116a66116a061169b30610b88565b6101ca565b916101ca565b146119a2576116b3611416565b509290929061170960206116d76116d26116cd6007610b2b565b610b60565b610b7c565b6370a08231906116fe6116e930610b88565b926116f2610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561199d5760009161196f575b509361176f602061173d6117386117336008610b2b565b610b60565b610b7c565b6370a082319061176461174f30610b88565b92611758610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196a5760009161193c575b50916117978661179184610af0565b90610c2e565b926117ab816117a587610af0565b90610c2e565b946117b784829061289d565b936117c061149c565b806117d46117ce6000610ad4565b91610198565b146000146118f357506118016117f36117ee888a90610c53565b612ab3565b6117fb61096c565b90610c2e565b9861181d61180f6000611625565b61181761096c565b90612b82565b5b8961183261182c6000610ad4565b91610198565b146118d65761184561184e958b90612b82565b92909192612460565b61189a575b3390916118807f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b9261189561188c610183565b92839283610885565b0390a2565b6118d16118ca6118b26118ad60096113b8565b610af0565b6118c46118bf60096113df565b610af0565b90610c53565b600c611667565b611853565b600063bb55fd2760e01b8152806118ef600482016102a9565b0390fd5b6119369061193061192161191a61190b8b8590610c53565b61191487610af0565b906115e7565b928b610c53565b61192a86610af0565b906115e7565b90612a82565b9861181e565b61195d915060203d8111611963575b6119558183610baa565b810190610be8565b38611782565b503d61194b565b610c07565b611990915060203d8111611996575b6119888183610baa565b810190610be8565b3861171c565b503d61197e565b610c07565b6000630521f43160e31b8152806119bb600482016102a9565b0390fd5b6119d0906119cb610b0c565b6115b4565b90565b906119dd90610cc6565b600052602052604060002090565b611a02611a07916119fa610b0c565b5060006119d3565b61148f565b90565b90611a1d9291611a18612082565b611a29565b9091611a27612107565b565b929192505081611a49611a43611a3e30610b88565b6101ca565b916101ca565b14611e2f57611a56611416565b5091909192611a656007610b2b565b611a6f6008610b2b565b90611ab86020611a86611a8184610b60565b610b7c565b6370a0823190611aad611a9830610b88565b92611aa1610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2a57600091611dfc575b5091611b156020611ae3611ade84610b60565b610b7c565b6370a0823190611b0a611af530610b88565b92611afe610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611df757600091611dc9575b5096611b3b611b3630610b88565b6119eb565b96611b76611b4a82849061289d565b95611b71611b6a611b63611b5c61149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8b611b856000610ad4565b91610198565b148015611dae575b611d9157611bea611be5611c1c96611bb5602094611bb030610b88565b612be4565b611bcb8d611bc283610b60565b908c9091612167565b611be0611bd788610b60565b8d8c9091612167565b610b60565b610b7c565b6370a0823190611c11611bfc30610b88565b92611c05610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d8c57611c48611c43611c7a96602093600091611d5f575b5095610b60565b610b7c565b6370a0823190611c6f611c5a30610b88565b92611c63610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5a57611c9994600091611d2c575b50909192612460565b611cf0575b3390849184611cd6611cd07fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611ceb611ce2610183565b92839283610885565b0390a3565b611d27611d20611d08611d0360096113b8565b610af0565b611d1a611d1560096113df565b610af0565b90610c53565b600c611667565b611c9e565b611d4d915060203d8111611d53575b611d458183610baa565b810190610be8565b38611c90565b503d611d3b565b610c07565b611d7f9150843d8111611d85575b611d778183610baa565b810190610be8565b38611c3c565b503d611d6d565b610c07565b600063749383ad60e01b815280611daa600482016102a9565b0390fd5b5088611dc3611dbd6000610ad4565b91610198565b14611b93565b611dea915060203d8111611df0575b611de28183610baa565b810190610be8565b38611b28565b503d611dd8565b610c07565b611e1d915060203d8111611e23575b611e158183610baa565b810190610be8565b38611acb565b503d611e0b565b610c07565b6000630521f43160e31b815280611e48600482016102a9565b0390fd5b611e6690611e58610b0c565b611e60610b0c565b90611a0a565b9091565b611e7261124e565b50611e7d6004611365565b90565b611e9d91611e8c611454565b50611e9561269c565b919091612789565b600190565b90611eac90610cc6565b600052602052604060002090565b611edf91611ed5611eda92611ecd610b0c565b506001611ea2565b6119d3565b61148f565b90565b611eea612082565b611ef2611efc565b611efa612107565b565b611f4d6020611f1b611f16611f116007610b2b565b610b60565b610b7c565b6370a0823190611f42611f2d30610b88565b92611f36610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204757611fb291600091612019575b506020611f80611f7b611f766008610b2b565b610b60565b610b7c565b6370a0823190611fa7611f9230610b88565b92611f9b610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201457611fe492600091611fe6575b50611fd360096113b8565b90611fde60096113df565b92612460565b565b612007915060203d811161200d575b611fff8183610baa565b810190610be8565b38611fc8565b503d611ff5565b610c07565b61203a915060203d8111612040575b6120328183610baa565b810190610be8565b38611f63565b503d612028565b610c07565b612054611ee2565b565b90565b61206d61206861207292612056565b61094d565b610198565b90565b61207f6002612059565b90565b61208c600561148f565b6120a561209f61209a612075565b610198565b91610198565b146120be576120bc6120b5612075565b6005611667565b565b6000633ee5aeb560e01b8152806120d7600482016102a9565b0390fd5b90565b6120f26120ed6120f7926120db565b61094d565b610198565b90565b61210460016120de565b90565b6121196121126120fa565b6005611667565b565b63ffffffff60e01b1690565b61213b612136612140926103d1565b610bd3565b61211b565b90565b91602061216592949361215e60408201966000830190610523565b019061057b565b565b906121ae6121b39361219f6004949361218663a9059cbb919391612127565b9261218f610183565b9687946020860190815201612143565b60208201810382520383610baa565b612c47565b565b90565b6121cc6121c76121d1926121b5565b61094d565b610198565b90565b6121e06121e691610198565b91610198565b9081156121f1570690565b6115d1565b61220a61220561220f92610198565b61094d565b6103d1565b90565b61221e612224916103d1565b916103d1565b90039063ffffffff821161223457565b610c18565b61224d61224861225292610ad1565b61094d565b6103d1565b90565b61226961226461226e92610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229061228b612295926103b1565b61094d565b612271565b90565b6122a46122aa91612271565b91612271565b9081156122b5570490565b6115d1565b6122ce6122c96122d392612271565b61094d565b610198565b90565b6122ea6122e56122ef926103d1565b61094d565b610198565b90565b61230161230791939293610198565b92610198565b820180921161231257565b610c18565b61232b61232661233092610198565b61094d565b6103b1565b90565b9061234c6dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236a61236561236f926103b1565b61094d565b6103b1565b90565b90565b9061238a61238561239192612356565b612372565b8254612333565b9055565b60701b90565b906123b76dffffffffffffffffffffffffffff60701b91612395565b9181191691161790565b906123d66123d16123dd92612356565b612372565b825461239b565b9055565b906123f363ffffffff60e01b91610bd3565b9181191691161790565b61241161240c612416926103d1565b61094d565b6103d1565b90565b90565b9061243161242c612438926123fd565b612419565b82546123e1565b9055565b91602061245e929493612457604082019660008301906103c4565b01906103c4565b565b90928161248361247d6dffffffffffffffffffffffffffff610af0565b91610198565b11801561266f575b6126525761251f9361250c61250561251894612511946124c16124bc426124b66401000000006121b8565b906121d4565b6121f6565b976124d6896124d06009611409565b90612212565b91826124eb6124e56000612239565b916103d1565b1180612636575b8061261a575b61256e575b505050612317565b6009612375565b612317565b60096123c1565b600961241c565b61252960096113b8565b61253360096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad191612569612560610183565b9283928361243c565b0390a1565b612612926125f66125f06125eb846125e56125df61260b986125da6125d36125c46125b56125b06125a16125fc9e612d5b565b6125aa8761227c565b90612298565b6122ba565b6125be8c6122d6565b90610c53565b6125ce600a61148f565b6122f2565b600a611667565b612d5b565b9161227c565b90612298565b6122ba565b916122d6565b90610c53565b612606600b61148f565b6122f2565b600b611667565b3880806124fd565b508061262f6126296000612255565b916103b1565b14156124f8565b508161264b6126456000612255565b916103b1565b14156124f2565b6000631a93c68960e11b81528061266b600482016102a9565b0390fd5b508361269161268b6dffffffffffffffffffffffffffff610af0565b91610198565b1161248b565b600090565b6126a4612697565b503390565b916126b79291600192612d86565b565b6040906126e36126ea94969593966126d960608401986000850190610523565b602083019061057b565b019061057b565b565b906126f79103610198565b90565b929192612708818390611eba565b908161271e612718600019610198565b91610198565b1061272b575b5050509050565b8161273e61273887610198565b91610198565b106127655761275c93946127539193926126ec565b90600092612d86565b80388080612724565b50612785849291926000938493637dc7a0d960e11b8552600485016126b9565b0390fd5b91826127a66127a061279b6000611625565b6101ca565b916101ca565b1461280357816127c76127c16127bc6000611625565b6101ca565b916101ca565b146127da576127d892919091612ea9565b565b6127ff6127e76000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b6128286128106000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61283590610b38565b90565b6128419061282c565b90565b61284d90610b70565b90565b9050519061285d826101d6565b565b906020828203126128795761287691600001612850565b90565b61018e565b90565b61289561289061289a9261287e565b61094d565b610198565b90565b91906128a7611454565b506128dd60206128c76128c26128bd6006610b2b565b612838565b612844565b63017e7e58906128d5610183565b938492610bd3565b825281806128ed600482016102a9565b03915afa908115612a7d57600091612a4f575b50908161291e6129186129136000611625565b6101ca565b916101ca565b14159361292b600c61148f565b9185600014612a1457826129486129426000610ad4565b91610198565b03612955575b505050505b565b61297761297c9161297161296b61298295610af0565b91610af0565b90610c53565b612ab3565b91612ab3565b908061299661299084610198565b91610198565b116129a2575b8061294e565b6129de6129e4926129d96129c86129b761149c565b6129c2868590610c2e565b90610c53565b936129d36005612881565b90610c53565b6122f2565b906115e7565b806129f86129f26000610ad4565b91610198565b11612a04575b8061299c565b612a0d91612b82565b38806129fe565b50509050612a2b612a256000610ad4565b91610198565b03612a36575b612953565b612a4a612a436000610ad4565b600c611667565b612a31565b612a70915060203d8111612a76575b612a688183610baa565b81019061285f565b38612900565b503d612a5e565b610c07565b90612a8b610b0c565b5081612a9f612a9983610198565b91610198565b10600014612aac57505b90565b9050612aa9565b612abb610b0c565b81612acf612ac96003610c8b565b91610198565b11600014612b50575080612b00612af083612aea6002612059565b906115e7565b612afa60016120de565b906122f2565b905b81612b15612b0f83610198565b91610198565b1015612b495750612b43612b3382612b2e8582906115e7565b6122f2565b612b3d6002612059565b906115e7565b90612b02565b929150505b565b9190612b65612b5f6000610ad4565b91610198565b03612b70575b612b4e565b9050612b7c60016120de565b90612b6b565b80612b9e612b98612b936000611625565b6101ca565b916101ca565b14612bbb57612bb991612bb16000611625565b919091612ea9565b565b612be0612bc86000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c01612bfb612bf66000611625565b6101ca565b916101ca565b14612c1e57612c1c9190612c156000611625565b9091612ea9565b565b612c43612c2b6000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c55610b0c565b50612c5e610b0c565b50828151910182855af115612cf6573d60005190612c85612c7f6000610ad4565b91610198565b14600014612cdc5750612c9781610b7c565b3b612cab612ca56000610ad4565b91610198565b145b612cb45750565b612cc0612cd891610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612cef612ce960016120de565b91610198565b1415612cad565b6040513d6000823e3d90fd5b600090565b90565b612d1e612d19612d2392612d07565b61094d565b612271565b90565b612d35612d3b91939293612271565b92612271565b91612d47838202612271565b928184041490151715612d5657565b610c18565b612d70612d8391612d6a612d02565b5061227c565b612d7d600160701b612d0a565b90612d26565b90565b909281612da4612d9e612d996000611625565b6101ca565b916101ca565b14612e725783612dc5612dbf612dba6000611625565b6101ca565b916101ca565b14612e4957612de983612de4612ddd60018690611ea2565b87906119d3565b611667565b612df3575b505050565b919091612e3e612e2c612e267f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e35610183565b91829182610588565b0390a3388080612dee565b612e6e612e566000611625565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612e97612e7f6000611625565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ea69101610198565b90565b91909180612ec8612ec2612ebd6000611625565b6101ca565b916101ca565b14600014612fad57612eed612ee683612ee1600261148f565b6122f2565b6002611667565b5b82612f0a612f04612eff6000611625565b6101ca565b916101ca565b14600014612f8057612f2f612f2883612f23600261148f565b6126ec565b6002611667565b5b919091612f7b612f69612f637fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f72610183565b91829182610588565b0390a3565b612fa882612fa2612f93600087906119d3565b91612f9d8361148f565b612e9b565b90611667565b612f30565b612fc1612fbc600083906119d3565b61148f565b80612fd4612fce85610198565b91610198565b10612ffd57612fe7612ff89184906126ec565b612ff3600084906119d3565b611667565b612eee565b9061301c909192600093849363391434e360e21b8552600485016126b9565b0390fdfea2646970667358221220646cee990f1e19ff1172eb103aa2f85cdded62859d16fe970fd983953ff88e6164736f6c634300081e0033a26469706673582212207122e94a3a32e16a533f6e429c2a5806337c50ddfbb67ff2149bee453b8802d864736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2F JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xFA JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x21 PUSH2 0x34 JUMP JUMPDEST PUSH2 0x436A PUSH2 0x213 DUP3 CODECOPY PUSH2 0x436A SWAP1 RETURN JUMPDEST PUSH2 0x3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x69 SWAP1 PUSH2 0x3F JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x99 PUSH2 0x92 PUSH2 0x34 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB4 SWAP1 PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xAB JUMP JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xD9 DUP3 PUSH2 0xB7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF5 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 ADD PUSH2 0xCC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x457D DUP1 CODESIZE SUB DUP1 PUSH2 0x10D DUP2 PUSH2 0x86 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xDB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 PUSH2 0x13A SWAP3 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x146 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x166 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x14F JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F PUSH2 0x189 SWAP3 PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x195 SWAP1 PUSH2 0x170 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A1 SWAP1 PUSH2 0x18C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BC PUSH2 0x1B7 PUSH2 0x1C3 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x155 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1E3 PUSH2 0x1DD PUSH2 0x1D8 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x1F5 JUMPI PUSH2 0x1F3 SWAP1 PUSH1 0x1 PUSH2 0x1A7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20E PUSH1 0x4 DUP3 ADD PUSH2 0x149 JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xAD JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x94B7415 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x96ED28F9 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0x85 JUMPI PUSH4 0xF46901ED SUB PUSH2 0xE JUMPI PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xCE JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x8 PUSH2 0xF7 SWAP4 MUL PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x105 SWAP2 SLOAD PUSH2 0xE2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x0 DUP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x12A SWAP1 PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x14E SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x16B PUSH2 0x108 JUMP JUMPDEST PUSH2 0x173 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x1 PUSH1 0x0 SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1B0 PUSH2 0x185 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1DD JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1EF DUP3 PUSH2 0x1CD JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x20B JUMPI PUSH2 0x208 SWAP2 PUSH1 0x0 ADD PUSH2 0x1E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x259 JUMPI PUSH2 0x250 PUSH1 0x1 SWAP2 PUSH2 0x22A JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x269 DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x286 JUMPI PUSH2 0x283 SWAP2 PUSH2 0x27D SWAP2 PUSH2 0x235 JUMP JUMPDEST SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI PUSH2 0x2B7 PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2AE PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x2C9 SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x313 JUMPI PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x30F PUSH2 0x2FE PUSH2 0x52A JUMP JUMPDEST PUSH2 0x306 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2CD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x328 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x33A DUP3 PUSH2 0x318 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x365 JUMPI DUP1 PUSH2 0x359 PUSH2 0x362 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x32D JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST CALLVALUE PUSH2 0x39B JUMPI PUSH2 0x397 PUSH2 0x386 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x38E PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x3BA JUMPI PUSH2 0x3B7 SWAP2 PUSH1 0x0 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x3DD PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x3EF DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x425 PUSH2 0x414 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x41C PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x440 PUSH2 0x44A SWAP3 PUSH2 0x116 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x456 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x462 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x46F SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x487 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x4B4 SWAP3 PUSH2 0x4AA PUSH1 0x2 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4E8 JUMPI PUSH2 0x4E4 PUSH2 0x4D3 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x51B JUMPI PUSH2 0x505 PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x50D PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x517 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x525 JUMP JUMPDEST POP PUSH2 0x53D PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0x554 SWAP1 PUSH2 0x545 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x560 SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56F PUSH2 0x574 SWAP2 PUSH2 0x121 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x58A PUSH2 0x592 SWAP4 DUP4 SWAP7 SWAP6 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x5C0 SWAP1 PUSH2 0x596 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5FC PUSH2 0x5F5 PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5B6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST PUSH2 0x624 PUSH2 0x61F PUSH2 0x629 SWAP3 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x635 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x647 PUSH2 0x64C SWAP2 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x667 SWAP2 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP3 PUSH2 0x699 PUSH1 0x14 PUSH2 0x6A1 SWAP5 PUSH2 0x691 PUSH1 0x1 DUP9 PUSH2 0x689 PUSH1 0x20 SWAP12 SWAP11 DUP13 SWAP10 PUSH2 0x63B JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x6BA PUSH2 0x6C4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x6D8 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6EF PUSH2 0x6EA PUSH2 0x6F4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x7F2 SWAP3 PUSH2 0x7ED SWAP3 PUSH2 0x70A PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0x71E PUSH2 0x718 DUP5 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x7F5 JUMPI PUSH2 0x751 SWAP1 JUMPDEST PUSH2 0x742 PUSH2 0x736 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x75D DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7D0 PUSH2 0x355D PUSH2 0x776 PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x794 PUSH2 0x78E DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7C1 PUSH2 0x7A2 PUSH1 0xFF PUSH2 0x610 JUMP JUMPDEST SWAP2 PUSH2 0x7AC ADDRESS PUSH2 0x62C JUMP JUMPDEST SWAP5 PUSH2 0x7B5 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x7DC DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x751 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x80B PUSH2 0x810 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x81D SWAP1 SLOAD PUSH2 0x7FF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0x832 PUSH2 0x83C SWAP3 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP1 PUSH2 0x823 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x862 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x84B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x884 PUSH2 0x87F PUSH2 0x88B SWAP3 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x851 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x8AB PUSH2 0x8A5 PUSH2 0x8A0 PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x93B JUMPI DUP1 PUSH2 0x8CC PUSH2 0x8C6 PUSH2 0x8C1 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0x91E JUMPI PUSH2 0x8DC DUP2 PUSH1 0x1 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x906 PUSH32 0x21A5D032B24A495206270942F8C755327F3B27539F23099539FF95E2500B28D SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0x90F PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x919 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x937 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x953 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x960 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x96C SWAP1 PUSH2 0x957 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x978 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x991 JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x9B8 SWAP3 SWAP5 SWAP4 PUSH2 0x9B1 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0xB3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0x9D9 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA01 JUMPI PUSH2 0x9F8 PUSH1 0x1 SWAP2 PUSH2 0x9CE JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0xA2A SWAP2 MUL SWAP2 PUSH2 0xA24 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 PUSH2 0xA06 JUMP JUMPDEST SWAP3 PUSH2 0xA06 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA4A PUSH2 0xA45 PUSH2 0xA52 SWAP4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0xA86 JUMPI DUP3 PUSH2 0xA7E SWAP2 PUSH1 0x1 PUSH2 0xA84 SWAP6 ADD DUP2 SSTORE PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0xA34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xAAD SWAP3 SWAP5 SWAP4 PUSH2 0xAA6 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xABA PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0xACE PUSH2 0xAC8 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD30 JUMPI DUP1 PUSH2 0xAE6 PUSH2 0xAE0 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0xD2A JUMPI JUMPDEST SWAP2 DUP3 PUSH2 0xB0C PUSH2 0xB06 PUSH2 0xB01 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD0D JUMPI PUSH2 0xB2F PUSH2 0xB2A PUSH2 0xB23 PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xB44 PUSH2 0xB3F PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xCF0 JUMPI PUSH2 0x355D PUSH2 0xB5E PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY DUP4 PUSH2 0xB96 DUP4 SWAP2 PUSH2 0xB87 PUSH2 0xB7B PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0xBA8 PUSH2 0xBA2 DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 SWAP1 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD PUSH1 0x0 CREATE2 SWAP3 PUSH2 0xBC5 PUSH2 0xBC0 DUP6 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH4 0x485CC955 DUP3 DUP5 SWAP3 DUP1 EXTCODESIZE ISZERO PUSH2 0xCEB JUMPI PUSH2 0xBF2 PUSH1 0x0 DUP1 SWAP5 PUSH2 0xBFD PUSH2 0xBE6 PUSH2 0xB3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x980 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x996 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCB9 JUMPI JUMPDEST POP PUSH2 0xC2C DUP5 PUSH2 0xC27 PUSH2 0xC20 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC4B DUP5 PUSH2 0xC46 PUSH2 0xC3F PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC5F PUSH2 0xC58 PUSH1 0x3 PUSH2 0x9CB JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 DUP4 SWAP2 PUSH2 0xC6C PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC99 PUSH32 0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9 SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0xCB4 PUSH2 0xCAB PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xA8B JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xCD9 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0xCDF JUMPI JUMPDEST PUSH2 0xCD1 DUP2 DUP4 PUSH2 0x5B6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x986 JUMP JUMPDEST CODESIZE PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC9BB25EB PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD09 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD26 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5C6D7B73 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD49 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xD69 PUSH2 0xD63 PUSH2 0xD5E PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xDBB JUMPI PUSH2 0xD79 DUP2 PUSH1 0x0 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xDA3 PUSH32 0x9887DF018DFA75103FAF0F1388028E55A1124783C285D8D2CBCF62A067A6B844 SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0xDAC PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0xDB6 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0xDD3 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x27 JUMPI PUSH2 0x11 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x19 PUSH2 0x2C JUMP JUMPDEST PUSH2 0x3056 PUSH2 0x507 DUP3 CODECOPY PUSH2 0x3056 SWAP1 RETURN JUMPDEST PUSH2 0x32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x61 SWAP1 PUSH2 0x37 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x91 PUSH2 0x8A PUSH2 0x2C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x57 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAF JUMPI PUSH2 0xAB PUSH1 0x20 SWAP2 PUSH2 0x37 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0xC6 PUSH2 0xC1 DUP4 PUSH2 0x93 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x444558204C5020546F6B656E0000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xFD PUSH1 0xC PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x10A PUSH1 0x20 DUP4 ADD PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114 PUSH2 0xF3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4445582D4C500000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x149 PUSH1 0x6 PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x156 PUSH1 0x20 DUP4 ADD PUSH2 0x117 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 PUSH2 0x1AB SWAP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B7 SWAP1 PUSH2 0x192 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C3 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D9 PUSH2 0x1E5 SWAP3 PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1F4 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x158 JUMP JUMPDEST SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x20D CALLER PUSH1 0x6 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 PUSH2 0x22E SWAP3 PUSH2 0x20F JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x1 PUSH2 0x215 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24B PUSH1 0x0 NOT SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 PUSH2 0x26E SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x289 PUSH2 0x284 PUSH2 0x290 SWAP3 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x29E SWAP2 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2A9 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x274 JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2E7 JUMPI JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x32B SWAP2 MUL SWAP2 PUSH2 0x325 PUSH1 0x0 NOT DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x30B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x34B PUSH2 0x346 PUSH2 0x353 SWAP4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x30F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x36E SWAP2 PUSH2 0x368 PUSH2 0x357 JUMP JUMPDEST SWAP2 PUSH2 0x335 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x38A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x35C JUMP JUMPDEST ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3A0 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3D1 SWAP4 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3B8 DUP5 PUSH2 0x301 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x3D9 JUMPI JUMPDEST PUSH2 0x3CA SWAP1 PUSH2 0x301 JUMP JUMPDEST ADD SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA DUP2 SWAP3 SWAP1 POP PUSH2 0x3C1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3FC SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x40B SWAP2 PUSH2 0x3EB JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x41D DUP2 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4DD JUMPI PUSH2 0x43F DUP3 PUSH2 0x439 DUP6 SLOAD PUSH2 0x2CC JUMP JUMPDEST DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x474 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x463 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x401 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x483 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4BB SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x3EB JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x49F JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x487 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x4EC SWAP2 PUSH2 0x413 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x4FD PUSH2 0x504 SWAP3 PUSH1 0x3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E4C JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x204C JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x269C JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x161D PUSH2 0x1618 PUSH2 0x1622 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x162E SWAP1 PUSH2 0x1609 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x163E PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165C PUSH2 0x1657 PUSH2 0x1661 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167C PUSH2 0x1677 PUSH2 0x1683 SWAP3 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1631 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A6 PUSH2 0x16A0 PUSH2 0x169B ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A2 JUMPI PUSH2 0x16B3 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x1709 PUSH1 0x20 PUSH2 0x16D7 PUSH2 0x16D2 PUSH2 0x16CD PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x16FE PUSH2 0x16E9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F2 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x196F JUMPI JUMPDEST POP SWAP4 PUSH2 0x176F PUSH1 0x20 PUSH2 0x173D PUSH2 0x1738 PUSH2 0x1733 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1764 PUSH2 0x174F ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1758 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x193C JUMPI JUMPDEST POP SWAP2 PUSH2 0x1797 DUP7 PUSH2 0x1791 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AB DUP2 PUSH2 0x17A5 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17B7 DUP5 DUP3 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP4 PUSH2 0x17C0 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D4 PUSH2 0x17CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F3 JUMPI POP PUSH2 0x1801 PUSH2 0x17F3 PUSH2 0x17EE DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x181D PUSH2 0x180F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1817 PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2B82 JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1832 PUSH2 0x182C PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18D6 JUMPI PUSH2 0x1845 PUSH2 0x184E SWAP6 DUP12 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x189A JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1880 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1895 PUSH2 0x188C PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x18CA PUSH2 0x18B2 PUSH2 0x18AD PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C4 PUSH2 0x18BF PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18EF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1936 SWAP1 PUSH2 0x1930 PUSH2 0x1921 PUSH2 0x191A PUSH2 0x190B DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1914 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192A DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2A82 JUMP JUMPDEST SWAP9 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x195D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1963 JUMPI JUMPDEST PUSH2 0x1955 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1782 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1990 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1996 JUMPI JUMPDEST PUSH2 0x1988 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x197E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D0 SWAP1 PUSH2 0x19CB PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19DD SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A02 PUSH2 0x1A07 SWAP2 PUSH2 0x19FA PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A1D SWAP3 SWAP2 PUSH2 0x1A18 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1A29 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A27 PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A49 PUSH2 0x1A43 PUSH2 0x1A3E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E2F JUMPI PUSH2 0x1A56 PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A65 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A6F PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1AB8 PUSH1 0x20 PUSH2 0x1A86 PUSH2 0x1A81 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AAD PUSH2 0x1A98 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA1 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DFC JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B15 PUSH1 0x20 PUSH2 0x1AE3 PUSH2 0x1ADE DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0A PUSH2 0x1AF5 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AFE PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DF7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DC9 JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3B PUSH2 0x1B36 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP7 PUSH2 0x1B76 PUSH2 0x1B4A DUP3 DUP5 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP6 PUSH2 0x1B71 PUSH2 0x1B6A PUSH2 0x1B63 PUSH2 0x1B5C PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8B PUSH2 0x1B85 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DAE JUMPI JUMPDEST PUSH2 0x1D91 JUMPI PUSH2 0x1BEA PUSH2 0x1BE5 PUSH2 0x1C1C SWAP7 PUSH2 0x1BB5 PUSH1 0x20 SWAP5 PUSH2 0x1BB0 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x1BCB DUP14 PUSH2 0x1BC2 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1BE0 PUSH2 0x1BD7 DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C11 PUSH2 0x1BFC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C05 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1C48 PUSH2 0x1C43 PUSH2 0x1C7A SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D5F JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C6F PUSH2 0x1C5A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C63 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1C99 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D2C JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1CF0 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CD6 PUSH2 0x1CD0 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEB PUSH2 0x1CE2 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D27 PUSH2 0x1D20 PUSH2 0x1D08 PUSH2 0x1D03 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x1D15 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1D4D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D53 JUMPI JUMPDEST PUSH2 0x1D45 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C90 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D7F SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D85 JUMPI JUMPDEST PUSH2 0x1D77 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C3C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAA PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC3 PUSH2 0x1DBD PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1DEA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF0 JUMPI JUMPDEST PUSH2 0x1DE2 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B28 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DD8 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E23 JUMPI JUMPDEST PUSH2 0x1E15 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E48 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E66 SWAP1 PUSH2 0x1E58 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E60 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0A JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E72 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E7D PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E9D SWAP2 PUSH2 0x1E8C PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E95 PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EAC SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EDF SWAP2 PUSH2 0x1ED5 PUSH2 0x1EDA SWAP3 PUSH2 0x1ECD PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA2 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEA PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1EF2 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1EFA PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F4D PUSH1 0x20 PUSH2 0x1F1B PUSH2 0x1F16 PUSH2 0x1F11 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F42 PUSH2 0x1F2D ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F36 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2047 JUMPI PUSH2 0x1FB2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2019 JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F80 PUSH2 0x1F7B PUSH2 0x1F76 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FA7 PUSH2 0x1F92 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9B PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2014 JUMPI PUSH2 0x1FE4 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FE6 JUMPI JUMPDEST POP PUSH2 0x1FD3 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FDE PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2460 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2007 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x200D JUMPI JUMPDEST PUSH2 0x1FFF DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FC8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF5 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203A SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2040 JUMPI JUMPDEST PUSH2 0x2032 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F63 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2028 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2054 PUSH2 0x1EE2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x206D PUSH2 0x2068 PUSH2 0x2072 SWAP3 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A5 PUSH2 0x209F PUSH2 0x209A PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20BE JUMPI PUSH2 0x20BC PUSH2 0x20B5 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20D7 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F2 PUSH2 0x20ED PUSH2 0x20F7 SWAP3 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2104 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2119 PUSH2 0x2112 PUSH2 0x20FA JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213B PUSH2 0x2136 PUSH2 0x2140 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2165 SWAP3 SWAP5 SWAP4 PUSH2 0x215E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21AE PUSH2 0x21B3 SWAP4 PUSH2 0x219F PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x2186 PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x2127 JUMP JUMPDEST SWAP3 PUSH2 0x218F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C47 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21CC PUSH2 0x21C7 PUSH2 0x21D1 SWAP3 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E0 PUSH2 0x21E6 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F1 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220A PUSH2 0x2205 PUSH2 0x220F SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x221E PUSH2 0x2224 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2234 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x224D PUSH2 0x2248 PUSH2 0x2252 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2269 PUSH2 0x2264 PUSH2 0x226E SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2290 PUSH2 0x228B PUSH2 0x2295 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A4 PUSH2 0x22AA SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B5 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22CE PUSH2 0x22C9 PUSH2 0x22D3 SWAP3 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EA PUSH2 0x22E5 PUSH2 0x22EF SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2301 PUSH2 0x2307 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2312 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232B PUSH2 0x2326 PUSH2 0x2330 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x234C PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236A PUSH2 0x2365 PUSH2 0x236F SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238A PUSH2 0x2385 PUSH2 0x2391 SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2333 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23B7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2395 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23D6 PUSH2 0x23D1 PUSH2 0x23DD SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239B JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2411 PUSH2 0x240C PUSH2 0x2416 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2431 PUSH2 0x242C PUSH2 0x2438 SWAP3 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2419 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x245E SWAP3 SWAP5 SWAP4 PUSH2 0x2457 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2483 PUSH2 0x247D PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x266F JUMPI JUMPDEST PUSH2 0x2652 JUMPI PUSH2 0x251F SWAP4 PUSH2 0x250C PUSH2 0x2505 PUSH2 0x2518 SWAP5 PUSH2 0x2511 SWAP5 PUSH2 0x24C1 PUSH2 0x24BC TIMESTAMP PUSH2 0x24B6 PUSH5 0x100000000 PUSH2 0x21B8 JUMP JUMPDEST SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x21F6 JUMP JUMPDEST SWAP8 PUSH2 0x24D6 DUP10 PUSH2 0x24D0 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2212 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EB PUSH2 0x24E5 PUSH1 0x0 PUSH2 0x2239 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x2636 JUMPI JUMPDEST DUP1 PUSH2 0x261A JUMPI JUMPDEST PUSH2 0x256E JUMPI JUMPDEST POP POP POP PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2529 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2533 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x2569 PUSH2 0x2560 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x243C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2612 SWAP3 PUSH2 0x25F6 PUSH2 0x25F0 PUSH2 0x25EB DUP5 PUSH2 0x25E5 PUSH2 0x25DF PUSH2 0x260B SWAP9 PUSH2 0x25DA PUSH2 0x25D3 PUSH2 0x25C4 PUSH2 0x25B5 PUSH2 0x25B0 PUSH2 0x25A1 PUSH2 0x25FC SWAP15 PUSH2 0x2D5B JUMP JUMPDEST PUSH2 0x25AA DUP8 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x25BE DUP13 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2D5B JUMP JUMPDEST SWAP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST SWAP2 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2606 PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1667 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x24FD JUMP JUMPDEST POP DUP1 PUSH2 0x262F PUSH2 0x2629 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F8 JUMP JUMPDEST POP DUP2 PUSH2 0x264B PUSH2 0x2645 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266B PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2691 PUSH2 0x268B PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248B JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A4 PUSH2 0x2697 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26B7 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E3 PUSH2 0x26EA SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26D9 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26F7 SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2708 DUP2 DUP4 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x271E PUSH2 0x2718 PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272B JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x273E PUSH2 0x2738 DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2765 JUMPI PUSH2 0x275C SWAP4 SWAP5 PUSH2 0x2753 SWAP2 SWAP4 SWAP3 PUSH2 0x26EC JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2724 JUMP JUMPDEST POP PUSH2 0x2785 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x27A6 PUSH2 0x27A0 PUSH2 0x279B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2803 JUMPI DUP2 PUSH2 0x27C7 PUSH2 0x27C1 PUSH2 0x27BC PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x27DA JUMPI PUSH2 0x27D8 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27FF PUSH2 0x27E7 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2828 PUSH2 0x2810 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2835 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2841 SWAP1 PUSH2 0x282C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x284D SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x285D DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2879 JUMPI PUSH2 0x2876 SWAP2 PUSH1 0x0 ADD PUSH2 0x2850 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2895 PUSH2 0x2890 PUSH2 0x289A SWAP3 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28A7 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x28DD PUSH1 0x20 PUSH2 0x28C7 PUSH2 0x28C2 PUSH2 0x28BD PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x2844 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x28D5 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x28ED PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A7D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A4F JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x291E PUSH2 0x2918 PUSH2 0x2913 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x292B PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A14 JUMPI DUP3 PUSH2 0x2948 PUSH2 0x2942 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2955 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x2977 PUSH2 0x297C SWAP2 PUSH2 0x2971 PUSH2 0x296B PUSH2 0x2982 SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST SWAP2 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x2996 PUSH2 0x2990 DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29A2 JUMPI JUMPDEST DUP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0x29DE PUSH2 0x29E4 SWAP3 PUSH2 0x29D9 PUSH2 0x29C8 PUSH2 0x29B7 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29C2 DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29D3 PUSH1 0x5 PUSH2 0x2881 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x29F8 PUSH2 0x29F2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A04 JUMPI JUMPDEST DUP1 PUSH2 0x299C JUMP JUMPDEST PUSH2 0x2A0D SWAP2 PUSH2 0x2B82 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x29FE JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A2B PUSH2 0x2A25 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A36 JUMPI JUMPDEST PUSH2 0x2953 JUMP JUMPDEST PUSH2 0x2A4A PUSH2 0x2A43 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2A70 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2A76 JUMPI JUMPDEST PUSH2 0x2A68 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x285F JUMP JUMPDEST CODESIZE PUSH2 0x2900 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2A8B PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2A9F PUSH2 0x2A99 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AAC JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2ABB PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2ACF PUSH2 0x2AC9 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B50 JUMPI POP DUP1 PUSH2 0x2B00 PUSH2 0x2AF0 DUP4 PUSH2 0x2AEA PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2AFA PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B15 PUSH2 0x2B0F DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B49 JUMPI POP PUSH2 0x2B43 PUSH2 0x2B33 DUP3 PUSH2 0x2B2E DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B65 PUSH2 0x2B5F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B70 JUMPI JUMPDEST PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x2B7C PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x2B6B JUMP JUMPDEST DUP1 PUSH2 0x2B9E PUSH2 0x2B98 PUSH2 0x2B93 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BBB JUMPI PUSH2 0x2BB9 SWAP2 PUSH2 0x2BB1 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2BE0 PUSH2 0x2BC8 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C01 PUSH2 0x2BFB PUSH2 0x2BF6 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C1E JUMPI PUSH2 0x2C1C SWAP2 SWAP1 PUSH2 0x2C15 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C43 PUSH2 0x2C2B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C55 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C5E PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2CF6 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2C85 PUSH2 0x2C7F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2CDC JUMPI POP PUSH2 0x2C97 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CAB PUSH2 0x2CA5 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CB4 JUMPI POP JUMP JUMPDEST PUSH2 0x2CC0 PUSH2 0x2CD8 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CEF PUSH2 0x2CE9 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D1E PUSH2 0x2D19 PUSH2 0x2D23 SWAP3 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D35 PUSH2 0x2D3B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2271 JUMP JUMPDEST SWAP3 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2D47 DUP4 DUP3 MUL PUSH2 0x2271 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D56 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D70 PUSH2 0x2D83 SWAP2 PUSH2 0x2D6A PUSH2 0x2D02 JUMP JUMPDEST POP PUSH2 0x227C JUMP JUMPDEST PUSH2 0x2D7D PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D0A JUMP JUMPDEST SWAP1 PUSH2 0x2D26 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DA4 PUSH2 0x2D9E PUSH2 0x2D99 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E72 JUMPI DUP4 PUSH2 0x2DC5 PUSH2 0x2DBF PUSH2 0x2DBA PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E49 JUMPI PUSH2 0x2DE9 DUP4 PUSH2 0x2DE4 PUSH2 0x2DDD PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA2 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2DF3 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E3E PUSH2 0x2E2C PUSH2 0x2E26 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E35 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2DEE JUMP JUMPDEST PUSH2 0x2E6E PUSH2 0x2E56 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E97 PUSH2 0x2E7F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2EA6 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EC8 PUSH2 0x2EC2 PUSH2 0x2EBD PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAD JUMPI PUSH2 0x2EED PUSH2 0x2EE6 DUP4 PUSH2 0x2EE1 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F0A PUSH2 0x2F04 PUSH2 0x2EFF PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2F80 JUMPI PUSH2 0x2F2F PUSH2 0x2F28 DUP4 PUSH2 0x2F23 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26EC JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2F7B PUSH2 0x2F69 PUSH2 0x2F63 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F72 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FA8 DUP3 PUSH2 0x2FA2 PUSH2 0x2F93 PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP2 PUSH2 0x2F9D DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2E9B JUMP JUMPDEST SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x2FC1 PUSH2 0x2FBC PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x2FD4 PUSH2 0x2FCE DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2FFD JUMPI PUSH2 0x2FE7 PUSH2 0x2FF8 SWAP2 DUP5 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x2FF3 PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2EEE JUMP JUMPDEST SWAP1 PUSH2 0x301C SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x6CEE990F1E NOT SELFDESTRUCT GT PUSH19 0xEB103AA2F85CDDED62859D16FE970FD983953F EXTCALL DUP15 PUSH2 0x6473 PUSH16 0x6C634300081E0033A264697066735822 SLT KECCAK256 PUSH18 0x22E94A3A32E16A533F6E429C2A5806337C50 0xDD EXTSTATICCALL 0xB6 PUSH32 0xF2149BEE453B8802D864736F6C634300081E0033000000000000000000000000 ",
              "sourceMap": "278:5259:12:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2141:139::-;2189:12;:26;;2205:10;2213:1;2205:10;:::i;:::-;2189:26;:::i;:::-;;;:::i;:::-;;2185:52;;2247:26;2261:12;2247:26;;:::i;:::-;2141:139::o;2185:52::-;2224:13;;;;;;;;;;;;:::i;:::-;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 195,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 813,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 828,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_fromMemory": {
                  "entryPoint": 2438,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 928,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 497,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 482,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 301,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_address": {
                  "entryPoint": 2454,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_to_address_nonPadded_inplace": {
                  "entryPoint": 1379,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 2699,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bytes1": {
                  "entryPoint": 1595,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bytes32": {
                  "entryPoint": 1622,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_packed_address_address": {
                  "entryPoint": 1400,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_packed_bytes1_address_bytes32_bytes32": {
                  "entryPoint": 1643,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 959,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 314,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 717,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 704,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_memory": {
                  "entryPoint": 1513,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 179,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_array_address_dyn_storage": {
                  "entryPoint": 554,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_address_dyn_storage_ptr": {
                  "entryPoint": 2510,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_bytes": {
                  "entryPoint": 1503,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_address_dyn_storage": {
                  "entryPoint": 550,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_address_dyn_storage_ptr": {
                  "entryPoint": 2521,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_bytes": {
                  "entryPoint": 1509,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_address_to_array_address_dyn_storage_ptr": {
                  "entryPoint": 2646,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes1": {
                  "entryPoint": 1537,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes32": {
                  "entryPoint": 1616,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 215,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 1534,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 2080,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 458,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1113,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_DexPair": {
                  "entryPoint": 2403,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_array_address_dyn_storage_to_array_address_dyn__ptr": {
                  "entryPoint": 2507,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bytes32_to_uint256": {
                  "entryPoint": 1735,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DexFactory_to_address": {
                  "entryPoint": 1580,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DexPair_to_address": {
                  "entryPoint": 2415,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 2111,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_bytes1": {
                  "entryPoint": 1552,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 2083,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1101,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_DexPair": {
                  "entryPoint": 2391,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1073,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint160": {
                  "entryPoint": 1755,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 1707,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_allPairs": {
                  "entryPoint": 651,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_allPairsLength": {
                  "entryPoint": 739,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_createPair": {
                  "entryPoint": 1016,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_feeTo": {
                  "entryPoint": 336,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_feeToSetter": {
                  "entryPoint": 405,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getPair": {
                  "entryPoint": 1207,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_pairFor": {
                  "entryPoint": 874,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setFeeTo": {
                  "entryPoint": 1261,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setFeeToSetter": {
                  "entryPoint": 965,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 226,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 2047,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1462,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_allPairsLength": {
                  "entryPoint": 1322,
                  "id": 1653,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_createPair": {
                  "entryPoint": 2735,
                  "id": 1766,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_pairFor": {
                  "entryPoint": 1783,
                  "id": 1894,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_setFeeTo": {
                  "entryPoint": 3405,
                  "id": 1789,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setFeeToSetter": {
                  "entryPoint": 2191,
                  "id": 1822,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "getter_fun_allPairs": {
                  "entryPoint": 606,
                  "id": 1589,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "getter_fun_feeTo": {
                  "entryPoint": 264,
                  "id": 1575,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_feeToSetter": {
                  "entryPoint": 389,
                  "id": 1578,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_getPair": {
                  "entryPoint": 1173,
                  "id": 1585,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 1070,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_address": {
                  "entryPoint": 1367,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_bytes1": {
                  "entryPoint": 1592,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_bytes32": {
                  "entryPoint": 1619,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_uint160": {
                  "entryPoint": 1355,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_address_of_address": {
                  "entryPoint": 1149,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_address_address__of_address": {
                  "entryPoint": 1125,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x32": {
                  "entryPoint": 528,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1440,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 2156,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 2067,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20": {
                  "entryPoint": 2427,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 1312,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 185,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 190,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 2490,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 1430,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 2123,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 2432,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_248": {
                  "entryPoint": 1546,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_96": {
                  "entryPoint": 1349,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 2566,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 1701,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 173,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 211,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 565,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_address_dyn__ptr": {
                  "entryPoint": 2525,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "update_byte_slice_dynamic20": {
                  "entryPoint": 2570,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 2129,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": 2612,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 2159,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 792,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 461,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": 1344,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 1317,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b610520565b61001e6000356100ad565b8063017e7e58146100a8578063094b7415146100a35780631e3dd18b1461009e578063574f2ba31461009957806396ed28f914610094578063a2e74af61461008f578063c9c653961461008a578063e6a43905146100855763f46901ed0361000e576104ed565b6104b7565b6103f8565b6103c5565b61036a565b6102e3565b61028b565b610195565b610150565b60e01c90565b60405190565b600080fd5b600080fd5b60009103126100ce57565b6100be565b1c90565b60018060a01b031690565b6100f29060086100f793026100d3565b6100d7565b90565b9061010591546100e2565b90565b6101136000806100fa565b90565b60018060a01b031690565b61012a90610116565b90565b61013690610121565b9052565b919061014e9060006020850194019061012d565b565b34610180576101603660046100c3565b61017c61016b610108565b6101736100b3565b9182918261013a565b0390f35b6100b9565b61019260016000906100fa565b90565b346101c5576101a53660046100c3565b6101c16101b0610185565b6101b86100b3565b9182918261013a565b0390f35b6100b9565b90565b6101d6816101ca565b036101dd57565b600080fd5b905035906101ef826101cd565b565b9060208282031261020b57610208916000016101e2565b90565b6100be565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b61023e81610226565b8210156102595761025060019161022a565b91020190600090565b610210565b600361026981610226565b821015610286576102839161027d91610235565b906100fa565b90565b600080fd5b346102bb576102b76102a66102a13660046101f1565b61025e565b6102ae6100b3565b9182918261013a565b0390f35b6100b9565b6102c9906101ca565b9052565b91906102e1906000602085019401906102c0565b565b34610313576102f33660046100c3565b61030f6102fe61052a565b6103066100b3565b918291826102cd565b0390f35b6100b9565b61032181610121565b0361032857565b600080fd5b9050359061033a82610318565b565b91906040838203126103655780610359610362926000860161032d565b9360200161032d565b90565b6100be565b3461039b5761039761038661038036600461033c565b906106f7565b61038e6100b3565b9182918261013a565b0390f35b6100b9565b906020828203126103ba576103b79160000161032d565b90565b6100be565b60000190565b346103f3576103dd6103d83660046103a0565b61088f565b6103e56100b3565b806103ef816103bf565b0390f35b6100b9565b346104295761042561041461040e36600461033c565b90610aaf565b61041c6100b3565b9182918261013a565b0390f35b6100b9565b90565b61044561044061044a92610116565b61042e565b610116565b90565b61045690610431565b90565b6104629061044d565b90565b9061046f90610459565b600052602052604060002090565b9061048790610459565b600052602052604060002090565b6104af6104b4926104aa600293600094610465565b61047d565b6100fa565b90565b346104e8576104e46104d36104cd36600461033c565b90610495565b6104db6100b3565b9182918261013a565b0390f35b6100b9565b3461051b576105056105003660046103a0565b610d4d565b61050d6100b3565b80610517816103bf565b0390f35b6100b9565b600080fd5b600090565b610532610525565b5061053d6003610226565b90565b600090565b60601b90565b61055490610545565b90565b6105609061054b565b90565b61056f61057491610121565b610557565b9052565b60148161058a61059293839695610563565b018092610563565b0190565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906105c090610596565b810190811067ffffffffffffffff8211176105da57604052565b6105a0565b60200190565b5190565b906105fc6105f56100b3565b92836105b6565b565b90565b60ff60f81b1690565b60f81b90565b61062461061f610629926105fe565b61060a565b610601565b90565b6106359061044d565b90565b90565b61064761064c91610601565b610638565b9052565b90565b90565b61066261066791610650565b610653565b9052565b9261069960146106a19461069160018861068960209b9a8c9961063b565b018092610563565b018092610656565b018092610656565b0190565b60001c90565b6106bf6106ba6106c4926101ca565b61042e565b6101ca565b90565b6106d36106d8916106a5565b6106ab565b90565b6106ef6106ea6106f4926101ca565b61042e565b610116565b90565b6107e86107f2926107ed9261070a610540565b508061071e61071884610121565b91610121565b106000146107f557610751905b6107426107366100b3565b93849260208401610578565b602082018103825203826105b6565b61076361075d826105e5565b916105df565b206107d061355d610776602082016105e9565b90808252610dd8602083013961079461078e826105e5565b916105df565b206107c16107a260ff610610565b916107ac3061062c565b946107b56100b3565b9586946020860161066b565b602082018103825203826105b6565b6107e26107dc826105e5565b916105df565b206106c7565b6106db565b61044d565b90565b906107519061072b565b61080b610810916106a5565b6100d7565b90565b61081d90546107ff565b90565b90565b61083761083261083c92610820565b61042e565b610116565b90565b61084890610823565b90565b60001b90565b9061086260018060a01b039161084b565b9181191691161790565b90565b9061088461087f61088b92610459565b61086c565b8254610851565b9055565b336108ab6108a56108a06001610813565b610121565b91610121565b0361093b57806108cc6108c66108c1600061083f565b610121565b91610121565b1461091e576108dc81600161086f565b6109067f021a5d032b24a495206270942f8c755327f3b27539f23099539ff95e2500b28d91610459565b9061090f6100b3565b80610919816103bf565b0390a2565b600063d92e233d60e01b815280610937600482016103bf565b0390fd5b60006282b42960e81b815280610953600482016103bf565b0390fd5b61096090610431565b90565b61096c90610957565b90565b6109789061044d565b90565b600080fd5b60e01b90565b600091031261099157565b6100be565b9160206109b89294936109b16040820196600083019061012d565b019061012d565b565b6109c26100b3565b3d6000823e3d90fd5b90565b600052602060002090565b5490565b6109e6816109d9565b821015610a01576109f86001916109ce565b91020190600090565b610210565b1b90565b91906008610a2a910291610a2460018060a01b0384610a06565b92610a06565b9181191691161790565b9190610a4a610a45610a5293610459565b61086c565b908354610a0a565b9055565b9081549168010000000000000000831015610a865782610a7e916001610a84950181556109dd565b90610a34565b565b6105a0565b916020610aad929493610aa66040820196600083019061012d565b01906102c0565b565b919091610aba610540565b5080610ace610ac885610121565b91610121565b14610d305780610ae6610ae085610121565b91610121565b10600014610d2a575b9182610b0c610b06610b01600061083f565b610121565b91610121565b14610d0d57610b2f610b2a610b2360028690610465565b839061047d565b610813565b610b4a610b44610b3f600061083f565b610121565b91610121565b03610cf05761355d610b5e602082016105e9565b90808252610dd8602083013983610b968391610b87610b7b6100b3565b93849260208401610578565b602082018103825203826105b6565b610ba8610ba2826105e5565b916105df565b20906020815191016000f592610bc5610bc085610963565b61096f565b63485cc955828492803b15610ceb57610bf260008094610bfd610be66100b3565b97889687958694610980565b845260048401610996565b03925af18015610ce657610cb9575b50610c2c84610c27610c2060028590610465565b859061047d565b61086f565b610c4b84610c46610c3f60028690610465565b849061047d565b61086f565b610c5f610c5860036109cb565b8590610a56565b908391610c6c6003610226565b610c9f610c997f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e993610459565b93610459565b93610cb4610cab6100b3565b92839283610a8b565b0390a3565b610cd99060003d8111610cdf575b610cd181836105b6565b810190610986565b38610c0c565b503d610cc7565b6109ba565b61097b565b600063c9bb25eb60e01b815280610d09600482016103bf565b0390fd5b600063d92e233d60e01b815280610d26600482016103bf565b0390fd5b91610aef565b6000635c6d7b7360e01b815280610d49600482016103bf565b0390fd5b33610d69610d63610d5e6001610813565b610121565b91610121565b03610dbb57610d7981600061086f565b610da37f9887df018dfa75103faf0f1388028e55a1124783c285d8d2cbcf62a067a6b84491610459565b90610dac6100b3565b80610db6816103bf565b0390a2565b60006282b42960e81b815280610dd3600482016103bf565b0390fdfe608060405234610027576100116101e9565b61001961002c565b613056610507823961305690f35b610032565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061006190610037565b810190811060018060401b0382111761007957604052565b610041565b9061009161008a61002c565b9283610057565b565b60018060401b0381116100af576100ab602091610037565b0190565b610041565b906100c66100c183610093565b61007e565b918252565b60007f444558204c5020546f6b656e0000000000000000000000000000000000000000910152565b6100fd600c6100b4565b9061010a602083016100cb565b565b6101146100f3565b90565b60007f4445582d4c500000000000000000000000000000000000000000000000000000910152565b61014960066100b4565b9061015660208301610117565b565b61016061013f565b90565b60001b90565b9061017a60018060a01b0391610163565b9181191691161790565b60018060a01b031690565b90565b6101a66101a16101ab92610184565b61018f565b610184565b90565b6101b790610192565b90565b6101c3906101ae565b90565b90565b906101de6101d96101e5926101ba565b6101c6565b8254610169565b9055565b6102026101f461010c565b6101fc610158565b90610294565b61020d3360066101c9565b565b90565b90565b61022961022461022e9261020f565b61018f565b610212565b90565b61023b6001610215565b90565b9061024b60001991610163565b9181191691161790565b61026961026461026e92610212565b61018f565b610212565b90565b90565b9061028961028461029092610255565b610271565b825461023e565b9055565b9061029e916104ee565b6102b06102a9610231565b6005610274565b565b5190565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156102ec575b60208310146102e757565b6102b6565b91607f16916102dc565b600052602060002090565b601f602091010490565b1b90565b9190600861032b9102916103256000198461030b565b9261030b565b9181191691161790565b919061034b61034661035393610255565b610271565b90835461030f565b9055565b600090565b61036e91610368610357565b91610335565b565b5b81811061037c575050565b8061038a600060019361035c565b01610371565b9190601f81116103a0575b505050565b6103ac6103d1936102f6565b9060206103b884610301565b830193106103d9575b6103ca90610301565b0190610370565b38808061039b565b91506103ca819290506103c1565b1c90565b906103fc90600019906008026103e7565b191690565b8161040b916103eb565b906002021790565b9061041d816102b2565b9060018060401b0382116104dd5761043f8261043985546102cc565b85610390565b602090601f83116001146104745791809161046393600092610468575b5050610401565b90555b565b9091500151388061045c565b601f19831691610483856102f6565b9260005b8181106104c5575091600293918560019694106104ab575b50505002019055610466565b6104bb910151601f8416906103eb565b905538808061049f565b91936020600181928787015181550195019201610487565b610041565b906104ec91610413565b565b906104fd6105049260036104e2565b60046104e2565b56fe60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119bf565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119eb565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e4c565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6a565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e80565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611eba565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a9261204c565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612082565b610d11565b610acf612107565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612460565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b919091612167565b8d8d610dee565b6111938d61118b86610b60565b908d91612167565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e61269c565b9190916126a9565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb61269c565b829084916126fa565b919091612789565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612082565b611687565b906115cf612107565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b61161d61161861162292610ad1565b61094d565b6101bf565b90565b61162e90611609565b90565b9061163e6000199161151b565b9181191691161790565b61165c61165761166192610198565b61094d565b610198565b90565b90565b9061167c61167761168392611648565b611664565b8254611631565b9055565b91909150816116a66116a061169b30610b88565b6101ca565b916101ca565b146119a2576116b3611416565b509290929061170960206116d76116d26116cd6007610b2b565b610b60565b610b7c565b6370a08231906116fe6116e930610b88565b926116f2610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561199d5760009161196f575b509361176f602061173d6117386117336008610b2b565b610b60565b610b7c565b6370a082319061176461174f30610b88565b92611758610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196a5760009161193c575b50916117978661179184610af0565b90610c2e565b926117ab816117a587610af0565b90610c2e565b946117b784829061289d565b936117c061149c565b806117d46117ce6000610ad4565b91610198565b146000146118f357506118016117f36117ee888a90610c53565b612ab3565b6117fb61096c565b90610c2e565b9861181d61180f6000611625565b61181761096c565b90612b82565b5b8961183261182c6000610ad4565b91610198565b146118d65761184561184e958b90612b82565b92909192612460565b61189a575b3390916118807f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b9261189561188c610183565b92839283610885565b0390a2565b6118d16118ca6118b26118ad60096113b8565b610af0565b6118c46118bf60096113df565b610af0565b90610c53565b600c611667565b611853565b600063bb55fd2760e01b8152806118ef600482016102a9565b0390fd5b6119369061193061192161191a61190b8b8590610c53565b61191487610af0565b906115e7565b928b610c53565b61192a86610af0565b906115e7565b90612a82565b9861181e565b61195d915060203d8111611963575b6119558183610baa565b810190610be8565b38611782565b503d61194b565b610c07565b611990915060203d8111611996575b6119888183610baa565b810190610be8565b3861171c565b503d61197e565b610c07565b6000630521f43160e31b8152806119bb600482016102a9565b0390fd5b6119d0906119cb610b0c565b6115b4565b90565b906119dd90610cc6565b600052602052604060002090565b611a02611a07916119fa610b0c565b5060006119d3565b61148f565b90565b90611a1d9291611a18612082565b611a29565b9091611a27612107565b565b929192505081611a49611a43611a3e30610b88565b6101ca565b916101ca565b14611e2f57611a56611416565b5091909192611a656007610b2b565b611a6f6008610b2b565b90611ab86020611a86611a8184610b60565b610b7c565b6370a0823190611aad611a9830610b88565b92611aa1610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2a57600091611dfc575b5091611b156020611ae3611ade84610b60565b610b7c565b6370a0823190611b0a611af530610b88565b92611afe610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611df757600091611dc9575b5096611b3b611b3630610b88565b6119eb565b96611b76611b4a82849061289d565b95611b71611b6a611b63611b5c61149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8b611b856000610ad4565b91610198565b148015611dae575b611d9157611bea611be5611c1c96611bb5602094611bb030610b88565b612be4565b611bcb8d611bc283610b60565b908c9091612167565b611be0611bd788610b60565b8d8c9091612167565b610b60565b610b7c565b6370a0823190611c11611bfc30610b88565b92611c05610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d8c57611c48611c43611c7a96602093600091611d5f575b5095610b60565b610b7c565b6370a0823190611c6f611c5a30610b88565b92611c63610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5a57611c9994600091611d2c575b50909192612460565b611cf0575b3390849184611cd6611cd07fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611ceb611ce2610183565b92839283610885565b0390a3565b611d27611d20611d08611d0360096113b8565b610af0565b611d1a611d1560096113df565b610af0565b90610c53565b600c611667565b611c9e565b611d4d915060203d8111611d53575b611d458183610baa565b810190610be8565b38611c90565b503d611d3b565b610c07565b611d7f9150843d8111611d85575b611d778183610baa565b810190610be8565b38611c3c565b503d611d6d565b610c07565b600063749383ad60e01b815280611daa600482016102a9565b0390fd5b5088611dc3611dbd6000610ad4565b91610198565b14611b93565b611dea915060203d8111611df0575b611de28183610baa565b810190610be8565b38611b28565b503d611dd8565b610c07565b611e1d915060203d8111611e23575b611e158183610baa565b810190610be8565b38611acb565b503d611e0b565b610c07565b6000630521f43160e31b815280611e48600482016102a9565b0390fd5b611e6690611e58610b0c565b611e60610b0c565b90611a0a565b9091565b611e7261124e565b50611e7d6004611365565b90565b611e9d91611e8c611454565b50611e9561269c565b919091612789565b600190565b90611eac90610cc6565b600052602052604060002090565b611edf91611ed5611eda92611ecd610b0c565b506001611ea2565b6119d3565b61148f565b90565b611eea612082565b611ef2611efc565b611efa612107565b565b611f4d6020611f1b611f16611f116007610b2b565b610b60565b610b7c565b6370a0823190611f42611f2d30610b88565b92611f36610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204757611fb291600091612019575b506020611f80611f7b611f766008610b2b565b610b60565b610b7c565b6370a0823190611fa7611f9230610b88565b92611f9b610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201457611fe492600091611fe6575b50611fd360096113b8565b90611fde60096113df565b92612460565b565b612007915060203d811161200d575b611fff8183610baa565b810190610be8565b38611fc8565b503d611ff5565b610c07565b61203a915060203d8111612040575b6120328183610baa565b810190610be8565b38611f63565b503d612028565b610c07565b612054611ee2565b565b90565b61206d61206861207292612056565b61094d565b610198565b90565b61207f6002612059565b90565b61208c600561148f565b6120a561209f61209a612075565b610198565b91610198565b146120be576120bc6120b5612075565b6005611667565b565b6000633ee5aeb560e01b8152806120d7600482016102a9565b0390fd5b90565b6120f26120ed6120f7926120db565b61094d565b610198565b90565b61210460016120de565b90565b6121196121126120fa565b6005611667565b565b63ffffffff60e01b1690565b61213b612136612140926103d1565b610bd3565b61211b565b90565b91602061216592949361215e60408201966000830190610523565b019061057b565b565b906121ae6121b39361219f6004949361218663a9059cbb919391612127565b9261218f610183565b9687946020860190815201612143565b60208201810382520383610baa565b612c47565b565b90565b6121cc6121c76121d1926121b5565b61094d565b610198565b90565b6121e06121e691610198565b91610198565b9081156121f1570690565b6115d1565b61220a61220561220f92610198565b61094d565b6103d1565b90565b61221e612224916103d1565b916103d1565b90039063ffffffff821161223457565b610c18565b61224d61224861225292610ad1565b61094d565b6103d1565b90565b61226961226461226e92610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229061228b612295926103b1565b61094d565b612271565b90565b6122a46122aa91612271565b91612271565b9081156122b5570490565b6115d1565b6122ce6122c96122d392612271565b61094d565b610198565b90565b6122ea6122e56122ef926103d1565b61094d565b610198565b90565b61230161230791939293610198565b92610198565b820180921161231257565b610c18565b61232b61232661233092610198565b61094d565b6103b1565b90565b9061234c6dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236a61236561236f926103b1565b61094d565b6103b1565b90565b90565b9061238a61238561239192612356565b612372565b8254612333565b9055565b60701b90565b906123b76dffffffffffffffffffffffffffff60701b91612395565b9181191691161790565b906123d66123d16123dd92612356565b612372565b825461239b565b9055565b906123f363ffffffff60e01b91610bd3565b9181191691161790565b61241161240c612416926103d1565b61094d565b6103d1565b90565b90565b9061243161242c612438926123fd565b612419565b82546123e1565b9055565b91602061245e929493612457604082019660008301906103c4565b01906103c4565b565b90928161248361247d6dffffffffffffffffffffffffffff610af0565b91610198565b11801561266f575b6126525761251f9361250c61250561251894612511946124c16124bc426124b66401000000006121b8565b906121d4565b6121f6565b976124d6896124d06009611409565b90612212565b91826124eb6124e56000612239565b916103d1565b1180612636575b8061261a575b61256e575b505050612317565b6009612375565b612317565b60096123c1565b600961241c565b61252960096113b8565b61253360096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad191612569612560610183565b9283928361243c565b0390a1565b612612926125f66125f06125eb846125e56125df61260b986125da6125d36125c46125b56125b06125a16125fc9e612d5b565b6125aa8761227c565b90612298565b6122ba565b6125be8c6122d6565b90610c53565b6125ce600a61148f565b6122f2565b600a611667565b612d5b565b9161227c565b90612298565b6122ba565b916122d6565b90610c53565b612606600b61148f565b6122f2565b600b611667565b3880806124fd565b508061262f6126296000612255565b916103b1565b14156124f8565b508161264b6126456000612255565b916103b1565b14156124f2565b6000631a93c68960e11b81528061266b600482016102a9565b0390fd5b508361269161268b6dffffffffffffffffffffffffffff610af0565b91610198565b1161248b565b600090565b6126a4612697565b503390565b916126b79291600192612d86565b565b6040906126e36126ea94969593966126d960608401986000850190610523565b602083019061057b565b019061057b565b565b906126f79103610198565b90565b929192612708818390611eba565b908161271e612718600019610198565b91610198565b1061272b575b5050509050565b8161273e61273887610198565b91610198565b106127655761275c93946127539193926126ec565b90600092612d86565b80388080612724565b50612785849291926000938493637dc7a0d960e11b8552600485016126b9565b0390fd5b91826127a66127a061279b6000611625565b6101ca565b916101ca565b1461280357816127c76127c16127bc6000611625565b6101ca565b916101ca565b146127da576127d892919091612ea9565b565b6127ff6127e76000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b6128286128106000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61283590610b38565b90565b6128419061282c565b90565b61284d90610b70565b90565b9050519061285d826101d6565b565b906020828203126128795761287691600001612850565b90565b61018e565b90565b61289561289061289a9261287e565b61094d565b610198565b90565b91906128a7611454565b506128dd60206128c76128c26128bd6006610b2b565b612838565b612844565b63017e7e58906128d5610183565b938492610bd3565b825281806128ed600482016102a9565b03915afa908115612a7d57600091612a4f575b50908161291e6129186129136000611625565b6101ca565b916101ca565b14159361292b600c61148f565b9185600014612a1457826129486129426000610ad4565b91610198565b03612955575b505050505b565b61297761297c9161297161296b61298295610af0565b91610af0565b90610c53565b612ab3565b91612ab3565b908061299661299084610198565b91610198565b116129a2575b8061294e565b6129de6129e4926129d96129c86129b761149c565b6129c2868590610c2e565b90610c53565b936129d36005612881565b90610c53565b6122f2565b906115e7565b806129f86129f26000610ad4565b91610198565b11612a04575b8061299c565b612a0d91612b82565b38806129fe565b50509050612a2b612a256000610ad4565b91610198565b03612a36575b612953565b612a4a612a436000610ad4565b600c611667565b612a31565b612a70915060203d8111612a76575b612a688183610baa565b81019061285f565b38612900565b503d612a5e565b610c07565b90612a8b610b0c565b5081612a9f612a9983610198565b91610198565b10600014612aac57505b90565b9050612aa9565b612abb610b0c565b81612acf612ac96003610c8b565b91610198565b11600014612b50575080612b00612af083612aea6002612059565b906115e7565b612afa60016120de565b906122f2565b905b81612b15612b0f83610198565b91610198565b1015612b495750612b43612b3382612b2e8582906115e7565b6122f2565b612b3d6002612059565b906115e7565b90612b02565b929150505b565b9190612b65612b5f6000610ad4565b91610198565b03612b70575b612b4e565b9050612b7c60016120de565b90612b6b565b80612b9e612b98612b936000611625565b6101ca565b916101ca565b14612bbb57612bb991612bb16000611625565b919091612ea9565b565b612be0612bc86000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c01612bfb612bf66000611625565b6101ca565b916101ca565b14612c1e57612c1c9190612c156000611625565b9091612ea9565b565b612c43612c2b6000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c55610b0c565b50612c5e610b0c565b50828151910182855af115612cf6573d60005190612c85612c7f6000610ad4565b91610198565b14600014612cdc5750612c9781610b7c565b3b612cab612ca56000610ad4565b91610198565b145b612cb45750565b612cc0612cd891610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612cef612ce960016120de565b91610198565b1415612cad565b6040513d6000823e3d90fd5b600090565b90565b612d1e612d19612d2392612d07565b61094d565b612271565b90565b612d35612d3b91939293612271565b92612271565b91612d47838202612271565b928184041490151715612d5657565b610c18565b612d70612d8391612d6a612d02565b5061227c565b612d7d600160701b612d0a565b90612d26565b90565b909281612da4612d9e612d996000611625565b6101ca565b916101ca565b14612e725783612dc5612dbf612dba6000611625565b6101ca565b916101ca565b14612e4957612de983612de4612ddd60018690611ea2565b87906119d3565b611667565b612df3575b505050565b919091612e3e612e2c612e267f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e35610183565b91829182610588565b0390a3388080612dee565b612e6e612e566000611625565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612e97612e7f6000611625565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ea69101610198565b90565b91909180612ec8612ec2612ebd6000611625565b6101ca565b916101ca565b14600014612fad57612eed612ee683612ee1600261148f565b6122f2565b6002611667565b5b82612f0a612f04612eff6000611625565b6101ca565b916101ca565b14600014612f8057612f2f612f2883612f23600261148f565b6126ec565b6002611667565b5b919091612f7b612f69612f637fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f72610183565b91829182610588565b0390a3565b612fa882612fa2612f93600087906119d3565b91612f9d8361148f565b612e9b565b90611667565b612f30565b612fc1612fbc600083906119d3565b61148f565b80612fd4612fce85610198565b91610198565b10612ffd57612fe7612ff89184906126ec565b612ff3600084906119d3565b611667565b612eee565b9061301c909192600093849363391434e360e21b8552600485016126b9565b0390fdfea2646970667358221220646cee990f1e19ff1172eb103aa2f85cdded62859d16fe970fd983953ff88e6164736f6c634300081e0033a26469706673582212207122e94a3a32e16a533f6e429c2a5806337c50ddfbb67ff2149bee453b8802d864736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xAD JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x94B7415 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x96ED28F9 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0x85 JUMPI PUSH4 0xF46901ED SUB PUSH2 0xE JUMPI PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xCE JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x8 PUSH2 0xF7 SWAP4 MUL PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x105 SWAP2 SLOAD PUSH2 0xE2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x0 DUP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x12A SWAP1 PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x14E SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x16B PUSH2 0x108 JUMP JUMPDEST PUSH2 0x173 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x1 PUSH1 0x0 SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1B0 PUSH2 0x185 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1DD JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1EF DUP3 PUSH2 0x1CD JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x20B JUMPI PUSH2 0x208 SWAP2 PUSH1 0x0 ADD PUSH2 0x1E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x259 JUMPI PUSH2 0x250 PUSH1 0x1 SWAP2 PUSH2 0x22A JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x269 DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x286 JUMPI PUSH2 0x283 SWAP2 PUSH2 0x27D SWAP2 PUSH2 0x235 JUMP JUMPDEST SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI PUSH2 0x2B7 PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2AE PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x2C9 SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x313 JUMPI PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x30F PUSH2 0x2FE PUSH2 0x52A JUMP JUMPDEST PUSH2 0x306 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2CD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x328 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x33A DUP3 PUSH2 0x318 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x365 JUMPI DUP1 PUSH2 0x359 PUSH2 0x362 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x32D JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST CALLVALUE PUSH2 0x39B JUMPI PUSH2 0x397 PUSH2 0x386 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x38E PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x3BA JUMPI PUSH2 0x3B7 SWAP2 PUSH1 0x0 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x3DD PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x3EF DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x425 PUSH2 0x414 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x41C PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x440 PUSH2 0x44A SWAP3 PUSH2 0x116 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x456 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x462 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x46F SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x487 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x4B4 SWAP3 PUSH2 0x4AA PUSH1 0x2 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4E8 JUMPI PUSH2 0x4E4 PUSH2 0x4D3 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x51B JUMPI PUSH2 0x505 PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x50D PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x517 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x525 JUMP JUMPDEST POP PUSH2 0x53D PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0x554 SWAP1 PUSH2 0x545 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x560 SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56F PUSH2 0x574 SWAP2 PUSH2 0x121 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x58A PUSH2 0x592 SWAP4 DUP4 SWAP7 SWAP6 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x5C0 SWAP1 PUSH2 0x596 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5FC PUSH2 0x5F5 PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5B6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST PUSH2 0x624 PUSH2 0x61F PUSH2 0x629 SWAP3 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x635 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x647 PUSH2 0x64C SWAP2 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x667 SWAP2 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP3 PUSH2 0x699 PUSH1 0x14 PUSH2 0x6A1 SWAP5 PUSH2 0x691 PUSH1 0x1 DUP9 PUSH2 0x689 PUSH1 0x20 SWAP12 SWAP11 DUP13 SWAP10 PUSH2 0x63B JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x6BA PUSH2 0x6C4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x6D8 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6EF PUSH2 0x6EA PUSH2 0x6F4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x7F2 SWAP3 PUSH2 0x7ED SWAP3 PUSH2 0x70A PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0x71E PUSH2 0x718 DUP5 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x7F5 JUMPI PUSH2 0x751 SWAP1 JUMPDEST PUSH2 0x742 PUSH2 0x736 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x75D DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7D0 PUSH2 0x355D PUSH2 0x776 PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x794 PUSH2 0x78E DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7C1 PUSH2 0x7A2 PUSH1 0xFF PUSH2 0x610 JUMP JUMPDEST SWAP2 PUSH2 0x7AC ADDRESS PUSH2 0x62C JUMP JUMPDEST SWAP5 PUSH2 0x7B5 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x7DC DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x751 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x80B PUSH2 0x810 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x81D SWAP1 SLOAD PUSH2 0x7FF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0x832 PUSH2 0x83C SWAP3 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP1 PUSH2 0x823 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x862 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x84B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x884 PUSH2 0x87F PUSH2 0x88B SWAP3 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x851 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x8AB PUSH2 0x8A5 PUSH2 0x8A0 PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x93B JUMPI DUP1 PUSH2 0x8CC PUSH2 0x8C6 PUSH2 0x8C1 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0x91E JUMPI PUSH2 0x8DC DUP2 PUSH1 0x1 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x906 PUSH32 0x21A5D032B24A495206270942F8C755327F3B27539F23099539FF95E2500B28D SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0x90F PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x919 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x937 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x953 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x960 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x96C SWAP1 PUSH2 0x957 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x978 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x991 JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x9B8 SWAP3 SWAP5 SWAP4 PUSH2 0x9B1 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0xB3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0x9D9 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA01 JUMPI PUSH2 0x9F8 PUSH1 0x1 SWAP2 PUSH2 0x9CE JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0xA2A SWAP2 MUL SWAP2 PUSH2 0xA24 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 PUSH2 0xA06 JUMP JUMPDEST SWAP3 PUSH2 0xA06 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA4A PUSH2 0xA45 PUSH2 0xA52 SWAP4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0xA86 JUMPI DUP3 PUSH2 0xA7E SWAP2 PUSH1 0x1 PUSH2 0xA84 SWAP6 ADD DUP2 SSTORE PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0xA34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xAAD SWAP3 SWAP5 SWAP4 PUSH2 0xAA6 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xABA PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0xACE PUSH2 0xAC8 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD30 JUMPI DUP1 PUSH2 0xAE6 PUSH2 0xAE0 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0xD2A JUMPI JUMPDEST SWAP2 DUP3 PUSH2 0xB0C PUSH2 0xB06 PUSH2 0xB01 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD0D JUMPI PUSH2 0xB2F PUSH2 0xB2A PUSH2 0xB23 PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xB44 PUSH2 0xB3F PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xCF0 JUMPI PUSH2 0x355D PUSH2 0xB5E PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY DUP4 PUSH2 0xB96 DUP4 SWAP2 PUSH2 0xB87 PUSH2 0xB7B PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0xBA8 PUSH2 0xBA2 DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 SWAP1 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD PUSH1 0x0 CREATE2 SWAP3 PUSH2 0xBC5 PUSH2 0xBC0 DUP6 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH4 0x485CC955 DUP3 DUP5 SWAP3 DUP1 EXTCODESIZE ISZERO PUSH2 0xCEB JUMPI PUSH2 0xBF2 PUSH1 0x0 DUP1 SWAP5 PUSH2 0xBFD PUSH2 0xBE6 PUSH2 0xB3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x980 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x996 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCB9 JUMPI JUMPDEST POP PUSH2 0xC2C DUP5 PUSH2 0xC27 PUSH2 0xC20 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC4B DUP5 PUSH2 0xC46 PUSH2 0xC3F PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC5F PUSH2 0xC58 PUSH1 0x3 PUSH2 0x9CB JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 DUP4 SWAP2 PUSH2 0xC6C PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC99 PUSH32 0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9 SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0xCB4 PUSH2 0xCAB PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xA8B JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xCD9 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0xCDF JUMPI JUMPDEST PUSH2 0xCD1 DUP2 DUP4 PUSH2 0x5B6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x986 JUMP JUMPDEST CODESIZE PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC9BB25EB PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD09 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD26 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5C6D7B73 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD49 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xD69 PUSH2 0xD63 PUSH2 0xD5E PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xDBB JUMPI PUSH2 0xD79 DUP2 PUSH1 0x0 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xDA3 PUSH32 0x9887DF018DFA75103FAF0F1388028E55A1124783C285D8D2CBCF62A067A6B844 SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0xDAC PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0xDB6 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0xDD3 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x27 JUMPI PUSH2 0x11 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x19 PUSH2 0x2C JUMP JUMPDEST PUSH2 0x3056 PUSH2 0x507 DUP3 CODECOPY PUSH2 0x3056 SWAP1 RETURN JUMPDEST PUSH2 0x32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x61 SWAP1 PUSH2 0x37 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x91 PUSH2 0x8A PUSH2 0x2C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x57 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAF JUMPI PUSH2 0xAB PUSH1 0x20 SWAP2 PUSH2 0x37 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0xC6 PUSH2 0xC1 DUP4 PUSH2 0x93 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x444558204C5020546F6B656E0000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xFD PUSH1 0xC PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x10A PUSH1 0x20 DUP4 ADD PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114 PUSH2 0xF3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4445582D4C500000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x149 PUSH1 0x6 PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x156 PUSH1 0x20 DUP4 ADD PUSH2 0x117 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 PUSH2 0x1AB SWAP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B7 SWAP1 PUSH2 0x192 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C3 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D9 PUSH2 0x1E5 SWAP3 PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1F4 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x158 JUMP JUMPDEST SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x20D CALLER PUSH1 0x6 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 PUSH2 0x22E SWAP3 PUSH2 0x20F JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x1 PUSH2 0x215 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24B PUSH1 0x0 NOT SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 PUSH2 0x26E SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x289 PUSH2 0x284 PUSH2 0x290 SWAP3 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x29E SWAP2 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2A9 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x274 JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2E7 JUMPI JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x32B SWAP2 MUL SWAP2 PUSH2 0x325 PUSH1 0x0 NOT DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x30B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x34B PUSH2 0x346 PUSH2 0x353 SWAP4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x30F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x36E SWAP2 PUSH2 0x368 PUSH2 0x357 JUMP JUMPDEST SWAP2 PUSH2 0x335 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x38A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x35C JUMP JUMPDEST ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3A0 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3D1 SWAP4 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3B8 DUP5 PUSH2 0x301 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x3D9 JUMPI JUMPDEST PUSH2 0x3CA SWAP1 PUSH2 0x301 JUMP JUMPDEST ADD SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA DUP2 SWAP3 SWAP1 POP PUSH2 0x3C1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3FC SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x40B SWAP2 PUSH2 0x3EB JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x41D DUP2 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4DD JUMPI PUSH2 0x43F DUP3 PUSH2 0x439 DUP6 SLOAD PUSH2 0x2CC JUMP JUMPDEST DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x474 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x463 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x401 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x483 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4BB SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x3EB JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x49F JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x487 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x4EC SWAP2 PUSH2 0x413 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x4FD PUSH2 0x504 SWAP3 PUSH1 0x3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E4C JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x204C JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x269C JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x161D PUSH2 0x1618 PUSH2 0x1622 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x162E SWAP1 PUSH2 0x1609 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x163E PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165C PUSH2 0x1657 PUSH2 0x1661 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167C PUSH2 0x1677 PUSH2 0x1683 SWAP3 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1631 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A6 PUSH2 0x16A0 PUSH2 0x169B ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A2 JUMPI PUSH2 0x16B3 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x1709 PUSH1 0x20 PUSH2 0x16D7 PUSH2 0x16D2 PUSH2 0x16CD PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x16FE PUSH2 0x16E9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F2 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x196F JUMPI JUMPDEST POP SWAP4 PUSH2 0x176F PUSH1 0x20 PUSH2 0x173D PUSH2 0x1738 PUSH2 0x1733 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1764 PUSH2 0x174F ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1758 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x193C JUMPI JUMPDEST POP SWAP2 PUSH2 0x1797 DUP7 PUSH2 0x1791 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AB DUP2 PUSH2 0x17A5 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17B7 DUP5 DUP3 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP4 PUSH2 0x17C0 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D4 PUSH2 0x17CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F3 JUMPI POP PUSH2 0x1801 PUSH2 0x17F3 PUSH2 0x17EE DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x181D PUSH2 0x180F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1817 PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2B82 JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1832 PUSH2 0x182C PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18D6 JUMPI PUSH2 0x1845 PUSH2 0x184E SWAP6 DUP12 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x189A JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1880 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1895 PUSH2 0x188C PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x18CA PUSH2 0x18B2 PUSH2 0x18AD PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C4 PUSH2 0x18BF PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18EF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1936 SWAP1 PUSH2 0x1930 PUSH2 0x1921 PUSH2 0x191A PUSH2 0x190B DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1914 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192A DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2A82 JUMP JUMPDEST SWAP9 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x195D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1963 JUMPI JUMPDEST PUSH2 0x1955 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1782 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1990 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1996 JUMPI JUMPDEST PUSH2 0x1988 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x197E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D0 SWAP1 PUSH2 0x19CB PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19DD SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A02 PUSH2 0x1A07 SWAP2 PUSH2 0x19FA PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A1D SWAP3 SWAP2 PUSH2 0x1A18 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1A29 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A27 PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A49 PUSH2 0x1A43 PUSH2 0x1A3E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E2F JUMPI PUSH2 0x1A56 PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A65 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A6F PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1AB8 PUSH1 0x20 PUSH2 0x1A86 PUSH2 0x1A81 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AAD PUSH2 0x1A98 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA1 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DFC JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B15 PUSH1 0x20 PUSH2 0x1AE3 PUSH2 0x1ADE DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0A PUSH2 0x1AF5 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AFE PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DF7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DC9 JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3B PUSH2 0x1B36 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP7 PUSH2 0x1B76 PUSH2 0x1B4A DUP3 DUP5 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP6 PUSH2 0x1B71 PUSH2 0x1B6A PUSH2 0x1B63 PUSH2 0x1B5C PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8B PUSH2 0x1B85 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DAE JUMPI JUMPDEST PUSH2 0x1D91 JUMPI PUSH2 0x1BEA PUSH2 0x1BE5 PUSH2 0x1C1C SWAP7 PUSH2 0x1BB5 PUSH1 0x20 SWAP5 PUSH2 0x1BB0 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x1BCB DUP14 PUSH2 0x1BC2 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1BE0 PUSH2 0x1BD7 DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C11 PUSH2 0x1BFC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C05 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1C48 PUSH2 0x1C43 PUSH2 0x1C7A SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D5F JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C6F PUSH2 0x1C5A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C63 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1C99 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D2C JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1CF0 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CD6 PUSH2 0x1CD0 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEB PUSH2 0x1CE2 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D27 PUSH2 0x1D20 PUSH2 0x1D08 PUSH2 0x1D03 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x1D15 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1D4D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D53 JUMPI JUMPDEST PUSH2 0x1D45 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C90 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D7F SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D85 JUMPI JUMPDEST PUSH2 0x1D77 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C3C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAA PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC3 PUSH2 0x1DBD PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1DEA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF0 JUMPI JUMPDEST PUSH2 0x1DE2 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B28 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DD8 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E23 JUMPI JUMPDEST PUSH2 0x1E15 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E48 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E66 SWAP1 PUSH2 0x1E58 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E60 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0A JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E72 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E7D PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E9D SWAP2 PUSH2 0x1E8C PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E95 PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EAC SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EDF SWAP2 PUSH2 0x1ED5 PUSH2 0x1EDA SWAP3 PUSH2 0x1ECD PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA2 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEA PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1EF2 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1EFA PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F4D PUSH1 0x20 PUSH2 0x1F1B PUSH2 0x1F16 PUSH2 0x1F11 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F42 PUSH2 0x1F2D ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F36 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2047 JUMPI PUSH2 0x1FB2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2019 JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F80 PUSH2 0x1F7B PUSH2 0x1F76 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FA7 PUSH2 0x1F92 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9B PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2014 JUMPI PUSH2 0x1FE4 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FE6 JUMPI JUMPDEST POP PUSH2 0x1FD3 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FDE PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2460 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2007 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x200D JUMPI JUMPDEST PUSH2 0x1FFF DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FC8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF5 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203A SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2040 JUMPI JUMPDEST PUSH2 0x2032 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F63 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2028 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2054 PUSH2 0x1EE2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x206D PUSH2 0x2068 PUSH2 0x2072 SWAP3 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A5 PUSH2 0x209F PUSH2 0x209A PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20BE JUMPI PUSH2 0x20BC PUSH2 0x20B5 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20D7 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F2 PUSH2 0x20ED PUSH2 0x20F7 SWAP3 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2104 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2119 PUSH2 0x2112 PUSH2 0x20FA JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213B PUSH2 0x2136 PUSH2 0x2140 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2165 SWAP3 SWAP5 SWAP4 PUSH2 0x215E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21AE PUSH2 0x21B3 SWAP4 PUSH2 0x219F PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x2186 PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x2127 JUMP JUMPDEST SWAP3 PUSH2 0x218F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C47 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21CC PUSH2 0x21C7 PUSH2 0x21D1 SWAP3 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E0 PUSH2 0x21E6 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F1 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220A PUSH2 0x2205 PUSH2 0x220F SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x221E PUSH2 0x2224 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2234 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x224D PUSH2 0x2248 PUSH2 0x2252 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2269 PUSH2 0x2264 PUSH2 0x226E SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2290 PUSH2 0x228B PUSH2 0x2295 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A4 PUSH2 0x22AA SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B5 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22CE PUSH2 0x22C9 PUSH2 0x22D3 SWAP3 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EA PUSH2 0x22E5 PUSH2 0x22EF SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2301 PUSH2 0x2307 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2312 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232B PUSH2 0x2326 PUSH2 0x2330 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x234C PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236A PUSH2 0x2365 PUSH2 0x236F SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238A PUSH2 0x2385 PUSH2 0x2391 SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2333 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23B7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2395 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23D6 PUSH2 0x23D1 PUSH2 0x23DD SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239B JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2411 PUSH2 0x240C PUSH2 0x2416 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2431 PUSH2 0x242C PUSH2 0x2438 SWAP3 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2419 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x245E SWAP3 SWAP5 SWAP4 PUSH2 0x2457 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2483 PUSH2 0x247D PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x266F JUMPI JUMPDEST PUSH2 0x2652 JUMPI PUSH2 0x251F SWAP4 PUSH2 0x250C PUSH2 0x2505 PUSH2 0x2518 SWAP5 PUSH2 0x2511 SWAP5 PUSH2 0x24C1 PUSH2 0x24BC TIMESTAMP PUSH2 0x24B6 PUSH5 0x100000000 PUSH2 0x21B8 JUMP JUMPDEST SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x21F6 JUMP JUMPDEST SWAP8 PUSH2 0x24D6 DUP10 PUSH2 0x24D0 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2212 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EB PUSH2 0x24E5 PUSH1 0x0 PUSH2 0x2239 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x2636 JUMPI JUMPDEST DUP1 PUSH2 0x261A JUMPI JUMPDEST PUSH2 0x256E JUMPI JUMPDEST POP POP POP PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2529 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2533 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x2569 PUSH2 0x2560 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x243C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2612 SWAP3 PUSH2 0x25F6 PUSH2 0x25F0 PUSH2 0x25EB DUP5 PUSH2 0x25E5 PUSH2 0x25DF PUSH2 0x260B SWAP9 PUSH2 0x25DA PUSH2 0x25D3 PUSH2 0x25C4 PUSH2 0x25B5 PUSH2 0x25B0 PUSH2 0x25A1 PUSH2 0x25FC SWAP15 PUSH2 0x2D5B JUMP JUMPDEST PUSH2 0x25AA DUP8 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x25BE DUP13 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2D5B JUMP JUMPDEST SWAP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST SWAP2 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2606 PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1667 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x24FD JUMP JUMPDEST POP DUP1 PUSH2 0x262F PUSH2 0x2629 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F8 JUMP JUMPDEST POP DUP2 PUSH2 0x264B PUSH2 0x2645 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266B PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2691 PUSH2 0x268B PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248B JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A4 PUSH2 0x2697 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26B7 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E3 PUSH2 0x26EA SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26D9 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26F7 SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2708 DUP2 DUP4 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x271E PUSH2 0x2718 PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272B JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x273E PUSH2 0x2738 DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2765 JUMPI PUSH2 0x275C SWAP4 SWAP5 PUSH2 0x2753 SWAP2 SWAP4 SWAP3 PUSH2 0x26EC JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2724 JUMP JUMPDEST POP PUSH2 0x2785 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x27A6 PUSH2 0x27A0 PUSH2 0x279B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2803 JUMPI DUP2 PUSH2 0x27C7 PUSH2 0x27C1 PUSH2 0x27BC PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x27DA JUMPI PUSH2 0x27D8 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27FF PUSH2 0x27E7 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2828 PUSH2 0x2810 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2835 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2841 SWAP1 PUSH2 0x282C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x284D SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x285D DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2879 JUMPI PUSH2 0x2876 SWAP2 PUSH1 0x0 ADD PUSH2 0x2850 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2895 PUSH2 0x2890 PUSH2 0x289A SWAP3 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28A7 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x28DD PUSH1 0x20 PUSH2 0x28C7 PUSH2 0x28C2 PUSH2 0x28BD PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x2844 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x28D5 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x28ED PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A7D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A4F JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x291E PUSH2 0x2918 PUSH2 0x2913 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x292B PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A14 JUMPI DUP3 PUSH2 0x2948 PUSH2 0x2942 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2955 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x2977 PUSH2 0x297C SWAP2 PUSH2 0x2971 PUSH2 0x296B PUSH2 0x2982 SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST SWAP2 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x2996 PUSH2 0x2990 DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29A2 JUMPI JUMPDEST DUP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0x29DE PUSH2 0x29E4 SWAP3 PUSH2 0x29D9 PUSH2 0x29C8 PUSH2 0x29B7 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29C2 DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29D3 PUSH1 0x5 PUSH2 0x2881 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x29F8 PUSH2 0x29F2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A04 JUMPI JUMPDEST DUP1 PUSH2 0x299C JUMP JUMPDEST PUSH2 0x2A0D SWAP2 PUSH2 0x2B82 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x29FE JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A2B PUSH2 0x2A25 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A36 JUMPI JUMPDEST PUSH2 0x2953 JUMP JUMPDEST PUSH2 0x2A4A PUSH2 0x2A43 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2A70 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2A76 JUMPI JUMPDEST PUSH2 0x2A68 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x285F JUMP JUMPDEST CODESIZE PUSH2 0x2900 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2A8B PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2A9F PUSH2 0x2A99 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AAC JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2ABB PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2ACF PUSH2 0x2AC9 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B50 JUMPI POP DUP1 PUSH2 0x2B00 PUSH2 0x2AF0 DUP4 PUSH2 0x2AEA PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2AFA PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B15 PUSH2 0x2B0F DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B49 JUMPI POP PUSH2 0x2B43 PUSH2 0x2B33 DUP3 PUSH2 0x2B2E DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B65 PUSH2 0x2B5F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B70 JUMPI JUMPDEST PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x2B7C PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x2B6B JUMP JUMPDEST DUP1 PUSH2 0x2B9E PUSH2 0x2B98 PUSH2 0x2B93 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BBB JUMPI PUSH2 0x2BB9 SWAP2 PUSH2 0x2BB1 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2BE0 PUSH2 0x2BC8 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C01 PUSH2 0x2BFB PUSH2 0x2BF6 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C1E JUMPI PUSH2 0x2C1C SWAP2 SWAP1 PUSH2 0x2C15 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C43 PUSH2 0x2C2B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C55 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C5E PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2CF6 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2C85 PUSH2 0x2C7F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2CDC JUMPI POP PUSH2 0x2C97 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CAB PUSH2 0x2CA5 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CB4 JUMPI POP JUMP JUMPDEST PUSH2 0x2CC0 PUSH2 0x2CD8 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CEF PUSH2 0x2CE9 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D1E PUSH2 0x2D19 PUSH2 0x2D23 SWAP3 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D35 PUSH2 0x2D3B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2271 JUMP JUMPDEST SWAP3 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2D47 DUP4 DUP3 MUL PUSH2 0x2271 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D56 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D70 PUSH2 0x2D83 SWAP2 PUSH2 0x2D6A PUSH2 0x2D02 JUMP JUMPDEST POP PUSH2 0x227C JUMP JUMPDEST PUSH2 0x2D7D PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D0A JUMP JUMPDEST SWAP1 PUSH2 0x2D26 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DA4 PUSH2 0x2D9E PUSH2 0x2D99 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E72 JUMPI DUP4 PUSH2 0x2DC5 PUSH2 0x2DBF PUSH2 0x2DBA PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E49 JUMPI PUSH2 0x2DE9 DUP4 PUSH2 0x2DE4 PUSH2 0x2DDD PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA2 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2DF3 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E3E PUSH2 0x2E2C PUSH2 0x2E26 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E35 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2DEE JUMP JUMPDEST PUSH2 0x2E6E PUSH2 0x2E56 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E97 PUSH2 0x2E7F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2EA6 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EC8 PUSH2 0x2EC2 PUSH2 0x2EBD PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAD JUMPI PUSH2 0x2EED PUSH2 0x2EE6 DUP4 PUSH2 0x2EE1 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F0A PUSH2 0x2F04 PUSH2 0x2EFF PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2F80 JUMPI PUSH2 0x2F2F PUSH2 0x2F28 DUP4 PUSH2 0x2F23 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26EC JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2F7B PUSH2 0x2F69 PUSH2 0x2F63 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F72 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FA8 DUP3 PUSH2 0x2FA2 PUSH2 0x2F93 PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP2 PUSH2 0x2F9D DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2E9B JUMP JUMPDEST SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x2FC1 PUSH2 0x2FBC PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x2FD4 PUSH2 0x2FCE DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2FFD JUMPI PUSH2 0x2FE7 PUSH2 0x2FF8 SWAP2 DUP5 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x2FF3 PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2EEE JUMP JUMPDEST SWAP1 PUSH2 0x301C SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x6CEE990F1E NOT SELFDESTRUCT GT PUSH19 0xEB103AA2F85CDDED62859D16FE970FD983953F EXTCALL DUP15 PUSH2 0x6473 PUSH16 0x6C634300081E0033A264697066735822 SLT KECCAK256 PUSH18 0x22E94A3A32E16A533F6E429C2A5806337C50 0xDD EXTSTATICCALL 0xB6 PUSH32 0xF2149BEE453B8802D864736F6C634300081E0033000000000000000000000000 ",
              "sourceMap": "278:5259:12:-:0;;;;;;;;;-1:-1:-1;278:5259:12;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;363:20::-;;;;;:::i;:::-;;:::o;278:5259::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;455:26::-;;;;;;:::i;:::-;;:::o;278:5259::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;705:25::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;;;278:5259;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;576:62::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;278:5259::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;2404:97::-;2453:7;;:::i;:::-;2479:8;:15;:8;:15;:::i;:::-;2472:22;:::o;278:5259::-;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;4984:551::-;5383:143;5367:161;4984:551;5375:152;4984:551;5056:12;;:::i;:::-;5115:6;;:15;;5124:6;5115:15;:::i;:::-;;;:::i;:::-;;:79;;;;5238:32;5147:6;5115:79;5238:32;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;5228:43;;;;:::i;:::-;;;:::i;:::-;;5401:123;5314:26;;;;;;:::i;:::-;;;;;;;;;;5304:37;;;;:::i;:::-;;;:::i;:::-;;5401:123;5431:12;5438:4;5431:12;:::i;:::-;5465:4;5457:13;5465:4;5457:13;:::i;:::-;5484:4;5401:123;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;5391:134;;;;:::i;:::-;;;:::i;:::-;;5383:143;:::i;:::-;5375:152;:::i;:::-;5367:161;:::i;:::-;4984:551;:::o;5115:79::-;5179:6;5238:32;5179:6;5115:79;;278:5259;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4451:269::-;4520:10;:25;;4534:11;;;:::i;:::-;4520:25;:::i;:::-;;;:::i;:::-;;4516:52;;4582:12;:26;;4598:10;4606:1;4598:10;:::i;:::-;4582:26;:::i;:::-;;;:::i;:::-;;4578:52;;4640:26;4654:12;4640:26;;:::i;:::-;4681:32;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;4451:269::o;4578:52::-;4617:13;;;;;;;;;;;;:::i;:::-;;;;4516:52;4554:14;;;;;;;;;;;;:::i;:::-;;;;278:5259;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;2746:1290::-;;;;2816:12;;:::i;:::-;2889:6;;:16;;2899:6;2889:16;:::i;:::-;;;:::i;:::-;;2885:46;;3072:6;:15;;3081:6;3072:15;:::i;:::-;;;:::i;:::-;;:79;;;;;3037:114;3219:6;:20;;3229:10;3237:1;3229:10;:::i;:::-;3219:20;:::i;:::-;;;:::i;:::-;;3215:46;;3317:23;;:15;:7;3325:6;3317:15;;:::i;:::-;3333:6;3317:23;;:::i;:::-;;:::i;:::-;:37;;3344:10;3352:1;3344:10;:::i;:::-;3317:37;:::i;:::-;;;:::i;:::-;;3313:69;;3470:26;;;;;;:::i;:::-;;;;;;;;;;3548:6;3531:32;3556:6;3531:32;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3521:43;;;;:::i;:::-;;;:::i;:::-;;3583:93;;;;;;;;3732:4;3724:24;:13;3732:4;3724:13;:::i;:::-;:24;:::i;:::-;;3749:6;3757;3724:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;3072:79;3845:4;3819:30;3845:4;3819:23;:15;:7;3827:6;3819:15;;:::i;:::-;3835:6;3819:23;;:::i;:::-;:30;:::i;:::-;3859;3885:4;3859:23;:15;:7;3867:6;3859:15;;:::i;:::-;3875:6;3859:23;;:::i;:::-;:30;:::i;:::-;3936:19;:13;:8;:13;:::i;:::-;3950:4;3936:19;;:::i;:::-;3999:6;4007:4;4013:8;:15;:8;:15;:::i;:::-;3979:50;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2746:1290::o;3724:40::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;3313:69::-;3363:19;;;;;;;;;;;;:::i;:::-;;;;3215:46;3248:13;4617;;;3248;;;;;;;;:::i;:::-;;;;3072:79;;;;2885:46;2914:17;;;;;;;;;;;;:::i;:::-;;;;4149:171;4206:10;:25;;4220:11;;;:::i;:::-;4206:25;:::i;:::-;;;:::i;:::-;;4202:52;;4264:14;4272:6;4264:14;;:::i;:::-;4293:20;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;4149:171::o;4202:52::-;4240:14;4554;;;4240;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "pairFor(address,address)": "96ed28f9",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IdenticalTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PairAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeToSetter\",\"type\":\"address\"}],\"name\":\"FeeToSetterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeTo\",\"type\":\"address\"}],\"name\":\"FeeToUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairLength\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"pairFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u306e\\u4f5c\\u6210\\u3068\\u7ba1\\u7406\\u3092\\u884c\\u3046\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"errors\":{\"IdenticalTokens()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u540c\\u4e00\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u306e\\u4f5c\\u6210\"}],\"PairAlreadyExists()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u65e2\\u306b\\u5b58\\u5728\\u3059\\u308b\\u30da\\u30a2\"}],\"Unauthorized()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u6a29\\u9650\\u306a\\u3057\"}],\"ZeroAddress()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u30bc\\u30ed\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u6307\\u5b9a\"}]},\"events\":{\"FeeToSetterUpdated(address)\":{\"details\":\"feeToSetter\\u8a2d\\u5b9a\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"newFeeToSetter\":\"\\u65b0\\u3057\\u3044feeToSetter\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"FeeToUpdated(address)\":{\"details\":\"feeTo\\u8a2d\\u5b9a\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"newFeeTo\":\"\\u65b0\\u3057\\u3044feeTo\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"PairCreated(address,address,address,uint256)\":{\"details\":\"\\u30da\\u30a2\\u4f5c\\u6210\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"pair\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\",\"pairLength\":\"\\u73fe\\u5728\\u306e\\u30da\\u30a2\\u7dcf\\u6570\",\"token0\":\"\\u30da\\u30a2\\u306e\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\\uff08\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u5c0f\\u3055\\u3044\\u65b9\\uff09\",\"token1\":\"\\u30da\\u30a2\\u306e\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\\uff08\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u5927\\u304d\\u3044\\u65b9\\uff09\"}}},\"kind\":\"dev\",\"methods\":{\"allPairsLength()\":{\"details\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u7dcf\\u6570\\u3092\\u53d6\\u5f97\",\"returns\":{\"_0\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u7dcf\\u6570\"}},\"constructor\":{\"details\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\",\"params\":{\"_feeToSetter\":\"feeToSetter\\u306e\\u521d\\u671f\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"createPair(address,address)\":{\"details\":\"\\u65b0\\u3057\\u3044\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u3092\\u4f5c\\u6210\",\"params\":{\"tokenA\":\"\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenB\":\"\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"pair\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"pairFor(address,address)\":{\"details\":\"\\u7279\\u5b9a\\u306e\\u30da\\u30a2\\u30a2\\u30c9\\u30ec\\u30b9\\u3092\\u8a08\\u7b97\\uff08CREATE2\\u3092\\u4f7f\\u7528\\uff09\",\"params\":{\"tokenA\":\"\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenB\":\"\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"pair\":\"\\u8a08\\u7b97\\u3055\\u308c\\u305f\\u30da\\u30a2\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"setFeeTo(address)\":{\"details\":\"feeTo\\u30a2\\u30c9\\u30ec\\u30b9\\u3092\\u8a2d\\u5b9a\",\"params\":{\"_feeTo\":\"\\u65b0\\u3057\\u3044feeTo\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"setFeeToSetter(address)\":{\"details\":\"feeToSetter\\u30a2\\u30c9\\u30ec\\u30b9\\u3092\\u8a2d\\u5b9a\",\"params\":{\"_feeToSetter\":\"\\u65b0\\u3057\\u3044feeToSetter\\u30a2\\u30c9\\u30ec\\u30b9\"}}},\"stateVariables\":{\"allPairs\":{\"details\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\\u4e00\\u89a7\"},\"feeTo\":{\"details\":\"\\u30da\\u30a2\\u4f5c\\u6210\\u624b\\u6570\\u6599\\u306e\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"},\"feeToSetter\":{\"details\":\"feeTo\\u3092\\u8a2d\\u5b9a\\u3059\\u308b\\u6a29\\u9650\\u3092\\u6301\\u3064\\u30a2\\u30c9\\u30ec\\u30b9\"},\"getPair\":{\"details\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u306e\\u30de\\u30c3\\u30d4\\u30f3\\u30b0 (token0 => token1 => pairAddress)\"}},\"title\":\"DexFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Uniswap V2\\u306e\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30d1\\u30bf\\u30fc\\u30f3\\u306b\\u57fa\\u3065\\u3044\\u305f\\u5b9f\\u88c5\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexFactory.sol\":\"DexFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DexFactory.sol\":{\"keccak256\":\"0x5090843192b30d8f7e7738f2d16b5dc601f22fc727ec771948656cc15093301a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e78dfd31644a66afdeb8dc300ed55d19a57210c9eefc8027f2b0c62ef4f597f\",\"dweb:/ipfs/QmavsZcoectat12P1USa4BwpYSMeqrrWa7BygaqGofLhgH\"]},\"contracts/DexPair.sol\":{\"keccak256\":\"0x7e731405f3fbfab11257dade15de5b4c2f43af63f6fcdf81673f13839e9c698c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01038134e037d1ad71a2d51a37fe1c79ac4ed84bdaff48c5791270e27b8f36b\",\"dweb:/ipfs/QmS2UaMd3hbjSxi2MDfmcovEb1GEJxUWiZ4RQmSnztbCh9\"]}},\"version\":1}"
        }
      },
      "contracts/DexPair.sol": {
        "DexPair": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientInputAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientLiquidity",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientLiquidityBurned",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientOutputAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidK",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidTo",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Overflow",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "_reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "_reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "_blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token1",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 126,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_string": {
                  "entryPoint": 180,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 44,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 147,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 758,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 690,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 912,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_rational_by": {
                  "entryPoint": 527,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 388,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 530,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_bytes1": {
                  "entryPoint": 880,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 561,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constructor_DexPair": {
                  "entryPoint": 489,
                  "id": 2020,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "constructor_ERC20": {
                  "entryPoint": 1262,
                  "id": 426,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constructor_ReentrancyGuard": {
                  "entryPoint": 660,
                  "id": 1509,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 442,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 533,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_stringliteral_03cd_to_string": {
                  "entryPoint": 268,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_stringliteral_488d_to_string": {
                  "entryPoint": 344,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 430,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 402,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 597,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_byte_array_to_storage_from_string_to_string": {
                  "entryPoint": 1043,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_literal_to_memory_03cdc1b3942c53ee9c2070aaa3b60e6c18aae77653867f02fd9cd306602f7236": {
                  "entryPoint": 243,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_literal_to_memory_488dd486e3807b8e6ac07ed38226df40be52111460590ebc3909eadd7ae3bb67": {
                  "entryPoint": 319,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "divide_by_ceil": {
                  "entryPoint": 769,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 716,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": 1025,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 87,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 399,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mask_bytes_dynamic": {
                  "entryPoint": 1003,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x22": {
                  "entryPoint": 694,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 65,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 454,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 625,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 50,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 55,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 355,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 779,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 999,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_uint256": {
                  "entryPoint": 860,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "store_literal_in_memory_03cdc1b3942c53ee9c2070aaa3b60e6c18aae77653867f02fd9cd306602f7236": {
                  "entryPoint": 203,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_488dd486e3807b8e6ac07ed38226df40be52111460590ebc3909eadd7ae3bb67": {
                  "entryPoint": 279,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 783,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 574,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 361,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 457,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_string_to_string": {
                  "entryPoint": 1250,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 628,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 821,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 855,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234610027576100116101e9565b61001961002c565b613056610507823961305690f35b610032565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061006190610037565b810190811060018060401b0382111761007957604052565b610041565b9061009161008a61002c565b9283610057565b565b60018060401b0381116100af576100ab602091610037565b0190565b610041565b906100c66100c183610093565b61007e565b918252565b60007f444558204c5020546f6b656e0000000000000000000000000000000000000000910152565b6100fd600c6100b4565b9061010a602083016100cb565b565b6101146100f3565b90565b60007f4445582d4c500000000000000000000000000000000000000000000000000000910152565b61014960066100b4565b9061015660208301610117565b565b61016061013f565b90565b60001b90565b9061017a60018060a01b0391610163565b9181191691161790565b60018060a01b031690565b90565b6101a66101a16101ab92610184565b61018f565b610184565b90565b6101b790610192565b90565b6101c3906101ae565b90565b90565b906101de6101d96101e5926101ba565b6101c6565b8254610169565b9055565b6102026101f461010c565b6101fc610158565b90610294565b61020d3360066101c9565b565b90565b90565b61022961022461022e9261020f565b61018f565b610212565b90565b61023b6001610215565b90565b9061024b60001991610163565b9181191691161790565b61026961026461026e92610212565b61018f565b610212565b90565b90565b9061028961028461029092610255565b610271565b825461023e565b9055565b9061029e916104ee565b6102b06102a9610231565b6005610274565b565b5190565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156102ec575b60208310146102e757565b6102b6565b91607f16916102dc565b600052602060002090565b601f602091010490565b1b90565b9190600861032b9102916103256000198461030b565b9261030b565b9181191691161790565b919061034b61034661035393610255565b610271565b90835461030f565b9055565b600090565b61036e91610368610357565b91610335565b565b5b81811061037c575050565b8061038a600060019361035c565b01610371565b9190601f81116103a0575b505050565b6103ac6103d1936102f6565b9060206103b884610301565b830193106103d9575b6103ca90610301565b0190610370565b38808061039b565b91506103ca819290506103c1565b1c90565b906103fc90600019906008026103e7565b191690565b8161040b916103eb565b906002021790565b9061041d816102b2565b9060018060401b0382116104dd5761043f8261043985546102cc565b85610390565b602090601f83116001146104745791809161046393600092610468575b5050610401565b90555b565b9091500151388061045c565b601f19831691610483856102f6565b9260005b8181106104c5575091600293918560019694106104ab575b50505002019055610466565b6104bb910151601f8416906103eb565b905538808061049f565b91936020600181928787015181550195019201610487565b610041565b906104ec91610413565b565b906104fd6105049260036104e2565b60046104e2565b56fe60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119bf565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119eb565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e4c565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6a565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e80565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611eba565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a9261204c565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612082565b610d11565b610acf612107565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612460565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b919091612167565b8d8d610dee565b6111938d61118b86610b60565b908d91612167565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e61269c565b9190916126a9565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb61269c565b829084916126fa565b919091612789565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612082565b611687565b906115cf612107565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b61161d61161861162292610ad1565b61094d565b6101bf565b90565b61162e90611609565b90565b9061163e6000199161151b565b9181191691161790565b61165c61165761166192610198565b61094d565b610198565b90565b90565b9061167c61167761168392611648565b611664565b8254611631565b9055565b91909150816116a66116a061169b30610b88565b6101ca565b916101ca565b146119a2576116b3611416565b509290929061170960206116d76116d26116cd6007610b2b565b610b60565b610b7c565b6370a08231906116fe6116e930610b88565b926116f2610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561199d5760009161196f575b509361176f602061173d6117386117336008610b2b565b610b60565b610b7c565b6370a082319061176461174f30610b88565b92611758610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196a5760009161193c575b50916117978661179184610af0565b90610c2e565b926117ab816117a587610af0565b90610c2e565b946117b784829061289d565b936117c061149c565b806117d46117ce6000610ad4565b91610198565b146000146118f357506118016117f36117ee888a90610c53565b612ab3565b6117fb61096c565b90610c2e565b9861181d61180f6000611625565b61181761096c565b90612b82565b5b8961183261182c6000610ad4565b91610198565b146118d65761184561184e958b90612b82565b92909192612460565b61189a575b3390916118807f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b9261189561188c610183565b92839283610885565b0390a2565b6118d16118ca6118b26118ad60096113b8565b610af0565b6118c46118bf60096113df565b610af0565b90610c53565b600c611667565b611853565b600063bb55fd2760e01b8152806118ef600482016102a9565b0390fd5b6119369061193061192161191a61190b8b8590610c53565b61191487610af0565b906115e7565b928b610c53565b61192a86610af0565b906115e7565b90612a82565b9861181e565b61195d915060203d8111611963575b6119558183610baa565b810190610be8565b38611782565b503d61194b565b610c07565b611990915060203d8111611996575b6119888183610baa565b810190610be8565b3861171c565b503d61197e565b610c07565b6000630521f43160e31b8152806119bb600482016102a9565b0390fd5b6119d0906119cb610b0c565b6115b4565b90565b906119dd90610cc6565b600052602052604060002090565b611a02611a07916119fa610b0c565b5060006119d3565b61148f565b90565b90611a1d9291611a18612082565b611a29565b9091611a27612107565b565b929192505081611a49611a43611a3e30610b88565b6101ca565b916101ca565b14611e2f57611a56611416565b5091909192611a656007610b2b565b611a6f6008610b2b565b90611ab86020611a86611a8184610b60565b610b7c565b6370a0823190611aad611a9830610b88565b92611aa1610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2a57600091611dfc575b5091611b156020611ae3611ade84610b60565b610b7c565b6370a0823190611b0a611af530610b88565b92611afe610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611df757600091611dc9575b5096611b3b611b3630610b88565b6119eb565b96611b76611b4a82849061289d565b95611b71611b6a611b63611b5c61149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8b611b856000610ad4565b91610198565b148015611dae575b611d9157611bea611be5611c1c96611bb5602094611bb030610b88565b612be4565b611bcb8d611bc283610b60565b908c9091612167565b611be0611bd788610b60565b8d8c9091612167565b610b60565b610b7c565b6370a0823190611c11611bfc30610b88565b92611c05610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d8c57611c48611c43611c7a96602093600091611d5f575b5095610b60565b610b7c565b6370a0823190611c6f611c5a30610b88565b92611c63610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5a57611c9994600091611d2c575b50909192612460565b611cf0575b3390849184611cd6611cd07fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611ceb611ce2610183565b92839283610885565b0390a3565b611d27611d20611d08611d0360096113b8565b610af0565b611d1a611d1560096113df565b610af0565b90610c53565b600c611667565b611c9e565b611d4d915060203d8111611d53575b611d458183610baa565b810190610be8565b38611c90565b503d611d3b565b610c07565b611d7f9150843d8111611d85575b611d778183610baa565b810190610be8565b38611c3c565b503d611d6d565b610c07565b600063749383ad60e01b815280611daa600482016102a9565b0390fd5b5088611dc3611dbd6000610ad4565b91610198565b14611b93565b611dea915060203d8111611df0575b611de28183610baa565b810190610be8565b38611b28565b503d611dd8565b610c07565b611e1d915060203d8111611e23575b611e158183610baa565b810190610be8565b38611acb565b503d611e0b565b610c07565b6000630521f43160e31b815280611e48600482016102a9565b0390fd5b611e6690611e58610b0c565b611e60610b0c565b90611a0a565b9091565b611e7261124e565b50611e7d6004611365565b90565b611e9d91611e8c611454565b50611e9561269c565b919091612789565b600190565b90611eac90610cc6565b600052602052604060002090565b611edf91611ed5611eda92611ecd610b0c565b506001611ea2565b6119d3565b61148f565b90565b611eea612082565b611ef2611efc565b611efa612107565b565b611f4d6020611f1b611f16611f116007610b2b565b610b60565b610b7c565b6370a0823190611f42611f2d30610b88565b92611f36610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204757611fb291600091612019575b506020611f80611f7b611f766008610b2b565b610b60565b610b7c565b6370a0823190611fa7611f9230610b88565b92611f9b610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201457611fe492600091611fe6575b50611fd360096113b8565b90611fde60096113df565b92612460565b565b612007915060203d811161200d575b611fff8183610baa565b810190610be8565b38611fc8565b503d611ff5565b610c07565b61203a915060203d8111612040575b6120328183610baa565b810190610be8565b38611f63565b503d612028565b610c07565b612054611ee2565b565b90565b61206d61206861207292612056565b61094d565b610198565b90565b61207f6002612059565b90565b61208c600561148f565b6120a561209f61209a612075565b610198565b91610198565b146120be576120bc6120b5612075565b6005611667565b565b6000633ee5aeb560e01b8152806120d7600482016102a9565b0390fd5b90565b6120f26120ed6120f7926120db565b61094d565b610198565b90565b61210460016120de565b90565b6121196121126120fa565b6005611667565b565b63ffffffff60e01b1690565b61213b612136612140926103d1565b610bd3565b61211b565b90565b91602061216592949361215e60408201966000830190610523565b019061057b565b565b906121ae6121b39361219f6004949361218663a9059cbb919391612127565b9261218f610183565b9687946020860190815201612143565b60208201810382520383610baa565b612c47565b565b90565b6121cc6121c76121d1926121b5565b61094d565b610198565b90565b6121e06121e691610198565b91610198565b9081156121f1570690565b6115d1565b61220a61220561220f92610198565b61094d565b6103d1565b90565b61221e612224916103d1565b916103d1565b90039063ffffffff821161223457565b610c18565b61224d61224861225292610ad1565b61094d565b6103d1565b90565b61226961226461226e92610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229061228b612295926103b1565b61094d565b612271565b90565b6122a46122aa91612271565b91612271565b9081156122b5570490565b6115d1565b6122ce6122c96122d392612271565b61094d565b610198565b90565b6122ea6122e56122ef926103d1565b61094d565b610198565b90565b61230161230791939293610198565b92610198565b820180921161231257565b610c18565b61232b61232661233092610198565b61094d565b6103b1565b90565b9061234c6dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236a61236561236f926103b1565b61094d565b6103b1565b90565b90565b9061238a61238561239192612356565b612372565b8254612333565b9055565b60701b90565b906123b76dffffffffffffffffffffffffffff60701b91612395565b9181191691161790565b906123d66123d16123dd92612356565b612372565b825461239b565b9055565b906123f363ffffffff60e01b91610bd3565b9181191691161790565b61241161240c612416926103d1565b61094d565b6103d1565b90565b90565b9061243161242c612438926123fd565b612419565b82546123e1565b9055565b91602061245e929493612457604082019660008301906103c4565b01906103c4565b565b90928161248361247d6dffffffffffffffffffffffffffff610af0565b91610198565b11801561266f575b6126525761251f9361250c61250561251894612511946124c16124bc426124b66401000000006121b8565b906121d4565b6121f6565b976124d6896124d06009611409565b90612212565b91826124eb6124e56000612239565b916103d1565b1180612636575b8061261a575b61256e575b505050612317565b6009612375565b612317565b60096123c1565b600961241c565b61252960096113b8565b61253360096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad191612569612560610183565b9283928361243c565b0390a1565b612612926125f66125f06125eb846125e56125df61260b986125da6125d36125c46125b56125b06125a16125fc9e612d5b565b6125aa8761227c565b90612298565b6122ba565b6125be8c6122d6565b90610c53565b6125ce600a61148f565b6122f2565b600a611667565b612d5b565b9161227c565b90612298565b6122ba565b916122d6565b90610c53565b612606600b61148f565b6122f2565b600b611667565b3880806124fd565b508061262f6126296000612255565b916103b1565b14156124f8565b508161264b6126456000612255565b916103b1565b14156124f2565b6000631a93c68960e11b81528061266b600482016102a9565b0390fd5b508361269161268b6dffffffffffffffffffffffffffff610af0565b91610198565b1161248b565b600090565b6126a4612697565b503390565b916126b79291600192612d86565b565b6040906126e36126ea94969593966126d960608401986000850190610523565b602083019061057b565b019061057b565b565b906126f79103610198565b90565b929192612708818390611eba565b908161271e612718600019610198565b91610198565b1061272b575b5050509050565b8161273e61273887610198565b91610198565b106127655761275c93946127539193926126ec565b90600092612d86565b80388080612724565b50612785849291926000938493637dc7a0d960e11b8552600485016126b9565b0390fd5b91826127a66127a061279b6000611625565b6101ca565b916101ca565b1461280357816127c76127c16127bc6000611625565b6101ca565b916101ca565b146127da576127d892919091612ea9565b565b6127ff6127e76000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b6128286128106000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61283590610b38565b90565b6128419061282c565b90565b61284d90610b70565b90565b9050519061285d826101d6565b565b906020828203126128795761287691600001612850565b90565b61018e565b90565b61289561289061289a9261287e565b61094d565b610198565b90565b91906128a7611454565b506128dd60206128c76128c26128bd6006610b2b565b612838565b612844565b63017e7e58906128d5610183565b938492610bd3565b825281806128ed600482016102a9565b03915afa908115612a7d57600091612a4f575b50908161291e6129186129136000611625565b6101ca565b916101ca565b14159361292b600c61148f565b9185600014612a1457826129486129426000610ad4565b91610198565b03612955575b505050505b565b61297761297c9161297161296b61298295610af0565b91610af0565b90610c53565b612ab3565b91612ab3565b908061299661299084610198565b91610198565b116129a2575b8061294e565b6129de6129e4926129d96129c86129b761149c565b6129c2868590610c2e565b90610c53565b936129d36005612881565b90610c53565b6122f2565b906115e7565b806129f86129f26000610ad4565b91610198565b11612a04575b8061299c565b612a0d91612b82565b38806129fe565b50509050612a2b612a256000610ad4565b91610198565b03612a36575b612953565b612a4a612a436000610ad4565b600c611667565b612a31565b612a70915060203d8111612a76575b612a688183610baa565b81019061285f565b38612900565b503d612a5e565b610c07565b90612a8b610b0c565b5081612a9f612a9983610198565b91610198565b10600014612aac57505b90565b9050612aa9565b612abb610b0c565b81612acf612ac96003610c8b565b91610198565b11600014612b50575080612b00612af083612aea6002612059565b906115e7565b612afa60016120de565b906122f2565b905b81612b15612b0f83610198565b91610198565b1015612b495750612b43612b3382612b2e8582906115e7565b6122f2565b612b3d6002612059565b906115e7565b90612b02565b929150505b565b9190612b65612b5f6000610ad4565b91610198565b03612b70575b612b4e565b9050612b7c60016120de565b90612b6b565b80612b9e612b98612b936000611625565b6101ca565b916101ca565b14612bbb57612bb991612bb16000611625565b919091612ea9565b565b612be0612bc86000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c01612bfb612bf66000611625565b6101ca565b916101ca565b14612c1e57612c1c9190612c156000611625565b9091612ea9565b565b612c43612c2b6000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c55610b0c565b50612c5e610b0c565b50828151910182855af115612cf6573d60005190612c85612c7f6000610ad4565b91610198565b14600014612cdc5750612c9781610b7c565b3b612cab612ca56000610ad4565b91610198565b145b612cb45750565b612cc0612cd891610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612cef612ce960016120de565b91610198565b1415612cad565b6040513d6000823e3d90fd5b600090565b90565b612d1e612d19612d2392612d07565b61094d565b612271565b90565b612d35612d3b91939293612271565b92612271565b91612d47838202612271565b928184041490151715612d5657565b610c18565b612d70612d8391612d6a612d02565b5061227c565b612d7d600160701b612d0a565b90612d26565b90565b909281612da4612d9e612d996000611625565b6101ca565b916101ca565b14612e725783612dc5612dbf612dba6000611625565b6101ca565b916101ca565b14612e4957612de983612de4612ddd60018690611ea2565b87906119d3565b611667565b612df3575b505050565b919091612e3e612e2c612e267f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e35610183565b91829182610588565b0390a3388080612dee565b612e6e612e566000611625565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612e97612e7f6000611625565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ea69101610198565b90565b91909180612ec8612ec2612ebd6000611625565b6101ca565b916101ca565b14600014612fad57612eed612ee683612ee1600261148f565b6122f2565b6002611667565b5b82612f0a612f04612eff6000611625565b6101ca565b916101ca565b14600014612f8057612f2f612f2883612f23600261148f565b6126ec565b6002611667565b5b919091612f7b612f69612f637fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f72610183565b91829182610588565b0390a3565b612fa882612fa2612f93600087906119d3565b91612f9d8361148f565b612e9b565b90611667565b612f30565b612fc1612fbc600083906119d3565b61148f565b80612fd4612fce85610198565b91610198565b10612ffd57612fe7612ff89184906126ec565b612ff3600084906119d3565b611667565b612eee565b9061301c909192600093849363391434e360e21b8552600485016126b9565b0390fdfea2646970667358221220646cee990f1e19ff1172eb103aa2f85cdded62859d16fe970fd983953ff88e6164736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x27 JUMPI PUSH2 0x11 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x19 PUSH2 0x2C JUMP JUMPDEST PUSH2 0x3056 PUSH2 0x507 DUP3 CODECOPY PUSH2 0x3056 SWAP1 RETURN JUMPDEST PUSH2 0x32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x61 SWAP1 PUSH2 0x37 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x91 PUSH2 0x8A PUSH2 0x2C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x57 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAF JUMPI PUSH2 0xAB PUSH1 0x20 SWAP2 PUSH2 0x37 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0xC6 PUSH2 0xC1 DUP4 PUSH2 0x93 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x444558204C5020546F6B656E0000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xFD PUSH1 0xC PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x10A PUSH1 0x20 DUP4 ADD PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114 PUSH2 0xF3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4445582D4C500000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x149 PUSH1 0x6 PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x156 PUSH1 0x20 DUP4 ADD PUSH2 0x117 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 PUSH2 0x1AB SWAP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B7 SWAP1 PUSH2 0x192 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C3 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D9 PUSH2 0x1E5 SWAP3 PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1F4 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x158 JUMP JUMPDEST SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x20D CALLER PUSH1 0x6 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 PUSH2 0x22E SWAP3 PUSH2 0x20F JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x1 PUSH2 0x215 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24B PUSH1 0x0 NOT SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 PUSH2 0x26E SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x289 PUSH2 0x284 PUSH2 0x290 SWAP3 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x29E SWAP2 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2A9 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x274 JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2E7 JUMPI JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x32B SWAP2 MUL SWAP2 PUSH2 0x325 PUSH1 0x0 NOT DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x30B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x34B PUSH2 0x346 PUSH2 0x353 SWAP4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x30F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x36E SWAP2 PUSH2 0x368 PUSH2 0x357 JUMP JUMPDEST SWAP2 PUSH2 0x335 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x38A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x35C JUMP JUMPDEST ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3A0 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3D1 SWAP4 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3B8 DUP5 PUSH2 0x301 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x3D9 JUMPI JUMPDEST PUSH2 0x3CA SWAP1 PUSH2 0x301 JUMP JUMPDEST ADD SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA DUP2 SWAP3 SWAP1 POP PUSH2 0x3C1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3FC SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x40B SWAP2 PUSH2 0x3EB JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x41D DUP2 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4DD JUMPI PUSH2 0x43F DUP3 PUSH2 0x439 DUP6 SLOAD PUSH2 0x2CC JUMP JUMPDEST DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x474 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x463 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x401 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x483 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4BB SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x3EB JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x49F JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x487 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x4EC SWAP2 PUSH2 0x413 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x4FD PUSH2 0x504 SWAP3 PUSH1 0x3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E4C JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x204C JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x269C JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x161D PUSH2 0x1618 PUSH2 0x1622 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x162E SWAP1 PUSH2 0x1609 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x163E PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165C PUSH2 0x1657 PUSH2 0x1661 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167C PUSH2 0x1677 PUSH2 0x1683 SWAP3 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1631 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A6 PUSH2 0x16A0 PUSH2 0x169B ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A2 JUMPI PUSH2 0x16B3 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x1709 PUSH1 0x20 PUSH2 0x16D7 PUSH2 0x16D2 PUSH2 0x16CD PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x16FE PUSH2 0x16E9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F2 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x196F JUMPI JUMPDEST POP SWAP4 PUSH2 0x176F PUSH1 0x20 PUSH2 0x173D PUSH2 0x1738 PUSH2 0x1733 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1764 PUSH2 0x174F ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1758 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x193C JUMPI JUMPDEST POP SWAP2 PUSH2 0x1797 DUP7 PUSH2 0x1791 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AB DUP2 PUSH2 0x17A5 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17B7 DUP5 DUP3 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP4 PUSH2 0x17C0 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D4 PUSH2 0x17CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F3 JUMPI POP PUSH2 0x1801 PUSH2 0x17F3 PUSH2 0x17EE DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x181D PUSH2 0x180F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1817 PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2B82 JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1832 PUSH2 0x182C PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18D6 JUMPI PUSH2 0x1845 PUSH2 0x184E SWAP6 DUP12 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x189A JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1880 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1895 PUSH2 0x188C PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x18CA PUSH2 0x18B2 PUSH2 0x18AD PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C4 PUSH2 0x18BF PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18EF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1936 SWAP1 PUSH2 0x1930 PUSH2 0x1921 PUSH2 0x191A PUSH2 0x190B DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1914 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192A DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2A82 JUMP JUMPDEST SWAP9 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x195D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1963 JUMPI JUMPDEST PUSH2 0x1955 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1782 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1990 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1996 JUMPI JUMPDEST PUSH2 0x1988 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x197E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D0 SWAP1 PUSH2 0x19CB PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19DD SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A02 PUSH2 0x1A07 SWAP2 PUSH2 0x19FA PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A1D SWAP3 SWAP2 PUSH2 0x1A18 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1A29 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A27 PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A49 PUSH2 0x1A43 PUSH2 0x1A3E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E2F JUMPI PUSH2 0x1A56 PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A65 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A6F PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1AB8 PUSH1 0x20 PUSH2 0x1A86 PUSH2 0x1A81 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AAD PUSH2 0x1A98 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA1 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DFC JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B15 PUSH1 0x20 PUSH2 0x1AE3 PUSH2 0x1ADE DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0A PUSH2 0x1AF5 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AFE PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DF7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DC9 JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3B PUSH2 0x1B36 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP7 PUSH2 0x1B76 PUSH2 0x1B4A DUP3 DUP5 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP6 PUSH2 0x1B71 PUSH2 0x1B6A PUSH2 0x1B63 PUSH2 0x1B5C PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8B PUSH2 0x1B85 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DAE JUMPI JUMPDEST PUSH2 0x1D91 JUMPI PUSH2 0x1BEA PUSH2 0x1BE5 PUSH2 0x1C1C SWAP7 PUSH2 0x1BB5 PUSH1 0x20 SWAP5 PUSH2 0x1BB0 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x1BCB DUP14 PUSH2 0x1BC2 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1BE0 PUSH2 0x1BD7 DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C11 PUSH2 0x1BFC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C05 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1C48 PUSH2 0x1C43 PUSH2 0x1C7A SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D5F JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C6F PUSH2 0x1C5A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C63 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1C99 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D2C JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1CF0 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CD6 PUSH2 0x1CD0 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEB PUSH2 0x1CE2 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D27 PUSH2 0x1D20 PUSH2 0x1D08 PUSH2 0x1D03 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x1D15 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1D4D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D53 JUMPI JUMPDEST PUSH2 0x1D45 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C90 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D7F SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D85 JUMPI JUMPDEST PUSH2 0x1D77 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C3C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAA PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC3 PUSH2 0x1DBD PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1DEA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF0 JUMPI JUMPDEST PUSH2 0x1DE2 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B28 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DD8 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E23 JUMPI JUMPDEST PUSH2 0x1E15 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E48 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E66 SWAP1 PUSH2 0x1E58 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E60 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0A JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E72 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E7D PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E9D SWAP2 PUSH2 0x1E8C PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E95 PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EAC SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EDF SWAP2 PUSH2 0x1ED5 PUSH2 0x1EDA SWAP3 PUSH2 0x1ECD PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA2 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEA PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1EF2 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1EFA PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F4D PUSH1 0x20 PUSH2 0x1F1B PUSH2 0x1F16 PUSH2 0x1F11 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F42 PUSH2 0x1F2D ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F36 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2047 JUMPI PUSH2 0x1FB2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2019 JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F80 PUSH2 0x1F7B PUSH2 0x1F76 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FA7 PUSH2 0x1F92 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9B PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2014 JUMPI PUSH2 0x1FE4 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FE6 JUMPI JUMPDEST POP PUSH2 0x1FD3 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FDE PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2460 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2007 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x200D JUMPI JUMPDEST PUSH2 0x1FFF DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FC8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF5 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203A SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2040 JUMPI JUMPDEST PUSH2 0x2032 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F63 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2028 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2054 PUSH2 0x1EE2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x206D PUSH2 0x2068 PUSH2 0x2072 SWAP3 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A5 PUSH2 0x209F PUSH2 0x209A PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20BE JUMPI PUSH2 0x20BC PUSH2 0x20B5 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20D7 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F2 PUSH2 0x20ED PUSH2 0x20F7 SWAP3 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2104 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2119 PUSH2 0x2112 PUSH2 0x20FA JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213B PUSH2 0x2136 PUSH2 0x2140 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2165 SWAP3 SWAP5 SWAP4 PUSH2 0x215E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21AE PUSH2 0x21B3 SWAP4 PUSH2 0x219F PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x2186 PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x2127 JUMP JUMPDEST SWAP3 PUSH2 0x218F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C47 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21CC PUSH2 0x21C7 PUSH2 0x21D1 SWAP3 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E0 PUSH2 0x21E6 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F1 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220A PUSH2 0x2205 PUSH2 0x220F SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x221E PUSH2 0x2224 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2234 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x224D PUSH2 0x2248 PUSH2 0x2252 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2269 PUSH2 0x2264 PUSH2 0x226E SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2290 PUSH2 0x228B PUSH2 0x2295 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A4 PUSH2 0x22AA SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B5 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22CE PUSH2 0x22C9 PUSH2 0x22D3 SWAP3 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EA PUSH2 0x22E5 PUSH2 0x22EF SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2301 PUSH2 0x2307 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2312 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232B PUSH2 0x2326 PUSH2 0x2330 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x234C PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236A PUSH2 0x2365 PUSH2 0x236F SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238A PUSH2 0x2385 PUSH2 0x2391 SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2333 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23B7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2395 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23D6 PUSH2 0x23D1 PUSH2 0x23DD SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239B JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2411 PUSH2 0x240C PUSH2 0x2416 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2431 PUSH2 0x242C PUSH2 0x2438 SWAP3 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2419 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x245E SWAP3 SWAP5 SWAP4 PUSH2 0x2457 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2483 PUSH2 0x247D PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x266F JUMPI JUMPDEST PUSH2 0x2652 JUMPI PUSH2 0x251F SWAP4 PUSH2 0x250C PUSH2 0x2505 PUSH2 0x2518 SWAP5 PUSH2 0x2511 SWAP5 PUSH2 0x24C1 PUSH2 0x24BC TIMESTAMP PUSH2 0x24B6 PUSH5 0x100000000 PUSH2 0x21B8 JUMP JUMPDEST SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x21F6 JUMP JUMPDEST SWAP8 PUSH2 0x24D6 DUP10 PUSH2 0x24D0 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2212 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EB PUSH2 0x24E5 PUSH1 0x0 PUSH2 0x2239 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x2636 JUMPI JUMPDEST DUP1 PUSH2 0x261A JUMPI JUMPDEST PUSH2 0x256E JUMPI JUMPDEST POP POP POP PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2529 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2533 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x2569 PUSH2 0x2560 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x243C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2612 SWAP3 PUSH2 0x25F6 PUSH2 0x25F0 PUSH2 0x25EB DUP5 PUSH2 0x25E5 PUSH2 0x25DF PUSH2 0x260B SWAP9 PUSH2 0x25DA PUSH2 0x25D3 PUSH2 0x25C4 PUSH2 0x25B5 PUSH2 0x25B0 PUSH2 0x25A1 PUSH2 0x25FC SWAP15 PUSH2 0x2D5B JUMP JUMPDEST PUSH2 0x25AA DUP8 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x25BE DUP13 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2D5B JUMP JUMPDEST SWAP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST SWAP2 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2606 PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1667 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x24FD JUMP JUMPDEST POP DUP1 PUSH2 0x262F PUSH2 0x2629 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F8 JUMP JUMPDEST POP DUP2 PUSH2 0x264B PUSH2 0x2645 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266B PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2691 PUSH2 0x268B PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248B JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A4 PUSH2 0x2697 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26B7 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E3 PUSH2 0x26EA SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26D9 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26F7 SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2708 DUP2 DUP4 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x271E PUSH2 0x2718 PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272B JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x273E PUSH2 0x2738 DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2765 JUMPI PUSH2 0x275C SWAP4 SWAP5 PUSH2 0x2753 SWAP2 SWAP4 SWAP3 PUSH2 0x26EC JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2724 JUMP JUMPDEST POP PUSH2 0x2785 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x27A6 PUSH2 0x27A0 PUSH2 0x279B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2803 JUMPI DUP2 PUSH2 0x27C7 PUSH2 0x27C1 PUSH2 0x27BC PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x27DA JUMPI PUSH2 0x27D8 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27FF PUSH2 0x27E7 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2828 PUSH2 0x2810 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2835 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2841 SWAP1 PUSH2 0x282C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x284D SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x285D DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2879 JUMPI PUSH2 0x2876 SWAP2 PUSH1 0x0 ADD PUSH2 0x2850 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2895 PUSH2 0x2890 PUSH2 0x289A SWAP3 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28A7 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x28DD PUSH1 0x20 PUSH2 0x28C7 PUSH2 0x28C2 PUSH2 0x28BD PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x2844 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x28D5 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x28ED PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A7D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A4F JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x291E PUSH2 0x2918 PUSH2 0x2913 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x292B PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A14 JUMPI DUP3 PUSH2 0x2948 PUSH2 0x2942 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2955 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x2977 PUSH2 0x297C SWAP2 PUSH2 0x2971 PUSH2 0x296B PUSH2 0x2982 SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST SWAP2 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x2996 PUSH2 0x2990 DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29A2 JUMPI JUMPDEST DUP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0x29DE PUSH2 0x29E4 SWAP3 PUSH2 0x29D9 PUSH2 0x29C8 PUSH2 0x29B7 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29C2 DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29D3 PUSH1 0x5 PUSH2 0x2881 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x29F8 PUSH2 0x29F2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A04 JUMPI JUMPDEST DUP1 PUSH2 0x299C JUMP JUMPDEST PUSH2 0x2A0D SWAP2 PUSH2 0x2B82 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x29FE JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A2B PUSH2 0x2A25 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A36 JUMPI JUMPDEST PUSH2 0x2953 JUMP JUMPDEST PUSH2 0x2A4A PUSH2 0x2A43 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2A70 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2A76 JUMPI JUMPDEST PUSH2 0x2A68 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x285F JUMP JUMPDEST CODESIZE PUSH2 0x2900 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2A8B PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2A9F PUSH2 0x2A99 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AAC JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2ABB PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2ACF PUSH2 0x2AC9 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B50 JUMPI POP DUP1 PUSH2 0x2B00 PUSH2 0x2AF0 DUP4 PUSH2 0x2AEA PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2AFA PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B15 PUSH2 0x2B0F DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B49 JUMPI POP PUSH2 0x2B43 PUSH2 0x2B33 DUP3 PUSH2 0x2B2E DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B65 PUSH2 0x2B5F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B70 JUMPI JUMPDEST PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x2B7C PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x2B6B JUMP JUMPDEST DUP1 PUSH2 0x2B9E PUSH2 0x2B98 PUSH2 0x2B93 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BBB JUMPI PUSH2 0x2BB9 SWAP2 PUSH2 0x2BB1 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2BE0 PUSH2 0x2BC8 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C01 PUSH2 0x2BFB PUSH2 0x2BF6 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C1E JUMPI PUSH2 0x2C1C SWAP2 SWAP1 PUSH2 0x2C15 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C43 PUSH2 0x2C2B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C55 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C5E PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2CF6 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2C85 PUSH2 0x2C7F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2CDC JUMPI POP PUSH2 0x2C97 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CAB PUSH2 0x2CA5 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CB4 JUMPI POP JUMP JUMPDEST PUSH2 0x2CC0 PUSH2 0x2CD8 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CEF PUSH2 0x2CE9 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D1E PUSH2 0x2D19 PUSH2 0x2D23 SWAP3 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D35 PUSH2 0x2D3B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2271 JUMP JUMPDEST SWAP3 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2D47 DUP4 DUP3 MUL PUSH2 0x2271 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D56 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D70 PUSH2 0x2D83 SWAP2 PUSH2 0x2D6A PUSH2 0x2D02 JUMP JUMPDEST POP PUSH2 0x227C JUMP JUMPDEST PUSH2 0x2D7D PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D0A JUMP JUMPDEST SWAP1 PUSH2 0x2D26 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DA4 PUSH2 0x2D9E PUSH2 0x2D99 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E72 JUMPI DUP4 PUSH2 0x2DC5 PUSH2 0x2DBF PUSH2 0x2DBA PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E49 JUMPI PUSH2 0x2DE9 DUP4 PUSH2 0x2DE4 PUSH2 0x2DDD PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA2 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2DF3 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E3E PUSH2 0x2E2C PUSH2 0x2E26 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E35 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2DEE JUMP JUMPDEST PUSH2 0x2E6E PUSH2 0x2E56 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E97 PUSH2 0x2E7F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2EA6 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EC8 PUSH2 0x2EC2 PUSH2 0x2EBD PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAD JUMPI PUSH2 0x2EED PUSH2 0x2EE6 DUP4 PUSH2 0x2EE1 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F0A PUSH2 0x2F04 PUSH2 0x2EFF PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2F80 JUMPI PUSH2 0x2F2F PUSH2 0x2F28 DUP4 PUSH2 0x2F23 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26EC JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2F7B PUSH2 0x2F69 PUSH2 0x2F63 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F72 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FA8 DUP3 PUSH2 0x2FA2 PUSH2 0x2F93 PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP2 PUSH2 0x2F9D DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2E9B JUMP JUMPDEST SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x2FC1 PUSH2 0x2FBC PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x2FD4 PUSH2 0x2FCE DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2FFD JUMPI PUSH2 0x2FE7 PUSH2 0x2FF8 SWAP2 DUP5 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x2FF3 PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2EEE JUMP JUMPDEST SWAP1 PUSH2 0x301C SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x6CEE990F1E NOT SELFDESTRUCT GT PUSH19 0xEB103AA2F85CDDED62859D16FE970FD983953F EXTCALL DUP15 PUSH2 0x6473 PUSH16 0x6C634300081E00330000000000000000 ",
              "sourceMap": "480:12369:13:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;3700:83::-;;3720:14;;:::i;:::-;3736:8;;:::i;:::-;3700:83;;:::i;:::-;3756:20;3766:10;3756:20;;:::i;:::-;3700:83::o;480:12369::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:10:-;1857:1;;;:::i;:::-;1818:40;:::o;1857:1::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2037:52::-;;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;:::-;2037:52::o;480:12369:13:-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;1857:1:10;480:12369:13;1857:1:10;;480:12369:13;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;1582:113:5:-;;1648:13;1671:17;1582:113;1648:13;;:::i;:::-;1671:17;;:::i;:::-;1582:113::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 742,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 491,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 10320,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 1698,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_addresst_addresst_uint256": {
                  "entryPoint": 1491,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_addresst_uint256": {
                  "entryPoint": 1106,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bytes_calldata": {
                  "entryPoint": 521,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 3033,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 1975,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 10335,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 432,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256_fromMemory": {
                  "entryPoint": 3048,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_uint256t_addresst_bytes_calldata": {
                  "entryPoint": 584,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_encodeUpdatedPos_string_storage": {
                  "entryPoint": 4918,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1315,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 8515,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": 9913,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 1170,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 1157,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 867,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_memory_ptr": {
                  "entryPoint": 818,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_storage": {
                  "entryPoint": 4775,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 681,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1328,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint112": {
                  "entryPoint": 964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint112_uint112": {
                  "entryPoint": 9276,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint112_uint112_uint32": {
                  "entryPoint": 999,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 1416,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 1403,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 2181,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256_uint256": {
                  "entryPoint": 3282,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint32": {
                  "entryPoint": 986,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint8": {
                  "entryPoint": 1623,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint8_to_uint8": {
                  "entryPoint": 1610,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_unbounded": {
                  "entryPoint": 387,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 4764,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_bytes_calldata": {
                  "entryPoint": 2924,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 758,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": 4755,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string_fromStack": {
                  "entryPoint": 762,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 8946,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint224": {
                  "entryPoint": 8856,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 5607,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint224": {
                  "entryPoint": 11558,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 3155,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3118,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint32": {
                  "entryPoint": 8722,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 458,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 1152,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes4": {
                  "entryPoint": 8475,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 1250,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint112": {
                  "entryPoint": 5009,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1796,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint32": {
                  "entryPoint": 5100,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_0_by": {
                  "entryPoint": 2769,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_1_by": {
                  "entryPoint": 8411,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_2_by": {
                  "entryPoint": 8278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_3_by": {
                  "entryPoint": 3208,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_5192296858534827628530496329220096_by": {
                  "entryPoint": 11527,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_5_by": {
                  "entryPoint": 10366,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 3239,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 5350,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 2378,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by_1": {
                  "entryPoint": 8629,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint112": {
                  "entryPoint": 945,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint224": {
                  "entryPoint": 8817,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint32": {
                  "entryPoint": 977,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint8": {
                  "entryPoint": 1604,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_ENTERED": {
                  "entryPoint": 8309,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_MINIMUM_LIQUIDITY": {
                  "entryPoint": 2412,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 8442,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 3270,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IERC20": {
                  "entryPoint": 2912,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IFactory": {
                  "entryPoint": 10296,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_string_storage_to_string": {
                  "entryPoint": 4965,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DexPair_to_address": {
                  "entryPoint": 2952,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": 2940,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IFactory_to_address": {
                  "entryPoint": 10308,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_0_by_1_to_uint256": {
                  "entryPoint": 2772,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1000000_by_1_to_uint256": {
                  "entryPoint": 3242,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1_by_1_to_uint256": {
                  "entryPoint": 8414,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 8281,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_3_by_1_to_uint256": {
                  "entryPoint": 3211,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_5_by_1_to_uint256": {
                  "entryPoint": 10369,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 5669,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint112": {
                  "entryPoint": 8789,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 5641,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint224": {
                  "entryPoint": 11530,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 2384,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint32": {
                  "entryPoint": 8761,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint8": {
                  "entryPoint": 5353,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 8632,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint112_to_uint112": {
                  "entryPoint": 9046,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint112_to_uint224": {
                  "entryPoint": 8828,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint112_to_uint256": {
                  "entryPoint": 2800,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 2928,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IERC20": {
                  "entryPoint": 2900,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IFactory": {
                  "entryPoint": 10284,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 2872,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint224_to_uint256": {
                  "entryPoint": 8890,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint112": {
                  "entryPoint": 8983,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 5704,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint32": {
                  "entryPoint": 8694,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint32_to_bytes4": {
                  "entryPoint": 8487,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint32_to_uint256": {
                  "entryPoint": 8918,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint32_to_uint32": {
                  "entryPoint": 9213,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 4931,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 771,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "external_fun_MINIMUM_LIQUIDITY": {
                  "entryPoint": 2437,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_allowance": {
                  "entryPoint": 2628,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 1192,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_balanceOf": {
                  "entryPoint": 2059,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_burn": {
                  "entryPoint": 2217,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_decimals": {
                  "entryPoint": 1645,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_factory": {
                  "entryPoint": 2506,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getReserves": {
                  "entryPoint": 1050,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_initialize": {
                  "entryPoint": 1744,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_kLast": {
                  "entryPoint": 2128,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_mint": {
                  "entryPoint": 2006,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_name": {
                  "entryPoint": 892,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_price0CumulativeLast": {
                  "entryPoint": 1853,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_price1CumulativeLast": {
                  "entryPoint": 1922,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_swap": {
                  "entryPoint": 687,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_symbol": {
                  "entryPoint": 2271,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_sync": {
                  "entryPoint": 2682,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_token0": {
                  "entryPoint": 1350,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_token1": {
                  "entryPoint": 2575,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_totalSupply": {
                  "entryPoint": 1438,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transfer": {
                  "entryPoint": 2324,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferFrom": {
                  "entryPoint": 1550,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 4713,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 1261,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_uint256": {
                  "entryPoint": 1799,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 2839,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_t_uint112": {
                  "entryPoint": 5028,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint112": {
                  "entryPoint": 5067,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 5243,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint32": {
                  "entryPoint": 5109,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2986,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__approve": {
                  "entryPoint": 11654,
                  "id": 840,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun__burn": {
                  "entryPoint": 11236,
                  "id": 762,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__mint": {
                  "entryPoint": 11138,
                  "id": 729,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__transfer": {
                  "entryPoint": 10121,
                  "id": 619,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun__update": {
                  "entryPoint": 9312,
                  "id": 2779,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_allowance": {
                  "entryPoint": 7866,
                  "id": 516,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve": {
                  "entryPoint": 5209,
                  "id": 540,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve_780": {
                  "entryPoint": 9897,
                  "id": 780,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_balanceOf": {
                  "entryPoint": 6635,
                  "id": 475,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_burn": {
                  "entryPoint": 7756,
                  "id": 2408,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "fun_burn_inner": {
                  "entryPoint": 6697,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "fun_callOptionalReturn": {
                  "entryPoint": 11335,
                  "id": 1415,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_decimals": {
                  "entryPoint": 5381,
                  "id": 453,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_encode": {
                  "entryPoint": 11611,
                  "id": 2978,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_getReserves": {
                  "entryPoint": 5142,
                  "id": 2068,
                  "parameterSlots": 0,
                  "returnSlots": 3
                },
                "fun_initialize": {
                  "entryPoint": 5471,
                  "id": 2045,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_min": {
                  "entryPoint": 10882,
                  "id": 2957,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 6591,
                  "id": 2222,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mintFee": {
                  "entryPoint": 10397,
                  "id": 2884,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_mint_inner": {
                  "entryPoint": 5767,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_msgSender": {
                  "entryPoint": 9884,
                  "id": 1469,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_name": {
                  "entryPoint": 4977,
                  "id": 435,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantAfter": {
                  "entryPoint": 8455,
                  "id": 1544,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 8322,
                  "id": 1536,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_safeTransfer": {
                  "entryPoint": 8551,
                  "id": 1038,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_spendAllowance": {
                  "entryPoint": 9978,
                  "id": 888,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_sqrt": {
                  "entryPoint": 10931,
                  "id": 2939,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_swap": {
                  "entryPoint": 4671,
                  "id": 2636,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_swap_inner": {
                  "entryPoint": 3345,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_symbol": {
                  "entryPoint": 7786,
                  "id": 444,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_sync": {
                  "entryPoint": 8268,
                  "id": 2666,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_sync_inner": {
                  "entryPoint": 7932,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_totalSupply": {
                  "entryPoint": 5276,
                  "id": 462,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 7808,
                  "id": 499,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transferFrom": {
                  "entryPoint": 5298,
                  "id": 572,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_update": {
                  "entryPoint": 11945,
                  "id": 696,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "getter_fun_MINIMUM_LIQUIDITY": {
                  "entryPoint": 2426,
                  "id": 1916,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_factory": {
                  "entryPoint": 2490,
                  "id": 1919,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_kLast": {
                  "entryPoint": 2112,
                  "id": 1940,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_price0CumulativeLast": {
                  "entryPoint": 1837,
                  "id": 1935,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_price1CumulativeLast": {
                  "entryPoint": 1906,
                  "id": 1937,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_token0": {
                  "entryPoint": 1299,
                  "id": 1922,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_token1": {
                  "entryPoint": 2559,
                  "id": 1925,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 2381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_address_uint256__of_address": {
                  "entryPoint": 7842,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 6611,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_uint256": {
                  "entryPoint": 8660,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant": {
                  "entryPoint": 6666,
                  "id": 1520,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "modifier_nonReentrant_2074": {
                  "entryPoint": 5556,
                  "id": 1520,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant_2420": {
                  "entryPoint": 2738,
                  "id": 1520,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "modifier_nonReentrant_2640": {
                  "entryPoint": 7906,
                  "id": 1520,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 3096,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 5585,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x22": {
                  "entryPoint": 4691,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2964,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 5436,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint112": {
                  "entryPoint": 9074,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 5732,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint32": {
                  "entryPoint": 9241,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 1285,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_uint256": {
                  "entryPoint": 1823,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 2859,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_t_uint112": {
                  "entryPoint": 5087,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint112": {
                  "entryPoint": 5048,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 5263,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint32": {
                  "entryPoint": 5129,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
                  "entryPoint": 511,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 506,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 2733,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": 516,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 403,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 393,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 398,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 3079,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 808,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 5403,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_112": {
                  "entryPoint": 9109,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 3027,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 2833,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_112_unsigned": {
                  "entryPoint": 5061,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 1246,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_14_shift": {
                  "entryPoint": 9011,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_20_shift": {
                  "entryPoint": 5409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 9185,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 5681,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_14": {
                  "entryPoint": 9115,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 5439,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_t_uint112_to_t_uint112": {
                  "entryPoint": 9077,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint112_to_uint112": {
                  "entryPoint": 9153,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 5735,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint32_to_uint32": {
                  "entryPoint": 9244,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 470,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 411,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "wrapping_add_uint256": {
                  "entryPoint": 11931,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "wrapping_sub_uint256": {
                  "entryPoint": 9964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "zero_value_for_split_address": {
                  "entryPoint": 9879,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": 5204,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_string": {
                  "entryPoint": 4686,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint112": {
                  "entryPoint": 4999,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint224": {
                  "entryPoint": 11522,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 2828,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint32": {
                  "entryPoint": 5004,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint8": {
                  "entryPoint": 5345,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119bf565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119eb565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e4c565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6a565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e80565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611eba565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a9261204c565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612082565b610d11565b610acf612107565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612460565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b919091612167565b8d8d610dee565b6111938d61118b86610b60565b908d91612167565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e61269c565b9190916126a9565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb61269c565b829084916126fa565b919091612789565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612082565b611687565b906115cf612107565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b61161d61161861162292610ad1565b61094d565b6101bf565b90565b61162e90611609565b90565b9061163e6000199161151b565b9181191691161790565b61165c61165761166192610198565b61094d565b610198565b90565b90565b9061167c61167761168392611648565b611664565b8254611631565b9055565b91909150816116a66116a061169b30610b88565b6101ca565b916101ca565b146119a2576116b3611416565b509290929061170960206116d76116d26116cd6007610b2b565b610b60565b610b7c565b6370a08231906116fe6116e930610b88565b926116f2610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561199d5760009161196f575b509361176f602061173d6117386117336008610b2b565b610b60565b610b7c565b6370a082319061176461174f30610b88565b92611758610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196a5760009161193c575b50916117978661179184610af0565b90610c2e565b926117ab816117a587610af0565b90610c2e565b946117b784829061289d565b936117c061149c565b806117d46117ce6000610ad4565b91610198565b146000146118f357506118016117f36117ee888a90610c53565b612ab3565b6117fb61096c565b90610c2e565b9861181d61180f6000611625565b61181761096c565b90612b82565b5b8961183261182c6000610ad4565b91610198565b146118d65761184561184e958b90612b82565b92909192612460565b61189a575b3390916118807f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b9261189561188c610183565b92839283610885565b0390a2565b6118d16118ca6118b26118ad60096113b8565b610af0565b6118c46118bf60096113df565b610af0565b90610c53565b600c611667565b611853565b600063bb55fd2760e01b8152806118ef600482016102a9565b0390fd5b6119369061193061192161191a61190b8b8590610c53565b61191487610af0565b906115e7565b928b610c53565b61192a86610af0565b906115e7565b90612a82565b9861181e565b61195d915060203d8111611963575b6119558183610baa565b810190610be8565b38611782565b503d61194b565b610c07565b611990915060203d8111611996575b6119888183610baa565b810190610be8565b3861171c565b503d61197e565b610c07565b6000630521f43160e31b8152806119bb600482016102a9565b0390fd5b6119d0906119cb610b0c565b6115b4565b90565b906119dd90610cc6565b600052602052604060002090565b611a02611a07916119fa610b0c565b5060006119d3565b61148f565b90565b90611a1d9291611a18612082565b611a29565b9091611a27612107565b565b929192505081611a49611a43611a3e30610b88565b6101ca565b916101ca565b14611e2f57611a56611416565b5091909192611a656007610b2b565b611a6f6008610b2b565b90611ab86020611a86611a8184610b60565b610b7c565b6370a0823190611aad611a9830610b88565b92611aa1610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2a57600091611dfc575b5091611b156020611ae3611ade84610b60565b610b7c565b6370a0823190611b0a611af530610b88565b92611afe610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611df757600091611dc9575b5096611b3b611b3630610b88565b6119eb565b96611b76611b4a82849061289d565b95611b71611b6a611b63611b5c61149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8b611b856000610ad4565b91610198565b148015611dae575b611d9157611bea611be5611c1c96611bb5602094611bb030610b88565b612be4565b611bcb8d611bc283610b60565b908c9091612167565b611be0611bd788610b60565b8d8c9091612167565b610b60565b610b7c565b6370a0823190611c11611bfc30610b88565b92611c05610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d8c57611c48611c43611c7a96602093600091611d5f575b5095610b60565b610b7c565b6370a0823190611c6f611c5a30610b88565b92611c63610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5a57611c9994600091611d2c575b50909192612460565b611cf0575b3390849184611cd6611cd07fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611ceb611ce2610183565b92839283610885565b0390a3565b611d27611d20611d08611d0360096113b8565b610af0565b611d1a611d1560096113df565b610af0565b90610c53565b600c611667565b611c9e565b611d4d915060203d8111611d53575b611d458183610baa565b810190610be8565b38611c90565b503d611d3b565b610c07565b611d7f9150843d8111611d85575b611d778183610baa565b810190610be8565b38611c3c565b503d611d6d565b610c07565b600063749383ad60e01b815280611daa600482016102a9565b0390fd5b5088611dc3611dbd6000610ad4565b91610198565b14611b93565b611dea915060203d8111611df0575b611de28183610baa565b810190610be8565b38611b28565b503d611dd8565b610c07565b611e1d915060203d8111611e23575b611e158183610baa565b810190610be8565b38611acb565b503d611e0b565b610c07565b6000630521f43160e31b815280611e48600482016102a9565b0390fd5b611e6690611e58610b0c565b611e60610b0c565b90611a0a565b9091565b611e7261124e565b50611e7d6004611365565b90565b611e9d91611e8c611454565b50611e9561269c565b919091612789565b600190565b90611eac90610cc6565b600052602052604060002090565b611edf91611ed5611eda92611ecd610b0c565b506001611ea2565b6119d3565b61148f565b90565b611eea612082565b611ef2611efc565b611efa612107565b565b611f4d6020611f1b611f16611f116007610b2b565b610b60565b610b7c565b6370a0823190611f42611f2d30610b88565b92611f36610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204757611fb291600091612019575b506020611f80611f7b611f766008610b2b565b610b60565b610b7c565b6370a0823190611fa7611f9230610b88565b92611f9b610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201457611fe492600091611fe6575b50611fd360096113b8565b90611fde60096113df565b92612460565b565b612007915060203d811161200d575b611fff8183610baa565b810190610be8565b38611fc8565b503d611ff5565b610c07565b61203a915060203d8111612040575b6120328183610baa565b810190610be8565b38611f63565b503d612028565b610c07565b612054611ee2565b565b90565b61206d61206861207292612056565b61094d565b610198565b90565b61207f6002612059565b90565b61208c600561148f565b6120a561209f61209a612075565b610198565b91610198565b146120be576120bc6120b5612075565b6005611667565b565b6000633ee5aeb560e01b8152806120d7600482016102a9565b0390fd5b90565b6120f26120ed6120f7926120db565b61094d565b610198565b90565b61210460016120de565b90565b6121196121126120fa565b6005611667565b565b63ffffffff60e01b1690565b61213b612136612140926103d1565b610bd3565b61211b565b90565b91602061216592949361215e60408201966000830190610523565b019061057b565b565b906121ae6121b39361219f6004949361218663a9059cbb919391612127565b9261218f610183565b9687946020860190815201612143565b60208201810382520383610baa565b612c47565b565b90565b6121cc6121c76121d1926121b5565b61094d565b610198565b90565b6121e06121e691610198565b91610198565b9081156121f1570690565b6115d1565b61220a61220561220f92610198565b61094d565b6103d1565b90565b61221e612224916103d1565b916103d1565b90039063ffffffff821161223457565b610c18565b61224d61224861225292610ad1565b61094d565b6103d1565b90565b61226961226461226e92610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229061228b612295926103b1565b61094d565b612271565b90565b6122a46122aa91612271565b91612271565b9081156122b5570490565b6115d1565b6122ce6122c96122d392612271565b61094d565b610198565b90565b6122ea6122e56122ef926103d1565b61094d565b610198565b90565b61230161230791939293610198565b92610198565b820180921161231257565b610c18565b61232b61232661233092610198565b61094d565b6103b1565b90565b9061234c6dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236a61236561236f926103b1565b61094d565b6103b1565b90565b90565b9061238a61238561239192612356565b612372565b8254612333565b9055565b60701b90565b906123b76dffffffffffffffffffffffffffff60701b91612395565b9181191691161790565b906123d66123d16123dd92612356565b612372565b825461239b565b9055565b906123f363ffffffff60e01b91610bd3565b9181191691161790565b61241161240c612416926103d1565b61094d565b6103d1565b90565b90565b9061243161242c612438926123fd565b612419565b82546123e1565b9055565b91602061245e929493612457604082019660008301906103c4565b01906103c4565b565b90928161248361247d6dffffffffffffffffffffffffffff610af0565b91610198565b11801561266f575b6126525761251f9361250c61250561251894612511946124c16124bc426124b66401000000006121b8565b906121d4565b6121f6565b976124d6896124d06009611409565b90612212565b91826124eb6124e56000612239565b916103d1565b1180612636575b8061261a575b61256e575b505050612317565b6009612375565b612317565b60096123c1565b600961241c565b61252960096113b8565b61253360096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad191612569612560610183565b9283928361243c565b0390a1565b612612926125f66125f06125eb846125e56125df61260b986125da6125d36125c46125b56125b06125a16125fc9e612d5b565b6125aa8761227c565b90612298565b6122ba565b6125be8c6122d6565b90610c53565b6125ce600a61148f565b6122f2565b600a611667565b612d5b565b9161227c565b90612298565b6122ba565b916122d6565b90610c53565b612606600b61148f565b6122f2565b600b611667565b3880806124fd565b508061262f6126296000612255565b916103b1565b14156124f8565b508161264b6126456000612255565b916103b1565b14156124f2565b6000631a93c68960e11b81528061266b600482016102a9565b0390fd5b508361269161268b6dffffffffffffffffffffffffffff610af0565b91610198565b1161248b565b600090565b6126a4612697565b503390565b916126b79291600192612d86565b565b6040906126e36126ea94969593966126d960608401986000850190610523565b602083019061057b565b019061057b565b565b906126f79103610198565b90565b929192612708818390611eba565b908161271e612718600019610198565b91610198565b1061272b575b5050509050565b8161273e61273887610198565b91610198565b106127655761275c93946127539193926126ec565b90600092612d86565b80388080612724565b50612785849291926000938493637dc7a0d960e11b8552600485016126b9565b0390fd5b91826127a66127a061279b6000611625565b6101ca565b916101ca565b1461280357816127c76127c16127bc6000611625565b6101ca565b916101ca565b146127da576127d892919091612ea9565b565b6127ff6127e76000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b6128286128106000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61283590610b38565b90565b6128419061282c565b90565b61284d90610b70565b90565b9050519061285d826101d6565b565b906020828203126128795761287691600001612850565b90565b61018e565b90565b61289561289061289a9261287e565b61094d565b610198565b90565b91906128a7611454565b506128dd60206128c76128c26128bd6006610b2b565b612838565b612844565b63017e7e58906128d5610183565b938492610bd3565b825281806128ed600482016102a9565b03915afa908115612a7d57600091612a4f575b50908161291e6129186129136000611625565b6101ca565b916101ca565b14159361292b600c61148f565b9185600014612a1457826129486129426000610ad4565b91610198565b03612955575b505050505b565b61297761297c9161297161296b61298295610af0565b91610af0565b90610c53565b612ab3565b91612ab3565b908061299661299084610198565b91610198565b116129a2575b8061294e565b6129de6129e4926129d96129c86129b761149c565b6129c2868590610c2e565b90610c53565b936129d36005612881565b90610c53565b6122f2565b906115e7565b806129f86129f26000610ad4565b91610198565b11612a04575b8061299c565b612a0d91612b82565b38806129fe565b50509050612a2b612a256000610ad4565b91610198565b03612a36575b612953565b612a4a612a436000610ad4565b600c611667565b612a31565b612a70915060203d8111612a76575b612a688183610baa565b81019061285f565b38612900565b503d612a5e565b610c07565b90612a8b610b0c565b5081612a9f612a9983610198565b91610198565b10600014612aac57505b90565b9050612aa9565b612abb610b0c565b81612acf612ac96003610c8b565b91610198565b11600014612b50575080612b00612af083612aea6002612059565b906115e7565b612afa60016120de565b906122f2565b905b81612b15612b0f83610198565b91610198565b1015612b495750612b43612b3382612b2e8582906115e7565b6122f2565b612b3d6002612059565b906115e7565b90612b02565b929150505b565b9190612b65612b5f6000610ad4565b91610198565b03612b70575b612b4e565b9050612b7c60016120de565b90612b6b565b80612b9e612b98612b936000611625565b6101ca565b916101ca565b14612bbb57612bb991612bb16000611625565b919091612ea9565b565b612be0612bc86000611625565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c01612bfb612bf66000611625565b6101ca565b916101ca565b14612c1e57612c1c9190612c156000611625565b9091612ea9565b565b612c43612c2b6000611625565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c55610b0c565b50612c5e610b0c565b50828151910182855af115612cf6573d60005190612c85612c7f6000610ad4565b91610198565b14600014612cdc5750612c9781610b7c565b3b612cab612ca56000610ad4565b91610198565b145b612cb45750565b612cc0612cd891610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612cef612ce960016120de565b91610198565b1415612cad565b6040513d6000823e3d90fd5b600090565b90565b612d1e612d19612d2392612d07565b61094d565b612271565b90565b612d35612d3b91939293612271565b92612271565b91612d47838202612271565b928184041490151715612d5657565b610c18565b612d70612d8391612d6a612d02565b5061227c565b612d7d600160701b612d0a565b90612d26565b90565b909281612da4612d9e612d996000611625565b6101ca565b916101ca565b14612e725783612dc5612dbf612dba6000611625565b6101ca565b916101ca565b14612e4957612de983612de4612ddd60018690611ea2565b87906119d3565b611667565b612df3575b505050565b919091612e3e612e2c612e267f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e35610183565b91829182610588565b0390a3388080612dee565b612e6e612e566000611625565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612e97612e7f6000611625565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ea69101610198565b90565b91909180612ec8612ec2612ebd6000611625565b6101ca565b916101ca565b14600014612fad57612eed612ee683612ee1600261148f565b6122f2565b6002611667565b5b82612f0a612f04612eff6000611625565b6101ca565b916101ca565b14600014612f8057612f2f612f2883612f23600261148f565b6126ec565b6002611667565b5b919091612f7b612f69612f637fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f72610183565b91829182610588565b0390a3565b612fa882612fa2612f93600087906119d3565b91612f9d8361148f565b612e9b565b90611667565b612f30565b612fc1612fbc600083906119d3565b61148f565b80612fd4612fce85610198565b91610198565b10612ffd57612fe7612ff89184906126ec565b612ff3600084906119d3565b611667565b612eee565b9061301c909192600093849363391434e360e21b8552600485016126b9565b0390fdfea2646970667358221220646cee990f1e19ff1172eb103aa2f85cdded62859d16fe970fd983953ff88e6164736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E4C JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x204C JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x269C JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x161D PUSH2 0x1618 PUSH2 0x1622 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x162E SWAP1 PUSH2 0x1609 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x163E PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165C PUSH2 0x1657 PUSH2 0x1661 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167C PUSH2 0x1677 PUSH2 0x1683 SWAP3 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1631 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A6 PUSH2 0x16A0 PUSH2 0x169B ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A2 JUMPI PUSH2 0x16B3 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x1709 PUSH1 0x20 PUSH2 0x16D7 PUSH2 0x16D2 PUSH2 0x16CD PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x16FE PUSH2 0x16E9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F2 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x196F JUMPI JUMPDEST POP SWAP4 PUSH2 0x176F PUSH1 0x20 PUSH2 0x173D PUSH2 0x1738 PUSH2 0x1733 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1764 PUSH2 0x174F ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1758 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x193C JUMPI JUMPDEST POP SWAP2 PUSH2 0x1797 DUP7 PUSH2 0x1791 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AB DUP2 PUSH2 0x17A5 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17B7 DUP5 DUP3 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP4 PUSH2 0x17C0 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D4 PUSH2 0x17CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F3 JUMPI POP PUSH2 0x1801 PUSH2 0x17F3 PUSH2 0x17EE DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x181D PUSH2 0x180F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1817 PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2B82 JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1832 PUSH2 0x182C PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18D6 JUMPI PUSH2 0x1845 PUSH2 0x184E SWAP6 DUP12 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x189A JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1880 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1895 PUSH2 0x188C PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x18CA PUSH2 0x18B2 PUSH2 0x18AD PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C4 PUSH2 0x18BF PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18EF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1936 SWAP1 PUSH2 0x1930 PUSH2 0x1921 PUSH2 0x191A PUSH2 0x190B DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1914 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192A DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2A82 JUMP JUMPDEST SWAP9 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x195D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1963 JUMPI JUMPDEST PUSH2 0x1955 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1782 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1990 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1996 JUMPI JUMPDEST PUSH2 0x1988 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x197E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D0 SWAP1 PUSH2 0x19CB PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19DD SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A02 PUSH2 0x1A07 SWAP2 PUSH2 0x19FA PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A1D SWAP3 SWAP2 PUSH2 0x1A18 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1A29 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A27 PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A49 PUSH2 0x1A43 PUSH2 0x1A3E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E2F JUMPI PUSH2 0x1A56 PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A65 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A6F PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1AB8 PUSH1 0x20 PUSH2 0x1A86 PUSH2 0x1A81 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AAD PUSH2 0x1A98 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA1 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DFC JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B15 PUSH1 0x20 PUSH2 0x1AE3 PUSH2 0x1ADE DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0A PUSH2 0x1AF5 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AFE PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DF7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DC9 JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3B PUSH2 0x1B36 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP7 PUSH2 0x1B76 PUSH2 0x1B4A DUP3 DUP5 SWAP1 PUSH2 0x289D JUMP JUMPDEST SWAP6 PUSH2 0x1B71 PUSH2 0x1B6A PUSH2 0x1B63 PUSH2 0x1B5C PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8B PUSH2 0x1B85 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DAE JUMPI JUMPDEST PUSH2 0x1D91 JUMPI PUSH2 0x1BEA PUSH2 0x1BE5 PUSH2 0x1C1C SWAP7 PUSH2 0x1BB5 PUSH1 0x20 SWAP5 PUSH2 0x1BB0 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x1BCB DUP14 PUSH2 0x1BC2 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1BE0 PUSH2 0x1BD7 DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C11 PUSH2 0x1BFC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C05 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1C48 PUSH2 0x1C43 PUSH2 0x1C7A SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D5F JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C6F PUSH2 0x1C5A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C63 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1C99 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D2C JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x1CF0 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CD6 PUSH2 0x1CD0 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEB PUSH2 0x1CE2 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D27 PUSH2 0x1D20 PUSH2 0x1D08 PUSH2 0x1D03 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x1D15 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1D4D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D53 JUMPI JUMPDEST PUSH2 0x1D45 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C90 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D7F SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D85 JUMPI JUMPDEST PUSH2 0x1D77 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C3C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAA PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC3 PUSH2 0x1DBD PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x1DEA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF0 JUMPI JUMPDEST PUSH2 0x1DE2 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B28 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DD8 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E23 JUMPI JUMPDEST PUSH2 0x1E15 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E48 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E66 SWAP1 PUSH2 0x1E58 PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E60 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0A JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E72 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E7D PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E9D SWAP2 PUSH2 0x1E8C PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E95 PUSH2 0x269C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EAC SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EDF SWAP2 PUSH2 0x1ED5 PUSH2 0x1EDA SWAP3 PUSH2 0x1ECD PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA2 JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEA PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x1EF2 PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x1EFA PUSH2 0x2107 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F4D PUSH1 0x20 PUSH2 0x1F1B PUSH2 0x1F16 PUSH2 0x1F11 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F42 PUSH2 0x1F2D ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F36 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2047 JUMPI PUSH2 0x1FB2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2019 JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F80 PUSH2 0x1F7B PUSH2 0x1F76 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FA7 PUSH2 0x1F92 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9B PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2014 JUMPI PUSH2 0x1FE4 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FE6 JUMPI JUMPDEST POP PUSH2 0x1FD3 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FDE PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2460 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2007 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x200D JUMPI JUMPDEST PUSH2 0x1FFF DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FC8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF5 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203A SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2040 JUMPI JUMPDEST PUSH2 0x2032 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F63 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2028 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2054 PUSH2 0x1EE2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x206D PUSH2 0x2068 PUSH2 0x2072 SWAP3 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A5 PUSH2 0x209F PUSH2 0x209A PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20BE JUMPI PUSH2 0x20BC PUSH2 0x20B5 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20D7 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F2 PUSH2 0x20ED PUSH2 0x20F7 SWAP3 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2104 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2119 PUSH2 0x2112 PUSH2 0x20FA JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213B PUSH2 0x2136 PUSH2 0x2140 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2165 SWAP3 SWAP5 SWAP4 PUSH2 0x215E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21AE PUSH2 0x21B3 SWAP4 PUSH2 0x219F PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x2186 PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x2127 JUMP JUMPDEST SWAP3 PUSH2 0x218F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C47 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21CC PUSH2 0x21C7 PUSH2 0x21D1 SWAP3 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E0 PUSH2 0x21E6 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F1 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220A PUSH2 0x2205 PUSH2 0x220F SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x221E PUSH2 0x2224 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2234 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x224D PUSH2 0x2248 PUSH2 0x2252 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2269 PUSH2 0x2264 PUSH2 0x226E SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2290 PUSH2 0x228B PUSH2 0x2295 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A4 PUSH2 0x22AA SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2271 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B5 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22CE PUSH2 0x22C9 PUSH2 0x22D3 SWAP3 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EA PUSH2 0x22E5 PUSH2 0x22EF SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2301 PUSH2 0x2307 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2312 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232B PUSH2 0x2326 PUSH2 0x2330 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x234C PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236A PUSH2 0x2365 PUSH2 0x236F SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238A PUSH2 0x2385 PUSH2 0x2391 SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2333 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23B7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2395 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23D6 PUSH2 0x23D1 PUSH2 0x23DD SWAP3 PUSH2 0x2356 JUMP JUMPDEST PUSH2 0x2372 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239B JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2411 PUSH2 0x240C PUSH2 0x2416 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2431 PUSH2 0x242C PUSH2 0x2438 SWAP3 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2419 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x245E SWAP3 SWAP5 SWAP4 PUSH2 0x2457 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2483 PUSH2 0x247D PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x266F JUMPI JUMPDEST PUSH2 0x2652 JUMPI PUSH2 0x251F SWAP4 PUSH2 0x250C PUSH2 0x2505 PUSH2 0x2518 SWAP5 PUSH2 0x2511 SWAP5 PUSH2 0x24C1 PUSH2 0x24BC TIMESTAMP PUSH2 0x24B6 PUSH5 0x100000000 PUSH2 0x21B8 JUMP JUMPDEST SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH2 0x21F6 JUMP JUMPDEST SWAP8 PUSH2 0x24D6 DUP10 PUSH2 0x24D0 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2212 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EB PUSH2 0x24E5 PUSH1 0x0 PUSH2 0x2239 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x2636 JUMPI JUMPDEST DUP1 PUSH2 0x261A JUMPI JUMPDEST PUSH2 0x256E JUMPI JUMPDEST POP POP POP PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2375 JUMP JUMPDEST PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2529 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2533 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x2569 PUSH2 0x2560 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x243C JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2612 SWAP3 PUSH2 0x25F6 PUSH2 0x25F0 PUSH2 0x25EB DUP5 PUSH2 0x25E5 PUSH2 0x25DF PUSH2 0x260B SWAP9 PUSH2 0x25DA PUSH2 0x25D3 PUSH2 0x25C4 PUSH2 0x25B5 PUSH2 0x25B0 PUSH2 0x25A1 PUSH2 0x25FC SWAP15 PUSH2 0x2D5B JUMP JUMPDEST PUSH2 0x25AA DUP8 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x25BE DUP13 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2D5B JUMP JUMPDEST SWAP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x22BA JUMP JUMPDEST SWAP2 PUSH2 0x22D6 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2606 PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1667 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x24FD JUMP JUMPDEST POP DUP1 PUSH2 0x262F PUSH2 0x2629 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F8 JUMP JUMPDEST POP DUP2 PUSH2 0x264B PUSH2 0x2645 PUSH1 0x0 PUSH2 0x2255 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266B PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2691 PUSH2 0x268B PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248B JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A4 PUSH2 0x2697 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26B7 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E3 PUSH2 0x26EA SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26D9 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26F7 SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2708 DUP2 DUP4 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x271E PUSH2 0x2718 PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272B JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x273E PUSH2 0x2738 DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2765 JUMPI PUSH2 0x275C SWAP4 SWAP5 PUSH2 0x2753 SWAP2 SWAP4 SWAP3 PUSH2 0x26EC JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2D86 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2724 JUMP JUMPDEST POP PUSH2 0x2785 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x27A6 PUSH2 0x27A0 PUSH2 0x279B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2803 JUMPI DUP2 PUSH2 0x27C7 PUSH2 0x27C1 PUSH2 0x27BC PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x27DA JUMPI PUSH2 0x27D8 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27FF PUSH2 0x27E7 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2828 PUSH2 0x2810 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2835 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2841 SWAP1 PUSH2 0x282C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x284D SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x285D DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2879 JUMPI PUSH2 0x2876 SWAP2 PUSH1 0x0 ADD PUSH2 0x2850 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2895 PUSH2 0x2890 PUSH2 0x289A SWAP3 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28A7 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x28DD PUSH1 0x20 PUSH2 0x28C7 PUSH2 0x28C2 PUSH2 0x28BD PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x2844 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x28D5 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x28ED PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A7D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A4F JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x291E PUSH2 0x2918 PUSH2 0x2913 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x292B PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A14 JUMPI DUP3 PUSH2 0x2948 PUSH2 0x2942 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2955 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x2977 PUSH2 0x297C SWAP2 PUSH2 0x2971 PUSH2 0x296B PUSH2 0x2982 SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2AB3 JUMP JUMPDEST SWAP2 PUSH2 0x2AB3 JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x2996 PUSH2 0x2990 DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29A2 JUMPI JUMPDEST DUP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0x29DE PUSH2 0x29E4 SWAP3 PUSH2 0x29D9 PUSH2 0x29C8 PUSH2 0x29B7 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29C2 DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29D3 PUSH1 0x5 PUSH2 0x2881 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x29F8 PUSH2 0x29F2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A04 JUMPI JUMPDEST DUP1 PUSH2 0x299C JUMP JUMPDEST PUSH2 0x2A0D SWAP2 PUSH2 0x2B82 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x29FE JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A2B PUSH2 0x2A25 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A36 JUMPI JUMPDEST PUSH2 0x2953 JUMP JUMPDEST PUSH2 0x2A4A PUSH2 0x2A43 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2A70 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2A76 JUMPI JUMPDEST PUSH2 0x2A68 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x285F JUMP JUMPDEST CODESIZE PUSH2 0x2900 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2A8B PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2A9F PUSH2 0x2A99 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AAC JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2ABB PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2ACF PUSH2 0x2AC9 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B50 JUMPI POP DUP1 PUSH2 0x2B00 PUSH2 0x2AF0 DUP4 PUSH2 0x2AEA PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2AFA PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B15 PUSH2 0x2B0F DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B49 JUMPI POP PUSH2 0x2B43 PUSH2 0x2B33 DUP3 PUSH2 0x2B2E DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x2B3D PUSH1 0x2 PUSH2 0x2059 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B65 PUSH2 0x2B5F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B70 JUMPI JUMPDEST PUSH2 0x2B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x2B7C PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP1 PUSH2 0x2B6B JUMP JUMPDEST DUP1 PUSH2 0x2B9E PUSH2 0x2B98 PUSH2 0x2B93 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BBB JUMPI PUSH2 0x2BB9 SWAP2 PUSH2 0x2BB1 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2BE0 PUSH2 0x2BC8 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C01 PUSH2 0x2BFB PUSH2 0x2BF6 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C1E JUMPI PUSH2 0x2C1C SWAP2 SWAP1 PUSH2 0x2C15 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2EA9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C43 PUSH2 0x2C2B PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C55 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C5E PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2CF6 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2C85 PUSH2 0x2C7F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2CDC JUMPI POP PUSH2 0x2C97 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CAB PUSH2 0x2CA5 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CB4 JUMPI POP JUMP JUMPDEST PUSH2 0x2CC0 PUSH2 0x2CD8 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CEF PUSH2 0x2CE9 PUSH1 0x1 PUSH2 0x20DE JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D1E PUSH2 0x2D19 PUSH2 0x2D23 SWAP3 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2271 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D35 PUSH2 0x2D3B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2271 JUMP JUMPDEST SWAP3 PUSH2 0x2271 JUMP JUMPDEST SWAP2 PUSH2 0x2D47 DUP4 DUP3 MUL PUSH2 0x2271 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D56 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D70 PUSH2 0x2D83 SWAP2 PUSH2 0x2D6A PUSH2 0x2D02 JUMP JUMPDEST POP PUSH2 0x227C JUMP JUMPDEST PUSH2 0x2D7D PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D0A JUMP JUMPDEST SWAP1 PUSH2 0x2D26 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DA4 PUSH2 0x2D9E PUSH2 0x2D99 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E72 JUMPI DUP4 PUSH2 0x2DC5 PUSH2 0x2DBF PUSH2 0x2DBA PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E49 JUMPI PUSH2 0x2DE9 DUP4 PUSH2 0x2DE4 PUSH2 0x2DDD PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA2 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2DF3 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E3E PUSH2 0x2E2C PUSH2 0x2E26 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E35 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2DEE JUMP JUMPDEST PUSH2 0x2E6E PUSH2 0x2E56 PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E97 PUSH2 0x2E7F PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2EA6 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EC8 PUSH2 0x2EC2 PUSH2 0x2EBD PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAD JUMPI PUSH2 0x2EED PUSH2 0x2EE6 DUP4 PUSH2 0x2EE1 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F0A PUSH2 0x2F04 PUSH2 0x2EFF PUSH1 0x0 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2F80 JUMPI PUSH2 0x2F2F PUSH2 0x2F28 DUP4 PUSH2 0x2F23 PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26EC JUMP JUMPDEST PUSH1 0x2 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2F7B PUSH2 0x2F69 PUSH2 0x2F63 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F72 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FA8 DUP3 PUSH2 0x2FA2 PUSH2 0x2F93 PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST SWAP2 PUSH2 0x2F9D DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2E9B JUMP JUMPDEST SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x2FC1 PUSH2 0x2FBC PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x2FD4 PUSH2 0x2FCE DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2FFD JUMPI PUSH2 0x2FE7 PUSH2 0x2FF8 SWAP2 DUP5 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x2FF3 PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x2EEE JUMP JUMPDEST SWAP1 PUSH2 0x301C SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26B9 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x6CEE990F1E NOT SELFDESTRUCT GT PUSH19 0xEB103AA2F85CDDED62859D16FE970FD983953F EXTCALL DUP15 PUSH2 0x6473 PUSH16 0x6C634300081E00330000000000000000 ",
              "sourceMap": "480:12369:13:-:0;;;;;;;;;-1:-1:-1;480:12369:13;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;866:21::-;;;;;;:::i;:::-;;:::o;480:12369::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;1202:35::-;;;;;;:::i;:::-;;:::o;480:12369::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;1243:35::-;;;;;;:::i;:::-;;:::o;480:12369::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;1332:20::-;;;;;;:::i;:::-;;:::o;480:12369::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;652:49::-;696:5;;;:::i;:::-;652:49;:::o;:::-;;;:::i;:::-;;:::o;480:12369::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;777:22::-;;;;;;:::i;:::-;;:::o;480:12369::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;957:21::-;;;;;;:::i;:::-;;:::o;480:12369::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2466:103:10;;2531:1;2466:103;;;;;;:::i;:::-;2531:1;:::i;:::-;;;:::i;:::-;2466:103::o;480:12369:13:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;7939:2104::-;;;;;8100:10;:15;;8114:1;8100:15;:::i;:::-;;;:::i;:::-;;:34;;;7939:2104;8096:73;;8230:13;;:::i;:::-;8188:55;;;;8257:10;;:23;;8271:9;8257:23;:::i;:::-;;;:::i;:::-;;;:50;;;;7939:2104;8253:86;;8358:16;;:::i;:::-;8384;;;:::i;:::-;8442:6;;;;:::i;:::-;8480;;;:::i;:::-;8504:2;;:13;;8510:7;8504:13;:::i;:::-;;;:::i;:::-;;:30;;;;7939:2104;8500:54;;8987:15;:40;8585:10;8821:11;8987:40;8585:10;8987:25;8585:10;;:14;;8598:1;8585:14;:::i;:::-;;;:::i;:::-;;8581:64;;7939:2104;8663:10;;;:14;;8676:1;8663:14;:::i;:::-;;;:::i;:::-;;8659:64;;7939:2104;8821:4;;:11;:::i;:::-;:15;;8835:1;8821:15;:::i;:::-;;;:::i;:::-;;8817:133;;7939:2104;8987:15;:::i;:::-;:25;:::i;:::-;;9021:4;8987:40;9013:13;9021:4;9013:13;:::i;:::-;8987:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;9052:25;:15;:40;8987;9052;8987;;;;;7939:2104;8976:51;9059:7;9052:15;:::i;:::-;:25;:::i;:::-;;9086:4;9052:40;9078:13;9086:4;9078:13;:::i;:::-;9052:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;7939:2104;9041:51;9141:8;:33;;9152:22;:9;:22;9164:10;9152:22;;:::i;:::-;;:::i;:::-;9141:33;:::i;:::-;;;:::i;:::-;;:101;;;;9190:35;:8;9202:22;:9;:22;9214:10;9202:22;;:::i;:::-;;:::i;:::-;9190:35;;:::i;:::-;9141:101;9272:8;;:33;;9283:22;:9;:22;9295:10;9283:22;;:::i;:::-;;:::i;:::-;9272:33;:::i;:::-;;;:::i;:::-;;:101;;;;9321:35;:8;9333:22;:9;:22;9345:10;9333:22;;:::i;:::-;;:::i;:::-;9321:35;;:::i;:::-;9272:101;9396:9;;:14;;9409:1;9396:14;:::i;:::-;;;:::i;:::-;;:32;;;9272:101;9392:70;;9739:35;9597;9598:15;:8;:15;9609:4;9598:15;:::i;:::-;;;:::i;:::-;9618:13;:9;:13;9630:1;9618:13;:::i;:::-;;;:::i;:::-;9597:35;;:::i;:::-;9673;9674:15;:8;:15;9685:4;9674:15;:::i;:::-;;;:::i;:::-;9694:13;:9;:13;9706:1;9694:13;:::i;:::-;;;:::i;:::-;9673:35;;:::i;:::-;9739;;:::i;:::-;:78;;9777:40;:30;:18;9785:9;9777:18;:::i;:::-;:30;9798:9;9777:30;:::i;:::-;;;:::i;:::-;:40;9810:7;9777:40;:::i;:::-;;;:::i;:::-;9739:78;:::i;:::-;;;:::i;:::-;;9735:134;;9936:9;9905:8;9915;9925:9;9936;;;:::i;:::-;9970:66;9975:10;9987:9;9998;10009:10;10021;9970:66;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;7939:2104::o;9735:134::-;9844:10;;;;;;;;;;;;:::i;:::-;;;;9392:70;9437:25;;;;;;;;;;;;:::i;:::-;;;;9396:32;9414:9;;:14;;9427:1;9414:14;:::i;:::-;;;:::i;:::-;;9396:32;;9272:101;;9372:1;9272:101;:::i;:::-;;;9141;;9241:1;9141:101;:::i;:::-;;;9052:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;8987:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;8817:133::-;;;8659:64;8712:10;8686:7;8679:15;8686:7;8679:15;:::i;:::-;8708:2;8712:10;;;:::i;:::-;8659:64;;;;8581;8634:10;8608:7;8601:15;8608:7;8601:15;:::i;:::-;8630:2;8634:10;;;:::i;:::-;8581:64;;8500:54;8543:11;;;;;;;;;;;;:::i;:::-;;;;8504:30;8521:2;;:13;;8527:7;8521:13;:::i;:::-;;;:::i;:::-;;8504:30;;8253:86;8316:23;;;;;;;;;;;;:::i;:::-;;;;8257:50;8284:10;;:23;;8298:9;8284:23;:::i;:::-;;;:::i;:::-;;;8257:50;;8096:73;8143:26;;;;;;;;;;;;:::i;:::-;;;;8100:34;8119:10;;:15;;8133:1;8119:15;:::i;:::-;;;:::i;:::-;;8100:34;;7939:2104;;;;;;;;:::i;:::-;:::o;480:12369::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;1760:89:5:-;1805:13;;:::i;:::-;1837:5;1830:12;1837:5;1830:12;:::i;:::-;;:::o;480:12369:13:-;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;4454:257::-;4507:17;;:::i;:::-;4534;;;:::i;:::-;4561:26;;;:::i;:::-;4616:8;;;;:::i;:::-;4646;;;;:::i;:::-;4686:18;;;;:::i;:::-;4454:257;:::o;480:12369::-;;;:::o;3902:186:5:-;4054:5;3902:186;3975:4;;:::i;:::-;4007:12;;;:::i;:::-;4045:7;4054:5;;;:::i;:::-;4077:4;4070:11;:::o;480:12369:13:-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;2803:97:5:-;2855:7;;:::i;:::-;2881:12;;;;:::i;:::-;2874:19;:::o;4680:244::-;;4890:5;4680:244;4767:4;;:::i;:::-;4801:12;4854:5;4801:12;;:::i;:::-;4839:4;4845:7;4854:5;;;:::i;:::-;4886:2;4890:5;;;:::i;:::-;4913:4;4906:11;:::o;480:12369:13:-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2688:82:5:-;2737:5;;:::i;:::-;2761:2;2754:9;2761:2;2754:9;:::i;:::-;;:::o;480:12369:13:-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4003:180::-;;4080:10;:21;;4094:7;;;:::i;:::-;4080:21;:::i;:::-;;;:::i;:::-;;4076:48;;4134:16;4160;4143:7;4134:16;;:::i;:::-;4160;;:::i;:::-;4003:180::o;4076:48::-;4110:14;;;;;;;;;;;;:::i;:::-;;;;2466:103:10;;2531:1;2466:103;;;:::i;:::-;2531:1;:::i;:::-;;;;:::i;:::-;2466:103::o;480:12369:13:-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4912:1272::-;;;;5002:2;;:19;;5008:13;5016:4;5008:13;:::i;:::-;5002:19;:::i;:::-;;;:::i;:::-;;4998:43;;5102:13;;:::i;:::-;5060:55;;;;5151:6;5144:39;;:24;:14;5151:6;;;:::i;:::-;5144:14;:::i;:::-;:24;:::i;:::-;;5177:4;5144:39;5169:13;5177:4;5169:13;:::i;:::-;5144:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;4912:1272;5125:58;5219:6;5212:39;;:24;:14;5219:6;;;:::i;:::-;5212:14;:::i;:::-;:24;:::i;:::-;;5245:4;5212:39;5237:13;5245:4;5237:13;:::i;:::-;5212:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;4912:1272;5193:58;5279:8;:20;:8;:20;5290:9;5279:20;:::i;:::-;;;:::i;:::-;5327:8;:20;:8;:20;5338:9;5327:20;:::i;:::-;;;:::i;:::-;5388:9;5379:30;5388:9;5399;5379:30;;:::i;:::-;5442:13;;;:::i;:::-;5478:12;:17;;5494:1;5478:17;:::i;:::-;;;:::i;:::-;;5474:422;;;;5566:7;5560:44;:24;5566:17;:7;5576;5566:17;;:::i;:::-;5560:24;:::i;:::-;5587:17;;:::i;:::-;5560:44;;:::i;:::-;5632:1;5636:17;5624:10;5632:1;5624:10;:::i;:::-;5636:17;;:::i;:::-;;;:::i;:::-;5474:422;5918:9;:14;;5931:1;5918:14;:::i;:::-;;;:::i;:::-;;5914:50;;5984:9;6052;5980:2;5984:9;;;:::i;:::-;6031:8;6041:9;6052;;;:::i;:::-;6072:47;;5474:422;6148:10;6160:7;6169;6143:34;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;4912:1272::o;6072:47::-;6083:36;6091:28;:17;6099:8;;;:::i;:::-;6091:17;:::i;:::-;:28;6111:8;;;:::i;:::-;6091:28;:::i;:::-;;;:::i;:::-;6083:36;;:::i;:::-;6072:47;;5914:50;5941:23;8316;;;5941;;;;;;;;:::i;:::-;;;;5474:422;5759:126;5782:7;5835:36;5836:22;5781:36;5782:22;:7;5792:12;5782:22;;:::i;:::-;5781:36;5808:9;5781:36;:::i;:::-;;;:::i;:::-;5836:7;;:22;:::i;:::-;5835:36;5862:9;5835:36;:::i;:::-;;;:::i;:::-;5759:126;;:::i;:::-;5474:422;;;5212:39;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;5144:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;4998:43::-;5030:11;8543;;;5030;;;;;;;;:::i;:::-;;;;4912:1272;4969:17;4912:1272;4969:17;;:::i;:::-;;:::i;:::-;4912:1272;:::o;480:12369::-;;;;;:::i;:::-;;;;;;;;;:::o;2933:116:5:-;3024:18;;2933:116;2998:7;;:::i;:::-;3024:9;;:18;:::i;:::-;;:::i;:::-;3017:25;:::o;2466:103:10:-;;2531:1;2466:103;;;;:::i;:::-;2531:1;:::i;:::-;;;;;:::i;:::-;2466:103::o;6421:1275:13:-;;;;;6526:2;;:19;;6532:13;6540:4;6532:13;:::i;:::-;6526:19;:::i;:::-;;;:::i;:::-;;6522:43;;6626:13;;:::i;:::-;6584:55;;;;6667:6;;;;:::i;:::-;6701;;;:::i;:::-;6743:7;6736:40;;:25;:15;6743:7;6736:15;:::i;:::-;:25;:::i;:::-;;6770:4;6736:40;6762:13;6770:4;6762:13;:::i;:::-;6736:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;6421:1275;6717:59;6812:7;6805:40;;:25;:15;6812:7;6805:15;:::i;:::-;:25;:::i;:::-;;6839:4;6805:40;6831:13;6839:4;6831:13;:::i;:::-;6805:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;6421:1275;6786:59;6893:4;6875:24;6885:13;6893:4;6885:13;:::i;:::-;6875:24;:::i;:::-;6940:9;7093:37;6931:30;6940:9;6951;6931:30;;:::i;:::-;6994:13;7094:20;7036:37;7037:20;6994:13;;:::i;:::-;7037:9;;:20;:::i;:::-;7061:12;7036:37;;:::i;:::-;7094:9;;:20;:::i;:::-;7093:37;:::i;:::-;7153:7;;:12;;7164:1;7153:12;:::i;:::-;;;:::i;:::-;;:28;;;;6421:1275;7149:70;;7401:25;:15;:40;7252:4;7259:9;7401:40;7252:4;7244:13;7252:4;7244:13;:::i;:::-;7259:9;:::i;:::-;7312:7;7286;7279:15;7286:7;7279:15;:::i;:::-;7308:2;;7312:7;;;:::i;:::-;7363;7330:15;7337:7;7330:15;:::i;:::-;7359:2;;7363:7;;;:::i;:::-;7401:15;:::i;:::-;:25;:::i;:::-;;7435:4;7401:40;7427:13;7435:4;7427:13;:::i;:::-;7401:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;7462:25;:15;:40;7401;7462;7401;;;;;6421:1275;7390:51;7469:7;7462:15;:::i;:::-;:25;:::i;:::-;;7496:4;7462:40;7488:13;7496:4;7488:13;:::i;:::-;7462:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;7560:9;7462:40;;;;;6421:1275;7451:51;7549:9;7560;;;:::i;:::-;7580:47;;6421:1275;7656:10;7668:7;;7677;;7651:38;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;6421:1275::o;7580:47::-;7591:36;7599:28;:17;7607:8;;;:::i;:::-;7599:17;:::i;:::-;:28;7619:8;;;:::i;:::-;7599:28;:::i;:::-;;;:::i;:::-;7591:36;;:::i;:::-;7580:47;;7462:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7401:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7149:70::-;7190:29;;;;;;;;;;;;:::i;:::-;;;;7153:28;7169:7;;:12;;7180:1;7169:12;:::i;:::-;;;:::i;:::-;;7153:28;;6805:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;6736:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;6522:43::-;6554:11;8543;;;6554;;;;;;;;:::i;:::-;;;;6421:1275;6495:15;6421:1275;6478:15;;:::i;:::-;6495;;:::i;:::-;;;:::i;:::-;6421:1275;;:::o;1962:93:5:-;2009:13;;:::i;:::-;2041:7;2034:14;2041:7;2034:14;:::i;:::-;;:::o;3244:178::-;3388:5;3244:178;3313:4;;:::i;:::-;3345:12;;;:::i;:::-;3384:2;3388:5;;;:::i;:::-;3411:4;3404:11;:::o;480:12369:13:-;;;;;:::i;:::-;;;;;;;;;:::o;3455:140:5:-;3561:27;3455:140;3561:18;:27;3455:140;3535:7;;:::i;:::-;3561:11;;:18;:::i;:::-;:27;:::i;:::-;;:::i;:::-;3554:34;:::o;2466:103:10:-;;;:::i;:::-;2531:1;;:::i;:::-;;;:::i;:::-;2466:103::o;10124:222:13:-;10193:39;;:24;:14;10200:6;;;:::i;:::-;10193:14;:::i;:::-;:24;:::i;:::-;;10226:4;10193:39;10218:13;10226:4;10218:13;:::i;:::-;10193:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;10246;10193;;;;;10124:222;10253:6;10246:39;:24;:14;10253:6;;;:::i;:::-;10246:14;:::i;:::-;:24;:::i;:::-;;10279:4;10246:39;10271:13;10279:4;10271:13;:::i;:::-;10246:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;10321:8;10246:39;;;;;10124:222;10299:8;;;;:::i;:::-;10321;;;;:::i;:::-;;;:::i;:::-;10124:222::o;10246:39::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;10193:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;10124:222::-;;;:::i;:::-;:::o;480:12369::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1864:36:10:-;1899:1;;;:::i;:::-;1864:36;:::o;2575:307::-;2702:7;;;:::i;:::-;:18;;2713:7;;:::i;:::-;2702:18;:::i;:::-;;;:::i;:::-;;2698:86;;2858:17;2868:7;;:::i;:::-;2858:17;;:::i;:::-;2575:307::o;2698:86::-;2743:30;;;;;;;;;;;;:::i;:::-;;;;480:12369:13;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:10:-;1857:1;;;:::i;:::-;1818:40;:::o;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;:::-;2888:208::o;480:12369:13:-;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;1219:160:8:-;;1328:43;;1219:160;1328:43;;1219:160;1343:14;1328:43;1343:14;1360:2;1364:5;1328:43;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1219:160::o;480:12369:13:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;10406:847::-;;;10557:8;:28;;10568:17;10557:28;:::i;:::-;;;:::i;:::-;;:60;;;;10406:847;10553:108;;11163:35;10710:15;11087:28;11098:17;11125:28;10710:15;11136:17;10710:15;10703:31;10710:23;:15;:23;10728:5;10710:23;:::i;:::-;;;:::i;:::-;10703:31;:::i;:::-;10765:14;:35;:14;10782:18;;;:::i;:::-;10765:35;;:::i;:::-;10823:11;;:15;;10837:1;10823:15;:::i;:::-;;;:::i;:::-;;:33;;;10406:847;10823:51;;;10406:847;10819:250;;10406:847;11106:8;;;11098:17;:::i;:::-;11087:28;;:::i;:::-;11136:17;:::i;:::-;11125:28;;:::i;:::-;11163:35;;:::i;:::-;11227:8;;;:::i;:::-;11237;;;:::i;:::-;11222:24;;;;;:::i;:::-;;;;;;:::i;:::-;;;;10406:847::o;10819:250::-;10981:77;10930:9;11005:53;:39;11013:30;10930:9;11013:30;:18;10981:77;10930:9;10890:77;;10914:53;:39;10922:30;:18;11005:53;10930:9;10922:18;:::i;:::-;:30;10943:9;10922:30;:::i;:::-;;;:::i;:::-;10914:39;:::i;:::-;:53;10956:11;10914:53;:::i;:::-;;;:::i;:::-;10890:77;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;11013:18;:::i;:::-;11034:9;11013:30;:::i;:::-;;;:::i;:::-;11005:39;:::i;:::-;11047:11;11005:53;:::i;:::-;;;:::i;:::-;10981:77;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;10819:250;;;;;10823:51;10860:9;;:14;;10873:1;10860:14;:::i;:::-;;;:::i;:::-;;;10823:51;;:33;10842:9;;:14;;10855:1;10842:14;:::i;:::-;;;:::i;:::-;;;10823:33;;10553:108;10640:10;;;;;;;;;;;;:::i;:::-;;;;10557:60;10589:8;;:28;;10600:17;10589:28;:::i;:::-;;;:::i;:::-;;10557:60;;480:12369;;;:::o;656:96:9:-;709:7;;:::i;:::-;735:10;;728:17;:::o;8630:128:5:-;;8746:4;8630:128;8730:7;8746:4;;;:::i;:::-;8630:128::o;480:12369:13:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::o;10319:476:5:-;;;;10445:25;10455:5;10462:7;10445:25;;:::i;:::-;10484:16;;:36;;480:12369:13;;10484:36:5;:::i;:::-;;;:::i;:::-;;10480:309;;10319:476;;;;;;:::o;10480:309::-;10540:16;:24;;10559:5;10540:24;:::i;:::-;;;:::i;:::-;;10536:130;;10758:5;10716;;10732:24;10716:5;10723:7;10732:16;:24;:::i;:::-;10758:5;;;;:::i;:::-;10480:309;;;;;;10536:130;10618:7;10591:60;10618:7;;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;5297:300;;5380:4;:18;;5388:10;5396:1;5388:10;:::i;:::-;5380:18;:::i;:::-;;;:::i;:::-;;5376:86;;5475:2;:16;;5481:10;5489:1;5481:10;:::i;:::-;5475:16;:::i;:::-;;;:::i;:::-;;5471:86;;5584:5;5574:4;5580:2;5584:5;;;:::i;:::-;5297:300::o;5471:86::-;5514:32;5535:10;5543:1;5535:10;:::i;:::-;5514:32;;;;;;;;;;;;;:::i;:::-;;;;5376:86;5421:30;5440:10;5448:1;5440:10;:::i;:::-;5421:30;;;;;;;;;;;;;:::i;:::-;;;;480:12369:13;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;11313:808::-;;;11386:10;;:::i;:::-;11433:7;11424:25;;:23;:17;11433:7;;;:::i;:::-;11424:17;:::i;:::-;:23;:::i;:::-;;:25;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;11313:808;11408:41;11467:5;;:19;;11476:10;11484:1;11476:10;:::i;:::-;11467:19;:::i;:::-;;;:::i;:::-;;;11513:5;;;;:::i;:::-;11541;;11537:578;;;;11566:6;:11;;11576:1;11566:11;:::i;:::-;;;:::i;:::-;;11562:486;;11537:578;;;;;;11313:808::o;11562:486::-;11619:30;11613:37;11627:9;11619:30;:18;11688:13;11627:9;11619:18;:::i;:::-;11640:9;11619:30;:::i;:::-;;;:::i;:::-;11613:37;:::i;:::-;11694:6;11688:13;:::i;:::-;11723:5;;:17;;11731:9;11723:17;:::i;:::-;;;:::i;:::-;;11719:315;;11562:486;;;;11719:315;11863:23;11928;11784:13;11864:9;11784:35;:13;;:::i;:::-;11801:17;:5;11809:9;11801:17;;:::i;:::-;11784:35;;:::i;:::-;11864:5;:9;11872:1;11864:9;:::i;:::-;;;:::i;:::-;11863:23;:::i;:::-;11928;;:::i;:::-;11977:9;:13;;11989:1;11977:13;:::i;:::-;;;:::i;:::-;;11973:42;;11719:315;;;;11973:42;12005:9;11998:5;12005:9;:::i;:::-;11973:42;;;;11537:578;12068:6;;;;:11;;12078:1;12068:11;:::i;:::-;;;:::i;:::-;;12064:51;;11537:578;;;12064:51;12095:9;;12103:1;12095:9;:::i;:::-;;;:::i;:::-;12064:51;;11424:25;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;12560:104::-;;12618:7;;:::i;:::-;12644:1;;:5;;12648:1;12644:5;:::i;:::-;;;:::i;:::-;;:13;;;;12652:1;12644:13;12637:20;:::o;12644:13::-;12656:1;;12644:13;;12202:301;12250:9;;:::i;:::-;12275:1;:5;;12279:1;12275:5;:::i;:::-;;;:::i;:::-;;12271:226;;;;12300:1;;12327:9;:5;:1;:5;12331:1;12327:5;:::i;:::-;;;:::i;:::-;:9;12335:1;12327:9;:::i;:::-;;;:::i;:::-;12350:89;;12357:1;:5;;12361:1;12357:5;:::i;:::-;;;:::i;:::-;;;;;12386:1;12409:15;12410:9;12386:1;12410:5;:1;12414;12410:5;;:::i;:::-;:9;:::i;:::-;12409:15;12423:1;12409:15;:::i;:::-;;;:::i;:::-;12350:89;;;12357:5;;;;;12271:226;12202:301::o;12271:226::-;12459:1;;:6;;12464:1;12459:6;:::i;:::-;;;:::i;:::-;;12455:42;;12271:226;;;12455:42;12485:1;;12481:5;12485:1;12481:5;:::i;:::-;12455:42;;;7362:208:5;7432:7;:21;;7443:10;7451:1;7443:10;:::i;:::-;7432:21;:::i;:::-;;;:::i;:::-;;7428:91;;7557:5;7544:1;7536:10;7544:1;7536:10;:::i;:::-;7548:7;7557:5;;;:::i;:::-;7362:208::o;7428:91::-;7476:32;7497:10;7505:1;7497:10;:::i;:::-;7476:32;5514;;;;;;7476;;;;;;:::i;:::-;;;;7888:206;;7958:7;:21;;7969:10;7977:1;7969:10;:::i;:::-;7958:21;:::i;:::-;;;:::i;:::-;;7954:89;;8081:5;8060:7;8077:1;8069:10;8077:1;8069:10;:::i;:::-;8081:5;;;:::i;:::-;7888:206::o;7954:89::-;8002:30;8021:10;8029:1;8021:10;:::i;:::-;8002:30;5421;;;;;;8002;;;;;;:::i;:::-;;;;8370:720:8;;8507:421;;8370:720;8450:18;;:::i;:::-;8478:19;;;:::i;:::-;8507:421;;;;;;;;;;;;;;;;8942:10;:15;;8956:1;8942:15;:::i;:::-;;;:::i;:::-;;:68;;;;8968:5;8960:14;8968:5;8960:14;:::i;:::-;:26;:31;;8990:1;8960:31;:::i;:::-;;;:::i;:::-;;8942:68;8938:146;;8370:720;:::o;8938:146::-;9058:14;9033:40;9066:5;9058:14;:::i;:::-;9033:40;;;;;;;;;;;;;:::i;:::-;;;;8942:68;8994:16;;9009:1;8994:16;:::i;:::-;;;:::i;:::-;;;8942:68;;8507:421;;;;;;;;;;480:12369:13;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;12736:111::-;12812:10;:28;12736:111;12786:7;;:::i;:::-;12820:1;12812:10;:::i;:::-;12825:15;480:12369;;;12825:15;:::i;:::-;12812:28;;:::i;:::-;12805:35;:::o;9605:432:5:-;;;9717:5;:19;;9726:10;9734:1;9726:10;:::i;:::-;9717:19;:::i;:::-;;;:::i;:::-;;9713:89;;9815:7;:21;;9826:10;9834:1;9826:10;:::i;:::-;9815:21;:::i;:::-;;;:::i;:::-;;9811:90;;9910:35;9940:5;9910:27;:18;:11;9922:5;9910:18;;:::i;:::-;9929:7;9910:27;;:::i;:::-;:35;:::i;:::-;9955:76;;9605:432;;;;:::o;9955:76::-;10005:7;10014:5;9989:31;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;9955:76;;;;;9811:90;9859:31;9879:10;9887:1;9879:10;:::i;:::-;9859:31;;;;;;;;;;;;;:::i;:::-;;;;9713:89;9759:32;9780:10;9788:1;9780:10;:::i;:::-;9759:32;;;;;;;;;;;;;:::i;:::-;;;;480:12369:13;;;;;;:::i;:::-;;:::o;5912:1107:5:-;;;;6001:4;:18;;6009:10;6017:1;6009:10;:::i;:::-;6001:18;:::i;:::-;;;:::i;:::-;;5997:540;;;;6137:21;;6153:5;6137:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5997:540;6551:2;:16;;6557:10;6565:1;6557:10;:::i;:::-;6551:16;:::i;:::-;;;:::i;:::-;;6547:425;;;;6714:21;;6730:5;6714:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;7002:2;7006:5;6987:25;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;5912:1107::o;6547:425::-;6925:22;6942:5;6925:22;:13;:9;6935:2;6925:13;;:::i;:::-;:22;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;;5997:540;6211:15;;:9;6221:4;6211:15;;:::i;:::-;;:::i;:::-;6244:11;:19;;6258:5;6244:19;:::i;:::-;;;:::i;:::-;;6240:115;;6493:19;6475:37;6493:11;6507:5;6493:19;;:::i;:::-;6475:15;:9;6485:4;6475:15;;:::i;:::-;:37;:::i;:::-;5997:540;;6240:115;6315:4;6290:50;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityBurned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u30d7\\u30fc\\u30eb\\u3068LP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u6a5f\\u80fd\\u3092\\u63d0\\u4f9b\\u3059\\u308b\\u30da\\u30a2\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InsufficientInputAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u5165\\u529b\\u91cf\"}],\"InsufficientLiquidity()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u6d41\\u52d5\\u6027\"}],\"InsufficientLiquidityBurned()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u6d41\\u52d5\\u6027\\u3092\\u30d0\\u30fc\\u30f3\"}],\"InsufficientOutputAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u51fa\\u529b\\u91cf\"}],\"InvalidK()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u6b63\\u306aK\\u5024\"}],\"InvalidTo()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u7121\\u52b9\\u306a\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"}],\"Overflow()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u30aa\\u30fc\\u30d0\\u30fc\\u30d5\\u30ed\\u30fc\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"Unauthorized()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u6a29\\u9650\\u306a\\u3057\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Burn(address,uint256,uint256,address)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u524a\\u9664\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount0\":\"\\u524a\\u9664\\u3055\\u308c\\u305ftoken0\\u306e\\u91cf\",\"amount1\":\"\\u524a\\u9664\\u3055\\u308c\\u305ftoken1\\u306e\\u91cf\",\"sender\":\"\\u6d41\\u52d5\\u6027\\u3092\\u524a\\u9664\\u3057\\u305f\\u30a2\\u30c9\\u30ec\\u30b9\",\"to\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"}},\"Mint(address,uint256,uint256)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u8ffd\\u52a0\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount0\":\"\\u8ffd\\u52a0\\u3055\\u308c\\u305ftoken0\\u306e\\u91cf\",\"amount1\":\"\\u8ffd\\u52a0\\u3055\\u308c\\u305ftoken1\\u306e\\u91cf\",\"sender\":\"\\u6d41\\u52d5\\u6027\\u3092\\u8ffd\\u52a0\\u3057\\u305f\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"Swap(address,uint256,uint256,uint256,uint256,address)\":{\"details\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount0In\":\"token0\\u306e\\u5165\\u529b\\u91cf\",\"amount0Out\":\"token0\\u306e\\u51fa\\u529b\\u91cf\",\"amount1In\":\"token1\\u306e\\u5165\\u529b\\u91cf\",\"amount1Out\":\"token1\\u306e\\u51fa\\u529b\\u91cf\",\"sender\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u3092\\u5b9f\\u884c\\u3057\\u305f\\u30a2\\u30c9\\u30ec\\u30b9\",\"to\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"}},\"Sync(uint112,uint112)\":{\"details\":\"\\u30ea\\u30b6\\u30fc\\u30d6\\u540c\\u671f\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"reserve0\":\"token0\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\",\"reserve1\":\"token1\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(address)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u3092\\u30d0\\u30fc\\u30f3\\uff08\\u6d41\\u52d5\\u6027\\u524a\\u9664\\uff09\",\"params\":{\"to\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"amount0\":\"\\u8fd4\\u5374\\u3055\\u308c\\u308btoken0\\u306e\\u91cf\",\"amount1\":\"\\u8fd4\\u5374\\u3055\\u308c\\u308btoken1\\u306e\\u91cf\"}},\"constructor\":{\"details\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getReserves()\":{\"details\":\"\\u73fe\\u5728\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\\u3068\\u6700\\u7d42\\u66f4\\u65b0\\u30d6\\u30ed\\u30c3\\u30af\\u6642\\u523b\\u3092\\u53d6\\u5f97\",\"returns\":{\"_blockTimestampLast\":\"\\u6700\\u7d42\\u66f4\\u65b0\\u30d6\\u30ed\\u30c3\\u30af\\u6642\\u523b\",\"_reserve0\":\"token0\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\",\"_reserve1\":\"token1\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"}},\"initialize(address,address)\":{\"details\":\"\\u30da\\u30a2\\u306e\\u521d\\u671f\\u5316\\uff08\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u304b\\u3089\\u547c\\u3073\\u51fa\\u3055\\u308c\\u308b\\uff09\",\"params\":{\"_token0\":\"\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\",\"_token1\":\"\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"mint(address)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u3092\\u30df\\u30f3\\u30c8\\uff08\\u6d41\\u52d5\\u6027\\u8ffd\\u52a0\\uff09\",\"params\":{\"to\":\"LP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"liquidity\":\"\\u30df\\u30f3\\u30c8\\u3055\\u308c\\u305fLP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"swap(uint256,uint256,address,bytes)\":{\"details\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u5b9f\\u884c\",\"params\":{\"amount0Out\":\"token0\\u306e\\u51fa\\u529b\\u91cf\",\"amount1Out\":\"token1\\u306e\\u51fa\\u529b\\u91cf\",\"data\":\"\\u30b3\\u30fc\\u30eb\\u30d0\\u30c3\\u30af\\u7528\\u30c7\\u30fc\\u30bf\",\"to\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"sync()\":{\"details\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u6b8b\\u9ad8\\u3092\\u30ea\\u30b6\\u30fc\\u30d6\\u306b\\u540c\\u671f\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"stateVariables\":{\"MINIMUM_LIQUIDITY\":{\"details\":\"\\u6700\\u5c0f\\u6d41\\u52d5\\u6027\\u91cf\\uff08\\u6700\\u521d\\u306e\\u6d41\\u52d5\\u6027\\u63d0\\u4f9b\\u6642\\u306b\\u30ed\\u30c3\\u30af\\u3055\\u308c\\u308b\\uff09\"},\"factory\":{\"details\":\"\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"},\"kLast\":{\"details\":\"kLast\\uff08\\u624b\\u6570\\u6599\\u8a08\\u7b97\\u7528\\uff09\"},\"price0CumulativeLast\":{\"details\":\"\\u7d2f\\u7a4d\\u4fa1\\u683c\\uff08\\u4fa1\\u683c\\u30aa\\u30e9\\u30af\\u30eb\\u7528\\uff09\"},\"reserve0\":{\"details\":\"\\u524d\\u56de\\u306e\\u5404\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"},\"token0\":{\"details\":\"\\u30da\\u30a2\\u306e\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"},\"token1\":{\"details\":\"\\u30da\\u30a2\\u306e\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"title\":\"DexPair\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Uniswap V2\\u306e\\u30da\\u30a2\\u30d1\\u30bf\\u30fc\\u30f3\\u306b\\u57fa\\u3065\\u3044\\u305f\\u5b9f\\u88c5\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexPair.sol\":\"DexPair\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DexPair.sol\":{\"keccak256\":\"0x7e731405f3fbfab11257dade15de5b4c2f43af63f6fcdf81673f13839e9c698c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01038134e037d1ad71a2d51a37fe1c79ac4ed84bdaff48c5791270e27b8f36b\",\"dweb:/ipfs/QmS2UaMd3hbjSxi2MDfmcovEb1GEJxUWiZ4RQmSnztbCh9\"]}},\"version\":1}"
        },
        "IFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "feeTo()": "017e7e58"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30a4\\u30f3\\u30bf\\u30fc\\u30d5\\u30a7\\u30fc\\u30b9\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexPair.sol\":\"IFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DexPair.sol\":{\"keccak256\":\"0x7e731405f3fbfab11257dade15de5b4c2f43af63f6fcdf81673f13839e9c698c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01038134e037d1ad71a2d51a37fe1c79ac4ed84bdaff48c5791270e27b8f36b\",\"dweb:/ipfs/QmS2UaMd3hbjSxi2MDfmcovEb1GEJxUWiZ4RQmSnztbCh9\"]}},\"version\":1}"
        }
      },
      "contracts/TokenA.sol": {
        "TokenA": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "remainingTime",
                  "type": "uint256"
                }
              ],
              "name": "FaucetCooldownActive",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "FaucetUsed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "FAUCET_AMOUNT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "FAUCET_COOLDOWN",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "canUseFaucet",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "canUse",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "faucet",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getFaucetCooldownTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "remainingTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "lastFaucetTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 735,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": 1625,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 748,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 134,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_string": {
                  "entryPoint": 316,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 52,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 933,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 865,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 1087,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": 171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 1467,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 519,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 692,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 522,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_bytes1": {
                  "entryPoint": 1055,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 556,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constructor_ERC20": {
                  "entryPoint": 1437,
                  "id": 426,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constructor_Ownable": {
                  "entryPoint": 770,
                  "id": 50,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "constructor_ReentrancyGuard": {
                  "entryPoint": 661,
                  "id": 1509,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "constructor_TokenA": {
                  "entryPoint": 491,
                  "id": 3046,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 1578,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 723,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 695,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 528,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_stringliteral_18c4_to_string": {
                  "entryPoint": 404,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_stringliteral_2487_to_string": {
                  "entryPoint": 480,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1566,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1538,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 598,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_TokenA": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_byte_array_to_storage_from_string_to_string": {
                  "entryPoint": 1218,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_literal_to_memory_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891": {
                  "entryPoint": 379,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_literal_to_memory_2487c49f05a4d0607f1ae07d97f7fbcb949677c47340370a6a8901d76e6d7481": {
                  "entryPoint": 455,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "divide_by_ceil": {
                  "entryPoint": 944,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 891,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 1478,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": 1200,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 95,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 1631,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 525,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mask_bytes_dynamic": {
                  "entryPoint": 1178,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x22": {
                  "entryPoint": 869,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 73,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 1590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 626,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 1498,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 58,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 155,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 63,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 569,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 954,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 1461,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 1174,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_uint256": {
                  "entryPoint": 1035,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "store_literal_in_memory_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891": {
                  "entryPoint": 339,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_2487c49f05a4d0607f1ae07d97f7fbcb949677c47340370a6a8901d76e6d7481": {
                  "entryPoint": 415,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 958,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 575,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 1511,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 1593,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_string_to_string": {
                  "entryPoint": 1425,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 629,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 996,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 1030,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461002f576100196100146100fa565b6101eb565b610021610034565b6116406106c1823961164090f35b61003a565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906100699061003f565b810190811060018060401b0382111761008157604052565b610049565b90610099610092610034565b928361005f565b565b600080fd5b60018060a01b031690565b6100b4906100a0565b90565b6100c0816100ab565b036100c757565b600080fd5b905051906100d9826100b7565b565b906020828203126100f5576100f2916000016100cc565b90565b61009b565b610118611d018038038061010d81610086565b9283398101906100db565b90565b60018060401b0381116101375761013360209161003f565b0190565b610049565b9061014e6101498361011b565b610086565b918252565b60007f546f6b656e410000000000000000000000000000000000000000000000000000910152565b610185600661013c565b9061019260208301610153565b565b61019c61017b565b90565b60007f544b410000000000000000000000000000000000000000000000000000000000910152565b6101d1600361013c565b906101de6020830161019f565b565b6101e86101c7565b90565b610205906101f7610194565b6101ff6101e0565b91610295565b565b90565b90565b90565b61022461021f61022992610207565b61020d565b61020a565b90565b6102366001610210565b90565b60001b90565b9061024c60001991610239565b9181191691161790565b61026a61026561026f9261020a565b61020d565b61020a565b90565b90565b9061028a61028561029192610256565b610272565b825461023f565b9055565b906102a09291610302565b6102b26102ab61022c565b6006610275565b565b90565b6102cb6102c66102d0926102b4565b61020d565b6100a0565b90565b6102dc906102b7565b90565b6102e8906100ab565b9052565b9190610300906000602085019401906102df565b565b9161030c9161059d565b8061032861032261031d60006102d3565b6100ab565b916100ab565b14610338576103369061065f565b565b61035d61034560006102d3565b6000918291631e4fbdf760e01b8352600483016102ec565b0390fd5b5190565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801561039b575b602083101461039657565b610365565b91607f169161038b565b600052602060002090565b601f602091010490565b1b90565b919060086103da9102916103d4600019846103ba565b926103ba565b9181191691161790565b91906103fa6103f561040293610256565b610272565b9083546103be565b9055565b600090565b61041d91610417610406565b916103e4565b565b5b81811061042b575050565b80610439600060019361040b565b01610420565b9190601f811161044f575b505050565b61045b610480936103a5565b906020610467846103b0565b83019310610488575b610479906103b0565b019061041f565b38808061044a565b915061047981929050610470565b1c90565b906104ab9060001990600802610496565b191690565b816104ba9161049a565b906002021790565b906104cc81610361565b9060018060401b03821161058c576104ee826104e8855461037b565b8561043f565b602090601f83116001146105235791809161051293600092610517575b50506104b0565b90555b565b9091500151388061050b565b601f19831691610532856103a5565b9260005b8181106105745750916002939185600196941061055a575b50505002019055610515565b61056a910151601f84169061049a565b905538808061054e565b91936020600181928787015181550195019201610536565b610049565b9061059b916104c2565b565b906105ac6105b3926003610591565b6004610591565b565b60001c90565b60018060a01b031690565b6105d26105d7916105b5565b6105bb565b90565b6105e490546105c6565b90565b906105f860018060a01b0391610239565b9181191691161790565b61061661061161061b926100a0565b61020d565b6100a0565b90565b61062790610602565b90565b6106339061061e565b90565b90565b9061064e6106496106559261062a565b610636565b82546105e7565b9055565b60000190565b61066960056105da565b610674826005610639565b906106a86106a27f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361062a565b9161062a565b916106b1610034565b806106bb81610659565b0390a356fe60806040526004361015610013575b6108a8565b61001e60003561014d565b806306fdde0314610148578063095ea7b31461014357806318160ddd1461013e57806323b872dd14610139578063313ce5671461013457806340c10f191461012f578063705195161461012a57806370a0823114610125578063715018a614610120578063766976401461011b578063780768fc146101165780637bc1f6cc146101115780637d1d5d191461010c5780638da5cb5b1461010757806395d89b4114610102578063a9059cbb146100fd578063dd62ed3e146100f8578063de5f72fd146100f35763f2fde38b0361000e57610875565b610842565b61080c565b6107a8565b610773565b61073e565b6106e6565b610678565b6105b0565b61057b565b610506565b6104d1565b61049c565b610449565b61040e565b6103af565b61033f565b6102e6565b6101f9565b60e01c90565b60405190565b600080fd5b600080fd5b600091031261016e57565b61015e565b5190565b60209181520190565b60005b838110610194575050906000910152565b806020918301518185015201610183565b601f801991011690565b6101ce6101d76020936101dc936101c581610173565b93848093610177565b95869101610180565b6101a5565b0190565b6101f691602082019160008184039101526101af565b90565b3461022957610209366004610163565b610225610214610a0f565b61021c610153565b918291826101e0565b0390f35b610159565b60018060a01b031690565b6102429061022e565b90565b61024e81610239565b0361025557565b600080fd5b9050359061026782610245565b565b90565b61027581610269565b0361027c57565b600080fd5b9050359061028e8261026c565b565b91906040838203126102b957806102ad6102b6926000860161025a565b93602001610281565b90565b61015e565b151590565b6102cc906102be565b9052565b91906102e4906000602085019401906102c3565b565b34610317576103136103026102fc366004610290565b90610a2a565b61030a610153565b918291826102d0565b0390f35b610159565b61032590610269565b9052565b919061033d9060006020850194019061031c565b565b3461036f5761034f366004610163565b61036b61035a610a78565b610362610153565b91829182610329565b0390f35b610159565b90916060828403126103aa576103a7610390846000850161025a565b9361039e816020860161025a565b93604001610281565b90565b61015e565b346103e0576103dc6103cb6103c5366004610374565b91610a8e565b6103d3610153565b918291826102d0565b0390f35b610159565b60ff1690565b6103f4906103e5565b9052565b919061040c906000602085019401906103eb565b565b3461043e5761041e366004610163565b61043a610429610ae1565b610431610153565b918291826103f8565b0390f35b610159565b60000190565b346104785761046261045c366004610290565b90610b17565b61046a610153565b8061047481610443565b0390f35b610159565b90602082820312610497576104949160000161025a565b90565b61015e565b346104cc576104c86104b76104b236600461047d565b610ba2565b6104bf610153565b91829182610329565b0390f35b610159565b34610501576104fd6104ec6104e736600461047d565b610c15565b6104f4610153565b91829182610329565b0390f35b610159565b3461053457610516366004610163565b61051e610c82565b610526610153565b8061053081610443565b0390f35b610159565b90565b90565b61055361054e61055892610539565b61053c565b610269565b90565b61056d68056bc75e2d6310000061053f565b90565b61057861055b565b90565b346105ab5761058b366004610163565b6105a7610596610570565b61059e610153565b91829182610329565b0390f35b610159565b346105e0576105dc6105cb6105c636600461047d565b610c8c565b6105d3610153565b918291826102d0565b0390f35b610159565b6105f96105f46105fe9261022e565b61053c565b61022e565b90565b61060a906105e5565b90565b61061690610601565b90565b906106239061060d565b600052602052604060002090565b1c90565b90565b61064890600861064d9302610631565b610635565b90565b9061065b9154610638565b90565b61067590610670600791600092610619565b610650565b90565b346106a8576106a461069361068e36600461047d565b61065e565b61069b610153565b91829182610329565b0390f35b610159565b90565b6106c46106bf6106c9926106ad565b61053c565b610269565b90565b6106d8620151806106b0565b90565b6106e36106cc565b90565b34610716576106f6366004610163565b6107126107016106db565b610709610153565b91829182610329565b0390f35b610159565b61072490610239565b9052565b919061073c9060006020850194019061071b565b565b3461076e5761074e366004610163565b61076a610759610d01565b610761610153565b91829182610728565b0390f35b610159565b346107a357610783366004610163565b61079f61078e610d17565b610796610153565b918291826101e0565b0390f35b610159565b346107d9576107d56107c46107be366004610290565b90610d2d565b6107cc610153565b918291826102d0565b0390f35b610159565b919060408382031261080757806107fb610804926000860161025a565b9360200161025a565b90565b61015e565b3461083d576108396108286108223660046107de565b90610d67565b610830610153565b91829182610329565b0390f35b610159565b3461087057610852366004610163565b61085a610f4e565b610862610153565b8061086c81610443565b0390f35b610159565b346108a35761088d61088836600461047d565b610fc0565b610895610153565b8061089f81610443565b0390f35b610159565b600080fd5b606090565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156108e8575b60208310146108e357565b6108b2565b91607f16916108d8565b60209181520190565b600052602060002090565b906000929180549061092161091a836108c8565b80946108f2565b9160018116908160001461097a575060011461093d575b505050565b61094a91929394506108fb565b916000925b8184106109625750500190388080610938565b6001816020929593955484860152019101929061094f565b92949550505060ff1916825215156020020190388080610938565b9061099f91610906565b90565b634e487b7160e01b600052604160045260246000fd5b906109c2906101a5565b810190811067ffffffffffffffff8211176109dc57604052565b6109a2565b90610a016109fa926109f1610153565b93848092610995565b03836109b8565b565b610a0c906109e1565b90565b610a176108ad565b50610a226003610a03565b90565b600090565b610a4791610a36610a25565b50610a3f610fcb565b919091610fd8565b600190565b600090565b60001c90565b610a63610a6891610a51565b610635565b90565b610a759054610a57565b90565b610a80610a4c565b50610a8b6002610a6b565b90565b91610ab892610a9b610a25565b50610ab0610aa7610fcb565b82908491611029565b9190916110b8565b600190565b600090565b90565b610ad9610ad4610ade92610ac2565b61053c565b6103e5565b90565b610ae9610abd565b50610af46012610ac5565b90565b90610b0991610b0461115b565b610b0b565b565b90610b15916111aa565b565b90610b2191610af7565b565b634e487b7160e01b600052601160045260246000fd5b610b48610b4e91939293610269565b92610269565b8201809211610b5957565b610b23565b610b6d610b7391939293610269565b92610269565b8203918211610b7e57565b610b23565b90565b610b9a610b95610b9f92610b83565b61053c565b610269565b90565b610baa610a4c565b50610bbf610bba42926007610619565b610a6b565b90610bd282610bcc6106cc565b90610b39565b610be4610bde83610269565b91610269565b11610bf8575050610bf56000610b86565b90565b610c0d610c1292610c076106cc565b90610b39565b610b5e565b90565b610c2c610c3191610c24610a4c565b506000610619565b610a6b565b90565b610c3c61115b565b610c44610c6e565b565b610c5a610c55610c5f92610b83565b61053c565b61022e565b90565b610c6b90610c46565b90565b610c80610c7b6000610c62565b61124a565b565b610c8a610c34565b565b610cab610ca6610cb992610c9e610a25565b506007610619565b610a6b565b610cb36106cc565b90610b39565b610ccb610cc542610269565b91610269565b111590565b600090565b60018060a01b031690565b610cec610cf191610a51565b610cd5565b90565b610cfe9054610ce0565b90565b610d09610cd0565b50610d146005610cf4565b90565b610d1f6108ad565b50610d2a6004610a03565b90565b610d4a91610d39610a25565b50610d42610fcb565b9190916110b8565b600190565b90610d599061060d565b600052602052604060002090565b610d8c91610d82610d8792610d7a610a4c565b506001610d4f565b610619565b610a6b565b90565b610d976112d7565b610d9f610e4d565b610da761135c565b565b916020610dcb929493610dc46040820196600083019061071b565b019061031c565b565b60001b90565b90610de060001991610dcd565b9181191691161790565b610dfe610df9610e0392610269565b61053c565b610269565b90565b90565b90610e1e610e19610e2592610dea565b610e06565b8254610dd3565b9055565b916020610e4b929493610e446040820196600083019061031c565b019061031c565b565b334290610e75610e67610e6260078490610619565b610a6b565b610e6f6106cc565b90610b39565b610e87610e8184610269565b91610269565b11610f0057610ea182610e9c60078490610619565b610e09565b610eb381610ead61055b565b906111aa565b610ebb61055b565b91610ee67f1471294b27bd6e7d297998c0fd0fb313349f2f6c782cc696d9279410a95575749261060d565b92610efb610ef2610153565b92839283610e29565b0390a2565b610f2e82610f29610f1b610f1660078690610619565b610a6b565b610f236106cc565b90610b39565b610b5e565b90610f4a60009283926337f86cfd60e01b845260048401610da9565b0390fd5b610f56610d8f565b565b610f6990610f6461115b565b610f6b565b565b80610f87610f81610f7c6000610c62565b610239565b91610239565b14610f9757610f959061124a565b565b610fbc610fa46000610c62565b6000918291631e4fbdf760e01b835260048301610728565b0390fd5b610fc990610f58565b565b610fd3610cd0565b503390565b91610fe69291600192611370565b565b60409061101261101994969593966110086060840198600085019061071b565b602083019061031c565b019061031c565b565b906110269103610269565b90565b929192611037818390610d67565b908161104d611047600019610269565b91610269565b1061105a575b5050509050565b8161106d61106787610269565b91610269565b106110945761108b939461108291939261101b565b90600092611370565b80388080611053565b506110b4849291926000938493637dc7a0d960e11b855260048501610fe8565b0390fd5b91826110d56110cf6110ca6000610c62565b610239565b91610239565b1461113257816110f66110f06110eb6000610c62565b610239565b91610239565b146111095761110792919091611493565b565b61112e6111166000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b61115761113f6000610c62565b6000918291634b637e8f60e11b835260048301610728565b0390fd5b611163610d01565b61117c611176611171610fcb565b610239565b91610239565b0361118357565b6111a661118e610fcb565b600091829163118cdaa760e01b835260048301610728565b0390fd5b806111c66111c06111bb6000610c62565b610239565b91610239565b146111e3576111e1916111d96000610c62565b919091611493565b565b6112086111f06000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b9061121d60018060a01b0391610dcd565b9181191691161790565b90565b9061123f61123a6112469261060d565b611227565b825461120c565b9055565b6112546005610cf4565b61125f82600561122a565b9061129361128d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361060d565b9161060d565b9161129c610153565b806112a681610443565b0390a3565b90565b6112c26112bd6112c7926112ab565b61053c565b610269565b90565b6112d460026112ae565b90565b6112e16006610a6b565b6112fa6112f46112ef6112ca565b610269565b91610269565b146113135761131161130a6112ca565b6006610e09565b565b6000633ee5aeb560e01b81528061132c60048201610443565b0390fd5b90565b61134761134261134c92611330565b61053c565b610269565b90565b6113596001611333565b90565b61136e61136761134f565b6006610e09565b565b90928161138e6113886113836000610c62565b610239565b91610239565b1461145c57836113af6113a96113a46000610c62565b610239565b91610239565b14611433576113d3836113ce6113c760018690610d4f565b8790610619565b610e09565b6113dd575b505050565b9190916114286114166114107f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361060d565b9361060d565b9361141f610153565b91829182610329565b0390a33880806113d8565b6114586114406000610c62565b6000918291634a1406b160e11b835260048301610728565b0390fd5b6114816114696000610c62565b600091829163e602df0560e01b835260048301610728565b0390fd5b906114909101610269565b90565b919091806114b26114ac6114a76000610c62565b610239565b91610239565b14600014611597576114d76114d0836114cb6002610a6b565b610b39565b6002610e09565b5b826114f46114ee6114e96000610c62565b610239565b91610239565b1460001461156a576115196115128361150d6002610a6b565b61101b565b6002610e09565b5b91909161156561155361154d7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9361060d565b9361060d565b9361155c610153565b91829182610329565b0390a3565b6115928261158c61157d60008790610619565b9161158783610a6b565b611485565b90610e09565b61151a565b6115ab6115a660008390610619565b610a6b565b806115be6115b885610269565b91610269565b106115e7576115d16115e291849061101b565b6115dd60008490610619565b610e09565b6114d8565b90611606909192600093849363391434e360e21b855260048501610fe8565b0390fdfea26469706673582212203a4951c17ebc3377d83c070b7eac4b0fc9b2f204a6fc11b77e2000afd36fc2cc64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2F JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xFA JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x21 PUSH2 0x34 JUMP JUMPDEST PUSH2 0x1640 PUSH2 0x6C1 DUP3 CODECOPY PUSH2 0x1640 SWAP1 RETURN JUMPDEST PUSH2 0x3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x69 SWAP1 PUSH2 0x3F JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x99 PUSH2 0x92 PUSH2 0x34 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB4 SWAP1 PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xAB JUMP JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xD9 DUP3 PUSH2 0xB7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF5 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 ADD PUSH2 0xCC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1D01 DUP1 CODESIZE SUB DUP1 PUSH2 0x10D DUP2 PUSH2 0x86 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xDB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x137 JUMPI PUSH2 0x133 PUSH1 0x20 SWAP2 PUSH2 0x3F JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x14E PUSH2 0x149 DUP4 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x546F6B656E410000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x185 PUSH1 0x6 PUSH2 0x13C JUMP JUMPDEST SWAP1 PUSH2 0x192 PUSH1 0x20 DUP4 ADD PUSH2 0x153 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x19C PUSH2 0x17B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x544B410000000000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x3 PUSH2 0x13C JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH1 0x20 DUP4 ADD PUSH2 0x19F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1C7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x205 SWAP1 PUSH2 0x1F7 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x1E0 JUMP JUMPDEST SWAP2 PUSH2 0x295 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x21F PUSH2 0x229 SWAP3 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x236 PUSH1 0x1 PUSH2 0x210 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24C PUSH1 0x0 NOT SWAP2 PUSH2 0x239 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x265 PUSH2 0x26F SWAP3 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28A PUSH2 0x285 PUSH2 0x291 SWAP3 PUSH2 0x256 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2A0 SWAP3 SWAP2 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x22C JUMP JUMPDEST PUSH1 0x6 PUSH2 0x275 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x2C6 PUSH2 0x2D0 SWAP3 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2DC SWAP1 PUSH2 0x2B7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2E8 SWAP1 PUSH2 0xAB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x300 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH2 0x30C SWAP2 PUSH2 0x59D JUMP JUMPDEST DUP1 PUSH2 0x328 PUSH2 0x322 PUSH2 0x31D PUSH1 0x0 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x338 JUMPI PUSH2 0x336 SWAP1 PUSH2 0x65F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x35D PUSH2 0x345 PUSH1 0x0 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2EC JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x39B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x396 JUMPI JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x3DA SWAP2 MUL SWAP2 PUSH2 0x3D4 PUSH1 0x0 NOT DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 PUSH2 0x3BA JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3FA PUSH2 0x3F5 PUSH2 0x402 SWAP4 PUSH2 0x256 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x3BE JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x41D SWAP2 PUSH2 0x417 PUSH2 0x406 JUMP JUMPDEST SWAP2 PUSH2 0x3E4 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x42B JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x439 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x40B JUMP JUMPDEST ADD PUSH2 0x420 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x44F JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x45B PUSH2 0x480 SWAP4 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x467 DUP5 PUSH2 0x3B0 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x488 JUMPI JUMPDEST PUSH2 0x479 SWAP1 PUSH2 0x3B0 JUMP JUMPDEST ADD SWAP1 PUSH2 0x41F JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP PUSH2 0x479 DUP2 SWAP3 SWAP1 POP PUSH2 0x470 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4AB SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x496 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x4BA SWAP2 PUSH2 0x49A JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4CC DUP2 PUSH2 0x361 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x58C JUMPI PUSH2 0x4EE DUP3 PUSH2 0x4E8 DUP6 SLOAD PUSH2 0x37B JUMP JUMPDEST DUP6 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x523 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x512 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x517 JUMPI JUMPDEST POP POP PUSH2 0x4B0 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x532 DUP6 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x574 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x55A JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x515 JUMP JUMPDEST PUSH2 0x56A SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x49A JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x54E JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x536 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x59B SWAP2 PUSH2 0x4C2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x5AC PUSH2 0x5B3 SWAP3 PUSH1 0x3 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x5D7 SWAP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5E4 SWAP1 SLOAD PUSH2 0x5C6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5F8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x239 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x616 PUSH2 0x611 PUSH2 0x61B SWAP3 PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x627 SWAP1 PUSH2 0x602 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x633 SWAP1 PUSH2 0x61E JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x64E PUSH2 0x649 PUSH2 0x655 SWAP3 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5E7 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x669 PUSH1 0x5 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x674 DUP3 PUSH1 0x5 PUSH2 0x639 JUMP JUMPDEST SWAP1 PUSH2 0x6A8 PUSH2 0x6A2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x62A JUMP JUMPDEST SWAP2 PUSH2 0x62A JUMP JUMPDEST SWAP2 PUSH2 0x6B1 PUSH2 0x34 JUMP JUMPDEST DUP1 PUSH2 0x6BB DUP2 PUSH2 0x659 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x70519516 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x780768FC EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x7BC1F6CC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0xF3 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI PUSH2 0x875 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x16E JUMPI JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x194 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x183 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1D7 PUSH1 0x20 SWAP4 PUSH2 0x1DC SWAP4 PUSH2 0x1C5 DUP2 PUSH2 0x173 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x177 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x180 JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x214 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x21C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x242 SWAP1 PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x267 DUP3 PUSH2 0x245 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x275 DUP2 PUSH2 0x269 JUMP JUMPDEST SUB PUSH2 0x27C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x28E DUP3 PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x2B9 JUMPI DUP1 PUSH2 0x2AD PUSH2 0x2B6 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2CC SWAP1 PUSH2 0x2BE JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E4 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C3 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x317 JUMPI PUSH2 0x313 PUSH2 0x302 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x30A PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x325 SWAP1 PUSH2 0x269 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x33D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x36F JUMPI PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x36B PUSH2 0x35A PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x3AA JUMPI PUSH2 0x3A7 PUSH2 0x390 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH2 0x39E DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x3E0 JUMPI PUSH2 0x3DC PUSH2 0x3CB PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x374 JUMP JUMPDEST SWAP2 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3F4 SWAP1 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x40C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x3EB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x43E JUMPI PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x429 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x478 JUMPI PUSH2 0x462 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x474 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x497 JUMPI PUSH2 0x494 SWAP2 PUSH1 0x0 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x4CC JUMPI PUSH2 0x4C8 PUSH2 0x4B7 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x501 JUMPI PUSH2 0x4FD PUSH2 0x4EC PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x534 JUMPI PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x530 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x54E PUSH2 0x558 SWAP3 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH9 0x56BC75E2D63100000 PUSH2 0x53F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x578 PUSH2 0x55B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5AB JUMPI PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x5A7 PUSH2 0x596 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x59E PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x5E0 JUMPI PUSH2 0x5DC PUSH2 0x5CB PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0x5F4 PUSH2 0x5FE SWAP3 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x60A SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x616 SWAP1 PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x623 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x648 SWAP1 PUSH1 0x8 PUSH2 0x64D SWAP4 MUL PUSH2 0x631 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x65B SWAP2 SLOAD PUSH2 0x638 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x675 SWAP1 PUSH2 0x670 PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x6A8 JUMPI PUSH2 0x6A4 PUSH2 0x693 PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x69B PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x6BF PUSH2 0x6C9 SWAP3 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D8 PUSH3 0x15180 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6E3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x716 JUMPI PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x701 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x709 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x724 SWAP1 PUSH2 0x239 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x73C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x76A PUSH2 0x759 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7A3 JUMPI PUSH2 0x783 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x79F PUSH2 0x78E PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7D9 JUMPI PUSH2 0x7D5 PUSH2 0x7C4 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x7CC PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x807 JUMPI DUP1 PUSH2 0x7FB PUSH2 0x804 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x83D JUMPI PUSH2 0x839 PUSH2 0x828 PUSH2 0x822 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DE JUMP JUMPDEST SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x830 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x870 JUMPI PUSH2 0x852 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x85A PUSH2 0xF4E JUMP JUMPDEST PUSH2 0x862 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x86C DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x8A3 JUMPI PUSH2 0x88D PUSH2 0x888 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0x895 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x89F DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x8E8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x921 PUSH2 0x91A DUP4 PUSH2 0x8C8 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x97A JUMPI POP PUSH1 0x1 EQ PUSH2 0x93D JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x94A SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x8FB JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x962 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x94F JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST SWAP1 PUSH2 0x99F SWAP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x9C2 SWAP1 PUSH2 0x1A5 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST SWAP1 PUSH2 0xA01 PUSH2 0x9FA SWAP3 PUSH2 0x9F1 PUSH2 0x153 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x995 JUMP JUMPDEST SUB DUP4 PUSH2 0x9B8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0C SWAP1 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA17 PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xA22 PUSH1 0x3 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA47 SWAP2 PUSH2 0xA36 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xA3F PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xA68 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA75 SWAP1 SLOAD PUSH2 0xA57 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA80 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA8B PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xAB8 SWAP3 PUSH2 0xA9B PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xAB0 PUSH2 0xAA7 PUSH2 0xFCB JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x1029 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAD9 PUSH2 0xAD4 PUSH2 0xADE SWAP3 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0xABD JUMP JUMPDEST POP PUSH2 0xAF4 PUSH1 0x12 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB09 SWAP2 PUSH2 0xB04 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB15 SWAP2 PUSH2 0x11AA JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB21 SWAP2 PUSH2 0xAF7 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB48 PUSH2 0xB4E SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB59 JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xB73 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB7E JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0xB95 PUSH2 0xB9F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xBBF PUSH2 0xBBA TIMESTAMP SWAP3 PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 PUSH2 0xBD2 DUP3 PUSH2 0xBCC PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0xBDE DUP4 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xBF8 JUMPI POP POP PUSH2 0xBF5 PUSH1 0x0 PUSH2 0xB86 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0D PUSH2 0xC12 SWAP3 PUSH2 0xC07 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xC31 SWAP2 PUSH2 0xC24 PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x115B JUMP JUMPDEST PUSH2 0xC44 PUSH2 0xC6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC5A PUSH2 0xC55 PUSH2 0xC5F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC6B SWAP1 PUSH2 0xC46 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH2 0xC7B PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC8A PUSH2 0xC34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCAB PUSH2 0xCA6 PUSH2 0xCB9 SWAP3 PUSH2 0xC9E PUSH2 0xA25 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xCCB PUSH2 0xCC5 TIMESTAMP PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xCEC PUSH2 0xCF1 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xCD5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCFE SWAP1 SLOAD PUSH2 0xCE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD09 PUSH2 0xCD0 JUMP JUMPDEST POP PUSH2 0xD14 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD1F PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xD2A PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4A SWAP2 PUSH2 0xD39 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xD42 PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD59 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD8C SWAP2 PUSH2 0xD82 PUSH2 0xD87 SWAP3 PUSH2 0xD7A PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD97 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xD9F PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xDCB SWAP3 SWAP5 SWAP4 PUSH2 0xDC4 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDE0 PUSH1 0x0 NOT SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xDFE PUSH2 0xDF9 PUSH2 0xE03 SWAP3 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE1E PUSH2 0xE19 PUSH2 0xE25 SWAP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDD3 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE4B SWAP3 SWAP5 SWAP4 PUSH2 0xE44 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLER TIMESTAMP SWAP1 PUSH2 0xE75 PUSH2 0xE67 PUSH2 0xE62 PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xE87 PUSH2 0xE81 DUP5 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xF00 JUMPI PUSH2 0xEA1 DUP3 PUSH2 0xE9C PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xEAD PUSH2 0x55B JUMP JUMPDEST SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0xEBB PUSH2 0x55B JUMP JUMPDEST SWAP2 PUSH2 0xEE6 PUSH32 0x1471294B27BD6E7D297998C0FD0FB313349F2F6C782CC696D9279410A9557574 SWAP3 PUSH2 0x60D JUMP JUMPDEST SWAP3 PUSH2 0xEFB PUSH2 0xEF2 PUSH2 0x153 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xE29 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xF2E DUP3 PUSH2 0xF29 PUSH2 0xF1B PUSH2 0xF16 PUSH1 0x7 DUP7 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xF23 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 PUSH2 0xF4A PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x37F86CFD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xDA9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xF56 PUSH2 0xD8F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF69 SWAP1 PUSH2 0xF64 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF87 PUSH2 0xF81 PUSH2 0xF7C PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0xF97 JUMPI PUSH2 0xF95 SWAP1 PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFBC PUSH2 0xFA4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC9 SWAP1 PUSH2 0xF58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0xCD0 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xFE6 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x1370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1012 PUSH2 0x1019 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1008 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x1026 SWAP2 SUB PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1037 DUP2 DUP4 SWAP1 PUSH2 0xD67 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x104D PUSH2 0x1047 PUSH1 0x0 NOT PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x105A JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x106D PUSH2 0x1067 DUP8 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x1094 JUMPI PUSH2 0x108B SWAP4 SWAP5 PUSH2 0x1082 SWAP2 SWAP4 SWAP3 PUSH2 0x101B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x1370 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x1053 JUMP JUMPDEST POP PUSH2 0x10B4 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x10D5 PUSH2 0x10CF PUSH2 0x10CA PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1132 JUMPI DUP2 PUSH2 0x10F6 PUSH2 0x10F0 PUSH2 0x10EB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1109 JUMPI PUSH2 0x1107 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x112E PUSH2 0x1116 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1157 PUSH2 0x113F PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1163 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x117C PUSH2 0x1176 PUSH2 0x1171 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x1183 JUMPI JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x118E PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x11C6 PUSH2 0x11C0 PUSH2 0x11BB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x11E3 JUMPI PUSH2 0x11E1 SWAP2 PUSH2 0x11D9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1208 PUSH2 0x11F0 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x121D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x123F PUSH2 0x123A PUSH2 0x1246 SWAP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1227 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x120C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1254 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x125F DUP3 PUSH1 0x5 PUSH2 0x122A JUMP JUMPDEST SWAP1 PUSH2 0x1293 PUSH2 0x128D PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x129C PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x12A6 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12C2 PUSH2 0x12BD PUSH2 0x12C7 SWAP3 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12D4 PUSH1 0x2 PUSH2 0x12AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12E1 PUSH1 0x6 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x12FA PUSH2 0x12F4 PUSH2 0x12EF PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST EQ PUSH2 0x1313 JUMPI PUSH2 0x1311 PUSH2 0x130A PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x132C PUSH1 0x4 DUP3 ADD PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1347 PUSH2 0x1342 PUSH2 0x134C SWAP3 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1359 PUSH1 0x1 PUSH2 0x1333 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1367 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x138E PUSH2 0x1388 PUSH2 0x1383 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x145C JUMPI DUP4 PUSH2 0x13AF PUSH2 0x13A9 PUSH2 0x13A4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1433 JUMPI PUSH2 0x13D3 DUP4 PUSH2 0x13CE PUSH2 0x13C7 PUSH1 0x1 DUP7 SWAP1 PUSH2 0xD4F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x13DD JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1428 PUSH2 0x1416 PUSH2 0x1410 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x141F PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x1458 PUSH2 0x1440 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1481 PUSH2 0x1469 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1490 SWAP2 ADD PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x14B2 PUSH2 0x14AC PUSH2 0x14A7 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x1597 JUMPI PUSH2 0x14D7 PUSH2 0x14D0 DUP4 PUSH2 0x14CB PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x14F4 PUSH2 0x14EE PUSH2 0x14E9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x156A JUMPI PUSH2 0x1519 PUSH2 0x1512 DUP4 PUSH2 0x150D PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x101B JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1565 PUSH2 0x1553 PUSH2 0x154D PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x155C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1592 DUP3 PUSH2 0x158C PUSH2 0x157D PUSH1 0x0 DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST SWAP2 PUSH2 0x1587 DUP4 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x15A6 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST DUP1 PUSH2 0x15BE PUSH2 0x15B8 DUP6 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x15E7 JUMPI PUSH2 0x15D1 PUSH2 0x15E2 SWAP2 DUP5 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x15DD PUSH1 0x0 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x14D8 JUMP JUMPDEST SWAP1 PUSH2 0x1606 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE BLOBHASH MLOAD 0xC1 PUSH31 0xBC3377D83C070B7EAC4B0FC9B2F204A6FC11B77E2000AFD36FC2CC64736F6C PUSH4 0x4300081E STOP CALLER ",
              "sourceMap": "373:3483:15:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;1557:146::-;;;1597:8;;:::i;:::-;1607:5;;:::i;:::-;1557:146;;:::i;:::-;:::o;373:3483::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:10:-;1857:1;;;:::i;:::-;1818:40;:::o;1857:1::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2037:52::-;;;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;:::-;2037:52::o;373:3483:15:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;1225:187:0:-;;;;;:::i;:::-;1273:12;:26;;1289:10;1297:1;1289:10;:::i;:::-;1273:26;:::i;:::-;;;:::i;:::-;;1269:95;;1392:12;;;:::i;:::-;1225:187::o;1269:95::-;1322:31;1342:10;1350:1;1342:10;:::i;:::-;1322:31;;;;;;;;;;;;;:::i;:::-;;;;373:3483:15;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;1857:1:10;373:3483:15;1857:1:10;;373:3483:15;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;1582:113:5:-;;1648:13;1671:17;1582:113;1648:13;;:::i;:::-;1671:17;;:::i;:::-;1582:113::o;373:3483:15:-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 355,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 602,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 2014,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_addresst_addresst_uint256": {
                  "entryPoint": 884,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_addresst_uint256": {
                  "entryPoint": 656,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 1149,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 641,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_string_storage": {
                  "entryPoint": 2453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1819,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 3497,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": 4072,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 720,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 707,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 480,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_memory_ptr": {
                  "entryPoint": 431,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_storage": {
                  "entryPoint": 2310,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 1091,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1832,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 809,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 796,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 3625,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint8": {
                  "entryPoint": 1016,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint8_to_uint8": {
                  "entryPoint": 1003,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_unbounded": {
                  "entryPoint": 339,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 2299,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 371,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": 2290,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string_fromStack": {
                  "entryPoint": 375,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2873,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 2910,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 569,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 702,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 3285,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1589,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_100000000000000000000_by": {
                  "entryPoint": 1337,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_2_by": {
                  "entryPoint": 4779,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 2754,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 4912,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 1709,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by_1": {
                  "entryPoint": 2947,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 558,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 617,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint8": {
                  "entryPoint": 997,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_ENTERED": {
                  "entryPoint": 4810,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_FAUCET_AMOUNT": {
                  "entryPoint": 1371,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_FAUCET_COOLDOWN": {
                  "entryPoint": 1740,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 4943,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1549,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_string_storage_to_string": {
                  "entryPoint": 2563,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_0_by_1_to_uint256": {
                  "entryPoint": 2950,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1_by_1_to_uint256": {
                  "entryPoint": 4915,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 4782,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 3170,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 3142,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 1712,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint8": {
                  "entryPoint": 2757,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 1343,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1537,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1509,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 3562,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 2529,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 384,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "external_fun_FAUCET_AMOUNT": {
                  "entryPoint": 1403,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_FAUCET_COOLDOWN": {
                  "entryPoint": 1766,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_allowance": {
                  "entryPoint": 2060,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 742,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_balanceOf": {
                  "entryPoint": 1233,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_canUseFaucet": {
                  "entryPoint": 1456,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_decimals": {
                  "entryPoint": 1038,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_faucet": {
                  "entryPoint": 2114,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getFaucetCooldownTime": {
                  "entryPoint": 1180,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_lastFaucetTime": {
                  "entryPoint": 1656,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_mint": {
                  "entryPoint": 1097,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_name": {
                  "entryPoint": 505,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 1854,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 1286,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_symbol": {
                  "entryPoint": 1907,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_totalSupply": {
                  "entryPoint": 831,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transfer": {
                  "entryPoint": 1960,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferFrom": {
                  "entryPoint": 943,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 2165,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 2248,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_uint256": {
                  "entryPoint": 1592,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 3296,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 2647,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2488,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__approve": {
                  "entryPoint": 4976,
                  "id": 840,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun__mint": {
                  "entryPoint": 4522,
                  "id": 729,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__transfer": {
                  "entryPoint": 4280,
                  "id": 619,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun__transferOwnership": {
                  "entryPoint": 4682,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_allowance": {
                  "entryPoint": 3431,
                  "id": 516,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve": {
                  "entryPoint": 2602,
                  "id": 540,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve_780": {
                  "entryPoint": 4056,
                  "id": 780,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_balanceOf": {
                  "entryPoint": 3093,
                  "id": 475,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_canUseFaucet": {
                  "entryPoint": 3212,
                  "id": 3159,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 4443,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_decimals": {
                  "entryPoint": 2785,
                  "id": 453,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_faucet": {
                  "entryPoint": 3918,
                  "id": 3105,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_faucet_inner": {
                  "entryPoint": 3661,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getFaucetCooldownTime": {
                  "entryPoint": 2978,
                  "id": 3141,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 2839,
                  "id": 3175,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_mint_inner": {
                  "entryPoint": 2827,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_msgSender": {
                  "entryPoint": 4043,
                  "id": 1469,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_name": {
                  "entryPoint": 2575,
                  "id": 435,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantAfter": {
                  "entryPoint": 4956,
                  "id": 1544,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 4823,
                  "id": 1536,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_owner": {
                  "entryPoint": 3329,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_renounceOwnership": {
                  "entryPoint": 3202,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_renounceOwnership_inner": {
                  "entryPoint": 3182,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_spendAllowance": {
                  "entryPoint": 4137,
                  "id": 888,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_symbol": {
                  "entryPoint": 3351,
                  "id": 444,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_totalSupply": {
                  "entryPoint": 2680,
                  "id": 462,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 3373,
                  "id": 499,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transferFrom": {
                  "entryPoint": 2702,
                  "id": 572,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_transferOwnership": {
                  "entryPoint": 4032,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": 3947,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_update": {
                  "entryPoint": 5267,
                  "id": 696,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "getter_fun_FAUCET_AMOUNT": {
                  "entryPoint": 1392,
                  "id": 3007,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_FAUCET_COOLDOWN": {
                  "entryPoint": 1755,
                  "id": 3011,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_lastFaucetTime": {
                  "entryPoint": 1630,
                  "id": 3016,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 1340,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_address_uint256__of_address": {
                  "entryPoint": 3407,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 1561,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant": {
                  "entryPoint": 3471,
                  "id": 1520,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 3124,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_104": {
                  "entryPoint": 3928,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_3167": {
                  "entryPoint": 2807,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 2851,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x22": {
                  "entryPoint": 2226,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2466,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 4647,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 3590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_uint256": {
                  "entryPoint": 1616,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 3316,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 2667,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 2216,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 345,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 350,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 421,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 3533,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 2641,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 333,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 1585,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 3539,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 4620,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 4650,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 3593,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 581,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 620,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "wrapping_add_uint256": {
                  "entryPoint": 5253,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "wrapping_sub_uint256": {
                  "entryPoint": 4123,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "zero_value_for_split_address": {
                  "entryPoint": 3280,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": 2597,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_string": {
                  "entryPoint": 2221,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 2636,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint8": {
                  "entryPoint": 2749,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b6108a8565b61001e60003561014d565b806306fdde0314610148578063095ea7b31461014357806318160ddd1461013e57806323b872dd14610139578063313ce5671461013457806340c10f191461012f578063705195161461012a57806370a0823114610125578063715018a614610120578063766976401461011b578063780768fc146101165780637bc1f6cc146101115780637d1d5d191461010c5780638da5cb5b1461010757806395d89b4114610102578063a9059cbb146100fd578063dd62ed3e146100f8578063de5f72fd146100f35763f2fde38b0361000e57610875565b610842565b61080c565b6107a8565b610773565b61073e565b6106e6565b610678565b6105b0565b61057b565b610506565b6104d1565b61049c565b610449565b61040e565b6103af565b61033f565b6102e6565b6101f9565b60e01c90565b60405190565b600080fd5b600080fd5b600091031261016e57565b61015e565b5190565b60209181520190565b60005b838110610194575050906000910152565b806020918301518185015201610183565b601f801991011690565b6101ce6101d76020936101dc936101c581610173565b93848093610177565b95869101610180565b6101a5565b0190565b6101f691602082019160008184039101526101af565b90565b3461022957610209366004610163565b610225610214610a0f565b61021c610153565b918291826101e0565b0390f35b610159565b60018060a01b031690565b6102429061022e565b90565b61024e81610239565b0361025557565b600080fd5b9050359061026782610245565b565b90565b61027581610269565b0361027c57565b600080fd5b9050359061028e8261026c565b565b91906040838203126102b957806102ad6102b6926000860161025a565b93602001610281565b90565b61015e565b151590565b6102cc906102be565b9052565b91906102e4906000602085019401906102c3565b565b34610317576103136103026102fc366004610290565b90610a2a565b61030a610153565b918291826102d0565b0390f35b610159565b61032590610269565b9052565b919061033d9060006020850194019061031c565b565b3461036f5761034f366004610163565b61036b61035a610a78565b610362610153565b91829182610329565b0390f35b610159565b90916060828403126103aa576103a7610390846000850161025a565b9361039e816020860161025a565b93604001610281565b90565b61015e565b346103e0576103dc6103cb6103c5366004610374565b91610a8e565b6103d3610153565b918291826102d0565b0390f35b610159565b60ff1690565b6103f4906103e5565b9052565b919061040c906000602085019401906103eb565b565b3461043e5761041e366004610163565b61043a610429610ae1565b610431610153565b918291826103f8565b0390f35b610159565b60000190565b346104785761046261045c366004610290565b90610b17565b61046a610153565b8061047481610443565b0390f35b610159565b90602082820312610497576104949160000161025a565b90565b61015e565b346104cc576104c86104b76104b236600461047d565b610ba2565b6104bf610153565b91829182610329565b0390f35b610159565b34610501576104fd6104ec6104e736600461047d565b610c15565b6104f4610153565b91829182610329565b0390f35b610159565b3461053457610516366004610163565b61051e610c82565b610526610153565b8061053081610443565b0390f35b610159565b90565b90565b61055361054e61055892610539565b61053c565b610269565b90565b61056d68056bc75e2d6310000061053f565b90565b61057861055b565b90565b346105ab5761058b366004610163565b6105a7610596610570565b61059e610153565b91829182610329565b0390f35b610159565b346105e0576105dc6105cb6105c636600461047d565b610c8c565b6105d3610153565b918291826102d0565b0390f35b610159565b6105f96105f46105fe9261022e565b61053c565b61022e565b90565b61060a906105e5565b90565b61061690610601565b90565b906106239061060d565b600052602052604060002090565b1c90565b90565b61064890600861064d9302610631565b610635565b90565b9061065b9154610638565b90565b61067590610670600791600092610619565b610650565b90565b346106a8576106a461069361068e36600461047d565b61065e565b61069b610153565b91829182610329565b0390f35b610159565b90565b6106c46106bf6106c9926106ad565b61053c565b610269565b90565b6106d8620151806106b0565b90565b6106e36106cc565b90565b34610716576106f6366004610163565b6107126107016106db565b610709610153565b91829182610329565b0390f35b610159565b61072490610239565b9052565b919061073c9060006020850194019061071b565b565b3461076e5761074e366004610163565b61076a610759610d01565b610761610153565b91829182610728565b0390f35b610159565b346107a357610783366004610163565b61079f61078e610d17565b610796610153565b918291826101e0565b0390f35b610159565b346107d9576107d56107c46107be366004610290565b90610d2d565b6107cc610153565b918291826102d0565b0390f35b610159565b919060408382031261080757806107fb610804926000860161025a565b9360200161025a565b90565b61015e565b3461083d576108396108286108223660046107de565b90610d67565b610830610153565b91829182610329565b0390f35b610159565b3461087057610852366004610163565b61085a610f4e565b610862610153565b8061086c81610443565b0390f35b610159565b346108a35761088d61088836600461047d565b610fc0565b610895610153565b8061089f81610443565b0390f35b610159565b600080fd5b606090565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156108e8575b60208310146108e357565b6108b2565b91607f16916108d8565b60209181520190565b600052602060002090565b906000929180549061092161091a836108c8565b80946108f2565b9160018116908160001461097a575060011461093d575b505050565b61094a91929394506108fb565b916000925b8184106109625750500190388080610938565b6001816020929593955484860152019101929061094f565b92949550505060ff1916825215156020020190388080610938565b9061099f91610906565b90565b634e487b7160e01b600052604160045260246000fd5b906109c2906101a5565b810190811067ffffffffffffffff8211176109dc57604052565b6109a2565b90610a016109fa926109f1610153565b93848092610995565b03836109b8565b565b610a0c906109e1565b90565b610a176108ad565b50610a226003610a03565b90565b600090565b610a4791610a36610a25565b50610a3f610fcb565b919091610fd8565b600190565b600090565b60001c90565b610a63610a6891610a51565b610635565b90565b610a759054610a57565b90565b610a80610a4c565b50610a8b6002610a6b565b90565b91610ab892610a9b610a25565b50610ab0610aa7610fcb565b82908491611029565b9190916110b8565b600190565b600090565b90565b610ad9610ad4610ade92610ac2565b61053c565b6103e5565b90565b610ae9610abd565b50610af46012610ac5565b90565b90610b0991610b0461115b565b610b0b565b565b90610b15916111aa565b565b90610b2191610af7565b565b634e487b7160e01b600052601160045260246000fd5b610b48610b4e91939293610269565b92610269565b8201809211610b5957565b610b23565b610b6d610b7391939293610269565b92610269565b8203918211610b7e57565b610b23565b90565b610b9a610b95610b9f92610b83565b61053c565b610269565b90565b610baa610a4c565b50610bbf610bba42926007610619565b610a6b565b90610bd282610bcc6106cc565b90610b39565b610be4610bde83610269565b91610269565b11610bf8575050610bf56000610b86565b90565b610c0d610c1292610c076106cc565b90610b39565b610b5e565b90565b610c2c610c3191610c24610a4c565b506000610619565b610a6b565b90565b610c3c61115b565b610c44610c6e565b565b610c5a610c55610c5f92610b83565b61053c565b61022e565b90565b610c6b90610c46565b90565b610c80610c7b6000610c62565b61124a565b565b610c8a610c34565b565b610cab610ca6610cb992610c9e610a25565b506007610619565b610a6b565b610cb36106cc565b90610b39565b610ccb610cc542610269565b91610269565b111590565b600090565b60018060a01b031690565b610cec610cf191610a51565b610cd5565b90565b610cfe9054610ce0565b90565b610d09610cd0565b50610d146005610cf4565b90565b610d1f6108ad565b50610d2a6004610a03565b90565b610d4a91610d39610a25565b50610d42610fcb565b9190916110b8565b600190565b90610d599061060d565b600052602052604060002090565b610d8c91610d82610d8792610d7a610a4c565b506001610d4f565b610619565b610a6b565b90565b610d976112d7565b610d9f610e4d565b610da761135c565b565b916020610dcb929493610dc46040820196600083019061071b565b019061031c565b565b60001b90565b90610de060001991610dcd565b9181191691161790565b610dfe610df9610e0392610269565b61053c565b610269565b90565b90565b90610e1e610e19610e2592610dea565b610e06565b8254610dd3565b9055565b916020610e4b929493610e446040820196600083019061031c565b019061031c565b565b334290610e75610e67610e6260078490610619565b610a6b565b610e6f6106cc565b90610b39565b610e87610e8184610269565b91610269565b11610f0057610ea182610e9c60078490610619565b610e09565b610eb381610ead61055b565b906111aa565b610ebb61055b565b91610ee67f1471294b27bd6e7d297998c0fd0fb313349f2f6c782cc696d9279410a95575749261060d565b92610efb610ef2610153565b92839283610e29565b0390a2565b610f2e82610f29610f1b610f1660078690610619565b610a6b565b610f236106cc565b90610b39565b610b5e565b90610f4a60009283926337f86cfd60e01b845260048401610da9565b0390fd5b610f56610d8f565b565b610f6990610f6461115b565b610f6b565b565b80610f87610f81610f7c6000610c62565b610239565b91610239565b14610f9757610f959061124a565b565b610fbc610fa46000610c62565b6000918291631e4fbdf760e01b835260048301610728565b0390fd5b610fc990610f58565b565b610fd3610cd0565b503390565b91610fe69291600192611370565b565b60409061101261101994969593966110086060840198600085019061071b565b602083019061031c565b019061031c565b565b906110269103610269565b90565b929192611037818390610d67565b908161104d611047600019610269565b91610269565b1061105a575b5050509050565b8161106d61106787610269565b91610269565b106110945761108b939461108291939261101b565b90600092611370565b80388080611053565b506110b4849291926000938493637dc7a0d960e11b855260048501610fe8565b0390fd5b91826110d56110cf6110ca6000610c62565b610239565b91610239565b1461113257816110f66110f06110eb6000610c62565b610239565b91610239565b146111095761110792919091611493565b565b61112e6111166000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b61115761113f6000610c62565b6000918291634b637e8f60e11b835260048301610728565b0390fd5b611163610d01565b61117c611176611171610fcb565b610239565b91610239565b0361118357565b6111a661118e610fcb565b600091829163118cdaa760e01b835260048301610728565b0390fd5b806111c66111c06111bb6000610c62565b610239565b91610239565b146111e3576111e1916111d96000610c62565b919091611493565b565b6112086111f06000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b9061121d60018060a01b0391610dcd565b9181191691161790565b90565b9061123f61123a6112469261060d565b611227565b825461120c565b9055565b6112546005610cf4565b61125f82600561122a565b9061129361128d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361060d565b9161060d565b9161129c610153565b806112a681610443565b0390a3565b90565b6112c26112bd6112c7926112ab565b61053c565b610269565b90565b6112d460026112ae565b90565b6112e16006610a6b565b6112fa6112f46112ef6112ca565b610269565b91610269565b146113135761131161130a6112ca565b6006610e09565b565b6000633ee5aeb560e01b81528061132c60048201610443565b0390fd5b90565b61134761134261134c92611330565b61053c565b610269565b90565b6113596001611333565b90565b61136e61136761134f565b6006610e09565b565b90928161138e6113886113836000610c62565b610239565b91610239565b1461145c57836113af6113a96113a46000610c62565b610239565b91610239565b14611433576113d3836113ce6113c760018690610d4f565b8790610619565b610e09565b6113dd575b505050565b9190916114286114166114107f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361060d565b9361060d565b9361141f610153565b91829182610329565b0390a33880806113d8565b6114586114406000610c62565b6000918291634a1406b160e11b835260048301610728565b0390fd5b6114816114696000610c62565b600091829163e602df0560e01b835260048301610728565b0390fd5b906114909101610269565b90565b919091806114b26114ac6114a76000610c62565b610239565b91610239565b14600014611597576114d76114d0836114cb6002610a6b565b610b39565b6002610e09565b5b826114f46114ee6114e96000610c62565b610239565b91610239565b1460001461156a576115196115128361150d6002610a6b565b61101b565b6002610e09565b5b91909161156561155361154d7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9361060d565b9361060d565b9361155c610153565b91829182610329565b0390a3565b6115928261158c61157d60008790610619565b9161158783610a6b565b611485565b90610e09565b61151a565b6115ab6115a660008390610619565b610a6b565b806115be6115b885610269565b91610269565b106115e7576115d16115e291849061101b565b6115dd60008490610619565b610e09565b6114d8565b90611606909192600093849363391434e360e21b855260048501610fe8565b0390fdfea26469706673582212203a4951c17ebc3377d83c070b7eac4b0fc9b2f204a6fc11b77e2000afd36fc2cc64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x70519516 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x780768FC EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x7BC1F6CC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0xF3 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI PUSH2 0x875 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x16E JUMPI JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x194 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x183 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1D7 PUSH1 0x20 SWAP4 PUSH2 0x1DC SWAP4 PUSH2 0x1C5 DUP2 PUSH2 0x173 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x177 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x180 JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x214 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x21C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x242 SWAP1 PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x267 DUP3 PUSH2 0x245 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x275 DUP2 PUSH2 0x269 JUMP JUMPDEST SUB PUSH2 0x27C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x28E DUP3 PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x2B9 JUMPI DUP1 PUSH2 0x2AD PUSH2 0x2B6 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2CC SWAP1 PUSH2 0x2BE JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E4 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C3 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x317 JUMPI PUSH2 0x313 PUSH2 0x302 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x30A PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x325 SWAP1 PUSH2 0x269 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x33D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x36F JUMPI PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x36B PUSH2 0x35A PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x3AA JUMPI PUSH2 0x3A7 PUSH2 0x390 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH2 0x39E DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x3E0 JUMPI PUSH2 0x3DC PUSH2 0x3CB PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x374 JUMP JUMPDEST SWAP2 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3F4 SWAP1 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x40C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x3EB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x43E JUMPI PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x429 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x478 JUMPI PUSH2 0x462 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x474 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x497 JUMPI PUSH2 0x494 SWAP2 PUSH1 0x0 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x4CC JUMPI PUSH2 0x4C8 PUSH2 0x4B7 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x501 JUMPI PUSH2 0x4FD PUSH2 0x4EC PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x534 JUMPI PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x530 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x54E PUSH2 0x558 SWAP3 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH9 0x56BC75E2D63100000 PUSH2 0x53F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x578 PUSH2 0x55B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5AB JUMPI PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x5A7 PUSH2 0x596 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x59E PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x5E0 JUMPI PUSH2 0x5DC PUSH2 0x5CB PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0x5F4 PUSH2 0x5FE SWAP3 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x60A SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x616 SWAP1 PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x623 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x648 SWAP1 PUSH1 0x8 PUSH2 0x64D SWAP4 MUL PUSH2 0x631 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x65B SWAP2 SLOAD PUSH2 0x638 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x675 SWAP1 PUSH2 0x670 PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x6A8 JUMPI PUSH2 0x6A4 PUSH2 0x693 PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x69B PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x6BF PUSH2 0x6C9 SWAP3 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D8 PUSH3 0x15180 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6E3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x716 JUMPI PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x701 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x709 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x724 SWAP1 PUSH2 0x239 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x73C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x76A PUSH2 0x759 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7A3 JUMPI PUSH2 0x783 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x79F PUSH2 0x78E PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7D9 JUMPI PUSH2 0x7D5 PUSH2 0x7C4 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x7CC PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x807 JUMPI DUP1 PUSH2 0x7FB PUSH2 0x804 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x83D JUMPI PUSH2 0x839 PUSH2 0x828 PUSH2 0x822 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DE JUMP JUMPDEST SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x830 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x870 JUMPI PUSH2 0x852 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x85A PUSH2 0xF4E JUMP JUMPDEST PUSH2 0x862 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x86C DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x8A3 JUMPI PUSH2 0x88D PUSH2 0x888 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0x895 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x89F DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x8E8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x921 PUSH2 0x91A DUP4 PUSH2 0x8C8 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x97A JUMPI POP PUSH1 0x1 EQ PUSH2 0x93D JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x94A SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x8FB JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x962 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x94F JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST SWAP1 PUSH2 0x99F SWAP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x9C2 SWAP1 PUSH2 0x1A5 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST SWAP1 PUSH2 0xA01 PUSH2 0x9FA SWAP3 PUSH2 0x9F1 PUSH2 0x153 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x995 JUMP JUMPDEST SUB DUP4 PUSH2 0x9B8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0C SWAP1 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA17 PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xA22 PUSH1 0x3 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA47 SWAP2 PUSH2 0xA36 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xA3F PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xA68 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA75 SWAP1 SLOAD PUSH2 0xA57 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA80 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA8B PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xAB8 SWAP3 PUSH2 0xA9B PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xAB0 PUSH2 0xAA7 PUSH2 0xFCB JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x1029 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAD9 PUSH2 0xAD4 PUSH2 0xADE SWAP3 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0xABD JUMP JUMPDEST POP PUSH2 0xAF4 PUSH1 0x12 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB09 SWAP2 PUSH2 0xB04 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB15 SWAP2 PUSH2 0x11AA JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB21 SWAP2 PUSH2 0xAF7 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB48 PUSH2 0xB4E SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB59 JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xB73 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB7E JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0xB95 PUSH2 0xB9F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xBBF PUSH2 0xBBA TIMESTAMP SWAP3 PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 PUSH2 0xBD2 DUP3 PUSH2 0xBCC PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0xBDE DUP4 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xBF8 JUMPI POP POP PUSH2 0xBF5 PUSH1 0x0 PUSH2 0xB86 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0D PUSH2 0xC12 SWAP3 PUSH2 0xC07 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xC31 SWAP2 PUSH2 0xC24 PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x115B JUMP JUMPDEST PUSH2 0xC44 PUSH2 0xC6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC5A PUSH2 0xC55 PUSH2 0xC5F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC6B SWAP1 PUSH2 0xC46 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH2 0xC7B PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC8A PUSH2 0xC34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCAB PUSH2 0xCA6 PUSH2 0xCB9 SWAP3 PUSH2 0xC9E PUSH2 0xA25 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xCCB PUSH2 0xCC5 TIMESTAMP PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xCEC PUSH2 0xCF1 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xCD5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCFE SWAP1 SLOAD PUSH2 0xCE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD09 PUSH2 0xCD0 JUMP JUMPDEST POP PUSH2 0xD14 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD1F PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xD2A PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4A SWAP2 PUSH2 0xD39 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xD42 PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD59 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD8C SWAP2 PUSH2 0xD82 PUSH2 0xD87 SWAP3 PUSH2 0xD7A PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD97 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xD9F PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xDCB SWAP3 SWAP5 SWAP4 PUSH2 0xDC4 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDE0 PUSH1 0x0 NOT SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xDFE PUSH2 0xDF9 PUSH2 0xE03 SWAP3 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE1E PUSH2 0xE19 PUSH2 0xE25 SWAP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDD3 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE4B SWAP3 SWAP5 SWAP4 PUSH2 0xE44 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLER TIMESTAMP SWAP1 PUSH2 0xE75 PUSH2 0xE67 PUSH2 0xE62 PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xE87 PUSH2 0xE81 DUP5 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xF00 JUMPI PUSH2 0xEA1 DUP3 PUSH2 0xE9C PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xEAD PUSH2 0x55B JUMP JUMPDEST SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0xEBB PUSH2 0x55B JUMP JUMPDEST SWAP2 PUSH2 0xEE6 PUSH32 0x1471294B27BD6E7D297998C0FD0FB313349F2F6C782CC696D9279410A9557574 SWAP3 PUSH2 0x60D JUMP JUMPDEST SWAP3 PUSH2 0xEFB PUSH2 0xEF2 PUSH2 0x153 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xE29 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xF2E DUP3 PUSH2 0xF29 PUSH2 0xF1B PUSH2 0xF16 PUSH1 0x7 DUP7 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xF23 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 PUSH2 0xF4A PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x37F86CFD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xDA9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xF56 PUSH2 0xD8F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF69 SWAP1 PUSH2 0xF64 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF87 PUSH2 0xF81 PUSH2 0xF7C PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0xF97 JUMPI PUSH2 0xF95 SWAP1 PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFBC PUSH2 0xFA4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC9 SWAP1 PUSH2 0xF58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0xCD0 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xFE6 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x1370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1012 PUSH2 0x1019 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1008 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x1026 SWAP2 SUB PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1037 DUP2 DUP4 SWAP1 PUSH2 0xD67 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x104D PUSH2 0x1047 PUSH1 0x0 NOT PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x105A JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x106D PUSH2 0x1067 DUP8 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x1094 JUMPI PUSH2 0x108B SWAP4 SWAP5 PUSH2 0x1082 SWAP2 SWAP4 SWAP3 PUSH2 0x101B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x1370 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x1053 JUMP JUMPDEST POP PUSH2 0x10B4 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x10D5 PUSH2 0x10CF PUSH2 0x10CA PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1132 JUMPI DUP2 PUSH2 0x10F6 PUSH2 0x10F0 PUSH2 0x10EB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1109 JUMPI PUSH2 0x1107 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x112E PUSH2 0x1116 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1157 PUSH2 0x113F PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1163 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x117C PUSH2 0x1176 PUSH2 0x1171 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x1183 JUMPI JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x118E PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x11C6 PUSH2 0x11C0 PUSH2 0x11BB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x11E3 JUMPI PUSH2 0x11E1 SWAP2 PUSH2 0x11D9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1208 PUSH2 0x11F0 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x121D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x123F PUSH2 0x123A PUSH2 0x1246 SWAP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1227 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x120C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1254 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x125F DUP3 PUSH1 0x5 PUSH2 0x122A JUMP JUMPDEST SWAP1 PUSH2 0x1293 PUSH2 0x128D PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x129C PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x12A6 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12C2 PUSH2 0x12BD PUSH2 0x12C7 SWAP3 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12D4 PUSH1 0x2 PUSH2 0x12AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12E1 PUSH1 0x6 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x12FA PUSH2 0x12F4 PUSH2 0x12EF PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST EQ PUSH2 0x1313 JUMPI PUSH2 0x1311 PUSH2 0x130A PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x132C PUSH1 0x4 DUP3 ADD PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1347 PUSH2 0x1342 PUSH2 0x134C SWAP3 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1359 PUSH1 0x1 PUSH2 0x1333 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1367 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x138E PUSH2 0x1388 PUSH2 0x1383 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x145C JUMPI DUP4 PUSH2 0x13AF PUSH2 0x13A9 PUSH2 0x13A4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1433 JUMPI PUSH2 0x13D3 DUP4 PUSH2 0x13CE PUSH2 0x13C7 PUSH1 0x1 DUP7 SWAP1 PUSH2 0xD4F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x13DD JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1428 PUSH2 0x1416 PUSH2 0x1410 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x141F PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x1458 PUSH2 0x1440 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1481 PUSH2 0x1469 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1490 SWAP2 ADD PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x14B2 PUSH2 0x14AC PUSH2 0x14A7 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x1597 JUMPI PUSH2 0x14D7 PUSH2 0x14D0 DUP4 PUSH2 0x14CB PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x14F4 PUSH2 0x14EE PUSH2 0x14E9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x156A JUMPI PUSH2 0x1519 PUSH2 0x1512 DUP4 PUSH2 0x150D PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x101B JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1565 PUSH2 0x1553 PUSH2 0x154D PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x155C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1592 DUP3 PUSH2 0x158C PUSH2 0x157D PUSH1 0x0 DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST SWAP2 PUSH2 0x1587 DUP4 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x15A6 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST DUP1 PUSH2 0x15BE PUSH2 0x15B8 DUP6 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x15E7 JUMPI PUSH2 0x15D1 PUSH2 0x15E2 SWAP2 DUP5 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x15DD PUSH1 0x0 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x14D8 JUMP JUMPDEST SWAP1 PUSH2 0x1606 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE BLOBHASH MLOAD 0xC1 PUSH31 0xBC3377D83C070B7EAC4B0FC9B2F204A6FC11B77E2000AFD36FC2CC64736F6C PUSH4 0x4300081E STOP CALLER ",
              "sourceMap": "373:3483:15:-:0;;;;;;;;;-1:-1:-1;373:3483:15;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;502:52::-;542:12;;;:::i;:::-;502:52;:::o;:::-;;;:::i;:::-;;:::o;373:3483::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;769:49::-;;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;373:3483::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;637:50::-;679:8;;;:::i;:::-;637:50;:::o;:::-;;;:::i;:::-;;:::o;373:3483::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;1760:89:5:-;1805:13;;:::i;:::-;1837:5;1830:12;1837:5;1830:12;:::i;:::-;;:::o;373:3483:15:-;;;:::o;3902:186:5:-;4054:5;3902:186;3975:4;;:::i;:::-;4007:12;;;:::i;:::-;4045:7;4054:5;;;:::i;:::-;4077:4;4070:11;:::o;373:3483:15:-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;2803:97:5:-;2855:7;;:::i;:::-;2881:12;;;;:::i;:::-;2874:19;:::o;4680:244::-;;4890:5;4680:244;4767:4;;:::i;:::-;4801:12;4854:5;4801:12;;:::i;:::-;4839:4;4845:7;4854:5;;;:::i;:::-;4886:2;4890:5;;;:::i;:::-;4913:4;4906:11;:::o;373:3483:15:-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2688:82:5:-;2737:5;;:::i;:::-;2761:2;2754:9;2761:2;2754:9;:::i;:::-;;:::o;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;3759:95:15:-;;3840:6;3759:95;3840:6;:::i;:::-;3759:95::o;:::-;;;;;:::i;:::-;:::o;373:3483::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2857:359::-;2925:21;;:::i;:::-;2980:15;3024:20;;2980:15;3024:14;;:20;:::i;:::-;;:::i;:::-;3067:8;:26;:8;3078:15;;:::i;:::-;3067:26;;:::i;:::-;:40;;3096:11;3067:40;:::i;:::-;;;:::i;:::-;;3063:120;;3208:1;;3201:8;3208:1;3201:8;:::i;:::-;;:::o;3063:120::-;3131:26;3130:42;3131:8;3142:15;;:::i;:::-;3131:26;;:::i;:::-;3130:42;:::i;:::-;3123:49;:::o;2933:116:5:-;3024:18;;2933:116;2998:7;;:::i;:::-;3024:9;;:18;:::i;:::-;;:::i;:::-;3017:25;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;373:3483:15:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;:::-;2293:101::o;:::-;;;:::i;:::-;:::o;3431:153:15:-;3520:20;;:38;3431:153;3490:11;;:::i;:::-;3520:14;;:20;:::i;:::-;;:::i;:::-;3543:15;;:::i;:::-;3520:38;;:::i;:::-;:57;;3562:15;3520:57;:::i;:::-;;;:::i;:::-;;;3513:64;:::o;373:3483::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1638:85:0:-;1684:7;;:::i;:::-;1710:6;;;;:::i;:::-;1703:13;:::o;1962:93:5:-;2009:13;;:::i;:::-;2041:7;2034:14;2041:7;2034:14;:::i;:::-;;:::o;3244:178::-;3388:5;3244:178;3313:4;;:::i;:::-;3345:12;;;:::i;:::-;3384:2;3388:5;;;:::i;:::-;3411:4;3404:11;:::o;373:3483:15:-;;;;;:::i;:::-;;;;;;;;;:::o;3455:140:5:-;3561:27;3455:140;3561:18;:27;3455:140;3535:7;;:::i;:::-;3561:11;;:18;:::i;:::-;:27;:::i;:::-;;:::i;:::-;3554:34;:::o;2466:103:10:-;;;:::i;:::-;2531:1;;:::i;:::-;;;:::i;:::-;2466:103::o;373:3483:15:-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;1857:739::-;1922:10;1964:15;2094:14;:38;:20;;:14;2109:4;2094:20;;:::i;:::-;;:::i;:::-;2117:15;;:::i;:::-;2094:38;;:::i;:::-;:52;;2135:11;2094:52;:::i;:::-;;;:::i;:::-;;2090:223;;2382:34;2405:11;2382:20;:14;2397:4;2382:20;;:::i;:::-;:34;:::i;:::-;2507:13;2501:4;2507:13;;:::i;:::-;;;:::i;:::-;2562;;:::i;:::-;2577:11;2545:44;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;1857:739::o;2090:223::-;2186:54;2187:14;:38;:20;;:14;2202:4;2187:20;;:::i;:::-;;:::i;:::-;2210:15;;:::i;:::-;2187:38;;:::i;:::-;2186:54;:::i;:::-;2261:41;;;;;;;;;;;;;;;:::i;:::-;;;;1857:739;;;:::i;:::-;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;2543:215::-;2627:8;:22;;2639:10;2647:1;2639:10;:::i;:::-;2627:22;:::i;:::-;;;:::i;:::-;;2623:91;;2742:8;;;:::i;:::-;2543:215::o;2623:91::-;2672:31;2692:10;2700:1;2692:10;:::i;:::-;2672:31;;;;;;;;;;;;;:::i;:::-;;;;2543:215;;;;:::i;:::-;:::o;656:96:9:-;709:7;;:::i;:::-;735:10;;728:17;:::o;8630:128:5:-;;8746:4;8630:128;8730:7;8746:4;;;:::i;:::-;8630:128::o;373:3483:15:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::o;10319:476:5:-;;;;10445:25;10455:5;10462:7;10445:25;;:::i;:::-;10484:16;;:36;;373:3483:15;;10484:36:5;:::i;:::-;;;:::i;:::-;;10480:309;;10319:476;;;;;;:::o;10480:309::-;10540:16;:24;;10559:5;10540:24;:::i;:::-;;;:::i;:::-;;10536:130;;10758:5;10716;;10732:24;10716:5;10723:7;10732:16;:24;:::i;:::-;10758:5;;;;:::i;:::-;10480:309;;;;;;10536:130;10618:7;10591:60;10618:7;;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;5297:300;;5380:4;:18;;5388:10;5396:1;5388:10;:::i;:::-;5380:18;:::i;:::-;;;:::i;:::-;;5376:86;;5475:2;:16;;5481:10;5489:1;5481:10;:::i;:::-;5475:16;:::i;:::-;;;:::i;:::-;;5471:86;;5584:5;5574:4;5580:2;5584:5;;;:::i;:::-;5297:300::o;5471:86::-;5514:32;5535:10;5543:1;5535:10;:::i;:::-;5514:32;;;;;;;;;;;;;:::i;:::-;;;;5376:86;5421:30;5440:10;5448:1;5440:10;:::i;:::-;5421:30;;;;;;;;;;;;;:::i;:::-;;;;1796:162:0;1855:7;;:::i;:::-;:23;;1866:12;;:::i;:::-;1855:23;:::i;:::-;;;:::i;:::-;;1851:101;;1796:162::o;1851:101::-;1901:40;1928:12;;:::i;:::-;1901:40;;;;;;;;;;;;;:::i;:::-;;;;7362:208:5;7432:7;:21;;7443:10;7451:1;7443:10;:::i;:::-;7432:21;:::i;:::-;;;:::i;:::-;;7428:91;;7557:5;7544:1;7536:10;7544:1;7536:10;:::i;:::-;7548:7;7557:5;;;:::i;:::-;7362:208::o;7428:91::-;7476:32;7497:10;7505:1;7497:10;:::i;:::-;7476:32;5514;;;;;;7476;;;;;;:::i;:::-;;;;373:3483:15;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o;373:3483:15:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1864:36:10:-;1899:1;;;:::i;:::-;1864:36;:::o;2575:307::-;2702:7;;;:::i;:::-;:18;;2713:7;;:::i;:::-;2702:18;:::i;:::-;;;:::i;:::-;;2698:86;;2858:17;2868:7;;:::i;:::-;2858:17;;:::i;:::-;2575:307::o;2698:86::-;2743:30;;;;;;;;;;;;:::i;:::-;;;;373:3483:15;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:10:-;1857:1;;;:::i;:::-;1818:40;:::o;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;:::-;2888:208::o;9605:432:5:-;;;9717:5;:19;;9726:10;9734:1;9726:10;:::i;:::-;9717:19;:::i;:::-;;;:::i;:::-;;9713:89;;9815:7;:21;;9826:10;9834:1;9826:10;:::i;:::-;9815:21;:::i;:::-;;;:::i;:::-;;9811:90;;9910:35;9940:5;9910:27;:18;:11;9922:5;9910:18;;:::i;:::-;9929:7;9910:27;;:::i;:::-;:35;:::i;:::-;9955:76;;9605:432;;;;:::o;9955:76::-;10005:7;10014:5;9989:31;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;9955:76;;;;;9811:90;9859:31;9879:10;9887:1;9879:10;:::i;:::-;9859:31;;;;;;;;;;;;;:::i;:::-;;;;9713:89;9759:32;9780:10;9788:1;9780:10;:::i;:::-;9759:32;;;;;;;;;;;;;:::i;:::-;;;;373:3483:15;;;;;;:::i;:::-;;:::o;5912:1107:5:-;;;;6001:4;:18;;6009:10;6017:1;6009:10;:::i;:::-;6001:18;:::i;:::-;;;:::i;:::-;;5997:540;;;;6137:21;;6153:5;6137:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5997:540;6551:2;:16;;6557:10;6565:1;6557:10;:::i;:::-;6551:16;:::i;:::-;;;:::i;:::-;;6547:425;;;;6714:21;;6730:5;6714:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;7002:2;7006:5;6987:25;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;5912:1107::o;6547:425::-;6925:22;6942:5;6925:22;:13;:9;6935:2;6925:13;;:::i;:::-;:22;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;;5997:540;6211:15;;:9;6221:4;6211:15;;:::i;:::-;;:::i;:::-;6244:11;:19;;6258:5;6244:19;:::i;:::-;;;:::i;:::-;;6240:115;;6493:19;6475:37;6493:11;6507:5;6493:19;;:::i;:::-;6475:15;:9;6485:4;6475:15;;:::i;:::-;:37;:::i;:::-;5997:540;;6240:115;6315:4;6290:50;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "FAUCET_AMOUNT()": "76697640",
              "FAUCET_COOLDOWN()": "7d1d5d19",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "canUseFaucet(address)": "780768fc",
              "decimals()": "313ce567",
              "faucet()": "de5f72fd",
              "getFaucetCooldownTime(address)": "70519516",
              "lastFaucetTime(address)": "7bc1f6cc",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"remainingTime\",\"type\":\"uint256\"}],\"name\":\"FaucetCooldownActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FaucetUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FAUCET_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FAUCET_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canUseFaucet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canUse\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFaucetCooldownTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remainingTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastFaucetTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"DEX\\u3067\\u4f7f\\u7528\\u3055\\u308c\\u308b\\u30c6\\u30b9\\u30c8\\u30c8\\u30fc\\u30af\\u30f3A (TKA)\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FaucetCooldownActive(address,uint256)\":[{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u5236\\u9650\\u30a8\\u30e9\\u30fc\",\"params\":{\"remainingTime\":\"\\u6b21\\u56de\\u5229\\u7528\\u307e\\u3067\\u5f85\\u6a5f\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u6642\\u9593\\uff08\\u79d2\\uff09\",\"user\":\"\\u5236\\u9650\\u306b\\u304b\\u304b\\u3063\\u305f\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"FaucetUsed(address,uint256,uint256)\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u5229\\u7528\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount\":\"\\u53d6\\u5f97\\u3057\\u305f\\u30c8\\u30fc\\u30af\\u30f3\\u91cf\",\"timestamp\":\"\\u5229\\u7528\\u6642\\u523b\",\"user\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u3092\\u5229\\u7528\\u3057\\u305f\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"canUseFaucet(address)\":{\"details\":\"\\u30e6\\u30fc\\u30b6\\u30fc\\u304c\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u3092\\u5229\\u7528\\u53ef\\u80fd\\u304b\\u3069\\u3046\\u304b\\u3092\\u78ba\\u8a8d\",\"params\":{\"user\":\"\\u78ba\\u8a8d\\u3059\\u308b\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"canUse\":\"\\u5229\\u7528\\u53ef\\u80fd\\u306a\\u5834\\u5408\\u306ftrue\"}},\"constructor\":{\"details\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\",\"params\":{\"initialOwner\":\"\\u521d\\u671f\\u30aa\\u30fc\\u30ca\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"faucet()\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u6a5f\\u80fd - \\u8ab0\\u3067\\u30821\\u65e51\\u56de100 TKA\\u3092\\u53d6\\u5f97\\u53ef\\u80fd\"},\"getFaucetCooldownTime(address)\":{\"details\":\"\\u30e6\\u30fc\\u30b6\\u30fc\\u304c\\u6b21\\u306b\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u3092\\u5229\\u7528\\u3067\\u304d\\u308b\\u307e\\u3067\\u306e\\u6b8b\\u308a\\u6642\\u9593\\u3092\\u53d6\\u5f97\",\"params\":{\"user\":\"\\u78ba\\u8a8d\\u3059\\u308b\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"remainingTime\":\"\\u6b8b\\u308a\\u6642\\u9593\\uff08\\u79d2\\uff09\\u30010\\u306e\\u5834\\u5408\\u306f\\u5229\\u7528\\u53ef\\u80fd\"}},\"mint(address,uint256)\":{\"details\":\"\\u30aa\\u30fc\\u30ca\\u30fc\\u306e\\u307f\\u304c\\u30c8\\u30fc\\u30af\\u30f3\\u3092\\u767a\\u884c\\u53ef\\u80fd\\uff08\\u7dca\\u6025\\u6642\\u7528\\uff09\",\"params\":{\"amount\":\"\\u767a\\u884c\\u91cf\",\"to\":\"\\u767a\\u884c\\u5148\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"FAUCET_AMOUNT\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u30671\\u56de\\u306b\\u53d6\\u5f97\\u3067\\u304d\\u308b\\u30c8\\u30fc\\u30af\\u30f3\\u91cf\"},\"FAUCET_COOLDOWN\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u306e\\u5236\\u9650\\u6642\\u9593\\uff0824\\u6642\\u9593\\uff09\"},\"lastFaucetTime\":{\"details\":\"\\u5404\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u6700\\u5f8c\\u306e\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u5229\\u7528\\u6642\\u523b\"}},\"title\":\"TokenA\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"faucet()\":{\"notice\":\"24\\u6642\\u9593\\u306b1\\u56de\\u306e\\u307f\\u5229\\u7528\\u53ef\\u80fd\"}},\"notice\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u6a5f\\u80fd\\u4ed8\\u304d\\u306eERC20\\u30c8\\u30fc\\u30af\\u30f3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenA.sol\":\"TokenA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/TokenA.sol\":{\"keccak256\":\"0x45c898261f374d0ec6147608f996c6ddfbcdee53107285be496dd41e195bf6ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b36d9e4d16223bb0a455ec3f2faffe96ab858bb7262fcf1bcc6b49866d9662b5\",\"dweb:/ipfs/QmNuGUzHcuR5dN7zgAejAD88y8mNk9SsNYLTLrZdJKYZGs\"]}},\"version\":1}"
        }
      },
      "contracts/TokenB.sol": {
        "TokenB": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "remainingTime",
                  "type": "uint256"
                }
              ],
              "name": "FaucetCooldownActive",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "FaucetUsed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "FAUCET_AMOUNT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "FAUCET_COOLDOWN",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "canUseFaucet",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "canUse",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "faucet",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getFaucetCooldownTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "remainingTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "lastFaucetTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 735,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": 1625,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 748,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 134,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_string": {
                  "entryPoint": 316,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 52,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 933,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 865,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 1087,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": 171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 1467,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 519,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 692,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 522,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_bytes1": {
                  "entryPoint": 1055,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 556,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constructor_ERC20": {
                  "entryPoint": 1437,
                  "id": 426,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constructor_Ownable": {
                  "entryPoint": 770,
                  "id": 50,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "constructor_ReentrancyGuard": {
                  "entryPoint": 661,
                  "id": 1509,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "constructor_TokenB": {
                  "entryPoint": 491,
                  "id": 3235,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 1578,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 723,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 695,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 528,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_stringliteral_9e28_to_string": {
                  "entryPoint": 404,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_stringliteral_ab61_to_string": {
                  "entryPoint": 480,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1566,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1538,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 598,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_TokenB": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_byte_array_to_storage_from_string_to_string": {
                  "entryPoint": 1218,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_literal_to_memory_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2": {
                  "entryPoint": 379,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_literal_to_memory_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca": {
                  "entryPoint": 455,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "divide_by_ceil": {
                  "entryPoint": 944,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 891,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 1478,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": 1200,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 95,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 1631,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 525,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mask_bytes_dynamic": {
                  "entryPoint": 1178,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x22": {
                  "entryPoint": 869,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 73,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 1590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 626,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 1498,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 58,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 155,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 63,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 569,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 954,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 1461,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 1174,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_uint256": {
                  "entryPoint": 1035,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "store_literal_in_memory_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2": {
                  "entryPoint": 339,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca": {
                  "entryPoint": 415,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 958,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 575,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 1511,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 1593,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_string_to_string": {
                  "entryPoint": 1425,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 629,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 996,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 1030,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461002f576100196100146100fa565b6101eb565b610021610034565b6116406106c1823961164090f35b61003a565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906100699061003f565b810190811060018060401b0382111761008157604052565b610049565b90610099610092610034565b928361005f565b565b600080fd5b60018060a01b031690565b6100b4906100a0565b90565b6100c0816100ab565b036100c757565b600080fd5b905051906100d9826100b7565b565b906020828203126100f5576100f2916000016100cc565b90565b61009b565b610118611d018038038061010d81610086565b9283398101906100db565b90565b60018060401b0381116101375761013360209161003f565b0190565b610049565b9061014e6101498361011b565b610086565b918252565b60007f546f6b656e420000000000000000000000000000000000000000000000000000910152565b610185600661013c565b9061019260208301610153565b565b61019c61017b565b90565b60007f544b420000000000000000000000000000000000000000000000000000000000910152565b6101d1600361013c565b906101de6020830161019f565b565b6101e86101c7565b90565b610205906101f7610194565b6101ff6101e0565b91610295565b565b90565b90565b90565b61022461021f61022992610207565b61020d565b61020a565b90565b6102366001610210565b90565b60001b90565b9061024c60001991610239565b9181191691161790565b61026a61026561026f9261020a565b61020d565b61020a565b90565b90565b9061028a61028561029192610256565b610272565b825461023f565b9055565b906102a09291610302565b6102b26102ab61022c565b6006610275565b565b90565b6102cb6102c66102d0926102b4565b61020d565b6100a0565b90565b6102dc906102b7565b90565b6102e8906100ab565b9052565b9190610300906000602085019401906102df565b565b9161030c9161059d565b8061032861032261031d60006102d3565b6100ab565b916100ab565b14610338576103369061065f565b565b61035d61034560006102d3565b6000918291631e4fbdf760e01b8352600483016102ec565b0390fd5b5190565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801561039b575b602083101461039657565b610365565b91607f169161038b565b600052602060002090565b601f602091010490565b1b90565b919060086103da9102916103d4600019846103ba565b926103ba565b9181191691161790565b91906103fa6103f561040293610256565b610272565b9083546103be565b9055565b600090565b61041d91610417610406565b916103e4565b565b5b81811061042b575050565b80610439600060019361040b565b01610420565b9190601f811161044f575b505050565b61045b610480936103a5565b906020610467846103b0565b83019310610488575b610479906103b0565b019061041f565b38808061044a565b915061047981929050610470565b1c90565b906104ab9060001990600802610496565b191690565b816104ba9161049a565b906002021790565b906104cc81610361565b9060018060401b03821161058c576104ee826104e8855461037b565b8561043f565b602090601f83116001146105235791809161051293600092610517575b50506104b0565b90555b565b9091500151388061050b565b601f19831691610532856103a5565b9260005b8181106105745750916002939185600196941061055a575b50505002019055610515565b61056a910151601f84169061049a565b905538808061054e565b91936020600181928787015181550195019201610536565b610049565b9061059b916104c2565b565b906105ac6105b3926003610591565b6004610591565b565b60001c90565b60018060a01b031690565b6105d26105d7916105b5565b6105bb565b90565b6105e490546105c6565b90565b906105f860018060a01b0391610239565b9181191691161790565b61061661061161061b926100a0565b61020d565b6100a0565b90565b61062790610602565b90565b6106339061061e565b90565b90565b9061064e6106496106559261062a565b610636565b82546105e7565b9055565b60000190565b61066960056105da565b610674826005610639565b906106a86106a27f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361062a565b9161062a565b916106b1610034565b806106bb81610659565b0390a356fe60806040526004361015610013575b6108a8565b61001e60003561014d565b806306fdde0314610148578063095ea7b31461014357806318160ddd1461013e57806323b872dd14610139578063313ce5671461013457806340c10f191461012f578063705195161461012a57806370a0823114610125578063715018a614610120578063766976401461011b578063780768fc146101165780637bc1f6cc146101115780637d1d5d191461010c5780638da5cb5b1461010757806395d89b4114610102578063a9059cbb146100fd578063dd62ed3e146100f8578063de5f72fd146100f35763f2fde38b0361000e57610875565b610842565b61080c565b6107a8565b610773565b61073e565b6106e6565b610678565b6105b0565b61057b565b610506565b6104d1565b61049c565b610449565b61040e565b6103af565b61033f565b6102e6565b6101f9565b60e01c90565b60405190565b600080fd5b600080fd5b600091031261016e57565b61015e565b5190565b60209181520190565b60005b838110610194575050906000910152565b806020918301518185015201610183565b601f801991011690565b6101ce6101d76020936101dc936101c581610173565b93848093610177565b95869101610180565b6101a5565b0190565b6101f691602082019160008184039101526101af565b90565b3461022957610209366004610163565b610225610214610a0f565b61021c610153565b918291826101e0565b0390f35b610159565b60018060a01b031690565b6102429061022e565b90565b61024e81610239565b0361025557565b600080fd5b9050359061026782610245565b565b90565b61027581610269565b0361027c57565b600080fd5b9050359061028e8261026c565b565b91906040838203126102b957806102ad6102b6926000860161025a565b93602001610281565b90565b61015e565b151590565b6102cc906102be565b9052565b91906102e4906000602085019401906102c3565b565b34610317576103136103026102fc366004610290565b90610a2a565b61030a610153565b918291826102d0565b0390f35b610159565b61032590610269565b9052565b919061033d9060006020850194019061031c565b565b3461036f5761034f366004610163565b61036b61035a610a78565b610362610153565b91829182610329565b0390f35b610159565b90916060828403126103aa576103a7610390846000850161025a565b9361039e816020860161025a565b93604001610281565b90565b61015e565b346103e0576103dc6103cb6103c5366004610374565b91610a8e565b6103d3610153565b918291826102d0565b0390f35b610159565b60ff1690565b6103f4906103e5565b9052565b919061040c906000602085019401906103eb565b565b3461043e5761041e366004610163565b61043a610429610ae1565b610431610153565b918291826103f8565b0390f35b610159565b60000190565b346104785761046261045c366004610290565b90610b17565b61046a610153565b8061047481610443565b0390f35b610159565b90602082820312610497576104949160000161025a565b90565b61015e565b346104cc576104c86104b76104b236600461047d565b610ba2565b6104bf610153565b91829182610329565b0390f35b610159565b34610501576104fd6104ec6104e736600461047d565b610c15565b6104f4610153565b91829182610329565b0390f35b610159565b3461053457610516366004610163565b61051e610c82565b610526610153565b8061053081610443565b0390f35b610159565b90565b90565b61055361054e61055892610539565b61053c565b610269565b90565b61056d68056bc75e2d6310000061053f565b90565b61057861055b565b90565b346105ab5761058b366004610163565b6105a7610596610570565b61059e610153565b91829182610329565b0390f35b610159565b346105e0576105dc6105cb6105c636600461047d565b610c8c565b6105d3610153565b918291826102d0565b0390f35b610159565b6105f96105f46105fe9261022e565b61053c565b61022e565b90565b61060a906105e5565b90565b61061690610601565b90565b906106239061060d565b600052602052604060002090565b1c90565b90565b61064890600861064d9302610631565b610635565b90565b9061065b9154610638565b90565b61067590610670600791600092610619565b610650565b90565b346106a8576106a461069361068e36600461047d565b61065e565b61069b610153565b91829182610329565b0390f35b610159565b90565b6106c46106bf6106c9926106ad565b61053c565b610269565b90565b6106d8620151806106b0565b90565b6106e36106cc565b90565b34610716576106f6366004610163565b6107126107016106db565b610709610153565b91829182610329565b0390f35b610159565b61072490610239565b9052565b919061073c9060006020850194019061071b565b565b3461076e5761074e366004610163565b61076a610759610d01565b610761610153565b91829182610728565b0390f35b610159565b346107a357610783366004610163565b61079f61078e610d17565b610796610153565b918291826101e0565b0390f35b610159565b346107d9576107d56107c46107be366004610290565b90610d2d565b6107cc610153565b918291826102d0565b0390f35b610159565b919060408382031261080757806107fb610804926000860161025a565b9360200161025a565b90565b61015e565b3461083d576108396108286108223660046107de565b90610d67565b610830610153565b91829182610329565b0390f35b610159565b3461087057610852366004610163565b61085a610f4e565b610862610153565b8061086c81610443565b0390f35b610159565b346108a35761088d61088836600461047d565b610fc0565b610895610153565b8061089f81610443565b0390f35b610159565b600080fd5b606090565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156108e8575b60208310146108e357565b6108b2565b91607f16916108d8565b60209181520190565b600052602060002090565b906000929180549061092161091a836108c8565b80946108f2565b9160018116908160001461097a575060011461093d575b505050565b61094a91929394506108fb565b916000925b8184106109625750500190388080610938565b6001816020929593955484860152019101929061094f565b92949550505060ff1916825215156020020190388080610938565b9061099f91610906565b90565b634e487b7160e01b600052604160045260246000fd5b906109c2906101a5565b810190811067ffffffffffffffff8211176109dc57604052565b6109a2565b90610a016109fa926109f1610153565b93848092610995565b03836109b8565b565b610a0c906109e1565b90565b610a176108ad565b50610a226003610a03565b90565b600090565b610a4791610a36610a25565b50610a3f610fcb565b919091610fd8565b600190565b600090565b60001c90565b610a63610a6891610a51565b610635565b90565b610a759054610a57565b90565b610a80610a4c565b50610a8b6002610a6b565b90565b91610ab892610a9b610a25565b50610ab0610aa7610fcb565b82908491611029565b9190916110b8565b600190565b600090565b90565b610ad9610ad4610ade92610ac2565b61053c565b6103e5565b90565b610ae9610abd565b50610af46012610ac5565b90565b90610b0991610b0461115b565b610b0b565b565b90610b15916111aa565b565b90610b2191610af7565b565b634e487b7160e01b600052601160045260246000fd5b610b48610b4e91939293610269565b92610269565b8201809211610b5957565b610b23565b610b6d610b7391939293610269565b92610269565b8203918211610b7e57565b610b23565b90565b610b9a610b95610b9f92610b83565b61053c565b610269565b90565b610baa610a4c565b50610bbf610bba42926007610619565b610a6b565b90610bd282610bcc6106cc565b90610b39565b610be4610bde83610269565b91610269565b11610bf8575050610bf56000610b86565b90565b610c0d610c1292610c076106cc565b90610b39565b610b5e565b90565b610c2c610c3191610c24610a4c565b506000610619565b610a6b565b90565b610c3c61115b565b610c44610c6e565b565b610c5a610c55610c5f92610b83565b61053c565b61022e565b90565b610c6b90610c46565b90565b610c80610c7b6000610c62565b61124a565b565b610c8a610c34565b565b610cab610ca6610cb992610c9e610a25565b506007610619565b610a6b565b610cb36106cc565b90610b39565b610ccb610cc542610269565b91610269565b111590565b600090565b60018060a01b031690565b610cec610cf191610a51565b610cd5565b90565b610cfe9054610ce0565b90565b610d09610cd0565b50610d146005610cf4565b90565b610d1f6108ad565b50610d2a6004610a03565b90565b610d4a91610d39610a25565b50610d42610fcb565b9190916110b8565b600190565b90610d599061060d565b600052602052604060002090565b610d8c91610d82610d8792610d7a610a4c565b506001610d4f565b610619565b610a6b565b90565b610d976112d7565b610d9f610e4d565b610da761135c565b565b916020610dcb929493610dc46040820196600083019061071b565b019061031c565b565b60001b90565b90610de060001991610dcd565b9181191691161790565b610dfe610df9610e0392610269565b61053c565b610269565b90565b90565b90610e1e610e19610e2592610dea565b610e06565b8254610dd3565b9055565b916020610e4b929493610e446040820196600083019061031c565b019061031c565b565b334290610e75610e67610e6260078490610619565b610a6b565b610e6f6106cc565b90610b39565b610e87610e8184610269565b91610269565b11610f0057610ea182610e9c60078490610619565b610e09565b610eb381610ead61055b565b906111aa565b610ebb61055b565b91610ee67f1471294b27bd6e7d297998c0fd0fb313349f2f6c782cc696d9279410a95575749261060d565b92610efb610ef2610153565b92839283610e29565b0390a2565b610f2e82610f29610f1b610f1660078690610619565b610a6b565b610f236106cc565b90610b39565b610b5e565b90610f4a60009283926337f86cfd60e01b845260048401610da9565b0390fd5b610f56610d8f565b565b610f6990610f6461115b565b610f6b565b565b80610f87610f81610f7c6000610c62565b610239565b91610239565b14610f9757610f959061124a565b565b610fbc610fa46000610c62565b6000918291631e4fbdf760e01b835260048301610728565b0390fd5b610fc990610f58565b565b610fd3610cd0565b503390565b91610fe69291600192611370565b565b60409061101261101994969593966110086060840198600085019061071b565b602083019061031c565b019061031c565b565b906110269103610269565b90565b929192611037818390610d67565b908161104d611047600019610269565b91610269565b1061105a575b5050509050565b8161106d61106787610269565b91610269565b106110945761108b939461108291939261101b565b90600092611370565b80388080611053565b506110b4849291926000938493637dc7a0d960e11b855260048501610fe8565b0390fd5b91826110d56110cf6110ca6000610c62565b610239565b91610239565b1461113257816110f66110f06110eb6000610c62565b610239565b91610239565b146111095761110792919091611493565b565b61112e6111166000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b61115761113f6000610c62565b6000918291634b637e8f60e11b835260048301610728565b0390fd5b611163610d01565b61117c611176611171610fcb565b610239565b91610239565b0361118357565b6111a661118e610fcb565b600091829163118cdaa760e01b835260048301610728565b0390fd5b806111c66111c06111bb6000610c62565b610239565b91610239565b146111e3576111e1916111d96000610c62565b919091611493565b565b6112086111f06000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b9061121d60018060a01b0391610dcd565b9181191691161790565b90565b9061123f61123a6112469261060d565b611227565b825461120c565b9055565b6112546005610cf4565b61125f82600561122a565b9061129361128d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361060d565b9161060d565b9161129c610153565b806112a681610443565b0390a3565b90565b6112c26112bd6112c7926112ab565b61053c565b610269565b90565b6112d460026112ae565b90565b6112e16006610a6b565b6112fa6112f46112ef6112ca565b610269565b91610269565b146113135761131161130a6112ca565b6006610e09565b565b6000633ee5aeb560e01b81528061132c60048201610443565b0390fd5b90565b61134761134261134c92611330565b61053c565b610269565b90565b6113596001611333565b90565b61136e61136761134f565b6006610e09565b565b90928161138e6113886113836000610c62565b610239565b91610239565b1461145c57836113af6113a96113a46000610c62565b610239565b91610239565b14611433576113d3836113ce6113c760018690610d4f565b8790610619565b610e09565b6113dd575b505050565b9190916114286114166114107f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361060d565b9361060d565b9361141f610153565b91829182610329565b0390a33880806113d8565b6114586114406000610c62565b6000918291634a1406b160e11b835260048301610728565b0390fd5b6114816114696000610c62565b600091829163e602df0560e01b835260048301610728565b0390fd5b906114909101610269565b90565b919091806114b26114ac6114a76000610c62565b610239565b91610239565b14600014611597576114d76114d0836114cb6002610a6b565b610b39565b6002610e09565b5b826114f46114ee6114e96000610c62565b610239565b91610239565b1460001461156a576115196115128361150d6002610a6b565b61101b565b6002610e09565b5b91909161156561155361154d7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9361060d565b9361060d565b9361155c610153565b91829182610329565b0390a3565b6115928261158c61157d60008790610619565b9161158783610a6b565b611485565b90610e09565b61151a565b6115ab6115a660008390610619565b610a6b565b806115be6115b885610269565b91610269565b106115e7576115d16115e291849061101b565b6115dd60008490610619565b610e09565b6114d8565b90611606909192600093849363391434e360e21b855260048501610fe8565b0390fdfea264697066735822122065965a7d37b30f29552679aca98fb59bf0a43b7e847ed17f74e9c9d8cf48456064736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2F JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xFA JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x21 PUSH2 0x34 JUMP JUMPDEST PUSH2 0x1640 PUSH2 0x6C1 DUP3 CODECOPY PUSH2 0x1640 SWAP1 RETURN JUMPDEST PUSH2 0x3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x69 SWAP1 PUSH2 0x3F JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x99 PUSH2 0x92 PUSH2 0x34 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB4 SWAP1 PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xAB JUMP JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xD9 DUP3 PUSH2 0xB7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF5 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 ADD PUSH2 0xCC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1D01 DUP1 CODESIZE SUB DUP1 PUSH2 0x10D DUP2 PUSH2 0x86 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xDB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x137 JUMPI PUSH2 0x133 PUSH1 0x20 SWAP2 PUSH2 0x3F JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x14E PUSH2 0x149 DUP4 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x546F6B656E420000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x185 PUSH1 0x6 PUSH2 0x13C JUMP JUMPDEST SWAP1 PUSH2 0x192 PUSH1 0x20 DUP4 ADD PUSH2 0x153 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x19C PUSH2 0x17B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x544B420000000000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x3 PUSH2 0x13C JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH1 0x20 DUP4 ADD PUSH2 0x19F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1C7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x205 SWAP1 PUSH2 0x1F7 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x1E0 JUMP JUMPDEST SWAP2 PUSH2 0x295 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x21F PUSH2 0x229 SWAP3 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x236 PUSH1 0x1 PUSH2 0x210 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24C PUSH1 0x0 NOT SWAP2 PUSH2 0x239 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x265 PUSH2 0x26F SWAP3 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0x20A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28A PUSH2 0x285 PUSH2 0x291 SWAP3 PUSH2 0x256 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2A0 SWAP3 SWAP2 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2AB PUSH2 0x22C JUMP JUMPDEST PUSH1 0x6 PUSH2 0x275 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x2C6 PUSH2 0x2D0 SWAP3 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2DC SWAP1 PUSH2 0x2B7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2E8 SWAP1 PUSH2 0xAB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x300 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2DF JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH2 0x30C SWAP2 PUSH2 0x59D JUMP JUMPDEST DUP1 PUSH2 0x328 PUSH2 0x322 PUSH2 0x31D PUSH1 0x0 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x338 JUMPI PUSH2 0x336 SWAP1 PUSH2 0x65F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x35D PUSH2 0x345 PUSH1 0x0 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x2EC JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x39B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x396 JUMPI JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x3DA SWAP2 MUL SWAP2 PUSH2 0x3D4 PUSH1 0x0 NOT DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 PUSH2 0x3BA JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3FA PUSH2 0x3F5 PUSH2 0x402 SWAP4 PUSH2 0x256 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x3BE JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x41D SWAP2 PUSH2 0x417 PUSH2 0x406 JUMP JUMPDEST SWAP2 PUSH2 0x3E4 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x42B JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x439 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x40B JUMP JUMPDEST ADD PUSH2 0x420 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x44F JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x45B PUSH2 0x480 SWAP4 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x467 DUP5 PUSH2 0x3B0 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x488 JUMPI JUMPDEST PUSH2 0x479 SWAP1 PUSH2 0x3B0 JUMP JUMPDEST ADD SWAP1 PUSH2 0x41F JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP PUSH2 0x479 DUP2 SWAP3 SWAP1 POP PUSH2 0x470 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4AB SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x496 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x4BA SWAP2 PUSH2 0x49A JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4CC DUP2 PUSH2 0x361 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x58C JUMPI PUSH2 0x4EE DUP3 PUSH2 0x4E8 DUP6 SLOAD PUSH2 0x37B JUMP JUMPDEST DUP6 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x523 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x512 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x517 JUMPI JUMPDEST POP POP PUSH2 0x4B0 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x532 DUP6 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x574 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x55A JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x515 JUMP JUMPDEST PUSH2 0x56A SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x49A JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x54E JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x536 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x59B SWAP2 PUSH2 0x4C2 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x5AC PUSH2 0x5B3 SWAP3 PUSH1 0x3 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x591 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x5D7 SWAP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5E4 SWAP1 SLOAD PUSH2 0x5C6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5F8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x239 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x616 PUSH2 0x611 PUSH2 0x61B SWAP3 PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x20D JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x627 SWAP1 PUSH2 0x602 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x633 SWAP1 PUSH2 0x61E JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x64E PUSH2 0x649 PUSH2 0x655 SWAP3 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5E7 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x669 PUSH1 0x5 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x674 DUP3 PUSH1 0x5 PUSH2 0x639 JUMP JUMPDEST SWAP1 PUSH2 0x6A8 PUSH2 0x6A2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x62A JUMP JUMPDEST SWAP2 PUSH2 0x62A JUMP JUMPDEST SWAP2 PUSH2 0x6B1 PUSH2 0x34 JUMP JUMPDEST DUP1 PUSH2 0x6BB DUP2 PUSH2 0x659 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x70519516 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x780768FC EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x7BC1F6CC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0xF3 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI PUSH2 0x875 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x16E JUMPI JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x194 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x183 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1D7 PUSH1 0x20 SWAP4 PUSH2 0x1DC SWAP4 PUSH2 0x1C5 DUP2 PUSH2 0x173 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x177 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x180 JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x214 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x21C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x242 SWAP1 PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x267 DUP3 PUSH2 0x245 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x275 DUP2 PUSH2 0x269 JUMP JUMPDEST SUB PUSH2 0x27C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x28E DUP3 PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x2B9 JUMPI DUP1 PUSH2 0x2AD PUSH2 0x2B6 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2CC SWAP1 PUSH2 0x2BE JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E4 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C3 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x317 JUMPI PUSH2 0x313 PUSH2 0x302 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x30A PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x325 SWAP1 PUSH2 0x269 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x33D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x36F JUMPI PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x36B PUSH2 0x35A PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x3AA JUMPI PUSH2 0x3A7 PUSH2 0x390 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH2 0x39E DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x3E0 JUMPI PUSH2 0x3DC PUSH2 0x3CB PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x374 JUMP JUMPDEST SWAP2 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3F4 SWAP1 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x40C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x3EB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x43E JUMPI PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x429 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x478 JUMPI PUSH2 0x462 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x474 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x497 JUMPI PUSH2 0x494 SWAP2 PUSH1 0x0 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x4CC JUMPI PUSH2 0x4C8 PUSH2 0x4B7 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x501 JUMPI PUSH2 0x4FD PUSH2 0x4EC PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x534 JUMPI PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x530 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x54E PUSH2 0x558 SWAP3 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH9 0x56BC75E2D63100000 PUSH2 0x53F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x578 PUSH2 0x55B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5AB JUMPI PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x5A7 PUSH2 0x596 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x59E PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x5E0 JUMPI PUSH2 0x5DC PUSH2 0x5CB PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0x5F4 PUSH2 0x5FE SWAP3 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x60A SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x616 SWAP1 PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x623 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x648 SWAP1 PUSH1 0x8 PUSH2 0x64D SWAP4 MUL PUSH2 0x631 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x65B SWAP2 SLOAD PUSH2 0x638 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x675 SWAP1 PUSH2 0x670 PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x6A8 JUMPI PUSH2 0x6A4 PUSH2 0x693 PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x69B PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x6BF PUSH2 0x6C9 SWAP3 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D8 PUSH3 0x15180 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6E3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x716 JUMPI PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x701 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x709 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x724 SWAP1 PUSH2 0x239 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x73C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x76A PUSH2 0x759 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7A3 JUMPI PUSH2 0x783 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x79F PUSH2 0x78E PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7D9 JUMPI PUSH2 0x7D5 PUSH2 0x7C4 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x7CC PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x807 JUMPI DUP1 PUSH2 0x7FB PUSH2 0x804 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x83D JUMPI PUSH2 0x839 PUSH2 0x828 PUSH2 0x822 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DE JUMP JUMPDEST SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x830 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x870 JUMPI PUSH2 0x852 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x85A PUSH2 0xF4E JUMP JUMPDEST PUSH2 0x862 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x86C DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x8A3 JUMPI PUSH2 0x88D PUSH2 0x888 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0x895 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x89F DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x8E8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x921 PUSH2 0x91A DUP4 PUSH2 0x8C8 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x97A JUMPI POP PUSH1 0x1 EQ PUSH2 0x93D JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x94A SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x8FB JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x962 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x94F JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST SWAP1 PUSH2 0x99F SWAP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x9C2 SWAP1 PUSH2 0x1A5 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST SWAP1 PUSH2 0xA01 PUSH2 0x9FA SWAP3 PUSH2 0x9F1 PUSH2 0x153 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x995 JUMP JUMPDEST SUB DUP4 PUSH2 0x9B8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0C SWAP1 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA17 PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xA22 PUSH1 0x3 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA47 SWAP2 PUSH2 0xA36 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xA3F PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xA68 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA75 SWAP1 SLOAD PUSH2 0xA57 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA80 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA8B PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xAB8 SWAP3 PUSH2 0xA9B PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xAB0 PUSH2 0xAA7 PUSH2 0xFCB JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x1029 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAD9 PUSH2 0xAD4 PUSH2 0xADE SWAP3 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0xABD JUMP JUMPDEST POP PUSH2 0xAF4 PUSH1 0x12 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB09 SWAP2 PUSH2 0xB04 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB15 SWAP2 PUSH2 0x11AA JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB21 SWAP2 PUSH2 0xAF7 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB48 PUSH2 0xB4E SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB59 JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xB73 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB7E JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0xB95 PUSH2 0xB9F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xBBF PUSH2 0xBBA TIMESTAMP SWAP3 PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 PUSH2 0xBD2 DUP3 PUSH2 0xBCC PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0xBDE DUP4 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xBF8 JUMPI POP POP PUSH2 0xBF5 PUSH1 0x0 PUSH2 0xB86 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0D PUSH2 0xC12 SWAP3 PUSH2 0xC07 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xC31 SWAP2 PUSH2 0xC24 PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x115B JUMP JUMPDEST PUSH2 0xC44 PUSH2 0xC6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC5A PUSH2 0xC55 PUSH2 0xC5F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC6B SWAP1 PUSH2 0xC46 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH2 0xC7B PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC8A PUSH2 0xC34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCAB PUSH2 0xCA6 PUSH2 0xCB9 SWAP3 PUSH2 0xC9E PUSH2 0xA25 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xCCB PUSH2 0xCC5 TIMESTAMP PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xCEC PUSH2 0xCF1 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xCD5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCFE SWAP1 SLOAD PUSH2 0xCE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD09 PUSH2 0xCD0 JUMP JUMPDEST POP PUSH2 0xD14 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD1F PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xD2A PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4A SWAP2 PUSH2 0xD39 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xD42 PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD59 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD8C SWAP2 PUSH2 0xD82 PUSH2 0xD87 SWAP3 PUSH2 0xD7A PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD97 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xD9F PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xDCB SWAP3 SWAP5 SWAP4 PUSH2 0xDC4 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDE0 PUSH1 0x0 NOT SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xDFE PUSH2 0xDF9 PUSH2 0xE03 SWAP3 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE1E PUSH2 0xE19 PUSH2 0xE25 SWAP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDD3 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE4B SWAP3 SWAP5 SWAP4 PUSH2 0xE44 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLER TIMESTAMP SWAP1 PUSH2 0xE75 PUSH2 0xE67 PUSH2 0xE62 PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xE87 PUSH2 0xE81 DUP5 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xF00 JUMPI PUSH2 0xEA1 DUP3 PUSH2 0xE9C PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xEAD PUSH2 0x55B JUMP JUMPDEST SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0xEBB PUSH2 0x55B JUMP JUMPDEST SWAP2 PUSH2 0xEE6 PUSH32 0x1471294B27BD6E7D297998C0FD0FB313349F2F6C782CC696D9279410A9557574 SWAP3 PUSH2 0x60D JUMP JUMPDEST SWAP3 PUSH2 0xEFB PUSH2 0xEF2 PUSH2 0x153 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xE29 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xF2E DUP3 PUSH2 0xF29 PUSH2 0xF1B PUSH2 0xF16 PUSH1 0x7 DUP7 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xF23 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 PUSH2 0xF4A PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x37F86CFD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xDA9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xF56 PUSH2 0xD8F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF69 SWAP1 PUSH2 0xF64 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF87 PUSH2 0xF81 PUSH2 0xF7C PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0xF97 JUMPI PUSH2 0xF95 SWAP1 PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFBC PUSH2 0xFA4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC9 SWAP1 PUSH2 0xF58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0xCD0 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xFE6 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x1370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1012 PUSH2 0x1019 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1008 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x1026 SWAP2 SUB PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1037 DUP2 DUP4 SWAP1 PUSH2 0xD67 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x104D PUSH2 0x1047 PUSH1 0x0 NOT PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x105A JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x106D PUSH2 0x1067 DUP8 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x1094 JUMPI PUSH2 0x108B SWAP4 SWAP5 PUSH2 0x1082 SWAP2 SWAP4 SWAP3 PUSH2 0x101B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x1370 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x1053 JUMP JUMPDEST POP PUSH2 0x10B4 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x10D5 PUSH2 0x10CF PUSH2 0x10CA PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1132 JUMPI DUP2 PUSH2 0x10F6 PUSH2 0x10F0 PUSH2 0x10EB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1109 JUMPI PUSH2 0x1107 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x112E PUSH2 0x1116 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1157 PUSH2 0x113F PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1163 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x117C PUSH2 0x1176 PUSH2 0x1171 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x1183 JUMPI JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x118E PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x11C6 PUSH2 0x11C0 PUSH2 0x11BB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x11E3 JUMPI PUSH2 0x11E1 SWAP2 PUSH2 0x11D9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1208 PUSH2 0x11F0 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x121D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x123F PUSH2 0x123A PUSH2 0x1246 SWAP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1227 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x120C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1254 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x125F DUP3 PUSH1 0x5 PUSH2 0x122A JUMP JUMPDEST SWAP1 PUSH2 0x1293 PUSH2 0x128D PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x129C PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x12A6 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12C2 PUSH2 0x12BD PUSH2 0x12C7 SWAP3 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12D4 PUSH1 0x2 PUSH2 0x12AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12E1 PUSH1 0x6 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x12FA PUSH2 0x12F4 PUSH2 0x12EF PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST EQ PUSH2 0x1313 JUMPI PUSH2 0x1311 PUSH2 0x130A PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x132C PUSH1 0x4 DUP3 ADD PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1347 PUSH2 0x1342 PUSH2 0x134C SWAP3 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1359 PUSH1 0x1 PUSH2 0x1333 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1367 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x138E PUSH2 0x1388 PUSH2 0x1383 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x145C JUMPI DUP4 PUSH2 0x13AF PUSH2 0x13A9 PUSH2 0x13A4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1433 JUMPI PUSH2 0x13D3 DUP4 PUSH2 0x13CE PUSH2 0x13C7 PUSH1 0x1 DUP7 SWAP1 PUSH2 0xD4F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x13DD JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1428 PUSH2 0x1416 PUSH2 0x1410 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x141F PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x1458 PUSH2 0x1440 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1481 PUSH2 0x1469 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1490 SWAP2 ADD PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x14B2 PUSH2 0x14AC PUSH2 0x14A7 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x1597 JUMPI PUSH2 0x14D7 PUSH2 0x14D0 DUP4 PUSH2 0x14CB PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x14F4 PUSH2 0x14EE PUSH2 0x14E9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x156A JUMPI PUSH2 0x1519 PUSH2 0x1512 DUP4 PUSH2 0x150D PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x101B JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1565 PUSH2 0x1553 PUSH2 0x154D PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x155C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1592 DUP3 PUSH2 0x158C PUSH2 0x157D PUSH1 0x0 DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST SWAP2 PUSH2 0x1587 DUP4 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x15A6 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST DUP1 PUSH2 0x15BE PUSH2 0x15B8 DUP6 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x15E7 JUMPI PUSH2 0x15D1 PUSH2 0x15E2 SWAP2 DUP5 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x15DD PUSH1 0x0 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x14D8 JUMP JUMPDEST SWAP1 PUSH2 0x1606 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x965A7D37B30F 0x29 SSTORE 0x26 PUSH26 0xACA98FB59BF0A43B7E847ED17F74E9C9D8CF48456064736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "373:3483:16:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;1557:146::-;;;1597:8;;:::i;:::-;1607:5;;:::i;:::-;1557:146;;:::i;:::-;:::o;373:3483::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:10:-;1857:1;;;:::i;:::-;1818:40;:::o;1857:1::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2037:52::-;;;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;:::-;2037:52::o;373:3483:16:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;1225:187:0:-;;;;;:::i;:::-;1273:12;:26;;1289:10;1297:1;1289:10;:::i;:::-;1273:26;:::i;:::-;;;:::i;:::-;;1269:95;;1392:12;;;:::i;:::-;1225:187::o;1269:95::-;1322:31;1342:10;1350:1;1342:10;:::i;:::-;1322:31;;;;;;;;;;;;;:::i;:::-;;;;373:3483:16;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;1857:1:10;373:3483:16;1857:1:10;;373:3483:16;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;1582:113:5:-;;1648:13;1671:17;1582:113;1648:13;;:::i;:::-;1671:17;;:::i;:::-;1582:113::o;373:3483:16:-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 355,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 602,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 2014,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_addresst_addresst_uint256": {
                  "entryPoint": 884,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_addresst_uint256": {
                  "entryPoint": 656,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 1149,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 641,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_string_storage": {
                  "entryPoint": 2453,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1819,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 3497,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": 4072,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 720,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 707,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 480,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_memory_ptr": {
                  "entryPoint": 431,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_storage": {
                  "entryPoint": 2310,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 1091,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1832,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 809,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 796,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 3625,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint8": {
                  "entryPoint": 1016,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint8_to_uint8": {
                  "entryPoint": 1003,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_unbounded": {
                  "entryPoint": 339,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 2299,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 371,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": 2290,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string_fromStack": {
                  "entryPoint": 375,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2873,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 2910,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 569,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 702,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 3285,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1589,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_100000000000000000000_by": {
                  "entryPoint": 1337,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_2_by": {
                  "entryPoint": 4779,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 2754,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 4912,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 1709,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by_1": {
                  "entryPoint": 2947,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 558,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 617,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint8": {
                  "entryPoint": 997,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_ENTERED": {
                  "entryPoint": 4810,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_FAUCET_AMOUNT": {
                  "entryPoint": 1371,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_FAUCET_COOLDOWN": {
                  "entryPoint": 1740,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 4943,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1549,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_string_storage_to_string": {
                  "entryPoint": 2563,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_0_by_1_to_uint256": {
                  "entryPoint": 2950,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1_by_1_to_uint256": {
                  "entryPoint": 4915,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 4782,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 3170,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 3142,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 1712,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint8": {
                  "entryPoint": 2757,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 1343,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1537,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1509,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 3562,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 2529,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 384,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "external_fun_FAUCET_AMOUNT": {
                  "entryPoint": 1403,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_FAUCET_COOLDOWN": {
                  "entryPoint": 1766,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_allowance": {
                  "entryPoint": 2060,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 742,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_balanceOf": {
                  "entryPoint": 1233,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_canUseFaucet": {
                  "entryPoint": 1456,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_decimals": {
                  "entryPoint": 1038,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_faucet": {
                  "entryPoint": 2114,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getFaucetCooldownTime": {
                  "entryPoint": 1180,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_lastFaucetTime": {
                  "entryPoint": 1656,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_mint": {
                  "entryPoint": 1097,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_name": {
                  "entryPoint": 505,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 1854,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 1286,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_symbol": {
                  "entryPoint": 1907,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_totalSupply": {
                  "entryPoint": 831,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transfer": {
                  "entryPoint": 1960,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferFrom": {
                  "entryPoint": 943,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 2165,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 2248,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_uint256": {
                  "entryPoint": 1592,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 3296,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 2647,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2488,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__approve": {
                  "entryPoint": 4976,
                  "id": 840,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun__mint": {
                  "entryPoint": 4522,
                  "id": 729,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__transfer": {
                  "entryPoint": 4280,
                  "id": 619,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun__transferOwnership": {
                  "entryPoint": 4682,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_allowance": {
                  "entryPoint": 3431,
                  "id": 516,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve": {
                  "entryPoint": 2602,
                  "id": 540,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve_780": {
                  "entryPoint": 4056,
                  "id": 780,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_balanceOf": {
                  "entryPoint": 3093,
                  "id": 475,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_canUseFaucet": {
                  "entryPoint": 3212,
                  "id": 3348,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 4443,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_decimals": {
                  "entryPoint": 2785,
                  "id": 453,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_faucet": {
                  "entryPoint": 3918,
                  "id": 3294,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_faucet_inner": {
                  "entryPoint": 3661,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getFaucetCooldownTime": {
                  "entryPoint": 2978,
                  "id": 3330,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 2839,
                  "id": 3364,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_mint_inner": {
                  "entryPoint": 2827,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_msgSender": {
                  "entryPoint": 4043,
                  "id": 1469,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_name": {
                  "entryPoint": 2575,
                  "id": 435,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantAfter": {
                  "entryPoint": 4956,
                  "id": 1544,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 4823,
                  "id": 1536,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_owner": {
                  "entryPoint": 3329,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_renounceOwnership": {
                  "entryPoint": 3202,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_renounceOwnership_inner": {
                  "entryPoint": 3182,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_spendAllowance": {
                  "entryPoint": 4137,
                  "id": 888,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_symbol": {
                  "entryPoint": 3351,
                  "id": 444,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_totalSupply": {
                  "entryPoint": 2680,
                  "id": 462,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 3373,
                  "id": 499,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transferFrom": {
                  "entryPoint": 2702,
                  "id": 572,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_transferOwnership": {
                  "entryPoint": 4032,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": 3947,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_update": {
                  "entryPoint": 5267,
                  "id": 696,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "getter_fun_FAUCET_AMOUNT": {
                  "entryPoint": 1392,
                  "id": 3196,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_FAUCET_COOLDOWN": {
                  "entryPoint": 1755,
                  "id": 3200,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_lastFaucetTime": {
                  "entryPoint": 1630,
                  "id": 3205,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 1340,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_address_uint256__of_address": {
                  "entryPoint": 3407,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 1561,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant": {
                  "entryPoint": 3471,
                  "id": 1520,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 3124,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_104": {
                  "entryPoint": 3928,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_3356": {
                  "entryPoint": 2807,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 2851,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x22": {
                  "entryPoint": 2226,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2466,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 4647,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 3590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_uint256": {
                  "entryPoint": 1616,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 3316,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 2667,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 2216,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 345,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 350,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 421,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 3533,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 2641,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 333,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 1585,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 3539,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 4620,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 4650,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 3593,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 581,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 620,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "wrapping_add_uint256": {
                  "entryPoint": 5253,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "wrapping_sub_uint256": {
                  "entryPoint": 4123,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "zero_value_for_split_address": {
                  "entryPoint": 3280,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": 2597,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_string": {
                  "entryPoint": 2221,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 2636,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint8": {
                  "entryPoint": 2749,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b6108a8565b61001e60003561014d565b806306fdde0314610148578063095ea7b31461014357806318160ddd1461013e57806323b872dd14610139578063313ce5671461013457806340c10f191461012f578063705195161461012a57806370a0823114610125578063715018a614610120578063766976401461011b578063780768fc146101165780637bc1f6cc146101115780637d1d5d191461010c5780638da5cb5b1461010757806395d89b4114610102578063a9059cbb146100fd578063dd62ed3e146100f8578063de5f72fd146100f35763f2fde38b0361000e57610875565b610842565b61080c565b6107a8565b610773565b61073e565b6106e6565b610678565b6105b0565b61057b565b610506565b6104d1565b61049c565b610449565b61040e565b6103af565b61033f565b6102e6565b6101f9565b60e01c90565b60405190565b600080fd5b600080fd5b600091031261016e57565b61015e565b5190565b60209181520190565b60005b838110610194575050906000910152565b806020918301518185015201610183565b601f801991011690565b6101ce6101d76020936101dc936101c581610173565b93848093610177565b95869101610180565b6101a5565b0190565b6101f691602082019160008184039101526101af565b90565b3461022957610209366004610163565b610225610214610a0f565b61021c610153565b918291826101e0565b0390f35b610159565b60018060a01b031690565b6102429061022e565b90565b61024e81610239565b0361025557565b600080fd5b9050359061026782610245565b565b90565b61027581610269565b0361027c57565b600080fd5b9050359061028e8261026c565b565b91906040838203126102b957806102ad6102b6926000860161025a565b93602001610281565b90565b61015e565b151590565b6102cc906102be565b9052565b91906102e4906000602085019401906102c3565b565b34610317576103136103026102fc366004610290565b90610a2a565b61030a610153565b918291826102d0565b0390f35b610159565b61032590610269565b9052565b919061033d9060006020850194019061031c565b565b3461036f5761034f366004610163565b61036b61035a610a78565b610362610153565b91829182610329565b0390f35b610159565b90916060828403126103aa576103a7610390846000850161025a565b9361039e816020860161025a565b93604001610281565b90565b61015e565b346103e0576103dc6103cb6103c5366004610374565b91610a8e565b6103d3610153565b918291826102d0565b0390f35b610159565b60ff1690565b6103f4906103e5565b9052565b919061040c906000602085019401906103eb565b565b3461043e5761041e366004610163565b61043a610429610ae1565b610431610153565b918291826103f8565b0390f35b610159565b60000190565b346104785761046261045c366004610290565b90610b17565b61046a610153565b8061047481610443565b0390f35b610159565b90602082820312610497576104949160000161025a565b90565b61015e565b346104cc576104c86104b76104b236600461047d565b610ba2565b6104bf610153565b91829182610329565b0390f35b610159565b34610501576104fd6104ec6104e736600461047d565b610c15565b6104f4610153565b91829182610329565b0390f35b610159565b3461053457610516366004610163565b61051e610c82565b610526610153565b8061053081610443565b0390f35b610159565b90565b90565b61055361054e61055892610539565b61053c565b610269565b90565b61056d68056bc75e2d6310000061053f565b90565b61057861055b565b90565b346105ab5761058b366004610163565b6105a7610596610570565b61059e610153565b91829182610329565b0390f35b610159565b346105e0576105dc6105cb6105c636600461047d565b610c8c565b6105d3610153565b918291826102d0565b0390f35b610159565b6105f96105f46105fe9261022e565b61053c565b61022e565b90565b61060a906105e5565b90565b61061690610601565b90565b906106239061060d565b600052602052604060002090565b1c90565b90565b61064890600861064d9302610631565b610635565b90565b9061065b9154610638565b90565b61067590610670600791600092610619565b610650565b90565b346106a8576106a461069361068e36600461047d565b61065e565b61069b610153565b91829182610329565b0390f35b610159565b90565b6106c46106bf6106c9926106ad565b61053c565b610269565b90565b6106d8620151806106b0565b90565b6106e36106cc565b90565b34610716576106f6366004610163565b6107126107016106db565b610709610153565b91829182610329565b0390f35b610159565b61072490610239565b9052565b919061073c9060006020850194019061071b565b565b3461076e5761074e366004610163565b61076a610759610d01565b610761610153565b91829182610728565b0390f35b610159565b346107a357610783366004610163565b61079f61078e610d17565b610796610153565b918291826101e0565b0390f35b610159565b346107d9576107d56107c46107be366004610290565b90610d2d565b6107cc610153565b918291826102d0565b0390f35b610159565b919060408382031261080757806107fb610804926000860161025a565b9360200161025a565b90565b61015e565b3461083d576108396108286108223660046107de565b90610d67565b610830610153565b91829182610329565b0390f35b610159565b3461087057610852366004610163565b61085a610f4e565b610862610153565b8061086c81610443565b0390f35b610159565b346108a35761088d61088836600461047d565b610fc0565b610895610153565b8061089f81610443565b0390f35b610159565b600080fd5b606090565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156108e8575b60208310146108e357565b6108b2565b91607f16916108d8565b60209181520190565b600052602060002090565b906000929180549061092161091a836108c8565b80946108f2565b9160018116908160001461097a575060011461093d575b505050565b61094a91929394506108fb565b916000925b8184106109625750500190388080610938565b6001816020929593955484860152019101929061094f565b92949550505060ff1916825215156020020190388080610938565b9061099f91610906565b90565b634e487b7160e01b600052604160045260246000fd5b906109c2906101a5565b810190811067ffffffffffffffff8211176109dc57604052565b6109a2565b90610a016109fa926109f1610153565b93848092610995565b03836109b8565b565b610a0c906109e1565b90565b610a176108ad565b50610a226003610a03565b90565b600090565b610a4791610a36610a25565b50610a3f610fcb565b919091610fd8565b600190565b600090565b60001c90565b610a63610a6891610a51565b610635565b90565b610a759054610a57565b90565b610a80610a4c565b50610a8b6002610a6b565b90565b91610ab892610a9b610a25565b50610ab0610aa7610fcb565b82908491611029565b9190916110b8565b600190565b600090565b90565b610ad9610ad4610ade92610ac2565b61053c565b6103e5565b90565b610ae9610abd565b50610af46012610ac5565b90565b90610b0991610b0461115b565b610b0b565b565b90610b15916111aa565b565b90610b2191610af7565b565b634e487b7160e01b600052601160045260246000fd5b610b48610b4e91939293610269565b92610269565b8201809211610b5957565b610b23565b610b6d610b7391939293610269565b92610269565b8203918211610b7e57565b610b23565b90565b610b9a610b95610b9f92610b83565b61053c565b610269565b90565b610baa610a4c565b50610bbf610bba42926007610619565b610a6b565b90610bd282610bcc6106cc565b90610b39565b610be4610bde83610269565b91610269565b11610bf8575050610bf56000610b86565b90565b610c0d610c1292610c076106cc565b90610b39565b610b5e565b90565b610c2c610c3191610c24610a4c565b506000610619565b610a6b565b90565b610c3c61115b565b610c44610c6e565b565b610c5a610c55610c5f92610b83565b61053c565b61022e565b90565b610c6b90610c46565b90565b610c80610c7b6000610c62565b61124a565b565b610c8a610c34565b565b610cab610ca6610cb992610c9e610a25565b506007610619565b610a6b565b610cb36106cc565b90610b39565b610ccb610cc542610269565b91610269565b111590565b600090565b60018060a01b031690565b610cec610cf191610a51565b610cd5565b90565b610cfe9054610ce0565b90565b610d09610cd0565b50610d146005610cf4565b90565b610d1f6108ad565b50610d2a6004610a03565b90565b610d4a91610d39610a25565b50610d42610fcb565b9190916110b8565b600190565b90610d599061060d565b600052602052604060002090565b610d8c91610d82610d8792610d7a610a4c565b506001610d4f565b610619565b610a6b565b90565b610d976112d7565b610d9f610e4d565b610da761135c565b565b916020610dcb929493610dc46040820196600083019061071b565b019061031c565b565b60001b90565b90610de060001991610dcd565b9181191691161790565b610dfe610df9610e0392610269565b61053c565b610269565b90565b90565b90610e1e610e19610e2592610dea565b610e06565b8254610dd3565b9055565b916020610e4b929493610e446040820196600083019061031c565b019061031c565b565b334290610e75610e67610e6260078490610619565b610a6b565b610e6f6106cc565b90610b39565b610e87610e8184610269565b91610269565b11610f0057610ea182610e9c60078490610619565b610e09565b610eb381610ead61055b565b906111aa565b610ebb61055b565b91610ee67f1471294b27bd6e7d297998c0fd0fb313349f2f6c782cc696d9279410a95575749261060d565b92610efb610ef2610153565b92839283610e29565b0390a2565b610f2e82610f29610f1b610f1660078690610619565b610a6b565b610f236106cc565b90610b39565b610b5e565b90610f4a60009283926337f86cfd60e01b845260048401610da9565b0390fd5b610f56610d8f565b565b610f6990610f6461115b565b610f6b565b565b80610f87610f81610f7c6000610c62565b610239565b91610239565b14610f9757610f959061124a565b565b610fbc610fa46000610c62565b6000918291631e4fbdf760e01b835260048301610728565b0390fd5b610fc990610f58565b565b610fd3610cd0565b503390565b91610fe69291600192611370565b565b60409061101261101994969593966110086060840198600085019061071b565b602083019061031c565b019061031c565b565b906110269103610269565b90565b929192611037818390610d67565b908161104d611047600019610269565b91610269565b1061105a575b5050509050565b8161106d61106787610269565b91610269565b106110945761108b939461108291939261101b565b90600092611370565b80388080611053565b506110b4849291926000938493637dc7a0d960e11b855260048501610fe8565b0390fd5b91826110d56110cf6110ca6000610c62565b610239565b91610239565b1461113257816110f66110f06110eb6000610c62565b610239565b91610239565b146111095761110792919091611493565b565b61112e6111166000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b61115761113f6000610c62565b6000918291634b637e8f60e11b835260048301610728565b0390fd5b611163610d01565b61117c611176611171610fcb565b610239565b91610239565b0361118357565b6111a661118e610fcb565b600091829163118cdaa760e01b835260048301610728565b0390fd5b806111c66111c06111bb6000610c62565b610239565b91610239565b146111e3576111e1916111d96000610c62565b919091611493565b565b6112086111f06000610c62565b600091829163ec442f0560e01b835260048301610728565b0390fd5b9061121d60018060a01b0391610dcd565b9181191691161790565b90565b9061123f61123a6112469261060d565b611227565b825461120c565b9055565b6112546005610cf4565b61125f82600561122a565b9061129361128d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361060d565b9161060d565b9161129c610153565b806112a681610443565b0390a3565b90565b6112c26112bd6112c7926112ab565b61053c565b610269565b90565b6112d460026112ae565b90565b6112e16006610a6b565b6112fa6112f46112ef6112ca565b610269565b91610269565b146113135761131161130a6112ca565b6006610e09565b565b6000633ee5aeb560e01b81528061132c60048201610443565b0390fd5b90565b61134761134261134c92611330565b61053c565b610269565b90565b6113596001611333565b90565b61136e61136761134f565b6006610e09565b565b90928161138e6113886113836000610c62565b610239565b91610239565b1461145c57836113af6113a96113a46000610c62565b610239565b91610239565b14611433576113d3836113ce6113c760018690610d4f565b8790610619565b610e09565b6113dd575b505050565b9190916114286114166114107f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361060d565b9361060d565b9361141f610153565b91829182610329565b0390a33880806113d8565b6114586114406000610c62565b6000918291634a1406b160e11b835260048301610728565b0390fd5b6114816114696000610c62565b600091829163e602df0560e01b835260048301610728565b0390fd5b906114909101610269565b90565b919091806114b26114ac6114a76000610c62565b610239565b91610239565b14600014611597576114d76114d0836114cb6002610a6b565b610b39565b6002610e09565b5b826114f46114ee6114e96000610c62565b610239565b91610239565b1460001461156a576115196115128361150d6002610a6b565b61101b565b6002610e09565b5b91909161156561155361154d7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9361060d565b9361060d565b9361155c610153565b91829182610329565b0390a3565b6115928261158c61157d60008790610619565b9161158783610a6b565b611485565b90610e09565b61151a565b6115ab6115a660008390610619565b610a6b565b806115be6115b885610269565b91610269565b106115e7576115d16115e291849061101b565b6115dd60008490610619565b610e09565b6114d8565b90611606909192600093849363391434e360e21b855260048501610fe8565b0390fdfea264697066735822122065965a7d37b30f29552679aca98fb59bf0a43b7e847ed17f74e9c9d8cf48456064736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x70519516 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x76697640 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x780768FC EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x7BC1F6CC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7D1D5D19 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0xF3 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI PUSH2 0x875 JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x16E JUMPI JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x194 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x183 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1D7 PUSH1 0x20 SWAP4 PUSH2 0x1DC SWAP4 PUSH2 0x1C5 DUP2 PUSH2 0x173 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x177 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x180 JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F6 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x229 JUMPI PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x214 PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x21C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x242 SWAP1 PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x255 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x267 DUP3 PUSH2 0x245 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x275 DUP2 PUSH2 0x269 JUMP JUMPDEST SUB PUSH2 0x27C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x28E DUP3 PUSH2 0x26C JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x2B9 JUMPI DUP1 PUSH2 0x2AD PUSH2 0x2B6 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2CC SWAP1 PUSH2 0x2BE JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E4 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C3 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x317 JUMPI PUSH2 0x313 PUSH2 0x302 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x30A PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x325 SWAP1 PUSH2 0x269 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x33D SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x36F JUMPI PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x36B PUSH2 0x35A PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x3AA JUMPI PUSH2 0x3A7 PUSH2 0x390 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH2 0x39E DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x281 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x3E0 JUMPI PUSH2 0x3DC PUSH2 0x3CB PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x374 JUMP JUMPDEST SWAP2 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3F4 SWAP1 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x40C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x3EB JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x43E JUMPI PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x429 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x478 JUMPI PUSH2 0x462 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x474 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x497 JUMPI PUSH2 0x494 SWAP2 PUSH1 0x0 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x4CC JUMPI PUSH2 0x4C8 PUSH2 0x4B7 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x501 JUMPI PUSH2 0x4FD PUSH2 0x4EC PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x4F4 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x534 JUMPI PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x526 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x530 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x553 PUSH2 0x54E PUSH2 0x558 SWAP3 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH9 0x56BC75E2D63100000 PUSH2 0x53F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x578 PUSH2 0x55B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5AB JUMPI PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x5A7 PUSH2 0x596 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x59E PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x5E0 JUMPI PUSH2 0x5DC PUSH2 0x5CB PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0x5F4 PUSH2 0x5FE SWAP3 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x60A SWAP1 PUSH2 0x5E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x616 SWAP1 PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x623 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x648 SWAP1 PUSH1 0x8 PUSH2 0x64D SWAP4 MUL PUSH2 0x631 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x65B SWAP2 SLOAD PUSH2 0x638 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x675 SWAP1 PUSH2 0x670 PUSH1 0x7 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x6A8 JUMPI PUSH2 0x6A4 PUSH2 0x693 PUSH2 0x68E CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH2 0x69B PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x6BF PUSH2 0x6C9 SWAP3 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D8 PUSH3 0x15180 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6E3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x716 JUMPI PUSH2 0x6F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x712 PUSH2 0x701 PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x709 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH2 0x724 SWAP1 PUSH2 0x239 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x73C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x76A PUSH2 0x759 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7A3 JUMPI PUSH2 0x783 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x79F PUSH2 0x78E PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x7D9 JUMPI PUSH2 0x7D5 PUSH2 0x7C4 PUSH2 0x7BE CALLDATASIZE PUSH1 0x4 PUSH2 0x290 JUMP JUMPDEST SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x7CC PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x807 JUMPI DUP1 PUSH2 0x7FB PUSH2 0x804 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x25A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x83D JUMPI PUSH2 0x839 PUSH2 0x828 PUSH2 0x822 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DE JUMP JUMPDEST SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x830 PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x870 JUMPI PUSH2 0x852 CALLDATASIZE PUSH1 0x4 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x85A PUSH2 0xF4E JUMP JUMPDEST PUSH2 0x862 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x86C DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST CALLVALUE PUSH2 0x8A3 JUMPI PUSH2 0x88D PUSH2 0x888 CALLDATASIZE PUSH1 0x4 PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0x895 PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x89F DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x8E8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x8E3 JUMPI JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x921 PUSH2 0x91A DUP4 PUSH2 0x8C8 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x97A JUMPI POP PUSH1 0x1 EQ PUSH2 0x93D JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x94A SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x8FB JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x962 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x94F JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x938 JUMP JUMPDEST SWAP1 PUSH2 0x99F SWAP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x9C2 SWAP1 PUSH2 0x1A5 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST SWAP1 PUSH2 0xA01 PUSH2 0x9FA SWAP3 PUSH2 0x9F1 PUSH2 0x153 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x995 JUMP JUMPDEST SUB DUP4 PUSH2 0x9B8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0C SWAP1 PUSH2 0x9E1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA17 PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xA22 PUSH1 0x3 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA47 SWAP2 PUSH2 0xA36 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xA3F PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xA68 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA75 SWAP1 SLOAD PUSH2 0xA57 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA80 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA8B PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xAB8 SWAP3 PUSH2 0xA9B PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xAB0 PUSH2 0xAA7 PUSH2 0xFCB JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x1029 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAD9 PUSH2 0xAD4 PUSH2 0xADE SWAP3 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0xABD JUMP JUMPDEST POP PUSH2 0xAF4 PUSH1 0x12 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB09 SWAP2 PUSH2 0xB04 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB15 SWAP2 PUSH2 0x11AA JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0xB21 SWAP2 PUSH2 0xAF7 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB48 PUSH2 0xB4E SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB59 JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xB73 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x269 JUMP JUMPDEST SWAP3 PUSH2 0x269 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB7E JUMPI JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB9A PUSH2 0xB95 PUSH2 0xB9F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xBBF PUSH2 0xBBA TIMESTAMP SWAP3 PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 PUSH2 0xBD2 DUP3 PUSH2 0xBCC PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0xBDE DUP4 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xBF8 JUMPI POP POP PUSH2 0xBF5 PUSH1 0x0 PUSH2 0xB86 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0D PUSH2 0xC12 SWAP3 PUSH2 0xC07 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xC31 SWAP2 PUSH2 0xC24 PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC3C PUSH2 0x115B JUMP JUMPDEST PUSH2 0xC44 PUSH2 0xC6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC5A PUSH2 0xC55 PUSH2 0xC5F SWAP3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC6B SWAP1 PUSH2 0xC46 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC80 PUSH2 0xC7B PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC8A PUSH2 0xC34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCAB PUSH2 0xCA6 PUSH2 0xCB9 SWAP3 PUSH2 0xC9E PUSH2 0xA25 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xCCB PUSH2 0xCC5 TIMESTAMP PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xCEC PUSH2 0xCF1 SWAP2 PUSH2 0xA51 JUMP JUMPDEST PUSH2 0xCD5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCFE SWAP1 SLOAD PUSH2 0xCE0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD09 PUSH2 0xCD0 JUMP JUMPDEST POP PUSH2 0xD14 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD1F PUSH2 0x8AD JUMP JUMPDEST POP PUSH2 0xD2A PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD4A SWAP2 PUSH2 0xD39 PUSH2 0xA25 JUMP JUMPDEST POP PUSH2 0xD42 PUSH2 0xFCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD59 SWAP1 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD8C SWAP2 PUSH2 0xD82 PUSH2 0xD87 SWAP3 PUSH2 0xD7A PUSH2 0xA4C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD97 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xD9F PUSH2 0xE4D JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xDCB SWAP3 SWAP5 SWAP4 PUSH2 0xDC4 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDE0 PUSH1 0x0 NOT SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xDFE PUSH2 0xDF9 PUSH2 0xE03 SWAP3 PUSH2 0x269 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE1E PUSH2 0xE19 PUSH2 0xE25 SWAP3 PUSH2 0xDEA JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDD3 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE4B SWAP3 SWAP5 SWAP4 PUSH2 0xE44 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST CALLER TIMESTAMP SWAP1 PUSH2 0xE75 PUSH2 0xE67 PUSH2 0xE62 PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xE87 PUSH2 0xE81 DUP5 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST GT PUSH2 0xF00 JUMPI PUSH2 0xEA1 DUP3 PUSH2 0xE9C PUSH1 0x7 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xEAD PUSH2 0x55B JUMP JUMPDEST SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0xEBB PUSH2 0x55B JUMP JUMPDEST SWAP2 PUSH2 0xEE6 PUSH32 0x1471294B27BD6E7D297998C0FD0FB313349F2F6C782CC696D9279410A9557574 SWAP3 PUSH2 0x60D JUMP JUMPDEST SWAP3 PUSH2 0xEFB PUSH2 0xEF2 PUSH2 0x153 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xE29 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xF2E DUP3 PUSH2 0xF29 PUSH2 0xF1B PUSH2 0xF16 PUSH1 0x7 DUP7 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xF23 PUSH2 0x6CC JUMP JUMPDEST SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST SWAP1 PUSH2 0xF4A PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH4 0x37F86CFD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xDA9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xF56 PUSH2 0xD8F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xF69 SWAP1 PUSH2 0xF64 PUSH2 0x115B JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0xF87 PUSH2 0xF81 PUSH2 0xF7C PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0xF97 JUMPI PUSH2 0xF95 SWAP1 PUSH2 0x124A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFBC PUSH2 0xFA4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC9 SWAP1 PUSH2 0xF58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0xCD0 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xFE6 SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x1370 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1012 PUSH2 0x1019 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1008 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST ADD SWAP1 PUSH2 0x31C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x1026 SWAP2 SUB PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1037 DUP2 DUP4 SWAP1 PUSH2 0xD67 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x104D PUSH2 0x1047 PUSH1 0x0 NOT PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x105A JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x106D PUSH2 0x1067 DUP8 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x1094 JUMPI PUSH2 0x108B SWAP4 SWAP5 PUSH2 0x1082 SWAP2 SWAP4 SWAP3 PUSH2 0x101B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x1370 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x1053 JUMP JUMPDEST POP PUSH2 0x10B4 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 DUP3 PUSH2 0x10D5 PUSH2 0x10CF PUSH2 0x10CA PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1132 JUMPI DUP2 PUSH2 0x10F6 PUSH2 0x10F0 PUSH2 0x10EB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1109 JUMPI PUSH2 0x1107 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x112E PUSH2 0x1116 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1157 PUSH2 0x113F PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1163 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0x117C PUSH2 0x1176 PUSH2 0x1171 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST SUB PUSH2 0x1183 JUMPI JUMP JUMPDEST PUSH2 0x11A6 PUSH2 0x118E PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x11C6 PUSH2 0x11C0 PUSH2 0x11BB PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x11E3 JUMPI PUSH2 0x11E1 SWAP2 PUSH2 0x11D9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1493 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1208 PUSH2 0x11F0 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x121D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xDCD JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x123F PUSH2 0x123A PUSH2 0x1246 SWAP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1227 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x120C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1254 PUSH1 0x5 PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x125F DUP3 PUSH1 0x5 PUSH2 0x122A JUMP JUMPDEST SWAP1 PUSH2 0x1293 PUSH2 0x128D PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x60D JUMP JUMPDEST SWAP2 PUSH2 0x129C PUSH2 0x153 JUMP JUMPDEST DUP1 PUSH2 0x12A6 DUP2 PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12C2 PUSH2 0x12BD PUSH2 0x12C7 SWAP3 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12D4 PUSH1 0x2 PUSH2 0x12AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12E1 PUSH1 0x6 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x12FA PUSH2 0x12F4 PUSH2 0x12EF PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST EQ PUSH2 0x1313 JUMPI PUSH2 0x1311 PUSH2 0x130A PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x132C PUSH1 0x4 DUP3 ADD PUSH2 0x443 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1347 PUSH2 0x1342 PUSH2 0x134C SWAP3 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1359 PUSH1 0x1 PUSH2 0x1333 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1367 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x6 PUSH2 0xE09 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x138E PUSH2 0x1388 PUSH2 0x1383 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x145C JUMPI DUP4 PUSH2 0x13AF PUSH2 0x13A9 PUSH2 0x13A4 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH2 0x1433 JUMPI PUSH2 0x13D3 DUP4 PUSH2 0x13CE PUSH2 0x13C7 PUSH1 0x1 DUP7 SWAP1 PUSH2 0xD4F JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x13DD JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1428 PUSH2 0x1416 PUSH2 0x1410 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x141F PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x1458 PUSH2 0x1440 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1481 PUSH2 0x1469 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x728 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1490 SWAP2 ADD PUSH2 0x269 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x14B2 PUSH2 0x14AC PUSH2 0x14A7 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x1597 JUMPI PUSH2 0x14D7 PUSH2 0x14D0 DUP4 PUSH2 0x14CB PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x14F4 PUSH2 0x14EE PUSH2 0x14E9 PUSH1 0x0 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x239 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x156A JUMPI PUSH2 0x1519 PUSH2 0x1512 DUP4 PUSH2 0x150D PUSH1 0x2 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x101B JUMP JUMPDEST PUSH1 0x2 PUSH2 0xE09 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1565 PUSH2 0x1553 PUSH2 0x154D PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x60D JUMP JUMPDEST SWAP4 PUSH2 0x155C PUSH2 0x153 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x329 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1592 DUP3 PUSH2 0x158C PUSH2 0x157D PUSH1 0x0 DUP8 SWAP1 PUSH2 0x619 JUMP JUMPDEST SWAP2 PUSH2 0x1587 DUP4 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x1485 JUMP JUMPDEST SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x15A6 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST DUP1 PUSH2 0x15BE PUSH2 0x15B8 DUP6 PUSH2 0x269 JUMP JUMPDEST SWAP2 PUSH2 0x269 JUMP JUMPDEST LT PUSH2 0x15E7 JUMPI PUSH2 0x15D1 PUSH2 0x15E2 SWAP2 DUP5 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x15DD PUSH1 0x0 DUP5 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0xE09 JUMP JUMPDEST PUSH2 0x14D8 JUMP JUMPDEST SWAP1 PUSH2 0x1606 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0xFE8 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x965A7D37B30F 0x29 SSTORE 0x26 PUSH26 0xACA98FB59BF0A43B7E847ED17F74E9C9D8CF48456064736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "373:3483:16:-:0;;;;;;;;;-1:-1:-1;373:3483:16;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;502:52::-;542:12;;;:::i;:::-;502:52;:::o;:::-;;;:::i;:::-;;:::o;373:3483::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;769:49::-;;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;373:3483::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;637:50::-;679:8;;;:::i;:::-;637:50;:::o;:::-;;;:::i;:::-;;:::o;373:3483::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;1760:89:5:-;1805:13;;:::i;:::-;1837:5;1830:12;1837:5;1830:12;:::i;:::-;;:::o;373:3483:16:-;;;:::o;3902:186:5:-;4054:5;3902:186;3975:4;;:::i;:::-;4007:12;;;:::i;:::-;4045:7;4054:5;;;:::i;:::-;4077:4;4070:11;:::o;373:3483:16:-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;2803:97:5:-;2855:7;;:::i;:::-;2881:12;;;;:::i;:::-;2874:19;:::o;4680:244::-;;4890:5;4680:244;4767:4;;:::i;:::-;4801:12;4854:5;4801:12;;:::i;:::-;4839:4;4845:7;4854:5;;;:::i;:::-;4886:2;4890:5;;;:::i;:::-;4913:4;4906:11;:::o;373:3483:16:-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2688:82:5:-;2737:5;;:::i;:::-;2761:2;2754:9;2761:2;2754:9;:::i;:::-;;:::o;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;3759:95:16:-;;3840:6;3759:95;3840:6;:::i;:::-;3759:95::o;:::-;;;;;:::i;:::-;:::o;373:3483::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2857:359::-;2925:21;;:::i;:::-;2980:15;3024:20;;2980:15;3024:14;;:20;:::i;:::-;;:::i;:::-;3067:8;:26;:8;3078:15;;:::i;:::-;3067:26;;:::i;:::-;:40;;3096:11;3067:40;:::i;:::-;;;:::i;:::-;;3063:120;;3208:1;;3201:8;3208:1;3201:8;:::i;:::-;;:::o;3063:120::-;3131:26;3130:42;3131:8;3142:15;;:::i;:::-;3131:26;;:::i;:::-;3130:42;:::i;:::-;3123:49;:::o;2933:116:5:-;3024:18;;2933:116;2998:7;;:::i;:::-;3024:9;;:18;:::i;:::-;;:::i;:::-;3017:25;:::o;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;:::-;1500:62::o;373:3483:16:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;:::-;2293:101::o;:::-;;;:::i;:::-;:::o;3431:153:16:-;3520:20;;:38;3431:153;3490:11;;:::i;:::-;3520:14;;:20;:::i;:::-;;:::i;:::-;3543:15;;:::i;:::-;3520:38;;:::i;:::-;:57;;3562:15;3520:57;:::i;:::-;;;:::i;:::-;;;3513:64;:::o;373:3483::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1638:85:0:-;1684:7;;:::i;:::-;1710:6;;;;:::i;:::-;1703:13;:::o;1962:93:5:-;2009:13;;:::i;:::-;2041:7;2034:14;2041:7;2034:14;:::i;:::-;;:::o;3244:178::-;3388:5;3244:178;3313:4;;:::i;:::-;3345:12;;;:::i;:::-;3384:2;3388:5;;;:::i;:::-;3411:4;3404:11;:::o;373:3483:16:-;;;;;:::i;:::-;;;;;;;;;:::o;3455:140:5:-;3561:27;3455:140;3561:18;:27;3455:140;3535:7;;:::i;:::-;3561:11;;:18;:::i;:::-;:27;:::i;:::-;;:::i;:::-;3554:34;:::o;2466:103:10:-;;;:::i;:::-;2531:1;;:::i;:::-;;;:::i;:::-;2466:103::o;373:3483:16:-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;1857:739::-;1922:10;1964:15;2094:14;:38;:20;;:14;2109:4;2094:20;;:::i;:::-;;:::i;:::-;2117:15;;:::i;:::-;2094:38;;:::i;:::-;:52;;2135:11;2094:52;:::i;:::-;;;:::i;:::-;;2090:223;;2382:34;2405:11;2382:20;:14;2397:4;2382:20;;:::i;:::-;:34;:::i;:::-;2507:13;2501:4;2507:13;;:::i;:::-;;;:::i;:::-;2562;;:::i;:::-;2577:11;2545:44;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;1857:739::o;2090:223::-;2186:54;2187:14;:38;:20;;:14;2202:4;2187:20;;:::i;:::-;;:::i;:::-;2210:15;;:::i;:::-;2187:38;;:::i;:::-;2186:54;:::i;:::-;2261:41;;;;;;;;;;;;;;;:::i;:::-;;;;1857:739;;;:::i;:::-;:::o;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;:::-;1500:62::o;2543:215::-;2627:8;:22;;2639:10;2647:1;2639:10;:::i;:::-;2627:22;:::i;:::-;;;:::i;:::-;;2623:91;;2742:8;;;:::i;:::-;2543:215::o;2623:91::-;2672:31;2692:10;2700:1;2692:10;:::i;:::-;2672:31;;;;;;;;;;;;;:::i;:::-;;;;2543:215;;;;:::i;:::-;:::o;656:96:9:-;709:7;;:::i;:::-;735:10;;728:17;:::o;8630:128:5:-;;8746:4;8630:128;8730:7;8746:4;;;:::i;:::-;8630:128::o;373:3483:16:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::o;10319:476:5:-;;;;10445:25;10455:5;10462:7;10445:25;;:::i;:::-;10484:16;;:36;;373:3483:16;;10484:36:5;:::i;:::-;;;:::i;:::-;;10480:309;;10319:476;;;;;;:::o;10480:309::-;10540:16;:24;;10559:5;10540:24;:::i;:::-;;;:::i;:::-;;10536:130;;10758:5;10716;;10732:24;10716:5;10723:7;10732:16;:24;:::i;:::-;10758:5;;;;:::i;:::-;10480:309;;;;;;10536:130;10618:7;10591:60;10618:7;;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;5297:300;;5380:4;:18;;5388:10;5396:1;5388:10;:::i;:::-;5380:18;:::i;:::-;;;:::i;:::-;;5376:86;;5475:2;:16;;5481:10;5489:1;5481:10;:::i;:::-;5475:16;:::i;:::-;;;:::i;:::-;;5471:86;;5584:5;5574:4;5580:2;5584:5;;;:::i;:::-;5297:300::o;5471:86::-;5514:32;5535:10;5543:1;5535:10;:::i;:::-;5514:32;;;;;;;;;;;;;:::i;:::-;;;;5376:86;5421:30;5440:10;5448:1;5440:10;:::i;:::-;5421:30;;;;;;;;;;;;;:::i;:::-;;;;1796:162:0;1855:7;;:::i;:::-;:23;;1866:12;;:::i;:::-;1855:23;:::i;:::-;;;:::i;:::-;;1851:101;;1796:162::o;1851:101::-;1901:40;1928:12;;:::i;:::-;1901:40;;;;;;;;;;;;;:::i;:::-;;;;7362:208:5;7432:7;:21;;7443:10;7451:1;7443:10;:::i;:::-;7432:21;:::i;:::-;;;:::i;:::-;;7428:91;;7557:5;7544:1;7536:10;7544:1;7536:10;:::i;:::-;7548:7;7557:5;;;:::i;:::-;7362:208::o;7428:91::-;7476:32;7497:10;7505:1;7497:10;:::i;:::-;7476:32;5514;;;;;;7476;;;;;;:::i;:::-;;;;373:3483:16;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2912:187:0:-;3004:6;;;:::i;:::-;3020:17;3029:8;3020:17;;:::i;:::-;3083:8;3052:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;2912:187::o;373:3483:16:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1864:36:10:-;1899:1;;;:::i;:::-;1864:36;:::o;2575:307::-;2702:7;;;:::i;:::-;:18;;2713:7;;:::i;:::-;2702:18;:::i;:::-;;;:::i;:::-;;2698:86;;2858:17;2868:7;;:::i;:::-;2858:17;;:::i;:::-;2575:307::o;2698:86::-;2743:30;;;;;;;;;;;;:::i;:::-;;;;373:3483:16;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:10:-;1857:1;;;:::i;:::-;1818:40;:::o;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;:::-;2888:208::o;9605:432:5:-;;;9717:5;:19;;9726:10;9734:1;9726:10;:::i;:::-;9717:19;:::i;:::-;;;:::i;:::-;;9713:89;;9815:7;:21;;9826:10;9834:1;9826:10;:::i;:::-;9815:21;:::i;:::-;;;:::i;:::-;;9811:90;;9910:35;9940:5;9910:27;:18;:11;9922:5;9910:18;;:::i;:::-;9929:7;9910:27;;:::i;:::-;:35;:::i;:::-;9955:76;;9605:432;;;;:::o;9955:76::-;10005:7;10014:5;9989:31;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;9955:76;;;;;9811:90;9859:31;9879:10;9887:1;9879:10;:::i;:::-;9859:31;;;;;;;;;;;;;:::i;:::-;;;;9713:89;9759:32;9780:10;9788:1;9780:10;:::i;:::-;9759:32;;;;;;;;;;;;;:::i;:::-;;;;373:3483:16;;;;;;:::i;:::-;;:::o;5912:1107:5:-;;;;6001:4;:18;;6009:10;6017:1;6009:10;:::i;:::-;6001:18;:::i;:::-;;;:::i;:::-;;5997:540;;;;6137:21;;6153:5;6137:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5997:540;6551:2;:16;;6557:10;6565:1;6557:10;:::i;:::-;6551:16;:::i;:::-;;;:::i;:::-;;6547:425;;;;6714:21;;6730:5;6714:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;7002:2;7006:5;6987:25;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;5912:1107::o;6547:425::-;6925:22;6942:5;6925:22;:13;:9;6935:2;6925:13;;:::i;:::-;:22;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;;5997:540;6211:15;;:9;6221:4;6211:15;;:::i;:::-;;:::i;:::-;6244:11;:19;;6258:5;6244:19;:::i;:::-;;;:::i;:::-;;6240:115;;6493:19;6475:37;6493:11;6507:5;6493:19;;:::i;:::-;6475:15;:9;6485:4;6475:15;;:::i;:::-;:37;:::i;:::-;5997:540;;6240:115;6315:4;6290:50;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "FAUCET_AMOUNT()": "76697640",
              "FAUCET_COOLDOWN()": "7d1d5d19",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "canUseFaucet(address)": "780768fc",
              "decimals()": "313ce567",
              "faucet()": "de5f72fd",
              "getFaucetCooldownTime(address)": "70519516",
              "lastFaucetTime(address)": "7bc1f6cc",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"remainingTime\",\"type\":\"uint256\"}],\"name\":\"FaucetCooldownActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FaucetUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FAUCET_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FAUCET_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canUseFaucet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canUse\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getFaucetCooldownTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remainingTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastFaucetTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"DEX\\u3067\\u4f7f\\u7528\\u3055\\u308c\\u308b\\u30c6\\u30b9\\u30c8\\u30c8\\u30fc\\u30af\\u30f3B (TKB)\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FaucetCooldownActive(address,uint256)\":[{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u5236\\u9650\\u30a8\\u30e9\\u30fc\",\"params\":{\"remainingTime\":\"\\u6b21\\u56de\\u5229\\u7528\\u307e\\u3067\\u5f85\\u6a5f\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u6642\\u9593\\uff08\\u79d2\\uff09\",\"user\":\"\\u5236\\u9650\\u306b\\u304b\\u304b\\u3063\\u305f\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"FaucetUsed(address,uint256,uint256)\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u5229\\u7528\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount\":\"\\u53d6\\u5f97\\u3057\\u305f\\u30c8\\u30fc\\u30af\\u30f3\\u91cf\",\"timestamp\":\"\\u5229\\u7528\\u6642\\u523b\",\"user\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u3092\\u5229\\u7528\\u3057\\u305f\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"canUseFaucet(address)\":{\"details\":\"\\u30e6\\u30fc\\u30b6\\u30fc\\u304c\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u3092\\u5229\\u7528\\u53ef\\u80fd\\u304b\\u3069\\u3046\\u304b\\u3092\\u78ba\\u8a8d\",\"params\":{\"user\":\"\\u78ba\\u8a8d\\u3059\\u308b\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"canUse\":\"\\u5229\\u7528\\u53ef\\u80fd\\u306a\\u5834\\u5408\\u306ftrue\"}},\"constructor\":{\"details\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\",\"params\":{\"initialOwner\":\"\\u521d\\u671f\\u30aa\\u30fc\\u30ca\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"faucet()\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u6a5f\\u80fd - \\u8ab0\\u3067\\u30821\\u65e51\\u56de100 TKB\\u3092\\u53d6\\u5f97\\u53ef\\u80fd\"},\"getFaucetCooldownTime(address)\":{\"details\":\"\\u30e6\\u30fc\\u30b6\\u30fc\\u304c\\u6b21\\u306b\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u3092\\u5229\\u7528\\u3067\\u304d\\u308b\\u307e\\u3067\\u306e\\u6b8b\\u308a\\u6642\\u9593\\u3092\\u53d6\\u5f97\",\"params\":{\"user\":\"\\u78ba\\u8a8d\\u3059\\u308b\\u30e6\\u30fc\\u30b6\\u30fc\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"remainingTime\":\"\\u6b8b\\u308a\\u6642\\u9593\\uff08\\u79d2\\uff09\\u30010\\u306e\\u5834\\u5408\\u306f\\u5229\\u7528\\u53ef\\u80fd\"}},\"mint(address,uint256)\":{\"details\":\"\\u30aa\\u30fc\\u30ca\\u30fc\\u306e\\u307f\\u304c\\u30c8\\u30fc\\u30af\\u30f3\\u3092\\u767a\\u884c\\u53ef\\u80fd\\uff08\\u7dca\\u6025\\u6642\\u7528\\uff09\",\"params\":{\"amount\":\"\\u767a\\u884c\\u91cf\",\"to\":\"\\u767a\\u884c\\u5148\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"FAUCET_AMOUNT\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u30671\\u56de\\u306b\\u53d6\\u5f97\\u3067\\u304d\\u308b\\u30c8\\u30fc\\u30af\\u30f3\\u91cf\"},\"FAUCET_COOLDOWN\":{\"details\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u306e\\u5236\\u9650\\u6642\\u9593\\uff0824\\u6642\\u9593\\uff09\"},\"lastFaucetTime\":{\"details\":\"\\u5404\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u6700\\u5f8c\\u306e\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u5229\\u7528\\u6642\\u523b\"}},\"title\":\"TokenB\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"faucet()\":{\"notice\":\"24\\u6642\\u9593\\u306b1\\u56de\\u306e\\u307f\\u5229\\u7528\\u53ef\\u80fd\"}},\"notice\":\"\\u30d5\\u30a9\\u30fc\\u30bb\\u30c3\\u30c8\\u6a5f\\u80fd\\u4ed8\\u304d\\u306eERC20\\u30c8\\u30fc\\u30af\\u30f3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB.sol\":\"TokenB\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/TokenB.sol\":{\"keccak256\":\"0x6f0d1d5f5f6dcb51d81066a72da1ff51b6c9080a086912c1aedb24b16b42419e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4950589e75bedd1759a1236e8f0542997d402c0ef44f20d75b2700cdbed0fe48\",\"dweb:/ipfs/QmYBfdd5i2EuPBnshsSvMsfhteKUrFS8v2nhv3tr1fP3zo\"]}},\"version\":1}"
        }
      }
    }
  }
}