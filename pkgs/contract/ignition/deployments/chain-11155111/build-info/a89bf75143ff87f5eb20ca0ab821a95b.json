{
  "id": "a89bf75143ff87f5eb20ca0ab821a95b",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.30",
  "solcLongVersion": "0.8.30+commit.73712a01",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/DexFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"./DexPair.sol\";\n\n/**\n * @title DexFactory\n * @dev トークンペアの作成と管理を行うファクトリーコントラクト\n * @notice Uniswap V2のファクトリーパターンに基づいた実装\n */\ncontract DexFactory {\n    /// @dev ペア作成手数料の受取人アドレス\n    address public feeTo;\n    \n    /// @dev feeToを設定する権限を持つアドレス\n    address public feeToSetter;\n    \n    /// @dev トークンペアのマッピング (token0 => token1 => pairAddress)\n    mapping(address => mapping(address => address)) public getPair;\n    \n    /// @dev 作成されたペアのアドレス一覧\n    address[] public allPairs;\n    \n    /**\n     * @dev ペア作成時に発生するイベント\n     * @param token0 ペアの最初のトークンアドレス（アドレスの小さい方）\n     * @param token1 ペアの二番目のトークンアドレス（アドレスの大きい方）\n     * @param pair 作成されたペアのアドレス\n     * @param pairLength 現在のペア総数\n     */\n    event PairCreated(\n        address indexed token0,\n        address indexed token1,\n        address pair,\n        uint256 pairLength\n    );\n    \n    /**\n     * @dev feeTo設定時に発生するイベント\n     * @param newFeeTo 新しいfeeToアドレス\n     */\n    event FeeToUpdated(address indexed newFeeTo);\n    \n    /**\n     * @dev feeToSetter設定時に発生するイベント\n     * @param newFeeToSetter 新しいfeeToSetterアドレス\n     */\n    event FeeToSetterUpdated(address indexed newFeeToSetter);\n    \n    /**\n     * @dev エラー：同一トークンペアの作成\n     */\n    error IdenticalTokens();\n    \n    /**\n     * @dev エラー：ゼロアドレスの指定\n     */\n    error ZeroAddress();\n    \n    /**\n     * @dev エラー：既に存在するペア\n     */\n    error PairAlreadyExists();\n    \n    /**\n     * @dev エラー：権限なし\n     */\n    error Unauthorized();\n    \n    /**\n     * @dev コンストラクタ\n     * @param _feeToSetter feeToSetterの初期アドレス\n     */\n    constructor(address _feeToSetter) {\n        if (_feeToSetter == address(0)) revert ZeroAddress();\n        feeToSetter = _feeToSetter;\n    }\n    \n    /**\n     * @dev 作成されたペアの総数を取得\n     * @return 作成されたペアの総数\n     */\n    function allPairsLength() external view returns (uint256) {\n        return allPairs.length;\n    }\n    \n    /**\n     * @dev 新しいトークンペアを作成\n     * @param tokenA 最初のトークンアドレス\n     * @param tokenB 二番目のトークンアドレス\n     * @return pair 作成されたペアのアドレス\n     */\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        // 同一トークンのチェック\n        if (tokenA == tokenB) revert IdenticalTokens();\n        \n        // トークンアドレスをソート（小さいアドレスをtoken0に）\n        (address token0, address token1) = tokenA < tokenB \n            ? (tokenA, tokenB) \n            : (tokenB, tokenA);\n        \n        // ゼロアドレスのチェック\n        if (token0 == address(0)) revert ZeroAddress();\n        \n        // 既存ペアの確認\n        if (getPair[token0][token1] != address(0)) revert PairAlreadyExists();\n        \n        // ペアコントラクトの作成\n        bytes memory bytecode = type(DexPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        \n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        \n        // ペアの初期化\n        DexPair(pair).initialize(token0, token1);\n        \n        // マッピングの更新\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // 双方向で参照可能にする\n        allPairs.push(pair);\n        \n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n    \n    /**\n     * @dev feeToアドレスを設定\n     * @param _feeTo 新しいfeeToアドレス\n     */\n    function setFeeTo(address _feeTo) external {\n        if (msg.sender != feeToSetter) revert Unauthorized();\n        feeTo = _feeTo;\n        emit FeeToUpdated(_feeTo);\n    }\n    \n    /**\n     * @dev feeToSetterアドレスを設定\n     * @param _feeToSetter 新しいfeeToSetterアドレス\n     */\n    function setFeeToSetter(address _feeToSetter) external {\n        if (msg.sender != feeToSetter) revert Unauthorized();\n        if (_feeToSetter == address(0)) revert ZeroAddress();\n        feeToSetter = _feeToSetter;\n        emit FeeToSetterUpdated(_feeToSetter);\n    }\n    \n    /**\n     * @dev 特定のペアアドレスを計算（CREATE2を使用）\n     * @param tokenA 最初のトークンアドレス\n     * @param tokenB 二番目のトークンアドレス\n     * @return pair 計算されたペアアドレス\n     */\n    function pairFor(address tokenA, address tokenB) external view returns (address pair) {\n        (address token0, address token1) = tokenA < tokenB \n            ? (tokenA, tokenB) \n            : (tokenB, tokenA);\n        \n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        bytes32 bytecodeHash = keccak256(type(DexPair).creationCode);\n        \n        pair = address(uint160(uint256(keccak256(abi.encodePacked(\n            bytes1(0xff),\n            address(this),\n            salt,\n            bytecodeHash\n        )))));\n    }\n}\n"
      },
      "contracts/DexPair.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/**\n * @title DexPair\n * @dev 流動性プールとLPトークンの機能を提供するペアコントラクト\n * @notice Uniswap V2のペアパターンに基づいた実装\n */\ncontract DexPair is ERC20, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    \n    /// @dev 最小流動性量（最初の流動性提供時にロックされる）\n    uint256 public constant MINIMUM_LIQUIDITY = 10**3;\n    \n    /// @dev ファクトリーコントラクトのアドレス\n    address public factory;\n    \n    /// @dev ペアの最初のトークンアドレス\n    address public token0;\n    \n    /// @dev ペアの二番目のトークンアドレス\n    address public token1;\n    \n    /// @dev 前回の各トークンのリザーブ量\n    uint112 private reserve0;\n    uint112 private reserve1;\n    uint32 private blockTimestampLast;\n    \n    /// @dev 累積価格（価格オラクル用）\n    uint256 public price0CumulativeLast;\n    uint256 public price1CumulativeLast;\n    \n    /// @dev kLast（手数料計算用）\n    uint256 public kLast;\n    \n    /**\n     * @dev スワップ時に発生するイベント\n     * @param sender スワップを実行したアドレス\n     * @param amount0In token0の入力量\n     * @param amount1In token1の入力量\n     * @param amount0Out token0の出力量\n     * @param amount1Out token1の出力量\n     * @param to 出力トークンの受取人\n     */\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    \n    /**\n     * @dev 流動性追加時に発生するイベント\n     * @param sender 流動性を追加したアドレス\n     * @param amount0 追加されたtoken0の量\n     * @param amount1 追加されたtoken1の量\n     */\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    \n    /**\n     * @dev 流動性削除時に発生するイベント\n     * @param sender 流動性を削除したアドレス\n     * @param amount0 削除されたtoken0の量\n     * @param amount1 削除されたtoken1の量\n     * @param to トークンの受取人\n     */\n    event Burn(\n        address indexed sender,\n        uint256 amount0,\n        uint256 amount1,\n        address indexed to\n    );\n    \n    /**\n     * @dev リザーブ同期時に発生するイベント\n     * @param reserve0 token0のリザーブ量\n     * @param reserve1 token1のリザーブ量\n     */\n    event Sync(uint112 reserve0, uint112 reserve1);\n    \n    /**\n     * @dev エラー：権限なし\n     */\n    error Unauthorized();\n    \n    /**\n     * @dev エラー：オーバーフロー\n     */\n    error Overflow();\n    \n    /**\n     * @dev エラー：不十分な流動性\n     */\n    error InsufficientLiquidity();\n    \n    /**\n     * @dev エラー：不十分な流動性をバーン\n     */\n    error InsufficientLiquidityBurned();\n    \n    /**\n     * @dev エラー：不十分な出力量\n     */\n    error InsufficientOutputAmount();\n    \n    /**\n     * @dev エラー：不十分な入力量\n     */\n    error InsufficientInputAmount();\n    \n    /**\n     * @dev エラー：不正なK値\n     */\n    error InvalidK();\n    \n    /**\n     * @dev エラー：無効な受取人アドレス\n     */\n    error InvalidTo();\n    \n    /**\n     * @dev コンストラクタ\n     */\n    constructor() ERC20(\"DEX LP Token\", \"DEX-LP\") {\n        factory = msg.sender;\n    }\n    \n    /**\n     * @dev ペアの初期化（ファクトリーから呼び出される）\n     * @param _token0 最初のトークンアドレス\n     * @param _token1 二番目のトークンアドレス\n     */\n    function initialize(address _token0, address _token1) external {\n        if (msg.sender != factory) revert Unauthorized();\n        token0 = _token0;\n        token1 = _token1;\n    }\n    \n    /**\n     * @dev 現在のリザーブ量と最終更新ブロック時刻を取得\n     * @return _reserve0 token0のリザーブ量\n     * @return _reserve1 token1のリザーブ量\n     * @return _blockTimestampLast 最終更新ブロック時刻\n     */\n    function getReserves() public view returns (\n        uint112 _reserve0,\n        uint112 _reserve1,\n        uint32 _blockTimestampLast\n    ) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n    \n    /**\n     * @dev 流動性をミント（流動性追加）\n     * @param to LPトークンの受取人アドレス\n     * @return liquidity ミントされたLPトークンの量\n     */\n    function mint(address to) external nonReentrant returns (uint256 liquidity) {\n        if (to == address(this)) revert InvalidTo();\n        \n        (uint112 _reserve0, uint112 _reserve1,) = getReserves();\n        uint256 balance0 = IERC20(token0).balanceOf(address(this));\n        uint256 balance1 = IERC20(token1).balanceOf(address(this));\n        uint256 amount0 = balance0 - _reserve0;\n        uint256 amount1 = balance1 - _reserve1;\n        \n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint256 _totalSupply = totalSupply();\n        \n        if (_totalSupply == 0) {\n            // 初回流動性提供\n            liquidity = _sqrt(amount0 * amount1) - MINIMUM_LIQUIDITY;\n            _mint(address(0xdead), MINIMUM_LIQUIDITY); // 永続的にロック（deadアドレスに送信）\n        } else {\n            // 追加流動性提供\n            liquidity = _min(\n                (amount0 * _totalSupply) / _reserve0,\n                (amount1 * _totalSupply) / _reserve1\n            );\n        }\n        \n        if (liquidity == 0) revert InsufficientLiquidity();\n        _mint(to, liquidity);\n        \n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint256(reserve0) * reserve1;\n        \n        emit Mint(msg.sender, amount0, amount1);\n    }\n    \n    /**\n     * @dev 流動性をバーン（流動性削除）\n     * @param to トークンの受取人アドレス\n     * @return amount0 返却されるtoken0の量\n     * @return amount1 返却されるtoken1の量\n     */\n    function burn(address to) external nonReentrant returns (uint256 amount0, uint256 amount1) {\n        if (to == address(this)) revert InvalidTo();\n        \n        (uint112 _reserve0, uint112 _reserve1,) = getReserves();\n        address _token0 = token0;\n        address _token1 = token1;\n        uint256 balance0 = IERC20(_token0).balanceOf(address(this));\n        uint256 balance1 = IERC20(_token1).balanceOf(address(this));\n        uint256 liquidity = balanceOf(address(this));\n        \n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint256 _totalSupply = totalSupply();\n        \n        amount0 = (liquidity * balance0) / _totalSupply;\n        amount1 = (liquidity * balance1) / _totalSupply;\n        \n        if (amount0 == 0 || amount1 == 0) revert InsufficientLiquidityBurned();\n        \n        _burn(address(this), liquidity);\n        IERC20(_token0).safeTransfer(to, amount0);\n        IERC20(_token1).safeTransfer(to, amount1);\n        \n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n        \n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint256(reserve0) * reserve1;\n        \n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n    \n    /**\n     * @dev スワップ実行\n     * @param amount0Out token0の出力量\n     * @param amount1Out token1の出力量\n     * @param to 出力トークンの受取人\n     * @param data コールバック用データ\n     */\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external nonReentrant {\n        if (amount0Out == 0 && amount1Out == 0) revert InsufficientOutputAmount();\n        \n        (uint112 _reserve0, uint112 _reserve1,) = getReserves();\n        if (amount0Out >= _reserve0 || amount1Out >= _reserve1) revert InsufficientLiquidity();\n        \n        uint256 balance0;\n        uint256 balance1;\n        {\n            address _token0 = token0;\n            address _token1 = token1;\n            if (to == _token0 || to == _token1) revert InvalidTo();\n            \n            if (amount0Out > 0) IERC20(_token0).safeTransfer(to, amount0Out);\n            if (amount1Out > 0) IERC20(_token1).safeTransfer(to, amount1Out);\n            \n            // コールバック（フラッシュローン等）\n            if (data.length > 0) {\n                // IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n            }\n            \n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        \n        uint256 amount0In = balance0 > _reserve0 - amount0Out \n            ? balance0 - (_reserve0 - amount0Out) \n            : 0;\n        uint256 amount1In = balance1 > _reserve1 - amount1Out \n            ? balance1 - (_reserve1 - amount1Out) \n            : 0;\n        \n        if (amount0In == 0 && amount1In == 0) revert InsufficientInputAmount();\n        \n        {\n            // 手数料を考慮したK値チェック（0.3%手数料）\n            uint256 balance0Adjusted = (balance0 * 1000) - (amount0In * 3);\n            uint256 balance1Adjusted = (balance1 * 1000) - (amount1In * 3);\n            \n            if (balance0Adjusted * balance1Adjusted < uint256(_reserve0) * _reserve1 * 1000**2) {\n                revert InvalidK();\n            }\n        }\n        \n        _update(balance0, balance1, _reserve0, _reserve1);\n        \n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n    \n    /**\n     * @dev トークン残高をリザーブに同期\n     */\n    function sync() external nonReentrant {\n        _update(\n            IERC20(token0).balanceOf(address(this)),\n            IERC20(token1).balanceOf(address(this)),\n            reserve0,\n            reserve1\n        );\n    }\n    \n    /**\n     * @dev リザーブの更新\n     */\n    function _update(\n        uint256 balance0,\n        uint256 balance1,\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private {\n        if (balance0 > type(uint112).max || balance1 > type(uint112).max) {\n            revert Overflow();\n        }\n        \n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast;\n        \n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            price0CumulativeLast += uint256(_encode(_reserve1) / _reserve0) * timeElapsed;\n            price1CumulativeLast += uint256(_encode(_reserve0) / _reserve1) * timeElapsed;\n        }\n        \n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        \n        emit Sync(reserve0, reserve1);\n    }\n    \n    /**\n     * @dev 手数料のミント\n     */\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n        address feeTo = IFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint256 _kLast = kLast;\n        \n        if (feeOn) {\n            if (_kLast != 0) {\n                uint256 rootK = _sqrt(uint256(_reserve0) * _reserve1);\n                uint256 rootKLast = _sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint256 numerator = totalSupply() * (rootK - rootKLast);\n                    uint256 denominator = (rootK * 5) + rootKLast;\n                    uint256 liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n    \n    /**\n     * @dev 平方根の計算（バビロニア法）\n     */\n    function _sqrt(uint256 y) private pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n    \n    /**\n     * @dev 最小値を返す\n     */\n    function _min(uint256 x, uint256 y) private pure returns (uint256) {\n        return x < y ? x : y;\n    }\n    \n    /**\n     * @dev UQ112x112形式でエンコード\n     */\n    function _encode(uint112 y) private pure returns (uint224) {\n        return uint224(y) * uint224(2**112);\n    }\n}\n\n/**\n * @dev ファクトリーインターフェース\n */\ninterface IFactory {\n    function feeTo() external view returns (address);\n}\n"
      },
      "contracts/DexRouter.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./DexFactory.sol\";\nimport \"./DexPair.sol\";\n\n/**\n * @title DexRouter\n * @dev ユーザーとの主要インターフェースを提供するルーターコントラクト\n * @notice 流動性管理とスワップ機能を提供\n */\ncontract DexRouter is ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    \n    /// @dev ファクトリーコントラクトのアドレス\n    address public immutable FACTORY;\n    \n    /**\n     * @dev エラー：期限切れ\n     */\n    error DeadlineExpired();\n    \n    /**\n     * @dev エラー：不十分なA量\n     */\n    error InsufficientAAmount();\n    \n    /**\n     * @dev エラー：不十分なB量\n     */\n    error InsufficientBAmount();\n    \n    /**\n     * @dev エラー：不十分な出力量\n     */\n    error InsufficientOutputAmount();\n    \n    /**\n     * @dev エラー：過度な入力量\n     */\n    error ExcessiveInputAmount();\n    \n    /**\n     * @dev エラー：不正なパス\n     */\n    error InvalidPath();\n    \n    /**\n     * @dev エラー：ゼロアドレス\n     */\n    error ZeroAddress();\n    \n    /**\n     * @dev エラー：同一トークン\n     */\n    error IdenticalTokens();\n    \n    /**\n     * @dev エラー：ペアが存在しない\n     */\n    error PairDoesNotExist();\n    \n    /**\n     * @dev エラー：不正な入力量\n     */\n    error InvalidInputAmount();\n    \n    /**\n     * @dev コンストラクタ\n     * @param factoryAddress ファクトリーコントラクトのアドレス\n     */\n    constructor(address factoryAddress) {\n        if (factoryAddress == address(0)) revert ZeroAddress();\n        FACTORY = factoryAddress;\n    }\n    \n    /**\n     * @dev デッドラインチェック用修飾子\n     * @param deadline 期限タイムスタンプ\n     */\n    modifier ensure(uint256 deadline) {\n        if (block.timestamp > deadline) revert DeadlineExpired();\n        _;\n    }\n    \n    /**\n     * @dev 流動性を追加\n     * @param tokenA トークンAのアドレス\n     * @param tokenB トークンBのアドレス\n     * @param amountADesired トークンAの希望追加量\n     * @param amountBDesired トークンBの希望追加量\n     * @param amountAMin トークンAの最小追加量\n     * @param amountBMin トークンBの最小追加量\n     * @param to LPトークンの受取人\n     * @param deadline 期限タイムスタンプ\n     * @return amountA 実際に追加されたトークンAの量\n     * @return amountB 実際に追加されたトークンBの量\n     * @return liquidity 受け取ったLPトークンの量\n     */\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external ensure(deadline) nonReentrant returns (\n        uint256 amountA,\n        uint256 amountB,\n        uint256 liquidity\n    ) {\n        (amountA, amountB) = _addLiquidity(\n            tokenA,\n            tokenB,\n            amountADesired,\n            amountBDesired,\n            amountAMin,\n            amountBMin\n        );\n        \n        address pair = DexFactory(FACTORY).getPair(tokenA, tokenB);\n        if (pair == address(0)) {\n            pair = DexFactory(FACTORY).createPair(tokenA, tokenB);\n        }\n        \n        IERC20(tokenA).safeTransferFrom(msg.sender, pair, amountA);\n        IERC20(tokenB).safeTransferFrom(msg.sender, pair, amountB);\n        liquidity = DexPair(pair).mint(to);\n    }\n    \n    /**\n     * @dev 流動性を削除\n     * @param tokenA トークンAのアドレス\n     * @param tokenB トークンBのアドレス\n     * @param liquidity 削除するLPトークンの量\n     * @param amountAMin トークンAの最小受取量\n     * @param amountBMin トークンBの最小受取量\n     * @param to トークンの受取人\n     * @param deadline 期限タイムスタンプ\n     * @return amountA 受け取ったトークンAの量\n     * @return amountB 受け取ったトークンBの量\n     */\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline\n    ) external ensure(deadline) nonReentrant returns (uint256 amountA, uint256 amountB) {\n        address pair = DexFactory(FACTORY).getPair(tokenA, tokenB);\n        if (pair == address(0)) revert PairDoesNotExist();\n        \n        IERC20(pair).safeTransferFrom(msg.sender, pair, liquidity);\n        (uint256 amount0, uint256 amount1) = DexPair(pair).burn(to);\n        \n        (address token0,) = _sortTokens(tokenA, tokenB);\n        (amountA, amountB) = tokenA == token0 ? (amount0, amount1) : (amount1, amount0);\n        \n        if (amountA < amountAMin) revert InsufficientAAmount();\n        if (amountB < amountBMin) revert InsufficientBAmount();\n    }\n    \n    /**\n     * @dev 正確な入力量でトークンをスワップ\n     * @param amountIn 入力トークンの量\n     * @param amountOutMin 最小出力トークンの量\n     * @param path スワップパス（トークンアドレスの配列）\n     * @param to 出力トークンの受取人\n     * @param deadline 期限タイムスタンプ\n     * @return amounts 各段階でのトークン量\n     */\n    function swapExactTokensForTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external ensure(deadline) nonReentrant returns (uint256[] memory amounts) {\n        amounts = getAmountsOut(amountIn, path);\n        if (amounts[amounts.length - 1] < amountOutMin) revert InsufficientOutputAmount();\n        \n        IERC20(path[0]).safeTransferFrom(\n            msg.sender,\n            DexFactory(FACTORY).getPair(path[0], path[1]),\n            amounts[0]\n        );\n        _swap(amounts, path, to);\n    }\n    \n    /**\n     * @dev 正確な出力量でトークンをスワップ\n     * @param amountOut 出力トークンの量\n     * @param amountInMax 最大入力トークンの量\n     * @param path スワップパス（トークンアドレスの配列）\n     * @param to 出力トークンの受取人\n     * @param deadline 期限タイムスタンプ\n     * @return amounts 各段階でのトークン量\n     */\n    function swapTokensForExactTokens(\n        uint256 amountOut,\n        uint256 amountInMax,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external ensure(deadline) nonReentrant returns (uint256[] memory amounts) {\n        amounts = getAmountsIn(amountOut, path);\n        if (amounts[0] > amountInMax) revert ExcessiveInputAmount();\n        \n        IERC20(path[0]).safeTransferFrom(\n            msg.sender,\n            DexFactory(FACTORY).getPair(path[0], path[1]),\n            amounts[0]\n        );\n        _swap(amounts, path, to);\n    }\n    \n    /**\n     * @dev 流動性追加のための最適な量を計算\n     */\n    function _addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin\n    ) internal view returns (uint256 amountA, uint256 amountB) {\n        address pair = DexFactory(FACTORY).getPair(tokenA, tokenB);\n        \n        if (pair == address(0)) {\n            // 新しいペアの場合\n            (amountA, amountB) = (amountADesired, amountBDesired);\n        } else {\n            // 既存ペアの場合、リザーブを確認\n            (uint256 reserveA, uint256 reserveB) = getReserves(tokenA, tokenB);\n            \n            if (reserveA == 0 && reserveB == 0) {\n                // ペアは存在するがリザーブが0の場合（初回流動性提供）\n                (amountA, amountB) = (amountADesired, amountBDesired);\n            } else {\n                // 既存流動性がある場合、比率を計算\n                uint256 amountBOptimal = _quote(amountADesired, reserveA, reserveB);\n                \n                if (amountBOptimal <= amountBDesired) {\n                    if (amountBOptimal < amountBMin) revert InsufficientBAmount();\n                    (amountA, amountB) = (amountADesired, amountBOptimal);\n                } else {\n                    uint256 amountAOptimal = _quote(amountBDesired, reserveB, reserveA);\n                    if (amountAOptimal > amountADesired) revert ExcessiveInputAmount();\n                    if (amountAOptimal < amountAMin) revert InsufficientAAmount();\n                    (amountA, amountB) = (amountAOptimal, amountBDesired);\n                }\n            }\n        }\n    }\n    \n    /**\n     * @dev スワップの実行\n     */\n    function _swap(uint256[] memory amounts, address[] memory path, address _to) internal {\n        for (uint256 i; i < path.length - 1; i++) {\n            (address input, address output) = (path[i], path[i + 1]);\n            (address token0,) = _sortTokens(input, output);\n            uint256 amountOut = amounts[i + 1];\n            (uint256 amount0Out, uint256 amount1Out) = input == token0 \n                ? (uint256(0), amountOut) \n                : (amountOut, uint256(0));\n            address to = i < path.length - 2 \n                ? DexFactory(FACTORY).getPair(output, path[i + 2]) \n                : _to;\n            \n            DexPair(DexFactory(FACTORY).getPair(input, output)).swap(\n                amount0Out,\n                amount1Out,\n                to,\n                new bytes(0)\n            );\n        }\n    }\n    \n    /**\n     * @dev リザーブ量を取得\n     * @param tokenA トークンAのアドレス\n     * @param tokenB トークンBのアドレス\n     * @return reserveA トークンAのリザーブ量\n     * @return reserveB トークンBのリザーブ量\n     */\n    function getReserves(address tokenA, address tokenB) \n        public view returns (uint256 reserveA, uint256 reserveB) {\n        (address token0,) = _sortTokens(tokenA, tokenB);\n        address pair = DexFactory(FACTORY).getPair(tokenA, tokenB);\n        if (pair == address(0)) return (0, 0);\n        \n        (uint256 reserve0, uint256 reserve1,) = DexPair(pair).getReserves();\n        (reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\n    }\n    \n    /**\n     * @dev 入力量から出力量を計算\n     * @param amountIn 入力トークンの量\n     * @param reserveIn 入力トークンのリザーブ量\n     * @param reserveOut 出力トークンのリザーブ量\n     * @return amountOut 出力トークンの量\n     */\n    function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut)\n        public pure returns (uint256 amountOut) {\n        if (amountIn == 0) revert InvalidInputAmount();\n        if (reserveIn == 0 || reserveOut == 0) revert InsufficientOutputAmount();\n        \n        uint256 amountInWithFee = amountIn * 997; // 0.3%の手数料\n        uint256 numerator = amountInWithFee * reserveOut;\n        uint256 denominator = (reserveIn * 1000) + amountInWithFee;\n        amountOut = numerator / denominator;\n    }\n    \n    /**\n     * @dev 出力量から入力量を計算\n     * @param amountOut 出力トークンの量\n     * @param reserveIn 入力トークンのリザーブ量\n     * @param reserveOut 出力トークンのリザーブ量\n     * @return amountIn 入力トークンの量\n     */\n    function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut)\n        public pure returns (uint256 amountIn) {\n        if (amountOut == 0) revert InsufficientOutputAmount();\n        if (reserveIn == 0 || reserveOut == 0) revert InvalidInputAmount();\n        \n        uint256 numerator = reserveIn * amountOut * 1000;\n        uint256 denominator = (reserveOut - amountOut) * 997;\n        amountIn = (numerator / denominator) + 1;\n    }\n    \n    /**\n     * @dev パス全体での出力量を計算\n     * @param amountIn 入力量\n     * @param path スワップパス\n     * @return amounts 各段階での量\n     */\n    function getAmountsOut(uint256 amountIn, address[] memory path)\n        public view returns (uint256[] memory amounts) {\n        if (path.length < 2) revert InvalidPath();\n        amounts = new uint256[](path.length);\n        amounts[0] = amountIn;\n        \n        for (uint256 i; i < path.length - 1; i++) {\n            (uint256 reserveIn, uint256 reserveOut) = getReserves(path[i], path[i + 1]);\n            amounts[i + 1] = getAmountOut(amounts[i], reserveIn, reserveOut);\n        }\n    }\n    \n    /**\n     * @dev パス全体での入力量を計算\n     * @param amountOut 出力量\n     * @param path スワップパス\n     * @return amounts 各段階での量\n     */\n    function getAmountsIn(uint256 amountOut, address[] memory path)\n        public view returns (uint256[] memory amounts) {\n        if (path.length < 2) revert InvalidPath();\n        amounts = new uint256[](path.length);\n        amounts[amounts.length - 1] = amountOut;\n        \n        for (uint256 i = path.length - 1; i > 0; i--) {\n            (uint256 reserveIn, uint256 reserveOut) = getReserves(path[i - 1], path[i]);\n            amounts[i - 1] = getAmountIn(amounts[i], reserveIn, reserveOut);\n        }\n    }\n    \n    /**\n     * @dev 比例計算（クォート）\n     */\n    function _quote(uint256 amountA, uint256 reserveA, uint256 reserveB) \n        internal pure returns (uint256 amountB) {\n        if (amountA == 0) revert InsufficientAAmount();\n        if (reserveA == 0 || reserveB == 0) revert InsufficientOutputAmount();\n        amountB = (amountA * reserveB) / reserveA;\n    }\n    \n    /**\n     * @dev トークンアドレスをソート\n     */\n    function _sortTokens(address tokenA, address tokenB) \n        internal pure returns (address token0, address token1) {\n        if (tokenA == tokenB) revert IdenticalTokens();\n        (token0, token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        if (token0 == address(0)) revert ZeroAddress();\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
          "exportedSymbols": {
            "IERC1363": [
              81
            ],
            "IERC165": [
              1420
            ],
            "IERC20": [
              819
            ]
          },
          "id": 82,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 82,
              "sourceUnit": 90,
              "src": "133:36:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 819,
                    "src": "141:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 82,
              "sourceUnit": 86,
              "src": "170:38:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1420,
                    "src": "178:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 7,
                    "name": "IERC20",
                    "nameLocations": [
                      "590:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 819,
                    "src": "590:6:0"
                  },
                  "id": 8,
                  "nodeType": "InheritanceSpecifier",
                  "src": "590:6:0"
                },
                {
                  "baseName": {
                    "id": 9,
                    "name": "IERC165",
                    "nameLocations": [
                      "598:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1420,
                    "src": "598:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:0"
                }
              ],
              "canonicalName": "IERC1363",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 6,
                "nodeType": "StructuredDocumentation",
                "src": "210:357:0",
                "text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
              },
              "fullyImplemented": false,
              "id": 81,
              "linearizedBaseContracts": [
                81,
                1420,
                819
              ],
              "name": "IERC1363",
              "nameLocation": "578:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "1148:370:0",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "1296ee62",
                  "id": 20,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "1532:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1556:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "1548:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1548:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1568:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "1560:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1547:27:0"
                  },
                  "returnParameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "1593:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1592:6:0"
                  },
                  "scope": 81,
                  "src": "1523:76:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 21,
                    "nodeType": "StructuredDocumentation",
                    "src": "1605:453:0",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "4000aea0",
                  "id": 32,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "2072:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2096:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "2088:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2108:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "2100:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2130:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "2115:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2087:48:0"
                  },
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "2154:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2153:6:0"
                  },
                  "scope": 81,
                  "src": "2063:97:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "2166:453:0",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "d8fbe994",
                  "id": 44,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "2633:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2661:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "2653:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2675:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "2667:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2687:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "2679:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:41:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "2712:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:6:0"
                  },
                  "scope": 81,
                  "src": "2624:94:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "2724:536:0",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "c1d34b89",
                  "id": 58,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCall",
                  "nameLocation": "3274:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3302:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "3294:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3316:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "3308:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3308:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3328:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "3320:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3320:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3350:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "3335:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3335:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3293:62:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "3374:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3374:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3373:6:0"
                  },
                  "scope": 81,
                  "src": "3265:115:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "3386:390:0",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "3177029f",
                  "id": 68,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "3790:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3813:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "3805:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3805:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3830:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "3822:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3804:32:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 66,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "3855:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3854:6:0"
                  },
                  "scope": 81,
                  "src": "3781:80:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 69,
                    "nodeType": "StructuredDocumentation",
                    "src": "3867:478:0",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
                  },
                  "functionSelector": "cae9ca51",
                  "id": 80,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "4359:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4382:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "4374:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4399:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "4391:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4391:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4421:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "4406:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:53:0"
                  },
                  "returnParameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "4445:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4445:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4444:6:0"
                  },
                  "scope": 81,
                  "src": "4350:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 82,
              "src": "568:3885:0",
              "usedErrors": [],
              "usedEvents": [
                753,
                762
              ]
            }
          ],
          "src": "107:4347:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1420
            ]
          },
          "id": 86,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 83,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 85,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 86,
              "sourceUnit": 1421,
              "src": "133:59:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 84,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1420,
                    "src": "141:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:87:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              819
            ]
          },
          "id": 90,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 87,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:25:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 89,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 90,
              "sourceUnit": 820,
              "src": "132:49:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 88,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 819,
                    "src": "140:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:77:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              226
            ],
            "IERC20Errors": [
              131
            ],
            "IERC721Errors": [
              179
            ]
          },
          "id": 227,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 91,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 92,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:3",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 131,
              "linearizedBaseContracts": [
                131
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 93,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 101,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "654:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "670:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "687:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:3"
                  },
                  "src": "623:80:3"
                },
                {
                  "documentation": {
                    "id": 102,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 106,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "891:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:3"
                  },
                  "src": "866:41:3"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 111,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "1104:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:3"
                  },
                  "src": "1077:45:3"
                },
                {
                  "documentation": {
                    "id": 112,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:3",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 120,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1511:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1528:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1547:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:3"
                  },
                  "src": "1478:85:3"
                },
                {
                  "documentation": {
                    "id": 121,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 125,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "1775:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:3"
                  },
                  "src": "1748:45:3"
                },
                {
                  "documentation": {
                    "id": 126,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:3",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 130,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "2025:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:3"
                  },
                  "src": "1999:43:3"
                }
              ],
              "scope": 227,
              "src": "280:1764:3",
              "usedErrors": [
                101,
                106,
                111,
                120,
                125,
                130
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 132,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:3",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 179,
              "linearizedBaseContracts": [
                179
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 133,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:3",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 137,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "2469:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:3"
                  },
                  "src": "2444:40:3"
                },
                {
                  "documentation": {
                    "id": 138,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:3",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 142,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "2656:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:3"
                  },
                  "src": "2627:46:3"
                },
                {
                  "documentation": {
                    "id": 143,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:3",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 151,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 145,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 151,
                        "src": "3000:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 151,
                        "src": "3016:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 151,
                        "src": "3033:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:3"
                  },
                  "src": "2973:75:3"
                },
                {
                  "documentation": {
                    "id": 152,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 156,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "3237:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:3"
                  },
                  "src": "3211:42:3"
                },
                {
                  "documentation": {
                    "id": 157,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 161,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "3451:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:3"
                  },
                  "src": "3423:46:3"
                },
                {
                  "documentation": {
                    "id": 162,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 168,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "3760:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "3778:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:3"
                  },
                  "src": "3727:68:3"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 173,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "4008:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:3"
                  },
                  "src": "3980:46:3"
                },
                {
                  "documentation": {
                    "id": 174,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 178,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "4262:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:3"
                  },
                  "src": "4234:46:3"
                }
              ],
              "scope": 227,
              "src": "2190:2092:3",
              "usedErrors": [
                137,
                142,
                151,
                156,
                161,
                168,
                173,
                178
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 180,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:3",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 226,
              "linearizedBaseContracts": [
                226
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 181,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 191,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "4860:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "4876:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "4893:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "4909:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:3"
                  },
                  "src": "4827:99:3"
                },
                {
                  "documentation": {
                    "id": 192,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 196,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "5116:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:3"
                  },
                  "src": "5089:43:3"
                },
                {
                  "documentation": {
                    "id": 197,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 201,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 201,
                        "src": "5331:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:3"
                  },
                  "src": "5302:47:3"
                },
                {
                  "documentation": {
                    "id": 202,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 208,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "5651:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "5669:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:3"
                  },
                  "src": "5616:68:3"
                },
                {
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 213,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "5898:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:3"
                  },
                  "src": "5869:47:3"
                },
                {
                  "documentation": {
                    "id": 214,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 218,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "6153:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:3"
                  },
                  "src": "6124:47:3"
                },
                {
                  "documentation": {
                    "id": 219,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:3",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 225,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "6494:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "6513:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:3"
                  },
                  "src": "6462:73:3"
                }
              ],
              "scope": 227,
              "src": "4430:2107:3",
              "usedErrors": [
                191,
                196,
                201,
                208,
                213,
                218,
                225
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1339
            ],
            "ERC20": [
              741
            ],
            "IERC20": [
              819
            ],
            "IERC20Errors": [
              131
            ],
            "IERC20Metadata": [
              845
            ]
          },
          "id": 742,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 228,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 230,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 742,
              "sourceUnit": 820,
              "src": "131:36:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 229,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 819,
                    "src": "139:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 232,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 742,
              "sourceUnit": 846,
              "src": "168:63:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 231,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 845,
                    "src": "176:14:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 234,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 742,
              "sourceUnit": 1340,
              "src": "232:48:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 233,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1339,
                    "src": "240:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 236,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 742,
              "sourceUnit": 227,
              "src": "281:65:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 235,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 131,
                    "src": "289:12:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 238,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1339,
                    "src": "1133:7:4"
                  },
                  "id": 239,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:4"
                },
                {
                  "baseName": {
                    "id": 240,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 819,
                    "src": "1142:6:4"
                  },
                  "id": 241,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:4"
                },
                {
                  "baseName": {
                    "id": 242,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 845,
                    "src": "1150:14:4"
                  },
                  "id": 243,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:4"
                },
                {
                  "baseName": {
                    "id": 244,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 131,
                    "src": "1166:12:4"
                  },
                  "id": 245,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:4"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 237,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:4",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 741,
              "linearizedBaseContracts": [
                741,
                131,
                845,
                819,
                1339
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "1185:53:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 248,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:4",
                    "keyType": {
                      "id": 246,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 247,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "1245:83:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 254,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:4",
                    "keyType": {
                      "id": 250,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 253,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:4",
                      "keyType": {
                        "id": 251,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "1335:28:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "1370:20:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "1396:22:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "1638:57:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 269,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 259,
                            "src": "1648:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 270,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "1656:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:4"
                      },
                      {
                        "expression": {
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 273,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "1671:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 274,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "1681:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 276,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:4",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 278,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "1594:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "1615:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:4"
                  },
                  "returnParameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:4"
                  },
                  "scope": 741,
                  "src": "1582:113:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    832
                  ],
                  "body": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "1820:29:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 284,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 259,
                          "src": "1837:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 283,
                        "id": 285,
                        "nodeType": "Return",
                        "src": "1830:12:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 279,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 287,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:4"
                  },
                  "returnParameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 282,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "1805:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:4"
                  },
                  "scope": 741,
                  "src": "1760:89:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    838
                  ],
                  "body": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "2024:31:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 293,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "2041:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 292,
                        "id": 294,
                        "nodeType": "Return",
                        "src": "2034:14:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 288,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:4",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 296,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:4"
                  },
                  "returnParameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "2009:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:4"
                  },
                  "scope": 741,
                  "src": "1962:93:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "2744:26:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 301,
                        "id": 303,
                        "nodeType": "Return",
                        "src": "2754:9:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:4",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 305,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:4"
                  },
                  "returnParameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "2737:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:4"
                  },
                  "scope": 741,
                  "src": "2688:82:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    768
                  ],
                  "body": {
                    "id": 313,
                    "nodeType": "Block",
                    "src": "2864:36:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 311,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "2881:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 310,
                        "id": 312,
                        "nodeType": "Return",
                        "src": "2874:19:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:22:4",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "18160ddd",
                  "id": 314,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2812:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2823:2:4"
                  },
                  "returnParameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 314,
                        "src": "2855:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2854:9:4"
                  },
                  "scope": 741,
                  "src": "2803:97:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    776
                  ],
                  "body": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "3007:42:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 322,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "3024:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 324,
                          "indexExpression": {
                            "id": 323,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "3034:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 321,
                        "id": 325,
                        "nodeType": "Return",
                        "src": "3017:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 315,
                    "nodeType": "StructuredDocumentation",
                    "src": "2906:22:4",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "70a08231",
                  "id": 327,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2942:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 318,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 317,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2960:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "2952:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 316,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2951:17:4"
                  },
                  "returnParameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "2998:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2998:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:9:4"
                  },
                  "scope": 741,
                  "src": "2933:116:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    786
                  ],
                  "body": {
                    "id": 350,
                    "nodeType": "Block",
                    "src": "3319:103:4",
                    "statements": [
                      {
                        "assignments": [
                          338
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 338,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3337:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 350,
                            "src": "3329:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 337,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3329:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 341,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 339,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "3345:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3329:28:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 343,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 338,
                              "src": "3377:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 344,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 330,
                              "src": "3384:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 345,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "3388:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 342,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "3367:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "3367:27:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 336,
                        "id": 349,
                        "nodeType": "Return",
                        "src": "3404:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 328,
                    "nodeType": "StructuredDocumentation",
                    "src": "3055:184:4",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 351,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3253:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3270:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 351,
                        "src": "3262:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3282:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 351,
                        "src": "3274:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3261:27:4"
                  },
                  "returnParameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 351,
                        "src": "3313:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3312:6:4"
                  },
                  "scope": 741,
                  "src": "3244:178:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    796
                  ],
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "3544:51:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 361,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "3561:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 363,
                            "indexExpression": {
                              "id": 362,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 354,
                              "src": "3573:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3561:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 365,
                          "indexExpression": {
                            "id": 364,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3580:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 360,
                        "id": 366,
                        "nodeType": "Return",
                        "src": "3554:34:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 352,
                    "nodeType": "StructuredDocumentation",
                    "src": "3428:22:4",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3464:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3482:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "3474:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3497:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "3489:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:32:4"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "3535:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3534:9:4"
                  },
                  "scope": 741,
                  "src": "3455:140:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    806
                  ],
                  "body": {
                    "id": 391,
                    "nodeType": "Block",
                    "src": "3981:107:4",
                    "statements": [
                      {
                        "assignments": [
                          379
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 379,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3999:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 391,
                            "src": "3991:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 378,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3991:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 382,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 380,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "4007:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4007:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3991:28:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 384,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "4038:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 385,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "4045:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 386,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "4054:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 383,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              632,
                              692
                            ],
                            "referencedDeclaration": 632,
                            "src": "4029:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 388,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:31:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4077:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 377,
                        "id": 390,
                        "nodeType": "Return",
                        "src": "4070:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 369,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:296:4",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 392,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3911:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3927:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "3919:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3944:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "3936:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:32:4"
                  },
                  "returnParameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "3975:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3974:6:4"
                  },
                  "scope": 741,
                  "src": "3902:186:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    818
                  ],
                  "body": {
                    "id": 423,
                    "nodeType": "Block",
                    "src": "4773:151:4",
                    "statements": [
                      {
                        "assignments": [
                          405
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 405,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4791:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 423,
                            "src": "4783:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 404,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4783:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 408,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 406,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "4801:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4783:30:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 410,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "4839:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 411,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "4845:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 412,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "4854:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 409,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "4823:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 414,
                        "nodeType": "ExpressionStatement",
                        "src": "4823:37:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 416,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "4880:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 417,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "4886:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 418,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "4890:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 415,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "4870:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4870:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "4870:26:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 403,
                        "id": 422,
                        "nodeType": "Return",
                        "src": "4906:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 393,
                    "nodeType": "StructuredDocumentation",
                    "src": "4094:581:4",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 424,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4689:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4710:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "4702:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4724:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "4716:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 399,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4736:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "4728:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4701:41:4"
                  },
                  "returnParameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "4767:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:6:4"
                  },
                  "scope": 741,
                  "src": "4680:244:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 470,
                    "nodeType": "Block",
                    "src": "5366:231:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 434,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "5380:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5396:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5388:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 435,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5388:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5388:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5380:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 448,
                        "nodeType": "IfStatement",
                        "src": "5376:86:4",
                        "trueBody": {
                          "id": 447,
                          "nodeType": "Block",
                          "src": "5400:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 443,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5448:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 442,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5440:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 441,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5440:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 444,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5440:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 440,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "5421:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5421:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 446,
                              "nodeType": "RevertStatement",
                              "src": "5414:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 449,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "5475:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5489:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5481:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 450,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5481:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5481:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5475:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 463,
                        "nodeType": "IfStatement",
                        "src": "5471:86:4",
                        "trueBody": {
                          "id": 462,
                          "nodeType": "Block",
                          "src": "5493:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 458,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5543:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 457,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5535:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 456,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5535:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5535:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 455,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "5514:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5514:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 461,
                              "nodeType": "RevertStatement",
                              "src": "5507:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 465,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 427,
                              "src": "5574:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 466,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "5580:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 467,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "5584:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 464,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "5566:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 469,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:24:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 425,
                    "nodeType": "StructuredDocumentation",
                    "src": "4930:362:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 471,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5306:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 427,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5324:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "5316:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5338:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "5330:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5350:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "5342:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5342:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5315:41:4"
                  },
                  "returnParameters": {
                    "id": 433,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5366:0:4"
                  },
                  "scope": 741,
                  "src": "5297:300:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 547,
                    "nodeType": "Block",
                    "src": "5987:1032:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 481,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "6001:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6017:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6009:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 482,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6009:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6001:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 518,
                          "nodeType": "Block",
                          "src": "6175:362:4",
                          "statements": [
                            {
                              "assignments": [
                                493
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 493,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6197:11:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 518,
                                  "src": "6189:19:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 492,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6189:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 497,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 494,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 249,
                                  "src": "6211:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 496,
                                "indexExpression": {
                                  "id": 495,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "6221:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6211:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6189:37:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 498,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 493,
                                  "src": "6244:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 499,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "6258:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6244:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 508,
                              "nodeType": "IfStatement",
                              "src": "6240:115:4",
                              "trueBody": {
                                "id": 507,
                                "nodeType": "Block",
                                "src": "6265:90:4",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 502,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 474,
                                          "src": "6315:4:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 503,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 493,
                                          "src": "6321:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 504,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 478,
                                          "src": "6334:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 501,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 101,
                                        "src": "6290:24:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 505,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6290:50:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 506,
                                    "nodeType": "RevertStatement",
                                    "src": "6283:57:4"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 517,
                              "nodeType": "UncheckedBlock",
                              "src": "6368:159:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 515,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 509,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 249,
                                        "src": "6475:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 511,
                                      "indexExpression": {
                                        "id": 510,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 474,
                                        "src": "6485:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6475:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 514,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 512,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 493,
                                        "src": "6493:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 513,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 478,
                                        "src": "6507:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6493:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6475:37:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 516,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6475:37:4"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 519,
                        "nodeType": "IfStatement",
                        "src": "5997:540:4",
                        "trueBody": {
                          "id": 491,
                          "nodeType": "Block",
                          "src": "6021:148:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 487,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 257,
                                  "src": "6137:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 488,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "6153:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6137:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 490,
                              "nodeType": "ExpressionStatement",
                              "src": "6137:21:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 520,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "6551:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6565:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6557:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 521,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6557:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6551:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 539,
                          "nodeType": "Block",
                          "src": "6766:206:4",
                          "statements": [
                            {
                              "id": 538,
                              "nodeType": "UncheckedBlock",
                              "src": "6780:182:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 536,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 532,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 249,
                                        "src": "6925:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 534,
                                      "indexExpression": {
                                        "id": 533,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 476,
                                        "src": "6935:2:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6925:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 535,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 478,
                                      "src": "6942:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6925:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 537,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6925:22:4"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 540,
                        "nodeType": "IfStatement",
                        "src": "6547:425:4",
                        "trueBody": {
                          "id": 531,
                          "nodeType": "Block",
                          "src": "6569:191:4",
                          "statements": [
                            {
                              "id": 530,
                              "nodeType": "UncheckedBlock",
                              "src": "6583:167:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 528,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 526,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 257,
                                      "src": "6714:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 527,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 478,
                                      "src": "6730:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6714:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 529,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6714:21:4"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 542,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "6996:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 543,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "7002:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 544,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "7006:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 541,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "6987:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 546,
                        "nodeType": "EmitStatement",
                        "src": "6982:30:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 472,
                    "nodeType": "StructuredDocumentation",
                    "src": "5603:304:4",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 548,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5921:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5937:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 548,
                        "src": "5929:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5951:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 548,
                        "src": "5943:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5943:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5963:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 548,
                        "src": "5955:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:41:4"
                  },
                  "returnParameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5987:0:4"
                  },
                  "scope": 741,
                  "src": "5912:1107:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 580,
                    "nodeType": "Block",
                    "src": "7418:152:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 556,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "7432:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7451:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7443:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 557,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7443:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7443:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7432:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 570,
                        "nodeType": "IfStatement",
                        "src": "7428:91:4",
                        "trueBody": {
                          "id": 569,
                          "nodeType": "Block",
                          "src": "7455:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7505:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 564,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7497:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 563,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7497:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7497:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 562,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "7476:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7476:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 568,
                              "nodeType": "RevertStatement",
                              "src": "7469:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 574,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7544:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7536:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 572,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7536:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 576,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "7548:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 577,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "7557:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 571,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "7528:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:35:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 549,
                    "nodeType": "StructuredDocumentation",
                    "src": "7025:332:4",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 581,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7371:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7385:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 581,
                        "src": "7377:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7402:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 581,
                        "src": "7394:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7394:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7376:32:4"
                  },
                  "returnParameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7418:0:4"
                  },
                  "scope": 741,
                  "src": "7362:208:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 613,
                    "nodeType": "Block",
                    "src": "7944:150:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 589,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "7958:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7977:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7969:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 590,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7969:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7969:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7958:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 603,
                        "nodeType": "IfStatement",
                        "src": "7954:89:4",
                        "trueBody": {
                          "id": 602,
                          "nodeType": "Block",
                          "src": "7981:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 598,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8029:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8021:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 596,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8021:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 599,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 595,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "8002:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8002:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 601,
                              "nodeType": "RevertStatement",
                              "src": "7995:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 605,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "8060:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 608,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8077:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 606,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 610,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "8081:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 604,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "8052:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 612,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:35:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 582,
                    "nodeType": "StructuredDocumentation",
                    "src": "7576:307:4",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 614,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7897:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7911:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 614,
                        "src": "7903:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7903:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7928:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 614,
                        "src": "7920:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7920:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7902:32:4"
                  },
                  "returnParameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7944:0:4"
                  },
                  "scope": 741,
                  "src": "7888:206:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 631,
                    "nodeType": "Block",
                    "src": "8704:54:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 625,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "8723:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 626,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "8730:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 627,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "8739:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8746:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 624,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              632,
                              692
                            ],
                            "referencedDeclaration": 692,
                            "src": "8714:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 630,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:37:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 615,
                    "nodeType": "StructuredDocumentation",
                    "src": "8100:525:4",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 632,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8639:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 617,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8656:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "8648:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 616,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8648:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8671:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "8663:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8663:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8688:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "8680:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8680:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8647:47:4"
                  },
                  "returnParameters": {
                    "id": 623,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8704:0:4"
                  },
                  "scope": 741,
                  "src": "8630:128:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 691,
                    "nodeType": "Block",
                    "src": "9703:334:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 644,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "9717:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9734:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 645,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9717:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 658,
                        "nodeType": "IfStatement",
                        "src": "9713:89:4",
                        "trueBody": {
                          "id": 657,
                          "nodeType": "Block",
                          "src": "9738:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 653,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9788:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9780:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 651,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9780:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9780:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 650,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 125,
                                  "src": "9759:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9759:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 656,
                              "nodeType": "RevertStatement",
                              "src": "9752:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 659,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "9815:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9834:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9826:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 660,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9826:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 673,
                        "nodeType": "IfStatement",
                        "src": "9811:90:4",
                        "trueBody": {
                          "id": 672,
                          "nodeType": "Block",
                          "src": "9838:63:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 668,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9887:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 667,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9879:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 666,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9879:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9879:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 665,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130,
                                  "src": "9859:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9859:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 671,
                              "nodeType": "RevertStatement",
                              "src": "9852:38:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 674,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "9910:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 677,
                              "indexExpression": {
                                "id": 675,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 635,
                                "src": "9922:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9910:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 678,
                            "indexExpression": {
                              "id": 676,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 637,
                              "src": "9929:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9910:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 679,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "9940:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9910:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "9910:35:4"
                      },
                      {
                        "condition": {
                          "id": 682,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 641,
                          "src": "9959:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 690,
                        "nodeType": "IfStatement",
                        "src": "9955:76:4",
                        "trueBody": {
                          "id": 689,
                          "nodeType": "Block",
                          "src": "9970:61:4",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 684,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 635,
                                    "src": "9998:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 685,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 637,
                                    "src": "10005:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 686,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 639,
                                    "src": "10014:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 683,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 762,
                                  "src": "9989:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9989:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 688,
                              "nodeType": "EmitStatement",
                              "src": "9984:36:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 633,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:836:4",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 692,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9614:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 642,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 635,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9631:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "9623:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9623:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9646:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "9638:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9638:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9663:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "9655:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9655:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9675:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "9670:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9622:63:4"
                  },
                  "returnParameters": {
                    "id": 643,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9703:0:4"
                  },
                  "scope": 741,
                  "src": "9605:432:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 739,
                    "nodeType": "Block",
                    "src": "10408:387:4",
                    "statements": [
                      {
                        "assignments": [
                          703
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 703,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10426:16:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 739,
                            "src": "10418:24:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 702,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10418:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 708,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "10455:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 706,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "10462:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 704,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "10445:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10445:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10418:52:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 709,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "10484:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10508:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 711,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10508:7:4",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 710,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10503:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10503:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10517:3:4",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10503:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 738,
                        "nodeType": "IfStatement",
                        "src": "10480:309:4",
                        "trueBody": {
                          "id": 737,
                          "nodeType": "Block",
                          "src": "10522:267:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 716,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 703,
                                  "src": "10540:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 717,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 699,
                                  "src": "10559:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10540:24:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 726,
                              "nodeType": "IfStatement",
                              "src": "10536:130:4",
                              "trueBody": {
                                "id": 725,
                                "nodeType": "Block",
                                "src": "10566:100:4",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 720,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 697,
                                          "src": "10618:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 721,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 703,
                                          "src": "10627:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 722,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 699,
                                          "src": "10645:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 719,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 120,
                                        "src": "10591:26:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10591:60:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 724,
                                    "nodeType": "RevertStatement",
                                    "src": "10584:67:4"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 736,
                              "nodeType": "UncheckedBlock",
                              "src": "10679:100:4",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 728,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 695,
                                        "src": "10716:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 729,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 697,
                                        "src": "10723:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 730,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 703,
                                          "src": "10732:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 731,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 699,
                                          "src": "10751:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10732:24:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 733,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10758:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 727,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        632,
                                        692
                                      ],
                                      "referencedDeclaration": 692,
                                      "src": "10707:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:57:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 735,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10707:57:4"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 693,
                    "nodeType": "StructuredDocumentation",
                    "src": "10043:271:4",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 740,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10328:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10352:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "10344:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10344:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10367:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "10359:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10384:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "10376:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10376:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10343:47:4"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10408:0:4"
                  },
                  "scope": 741,
                  "src": "10319:476:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 742,
              "src": "1106:9691:4",
              "usedErrors": [
                101,
                106,
                111,
                120,
                125,
                130
              ],
              "usedEvents": [
                753,
                762
              ]
            }
          ],
          "src": "105:10693:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              819
            ]
          },
          "id": 820,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 743,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 744,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:5",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 819,
              "linearizedBaseContracts": [
                819
              ],
              "name": "IERC20",
              "nameLocation": "215:6:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 745,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:5",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 753,
                  "name": "Transfer",
                  "nameLocation": "397:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 747,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "406:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 749,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "428:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "448:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:5"
                  },
                  "src": "391:72:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 754,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:5",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 762,
                  "name": "Approval",
                  "nameLocation": "628:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 756,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "637:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 758,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "660:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 760,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "685:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:5"
                  },
                  "src": "622:78:5"
                },
                {
                  "documentation": {
                    "id": 763,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:5",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 768,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 764,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:5"
                  },
                  "returnParameters": {
                    "id": 767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 766,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 768,
                        "src": "822:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 765,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:5"
                  },
                  "scope": 819,
                  "src": "776:55:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 769,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:5",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 776,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 771,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 776,
                        "src": "932:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:5"
                  },
                  "returnParameters": {
                    "id": 775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 774,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 776,
                        "src": "972:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:5"
                  },
                  "scope": 819,
                  "src": "913:68:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 777,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:5",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 786,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 782,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 786,
                        "src": "1223:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 781,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 786,
                        "src": "1235:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 780,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:5"
                  },
                  "returnParameters": {
                    "id": 785,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 784,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 786,
                        "src": "1268:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:5"
                  },
                  "scope": 819,
                  "src": "1205:69:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 787,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:5",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 796,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 792,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 789,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "1568:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 791,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "1583:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:5"
                  },
                  "returnParameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "1623:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:5"
                  },
                  "scope": 819,
                  "src": "1549:83:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 797,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:5",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 806,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 802,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "2327:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 801,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "2344:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:5"
                  },
                  "returnParameters": {
                    "id": 805,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 806,
                        "src": "2377:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:5"
                  },
                  "scope": 819,
                  "src": "2310:73:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 807,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:5",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 818,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "2713:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 811,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "2727:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "2739:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:5"
                  },
                  "returnParameters": {
                    "id": 817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 816,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "2772:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:5"
                  },
                  "scope": 819,
                  "src": "2691:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 820,
              "src": "205:2575:5",
              "usedErrors": [],
              "usedEvents": [
                753,
                762
              ]
            }
          ],
          "src": "106:2675:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              819
            ],
            "IERC20Metadata": [
              845
            ]
          },
          "id": 846,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 821,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 823,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 846,
              "sourceUnit": 820,
              "src": "151:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 822,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 819,
                    "src": "159:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 825,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 819,
                    "src": "306:6:6"
                  },
                  "id": 826,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 824,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:6",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 845,
              "linearizedBaseContracts": [
                845,
                819
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 832,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:6"
                  },
                  "returnParameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "417:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:6"
                  },
                  "scope": 845,
                  "src": "378:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 833,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 838,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:6"
                  },
                  "returnParameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "540:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:6"
                  },
                  "scope": 845,
                  "src": "499:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 839,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:6"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "674:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:6"
                  },
                  "scope": 845,
                  "src": "631:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 846,
              "src": "278:405:6",
              "usedErrors": [],
              "usedEvents": [
                753,
                762
              ]
            }
          ],
          "src": "125:559:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "IERC1363": [
              81
            ],
            "IERC20": [
              819
            ],
            "SafeERC20": [
              1309
            ]
          },
          "id": 1310,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 847,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 849,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 820,
              "src": "141:37:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 848,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 819,
                    "src": "149:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
              "file": "../../../interfaces/IERC1363.sol",
              "id": 851,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 82,
              "src": "179:58:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 850,
                    "name": "IERC1363",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81,
                    "src": "187:8:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 852,
                "nodeType": "StructuredDocumentation",
                "src": "239:458:7",
                "text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 1309,
              "linearizedBaseContracts": [
                1309
              ],
              "name": "SafeERC20",
              "nameLocation": "706:9:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 853,
                    "nodeType": "StructuredDocumentation",
                    "src": "722:65:7",
                    "text": " @dev An operation with an ERC-20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 857,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "798:24:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "831:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 857,
                        "src": "823:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "822:15:7"
                  },
                  "src": "792:46:7"
                },
                {
                  "documentation": {
                    "id": 858,
                    "nodeType": "StructuredDocumentation",
                    "src": "844:71:7",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 866,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "926:32:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 865,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "967:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "959:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "984:16:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "976:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1010:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 866,
                        "src": "1002:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:70:7"
                  },
                  "src": "920:109:7"
                },
                {
                  "body": {
                    "id": 889,
                    "nodeType": "Block",
                    "src": "1291:88:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 878,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 870,
                              "src": "1321:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 881,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 870,
                                    "src": "1343:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 882,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1349:8:7",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 786,
                                  "src": "1343:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 883,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 872,
                                      "src": "1360:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 884,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 874,
                                      "src": "1364:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 885,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1359:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 879,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1328:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1332:10:7",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1328:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:43:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 877,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1267,
                            "src": "1301:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:71:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "1301:71:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 867,
                    "nodeType": "StructuredDocumentation",
                    "src": "1035:179:7",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 890,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1228:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1248:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1241:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 869,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 868,
                            "name": "IERC20",
                            "nameLocations": [
                              "1241:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "1241:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "1241:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1263:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1255:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1275:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1267:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1240:41:7"
                  },
                  "returnParameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:7"
                  },
                  "scope": 1309,
                  "src": "1219:160:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 916,
                    "nodeType": "Block",
                    "src": "1708:98:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 904,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "1738:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 907,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 894,
                                    "src": "1760:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 908,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1766:12:7",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 818,
                                  "src": "1760:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 909,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 896,
                                      "src": "1781:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 910,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 898,
                                      "src": "1787:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 911,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 900,
                                      "src": "1791:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 912,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1780:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 905,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1745:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1749:10:7",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1745:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1745:53:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 903,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1267,
                            "src": "1718:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1718:81:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 915,
                        "nodeType": "ExpressionStatement",
                        "src": "1718:81:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:228:7",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 917,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1627:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1651:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 917,
                        "src": "1644:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 893,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 892,
                            "name": "IERC20",
                            "nameLocations": [
                              "1644:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "1644:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "1644:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 896,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 917,
                        "src": "1658:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1680:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 917,
                        "src": "1672:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1692:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 917,
                        "src": "1684:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:55:7"
                  },
                  "returnParameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:0:7"
                  },
                  "scope": 1309,
                  "src": "1618:188:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 942,
                    "nodeType": "Block",
                    "src": "2033:99:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 931,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 921,
                              "src": "2074:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 934,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 921,
                                    "src": "2096:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2102:8:7",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 786,
                                  "src": "2096:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 936,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 923,
                                      "src": "2113:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 937,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 925,
                                      "src": "2117:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 938,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2112:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 932,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2081:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2085:10:7",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2081:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2081:43:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 930,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "2050:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2050:75:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 929,
                        "id": 941,
                        "nodeType": "Return",
                        "src": "2043:82:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 918,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:126:7",
                    "text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 943,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransfer",
                  "nameLocation": "1952:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 926,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1975:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "1968:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 920,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 919,
                            "name": "IERC20",
                            "nameLocations": [
                              "1968:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "1968:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "1968:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 923,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1990:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "1982:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 922,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 925,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2002:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "1994:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 924,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1967:41:7"
                  },
                  "returnParameters": {
                    "id": 929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "2027:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:6:7"
                  },
                  "scope": 1309,
                  "src": "1943:189:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 971,
                    "nodeType": "Block",
                    "src": "2381:109:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 959,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "2422:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 962,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 947,
                                    "src": "2444:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 963,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2450:12:7",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 818,
                                  "src": "2444:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 964,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 949,
                                      "src": "2465:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 965,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 951,
                                      "src": "2471:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 966,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 953,
                                      "src": "2475:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 967,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2464:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 960,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2429:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2433:10:7",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "2429:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2429:53:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 958,
                            "name": "_callOptionalReturnBool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "2398:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:85:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 957,
                        "id": 970,
                        "nodeType": "Return",
                        "src": "2391:92:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 944,
                    "nodeType": "StructuredDocumentation",
                    "src": "2138:130:7",
                    "text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
                  },
                  "id": 972,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySafeTransferFrom",
                  "nameLocation": "2282:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2309:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 972,
                        "src": "2302:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 946,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 945,
                            "name": "IERC20",
                            "nameLocations": [
                              "2302:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "2302:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "2302:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2324:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 972,
                        "src": "2316:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2316:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 951,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2338:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 972,
                        "src": "2330:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 950,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 953,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 972,
                        "src": "2342:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 952,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:55:7"
                  },
                  "returnParameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 972,
                        "src": "2375:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:7"
                  },
                  "scope": 1309,
                  "src": "2273:217:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "3232:139:7",
                    "statements": [
                      {
                        "assignments": [
                          984
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 984,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "3250:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1002,
                            "src": "3242:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 983,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3242:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 993,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 989,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3289:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1309",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1309",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3281:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 987,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3281:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3281:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 991,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "3296:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 985,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 976,
                              "src": "3265:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:9:7",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 796,
                            "src": "3265:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:39:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3242:62:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 995,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 976,
                              "src": "3327:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 996,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "3334:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 997,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 984,
                                "src": "3343:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 998,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 980,
                                "src": "3358:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3343:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 994,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1093,
                            "src": "3314:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3314:50:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1001,
                        "nodeType": "ExpressionStatement",
                        "src": "3314:50:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 973,
                    "nodeType": "StructuredDocumentation",
                    "src": "2496:645:7",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1003,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "3155:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 976,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3184:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "3177:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 975,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 974,
                            "name": "IERC20",
                            "nameLocations": [
                              "3177:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "3177:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "3177:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 978,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3199:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "3191:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 977,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3216:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "3208:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3208:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3176:46:7"
                  },
                  "returnParameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3232:0:7"
                  },
                  "scope": 1309,
                  "src": "3146:225:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "4137:370:7",
                    "statements": [
                      {
                        "id": 1044,
                        "nodeType": "UncheckedBlock",
                        "src": "4147:354:7",
                        "statements": [
                          {
                            "assignments": [
                              1015
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1015,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "4179:16:7",
                                "nodeType": "VariableDeclaration",
                                "scope": 1044,
                                "src": "4171:24:7",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1014,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4171:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1024,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1020,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4222:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1309",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1309",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1019,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4214:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1018,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4214:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4214:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1022,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "4229:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1016,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "4198:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$819",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4204:9:7",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 796,
                                "src": "4198:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4198:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4171:66:7"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1025,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1015,
                                "src": "4255:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1026,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1011,
                                "src": "4274:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4255:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1035,
                            "nodeType": "IfStatement",
                            "src": "4251:160:7",
                            "trueBody": {
                              "id": 1034,
                              "nodeType": "Block",
                              "src": "4293:118:7",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 1029,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1009,
                                        "src": "4351:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1030,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1015,
                                        "src": "4360:16:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 1031,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1011,
                                        "src": "4378:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1028,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 866,
                                      "src": "4318:32:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (address,uint256,uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 1032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4318:78:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 1033,
                                  "nodeType": "RevertStatement",
                                  "src": "4311:85:7"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1037,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "4437:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$819",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 1038,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "4444:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1041,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1039,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1015,
                                    "src": "4453:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1040,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1011,
                                    "src": "4472:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4453:36:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$819",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1036,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "4424:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 1042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4424:66:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1043,
                            "nodeType": "ExpressionStatement",
                            "src": "4424:66:7"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1004,
                    "nodeType": "StructuredDocumentation",
                    "src": "3377:657:7",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
                  },
                  "id": 1046,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "4048:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4077:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "4070:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1006,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1005,
                            "name": "IERC20",
                            "nameLocations": [
                              "4070:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "4070:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "4070:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1009,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4092:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "4084:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1008,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1011,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "4109:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "4101:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4069:58:7"
                  },
                  "returnParameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4137:0:7"
                  },
                  "scope": 1309,
                  "src": "4039:468:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1092,
                    "nodeType": "Block",
                    "src": "5161:303:7",
                    "statements": [
                      {
                        "assignments": [
                          1058
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1058,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "5184:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1092,
                            "src": "5171:25:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1057,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5171:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1067,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1061,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1050,
                                "src": "5214:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$819",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5220:7:7",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 806,
                              "src": "5214:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1063,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1052,
                                  "src": "5230:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1064,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1054,
                                  "src": "5239:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1065,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5229:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 1059,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5199:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5203:10:7",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "5199:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5199:47:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5171:75:7"
                      },
                      {
                        "condition": {
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5261:45:7",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1069,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1050,
                                "src": "5286:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$819",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 1070,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1058,
                                "src": "5293:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$819",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1068,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1308,
                              "src": "5262:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 1071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5262:44:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1091,
                        "nodeType": "IfStatement",
                        "src": "5257:201:7",
                        "trueBody": {
                          "id": 1090,
                          "nodeType": "Block",
                          "src": "5308:150:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1074,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "5342:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1077,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1050,
                                          "src": "5364:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$819",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1078,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5370:7:7",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 806,
                                        "src": "5364:13:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 1079,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1052,
                                            "src": "5380:7:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 1080,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5389:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 1081,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5379:12:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1075,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5349:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1076,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5353:10:7",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "5349:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1082,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5349:43:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1073,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1267,
                                  "src": "5322:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5322:71:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1084,
                              "nodeType": "ExpressionStatement",
                              "src": "5322:71:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1086,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "5427:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 1087,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1058,
                                    "src": "5434:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1085,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1267,
                                  "src": "5407:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5407:40:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1089,
                              "nodeType": "ExpressionStatement",
                              "src": "5407:40:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1047,
                    "nodeType": "StructuredDocumentation",
                    "src": "4513:566:7",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
                  },
                  "id": 1093,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "5093:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1055,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1050,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5113:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1093,
                        "src": "5106:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1049,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1048,
                            "name": "IERC20",
                            "nameLocations": [
                              "5106:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "5106:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "5106:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5128:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1093,
                        "src": "5120:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5120:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1054,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5145:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1093,
                        "src": "5137:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5137:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5105:46:7"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5161:0:7"
                  },
                  "scope": 1309,
                  "src": "5084:380:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1135,
                    "nodeType": "Block",
                    "src": "5911:219:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1106,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1099,
                                "src": "5925:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5928:4:7",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5925:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5933:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5925:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5943:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5925:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6011:39:7",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1120,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1099,
                                  "src": "6034:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1121,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1101,
                                  "src": "6038:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1122,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1103,
                                  "src": "6045:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1118,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1097,
                                  "src": "6012:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$81",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6018:15:7",
                                "memberName": "transferAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32,
                                "src": "6012:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6012:38:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1133,
                          "nodeType": "IfStatement",
                          "src": "6007:117:7",
                          "trueBody": {
                            "id": 1132,
                            "nodeType": "Block",
                            "src": "6052:72:7",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1128,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1097,
                                          "src": "6106:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$81",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$81",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1127,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6098:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1126,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6098:7:7",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1129,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6098:14:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1125,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 857,
                                    "src": "6073:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6073:40:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1131,
                                "nodeType": "RevertStatement",
                                "src": "6066:47:7"
                              }
                            ]
                          }
                        },
                        "id": 1134,
                        "nodeType": "IfStatement",
                        "src": "5921:203:7",
                        "trueBody": {
                          "id": 1117,
                          "nodeType": "Block",
                          "src": "5946:55:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1112,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1097,
                                    "src": "5973:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$81",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1113,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1099,
                                    "src": "5980:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1114,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1101,
                                    "src": "5984:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$81",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1111,
                                  "name": "safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 890,
                                  "src": "5960:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5960:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1116,
                              "nodeType": "ExpressionStatement",
                              "src": "5960:30:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1094,
                    "nodeType": "StructuredDocumentation",
                    "src": "5470:333:7",
                    "text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCallRelaxed",
                  "nameLocation": "5817:22:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1097,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5849:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "5840:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$81",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1096,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1095,
                            "name": "IERC1363",
                            "nameLocations": [
                              "5840:8:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 81,
                            "src": "5840:8:7"
                          },
                          "referencedDeclaration": 81,
                          "src": "5840:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$81",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5864:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "5856:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5856:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5876:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "5868:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5868:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5896:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1136,
                        "src": "5883:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5883:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5839:62:7"
                  },
                  "returnParameters": {
                    "id": 1105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5911:0:7"
                  },
                  "scope": 1309,
                  "src": "5808:322:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1182,
                    "nodeType": "Block",
                    "src": "6649:239:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1151,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1144,
                                "src": "6663:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6666:4:7",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "6663:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6671:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6663:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6681:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6663:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6759:49:7",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1166,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1142,
                                  "src": "6786:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1167,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1144,
                                  "src": "6792:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1168,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1146,
                                  "src": "6796:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1169,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1148,
                                  "src": "6803:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1164,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1140,
                                  "src": "6760:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$81",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6766:19:7",
                                "memberName": "transferFromAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "6760:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6760:48:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1180,
                          "nodeType": "IfStatement",
                          "src": "6755:127:7",
                          "trueBody": {
                            "id": 1179,
                            "nodeType": "Block",
                            "src": "6810:72:7",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1175,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "6864:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$81",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$81",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1174,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6856:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1173,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6856:7:7",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1176,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6856:14:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1172,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 857,
                                    "src": "6831:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6831:40:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1178,
                                "nodeType": "RevertStatement",
                                "src": "6824:47:7"
                              }
                            ]
                          }
                        },
                        "id": 1181,
                        "nodeType": "IfStatement",
                        "src": "6659:223:7",
                        "trueBody": {
                          "id": 1163,
                          "nodeType": "Block",
                          "src": "6684:65:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1157,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1140,
                                    "src": "6715:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$81",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1158,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1142,
                                    "src": "6722:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1159,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1144,
                                    "src": "6728:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1160,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1146,
                                    "src": "6732:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$81",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1156,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 917,
                                  "src": "6698:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6698:40:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1162,
                              "nodeType": "ExpressionStatement",
                              "src": "6698:40:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1137,
                    "nodeType": "StructuredDocumentation",
                    "src": "6136:341:7",
                    "text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1183,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFromAndCallRelaxed",
                  "nameLocation": "6491:26:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1140,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6536:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "6527:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$81",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1139,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1138,
                            "name": "IERC1363",
                            "nameLocations": [
                              "6527:8:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 81,
                            "src": "6527:8:7"
                          },
                          "referencedDeclaration": 81,
                          "src": "6527:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$81",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6559:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "6551:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6551:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6581:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "6573:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6573:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1146,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6601:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "6593:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6629:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "6616:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6616:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6517:122:7"
                  },
                  "returnParameters": {
                    "id": 1150,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6649:0:7"
                  },
                  "scope": 1309,
                  "src": "6482:406:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "7655:218:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1196,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1189,
                                "src": "7669:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7672:4:7",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "7669:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7677:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7669:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7687:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7669:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "id": 1214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "7755:38:7",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1210,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "7777:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1211,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1191,
                                  "src": "7781:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1212,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "7788:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1208,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1187,
                                  "src": "7756:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1363_$81",
                                    "typeString": "contract IERC1363"
                                  }
                                },
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7762:14:7",
                                "memberName": "approveAndCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80,
                                "src": "7756:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                }
                              },
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7756:37:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1223,
                          "nodeType": "IfStatement",
                          "src": "7751:116:7",
                          "trueBody": {
                            "id": 1222,
                            "nodeType": "Block",
                            "src": "7795:72:7",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1218,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1187,
                                          "src": "7849:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1363_$81",
                                            "typeString": "contract IERC1363"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC1363_$81",
                                            "typeString": "contract IERC1363"
                                          }
                                        ],
                                        "id": 1217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7841:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1216,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7841:7:7",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1219,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7841:14:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1215,
                                    "name": "SafeERC20FailedOperation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 857,
                                    "src": "7816:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                      "typeString": "function (address) pure returns (error)"
                                    }
                                  },
                                  "id": 1220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7816:40:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 1221,
                                "nodeType": "RevertStatement",
                                "src": "7809:47:7"
                              }
                            ]
                          }
                        },
                        "id": 1224,
                        "nodeType": "IfStatement",
                        "src": "7665:202:7",
                        "trueBody": {
                          "id": 1207,
                          "nodeType": "Block",
                          "src": "7690:55:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1202,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1187,
                                    "src": "7717:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1363_$81",
                                      "typeString": "contract IERC1363"
                                    }
                                  },
                                  {
                                    "id": 1203,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "7724:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1204,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1191,
                                    "src": "7728:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC1363_$81",
                                      "typeString": "contract IERC1363"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1201,
                                  "name": "forceApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1093,
                                  "src": "7704:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7704:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1206,
                              "nodeType": "ExpressionStatement",
                              "src": "7704:30:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1184,
                    "nodeType": "StructuredDocumentation",
                    "src": "6894:654:7",
                    "text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
                  },
                  "id": 1226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCallRelaxed",
                  "nameLocation": "7562:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1187,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7593:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "7584:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1363_$81",
                          "typeString": "contract IERC1363"
                        },
                        "typeName": {
                          "id": 1186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1185,
                            "name": "IERC1363",
                            "nameLocations": [
                              "7584:8:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 81,
                            "src": "7584:8:7"
                          },
                          "referencedDeclaration": 81,
                          "src": "7584:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1363_$81",
                            "typeString": "contract IERC1363"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7608:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "7600:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7600:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7620:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "7612:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7612:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7640:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "7627:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7583:62:7"
                  },
                  "returnParameters": {
                    "id": 1195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7655:0:7"
                  },
                  "scope": 1309,
                  "src": "7553:320:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1266,
                    "nodeType": "Block",
                    "src": "8440:650:7",
                    "statements": [
                      {
                        "assignments": [
                          1236
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1236,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "8458:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1266,
                            "src": "8450:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1235,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8450:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1237,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8450:18:7"
                      },
                      {
                        "assignments": [
                          1239
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1239,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "8486:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1266,
                            "src": "8478:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1238,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8478:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1240,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8478:19:7"
                      },
                      {
                        "AST": {
                          "nativeSrc": "8532:396:7",
                          "nodeType": "YulBlock",
                          "src": "8532:396:7",
                          "statements": [
                            {
                              "nativeSrc": "8546:75:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "8546:75:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "8566:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "8566:3:7"
                                    },
                                    "nativeSrc": "8566:5:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8566:5:7"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "8573:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "8573:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8580:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "8580:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8587:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "8587:4:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8593:4:7",
                                        "nodeType": "YulLiteral",
                                        "src": "8593:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8583:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "8583:3:7"
                                    },
                                    "nativeSrc": "8583:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8583:15:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "8606:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "8606:4:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "8600:5:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "8600:5:7"
                                    },
                                    "nativeSrc": "8600:11:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8600:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8613:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "8613:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8616:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "8616:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "8561:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "8561:4:7"
                                },
                                "nativeSrc": "8561:60:7",
                                "nodeType": "YulFunctionCall",
                                "src": "8561:60:7"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nativeSrc": "8550:7:7",
                                  "nodeType": "YulTypedName",
                                  "src": "8550:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "8682:157:7",
                                "nodeType": "YulBlock",
                                "src": "8682:157:7",
                                "statements": [
                                  {
                                    "nativeSrc": "8700:22:7",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8700:22:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8717:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "8717:4:7",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "8711:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "8711:5:7"
                                      },
                                      "nativeSrc": "8711:11:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8711:11:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "ptr",
                                        "nativeSrc": "8704:3:7",
                                        "nodeType": "YulTypedName",
                                        "src": "8704:3:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8754:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "8754:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8759:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "8759:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8762:14:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "8762:14:7"
                                          },
                                          "nativeSrc": "8762:16:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8762:16:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nativeSrc": "8739:14:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "8739:14:7"
                                      },
                                      "nativeSrc": "8739:40:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8739:40:7"
                                    },
                                    "nativeSrc": "8739:40:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8739:40:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "ptr",
                                          "nativeSrc": "8803:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "8803:3:7"
                                        },
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "returndatasize",
                                            "nativeSrc": "8808:14:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "8808:14:7"
                                          },
                                          "nativeSrc": "8808:16:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8808:16:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "8796:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "8796:6:7"
                                      },
                                      "nativeSrc": "8796:29:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8796:29:7"
                                    },
                                    "nativeSrc": "8796:29:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8796:29:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nativeSrc": "8673:7:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "8673:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "8666:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "8666:6:7"
                                },
                                "nativeSrc": "8666:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "8666:15:7"
                              },
                              "nativeSrc": "8663:176:7",
                              "nodeType": "YulIf",
                              "src": "8663:176:7"
                            },
                            {
                              "nativeSrc": "8852:30:7",
                              "nodeType": "YulAssignment",
                              "src": "8852:30:7",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "8866:14:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "8866:14:7"
                                },
                                "nativeSrc": "8866:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "8866:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "8852:10:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "8852:10:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8895:23:7",
                              "nodeType": "YulAssignment",
                              "src": "8895:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8916:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "8916:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "8910:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "8910:5:7"
                                },
                                "nativeSrc": "8910:8:7",
                                "nodeType": "YulFunctionCall",
                                "src": "8910:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "8895:11:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "8895:11:7"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1232,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8587:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1232,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8606:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1236,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8852:10:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1239,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8895:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1230,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8573:5:7",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1241,
                        "nodeType": "InlineAssembly",
                        "src": "8507:421:7"
                      },
                      {
                        "condition": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1242,
                              "name": "returnSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1236,
                              "src": "8942:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8956:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8942:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1253,
                              "name": "returnValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "8994:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9009:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8994:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8942:68:7",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1247,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1230,
                                      "src": "8968:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$819",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$819",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8960:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1245,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8960:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8960:14:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8975:4:7",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "8960:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8980:6:7",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "8960:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8990:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8960:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1265,
                        "nodeType": "IfStatement",
                        "src": "8938:146:7",
                        "trueBody": {
                          "id": 1264,
                          "nodeType": "Block",
                          "src": "9012:72:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1260,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1230,
                                        "src": "9066:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$819",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$819",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 1259,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9058:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1258,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9058:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9058:14:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1257,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 857,
                                  "src": "9033:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9033:40:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1263,
                              "nodeType": "RevertStatement",
                              "src": "9026:47:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1227,
                    "nodeType": "StructuredDocumentation",
                    "src": "7879:486:7",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
                  },
                  "id": 1267,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "8379:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8406:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1267,
                        "src": "8399:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1229,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1228,
                            "name": "IERC20",
                            "nameLocations": [
                              "8399:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "8399:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "8399:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1232,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8426:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1267,
                        "src": "8413:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1231,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8413:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8398:33:7"
                  },
                  "returnParameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8440:0:7"
                  },
                  "scope": 1309,
                  "src": "8370:720:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "9681:391:7",
                    "statements": [
                      {
                        "assignments": [
                          1279
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1279,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9696:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1307,
                            "src": "9691:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1278,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9691:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1280,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9691:12:7"
                      },
                      {
                        "assignments": [
                          1282
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1282,
                            "mutability": "mutable",
                            "name": "returnSize",
                            "nameLocation": "9721:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1307,
                            "src": "9713:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1281,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9713:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1283,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9713:18:7"
                      },
                      {
                        "assignments": [
                          1285
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1285,
                            "mutability": "mutable",
                            "name": "returnValue",
                            "nameLocation": "9749:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1307,
                            "src": "9741:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1284,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9741:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1286,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9741:19:7"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9795:174:7",
                          "nodeType": "YulBlock",
                          "src": "9795:174:7",
                          "statements": [
                            {
                              "nativeSrc": "9809:71:7",
                              "nodeType": "YulAssignment",
                              "src": "9809:71:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "9825:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "9825:3:7"
                                    },
                                    "nativeSrc": "9825:5:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9825:5:7"
                                  },
                                  {
                                    "name": "token",
                                    "nativeSrc": "9832:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "9832:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9839:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "9839:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9846:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "9846:4:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9852:4:7",
                                        "nodeType": "YulLiteral",
                                        "src": "9852:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9842:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "9842:3:7"
                                    },
                                    "nativeSrc": "9842:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9842:15:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9865:4:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "9865:4:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "9859:5:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "9859:5:7"
                                    },
                                    "nativeSrc": "9859:11:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9859:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9872:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "9872:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9875:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "9875:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nativeSrc": "9820:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:4:7"
                                },
                                "nativeSrc": "9820:60:7",
                                "nodeType": "YulFunctionCall",
                                "src": "9820:60:7"
                              },
                              "variableNames": [
                                {
                                  "name": "success",
                                  "nativeSrc": "9809:7:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "9809:7:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9893:30:7",
                              "nodeType": "YulAssignment",
                              "src": "9893:30:7",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nativeSrc": "9907:14:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "9907:14:7"
                                },
                                "nativeSrc": "9907:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "9907:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "returnSize",
                                  "nativeSrc": "9893:10:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "9893:10:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9936:23:7",
                              "nodeType": "YulAssignment",
                              "src": "9936:23:7",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9957:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "9957:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "9951:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "9951:5:7"
                                },
                                "nativeSrc": "9951:8:7",
                                "nodeType": "YulFunctionCall",
                                "src": "9951:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "returnValue",
                                  "nativeSrc": "9936:11:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "9936:11:7"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1273,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9846:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1273,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9865:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1282,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9893:10:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1285,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9936:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1279,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9809:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1271,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9832:5:7",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 1287,
                        "nodeType": "InlineAssembly",
                        "src": "9770:199:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1288,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1279,
                            "src": "9985:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1289,
                                    "name": "returnSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1282,
                                    "src": "9997:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10011:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9997:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1300,
                                    "name": "returnValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1285,
                                    "src": "10048:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1301,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10063:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "10048:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9997:67:7",
                                "trueExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1294,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1271,
                                            "src": "10023:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$819",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$819",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 1293,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "10015:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1292,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "10015:7:7",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1295,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10015:14:7",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1296,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10030:4:7",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "10015:19:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10035:6:7",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "10015:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10044:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10015:30:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1304,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9996:69:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9985:80:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1277,
                        "id": 1306,
                        "nodeType": "Return",
                        "src": "9978:87:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1268,
                    "nodeType": "StructuredDocumentation",
                    "src": "9096:491:7",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
                  },
                  "id": 1308,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "9601:23:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1271,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "9632:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "9625:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1270,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1269,
                            "name": "IERC20",
                            "nameLocations": [
                              "9625:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 819,
                            "src": "9625:6:7"
                          },
                          "referencedDeclaration": 819,
                          "src": "9625:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$819",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1273,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9652:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "9639:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1272,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9639:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9624:33:7"
                  },
                  "returnParameters": {
                    "id": 1277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1276,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "9675:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1275,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9675:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9674:6:7"
                  },
                  "scope": 1309,
                  "src": "9592:480:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1310,
              "src": "698:9376:7",
              "usedErrors": [
                857,
                866
              ],
              "usedEvents": []
            }
          ],
          "src": "115:9960:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1339
            ]
          },
          "id": 1340,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1311,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:8"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1312,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:8",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1339,
              "linearizedBaseContracts": [
                1339
              ],
              "name": "Context",
              "nameLocation": "642:7:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1320,
                    "nodeType": "Block",
                    "src": "718:34:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1317,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1316,
                        "id": 1319,
                        "nodeType": "Return",
                        "src": "728:17:8"
                      }
                    ]
                  },
                  "id": 1321,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:8"
                  },
                  "returnParameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "709:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:8"
                  },
                  "scope": 1339,
                  "src": "656:96:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1329,
                    "nodeType": "Block",
                    "src": "825:32:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1326,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:8",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1325,
                        "id": 1328,
                        "nodeType": "Return",
                        "src": "835:15:8"
                      }
                    ]
                  },
                  "id": 1330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:8"
                  },
                  "returnParameters": {
                    "id": 1325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1324,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "809:14:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1323,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:8"
                  },
                  "scope": 1339,
                  "src": "758:99:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1337,
                    "nodeType": "Block",
                    "src": "935:25:8",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1334,
                        "id": 1336,
                        "nodeType": "Return",
                        "src": "945:8:8"
                      }
                    ]
                  },
                  "id": 1338,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1331,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:8"
                  },
                  "returnParameters": {
                    "id": 1334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1333,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1338,
                        "src": "926:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:8"
                  },
                  "scope": 1339,
                  "src": "863:97:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1340,
              "src": "624:338:8",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1408
            ]
          },
          "id": 1409,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1341,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:9"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1342,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:9",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1408,
              "linearizedBaseContracts": [
                1408
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1345,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1408,
                  "src": "1818:40:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1348,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1408,
                  "src": "1864:36:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1350,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1408,
                  "src": "1907:23:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1351,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:9",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 1353,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:9"
                  },
                  "src": "1994:37:9"
                },
                {
                  "body": {
                    "id": 1360,
                    "nodeType": "Block",
                    "src": "2051:38:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1356,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "2061:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1357,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "2071:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1359,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:9"
                      }
                    ]
                  },
                  "id": 1361,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:9"
                  },
                  "returnParameters": {
                    "id": 1355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:9"
                  },
                  "scope": 1408,
                  "src": "2037:52:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1371,
                    "nodeType": "Block",
                    "src": "2490:79:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1364,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "2500:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1366,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:9"
                      },
                      {
                        "id": 1367,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:9"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1368,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1396,
                            "src": "2542:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1370,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:9",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1372,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1363,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:9"
                  },
                  "src": "2466:103:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1387,
                    "nodeType": "Block",
                    "src": "2614:268:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1375,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "2702:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1376,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1348,
                            "src": "2713:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1382,
                        "nodeType": "IfStatement",
                        "src": "2698:86:9",
                        "trueBody": {
                          "id": 1381,
                          "nodeType": "Block",
                          "src": "2722:62:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1378,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1353,
                                  "src": "2743:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1380,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1383,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "2858:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1384,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1348,
                            "src": "2868:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1386,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:9"
                      }
                    ]
                  },
                  "id": 1388,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:9"
                  },
                  "returnParameters": {
                    "id": 1374,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:9"
                  },
                  "scope": 1408,
                  "src": "2575:307:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1395,
                    "nodeType": "Block",
                    "src": "2926:170:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1391,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "3068:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1392,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "3078:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1394,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:9"
                      }
                    ]
                  },
                  "id": 1396,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:9"
                  },
                  "returnParameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:9"
                  },
                  "scope": 1408,
                  "src": "2888:208:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1406,
                    "nodeType": "Block",
                    "src": "3339:42:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1402,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "3356:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1403,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1348,
                            "src": "3367:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1401,
                        "id": 1405,
                        "nodeType": "Return",
                        "src": "3349:25:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1397,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:9",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1407,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:9"
                  },
                  "returnParameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1400,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "3333:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1399,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:9"
                  },
                  "scope": 1408,
                  "src": "3275:106:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1409,
              "src": "1030:2353:9",
              "usedErrors": [
                1353
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1420
            ]
          },
          "id": 1421,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1410,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:25:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1411,
                "nodeType": "StructuredDocumentation",
                "src": "142:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1420,
              "linearizedBaseContracts": [
                1420
              ],
              "name": "IERC165",
              "nameLocation": "433:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1412,
                    "nodeType": "StructuredDocumentation",
                    "src": "447:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1419,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "801:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1414,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "826:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "819:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1413,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "819:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "818:20:10"
                  },
                  "returnParameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1419,
                        "src": "862:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "862:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "861:6:10"
                  },
                  "scope": 1420,
                  "src": "792:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1421,
              "src": "423:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:756:10"
        },
        "id": 10
      },
      "contracts/DexFactory.sol": {
        "ast": {
          "absolutePath": "contracts/DexFactory.sol",
          "exportedSymbols": {
            "Context": [
              1339
            ],
            "DexFactory": [
              1747
            ],
            "DexPair": [
              2831
            ],
            "ERC20": [
              741
            ],
            "IERC1363": [
              81
            ],
            "IERC20": [
              819
            ],
            "IERC20Errors": [
              131
            ],
            "IERC20Metadata": [
              845
            ],
            "IFactory": [
              2838
            ],
            "ReentrancyGuard": [
              1408
            ],
            "SafeERC20": [
              1309
            ]
          },
          "id": 1748,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1422,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "contracts/DexPair.sol",
              "file": "./DexPair.sol",
              "id": 1423,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1748,
              "sourceUnit": 2839,
              "src": "58:23:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "DexFactory",
              "contractDependencies": [
                2831
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1424,
                "nodeType": "StructuredDocumentation",
                "src": "83:194:11",
                "text": " @title DexFactory\n @dev トークンペアの作成と管理を行うファクトリーコントラクト\n @notice Uniswap V2のファクトリーパターンに基づいた実装"
              },
              "fullyImplemented": true,
              "id": 1747,
              "linearizedBaseContracts": [
                1747
              ],
              "name": "DexFactory",
              "nameLocation": "287:10:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 1425,
                    "nodeType": "StructuredDocumentation",
                    "src": "304:54:11",
                    "text": "@dev ペア作成手数料の受取人アドレス"
                  },
                  "functionSelector": "017e7e58",
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "feeTo",
                  "nameLocation": "378:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "363:20:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1428,
                    "nodeType": "StructuredDocumentation",
                    "src": "394:56:11",
                    "text": "@dev feeToを設定する権限を持つアドレス"
                  },
                  "functionSelector": "094b7415",
                  "id": 1430,
                  "mutability": "mutable",
                  "name": "feeToSetter",
                  "nameLocation": "470:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "455:26:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1431,
                    "nodeType": "StructuredDocumentation",
                    "src": "492:79:11",
                    "text": "@dev トークンペアのマッピング (token0 => token1 => pairAddress)"
                  },
                  "functionSelector": "e6a43905",
                  "id": 1437,
                  "mutability": "mutable",
                  "name": "getPair",
                  "nameLocation": "631:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "576:62:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                    "typeString": "mapping(address => mapping(address => address))"
                  },
                  "typeName": {
                    "id": 1436,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1432,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "584:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "576:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                      "typeString": "mapping(address => mapping(address => address))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1435,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 1433,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "603:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "595:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1434,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "614:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1438,
                    "nodeType": "StructuredDocumentation",
                    "src": "649:51:11",
                    "text": "@dev 作成されたペアのアドレス一覧"
                  },
                  "functionSelector": "1e3dd18b",
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "allPairs",
                  "nameLocation": "722:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "705:25:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1439,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "705:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1440,
                    "nodeType": "ArrayTypeName",
                    "src": "705:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1442,
                    "nodeType": "StructuredDocumentation",
                    "src": "741:366:11",
                    "text": " @dev ペア作成時に発生するイベント\n @param token0 ペアの最初のトークンアドレス（アドレスの小さい方）\n @param token1 ペアの二番目のトークンアドレス（アドレスの大きい方）\n @param pair 作成されたペアのアドレス\n @param pairLength 現在のペア総数"
                  },
                  "eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
                  "id": 1452,
                  "name": "PairCreated",
                  "nameLocation": "1118:11:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1444,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "1155:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "1139:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1446,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "1187:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "1171:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1171:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1448,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "1211:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "1203:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1203:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1450,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pairLength",
                        "nameLocation": "1233:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "1225:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1225:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:120:11"
                  },
                  "src": "1112:138:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1453,
                    "nodeType": "StructuredDocumentation",
                    "src": "1260:115:11",
                    "text": " @dev feeTo設定時に発生するイベント\n @param newFeeTo 新しいfeeToアドレス"
                  },
                  "eventSelector": "9887df018dfa75103faf0f1388028e55a1124783c285d8d2cbcf62a067a6b844",
                  "id": 1457,
                  "name": "FeeToUpdated",
                  "nameLocation": "1386:12:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1455,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFeeTo",
                        "nameLocation": "1415:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1457,
                        "src": "1399:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1399:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1398:26:11"
                  },
                  "src": "1380:45:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1458,
                    "nodeType": "StructuredDocumentation",
                    "src": "1435:133:11",
                    "text": " @dev feeToSetter設定時に発生するイベント\n @param newFeeToSetter 新しいfeeToSetterアドレス"
                  },
                  "eventSelector": "021a5d032b24a495206270942f8c755327f3b27539f23099539ff95e2500b28d",
                  "id": 1462,
                  "name": "FeeToSetterUpdated",
                  "nameLocation": "1579:18:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1460,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newFeeToSetter",
                        "nameLocation": "1614:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1462,
                        "src": "1598:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1598:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1597:32:11"
                  },
                  "src": "1573:57:11"
                },
                {
                  "documentation": {
                    "id": 1463,
                    "nodeType": "StructuredDocumentation",
                    "src": "1640:69:11",
                    "text": " @dev エラー：同一トークンペアの作成"
                  },
                  "errorSelector": "5c6d7b73",
                  "id": 1465,
                  "name": "IdenticalTokens",
                  "nameLocation": "1720:15:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1464,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1735:2:11"
                  },
                  "src": "1714:24:11"
                },
                {
                  "documentation": {
                    "id": 1466,
                    "nodeType": "StructuredDocumentation",
                    "src": "1748:63:11",
                    "text": " @dev エラー：ゼロアドレスの指定"
                  },
                  "errorSelector": "d92e233d",
                  "id": 1468,
                  "name": "ZeroAddress",
                  "nameLocation": "1822:11:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1833:2:11"
                  },
                  "src": "1816:20:11"
                },
                {
                  "documentation": {
                    "id": 1469,
                    "nodeType": "StructuredDocumentation",
                    "src": "1846:60:11",
                    "text": " @dev エラー：既に存在するペア"
                  },
                  "errorSelector": "c9bb25eb",
                  "id": 1471,
                  "name": "PairAlreadyExists",
                  "nameLocation": "1917:17:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1934:2:11"
                  },
                  "src": "1911:26:11"
                },
                {
                  "documentation": {
                    "id": 1472,
                    "nodeType": "StructuredDocumentation",
                    "src": "1947:48:11",
                    "text": " @dev エラー：権限なし"
                  },
                  "errorSelector": "82b42900",
                  "id": 1474,
                  "name": "Unauthorized",
                  "nameLocation": "2006:12:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1473,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2018:2:11"
                  },
                  "src": "2000:21:11"
                },
                {
                  "body": {
                    "id": 1494,
                    "nodeType": "Block",
                    "src": "2175:105:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1480,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "2189:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2213:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2205:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1481,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2205:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2205:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2189:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1489,
                        "nodeType": "IfStatement",
                        "src": "2185:52:11",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1486,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "2224:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2224:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1488,
                          "nodeType": "RevertStatement",
                          "src": "2217:20:11"
                        }
                      },
                      {
                        "expression": {
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1490,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "2247:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1491,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "2261:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2247:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1493,
                        "nodeType": "ExpressionStatement",
                        "src": "2247:26:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1475,
                    "nodeType": "StructuredDocumentation",
                    "src": "2031:105:11",
                    "text": " @dev コンストラクタ\n @param _feeToSetter feeToSetterの初期アドレス"
                  },
                  "id": 1495,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1477,
                        "mutability": "mutable",
                        "name": "_feeToSetter",
                        "nameLocation": "2161:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1495,
                        "src": "2153:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1476,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:22:11"
                  },
                  "returnParameters": {
                    "id": 1479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2175:0:11"
                  },
                  "scope": 1747,
                  "src": "2141:139:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1504,
                    "nodeType": "Block",
                    "src": "2462:39:11",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1501,
                            "name": "allPairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1441,
                            "src": "2479:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2488:6:11",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2479:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1500,
                        "id": 1503,
                        "nodeType": "Return",
                        "src": "2472:22:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1496,
                    "nodeType": "StructuredDocumentation",
                    "src": "2290:109:11",
                    "text": " @dev 作成されたペアの総数を取得\n @return 作成されたペアの総数"
                  },
                  "functionSelector": "574f2ba3",
                  "id": 1505,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nameLocation": "2413:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2427:2:11"
                  },
                  "returnParameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1499,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1505,
                        "src": "2453:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2453:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2452:9:11"
                  },
                  "scope": 1747,
                  "src": "2404:97:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1617,
                    "nodeType": "Block",
                    "src": "2830:1206:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1515,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1508,
                            "src": "2889:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1516,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "2899:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2889:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1521,
                        "nodeType": "IfStatement",
                        "src": "2885:46:11",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1518,
                              "name": "IdenticalTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "2914:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2914:17:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1520,
                          "nodeType": "RevertStatement",
                          "src": "2907:24:11"
                        }
                      },
                      {
                        "assignments": [
                          1523,
                          1525
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1523,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "3046:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1617,
                            "src": "3038:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1522,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3038:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1525,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "3062:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1617,
                            "src": "3054:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1524,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3054:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1536,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1526,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "3072:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1527,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "3081:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3072:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "components": [
                              {
                                "id": 1532,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1510,
                                "src": "3136:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1533,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1508,
                                "src": "3144:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1534,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3135:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3072:79:11",
                          "trueExpression": {
                            "components": [
                              {
                                "id": 1529,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1508,
                                "src": "3104:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1530,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1510,
                                "src": "3112:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1531,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3103:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3037:114:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1537,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1523,
                            "src": "3219:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3237:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3229:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1538,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3229:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3229:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3219:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1546,
                        "nodeType": "IfStatement",
                        "src": "3215:46:11",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1543,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "3248:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3248:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1545,
                          "nodeType": "RevertStatement",
                          "src": "3241:20:11"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1547,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1437,
                                "src": "3317:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 1549,
                              "indexExpression": {
                                "id": 1548,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1523,
                                "src": "3325:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3317:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1551,
                            "indexExpression": {
                              "id": 1550,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1525,
                              "src": "3333:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3317:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3352:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3344:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1552,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3344:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3344:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3317:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1560,
                        "nodeType": "IfStatement",
                        "src": "3313:69:11",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1557,
                              "name": "PairAlreadyExists",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1471,
                              "src": "3363:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3363:19:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1559,
                          "nodeType": "RevertStatement",
                          "src": "3356:26:11"
                        }
                      },
                      {
                        "assignments": [
                          1562
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1562,
                            "mutability": "mutable",
                            "name": "bytecode",
                            "nameLocation": "3459:8:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1617,
                            "src": "3446:21:11",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1561,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3446:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1567,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1564,
                                "name": "DexPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2831,
                                "src": "3475:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              ],
                              "id": 1563,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "3470:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3470:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_DexPair_$2831",
                              "typeString": "type(contract DexPair)"
                            }
                          },
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3484:12:11",
                          "memberName": "creationCode",
                          "nodeType": "MemberAccess",
                          "src": "3470:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3446:50:11"
                      },
                      {
                        "assignments": [
                          1569
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1569,
                            "mutability": "mutable",
                            "name": "salt",
                            "nameLocation": "3514:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1617,
                            "src": "3506:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1568,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3506:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1577,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1573,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1523,
                                  "src": "3548:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1574,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "3556:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1571,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3531:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3535:12:11",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3531:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3531:32:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1570,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "3521:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3521:43:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3506:58:11"
                      },
                      {
                        "AST": {
                          "nativeSrc": "3592:84:11",
                          "nodeType": "YulBlock",
                          "src": "3592:84:11",
                          "statements": [
                            {
                              "nativeSrc": "3606:60:11",
                              "nodeType": "YulAssignment",
                              "src": "3606:60:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3622:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3622:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nativeSrc": "3629:8:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3629:8:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3639:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "3639:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3625:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3625:3:11"
                                    },
                                    "nativeSrc": "3625:17:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3625:17:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nativeSrc": "3650:8:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3650:8:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "3644:5:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3644:5:11"
                                    },
                                    "nativeSrc": "3644:15:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3644:15:11"
                                  },
                                  {
                                    "name": "salt",
                                    "nativeSrc": "3661:4:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3661:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nativeSrc": "3614:7:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3614:7:11"
                                },
                                "nativeSrc": "3614:52:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3614:52:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pair",
                                  "nativeSrc": "3606:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3606:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1562,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3629:8:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1562,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3650:8:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1513,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3606:4:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1569,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3661:4:11",
                            "valueSize": 1
                          }
                        ],
                        "id": 1578,
                        "nodeType": "InlineAssembly",
                        "src": "3583:93:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1583,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1523,
                              "src": "3749:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1584,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1525,
                              "src": "3757:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1580,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1513,
                                  "src": "3732:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1579,
                                "name": "DexPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2831,
                                "src": "3724:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              },
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3724:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexPair_$2831",
                                "typeString": "contract DexPair"
                              }
                            },
                            "id": 1582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3738:10:11",
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1897,
                            "src": "3724:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3724:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1586,
                        "nodeType": "ExpressionStatement",
                        "src": "3724:40:11"
                      },
                      {
                        "expression": {
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1587,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1437,
                                "src": "3819:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 1590,
                              "indexExpression": {
                                "id": 1588,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1523,
                                "src": "3827:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3819:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1591,
                            "indexExpression": {
                              "id": 1589,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1525,
                              "src": "3835:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3819:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1592,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1513,
                            "src": "3845:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3819:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1594,
                        "nodeType": "ExpressionStatement",
                        "src": "3819:30:11"
                      },
                      {
                        "expression": {
                          "id": 1601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1595,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1437,
                                "src": "3859:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 1598,
                              "indexExpression": {
                                "id": 1596,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1525,
                                "src": "3867:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3859:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1599,
                            "indexExpression": {
                              "id": 1597,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1523,
                              "src": "3875:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3859:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1600,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1513,
                            "src": "3885:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3859:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1602,
                        "nodeType": "ExpressionStatement",
                        "src": "3859:30:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1606,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "3950:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1603,
                              "name": "allPairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "3936:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3945:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3936:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3936:19:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1608,
                        "nodeType": "ExpressionStatement",
                        "src": "3936:19:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1610,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1523,
                              "src": "3991:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1611,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1525,
                              "src": "3999:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1612,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "4007:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1613,
                                "name": "allPairs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1441,
                                "src": "4013:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4022:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4013:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1609,
                            "name": "PairCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1452,
                            "src": "3979:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3979:50:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1616,
                        "nodeType": "EmitStatement",
                        "src": "3974:55:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1506,
                    "nodeType": "StructuredDocumentation",
                    "src": "2511:230:11",
                    "text": " @dev 新しいトークンペアを作成\n @param tokenA 最初のトークンアドレス\n @param tokenB 二番目のトークンアドレス\n @return pair 作成されたペアのアドレス"
                  },
                  "functionSelector": "c9c65396",
                  "id": 1618,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "2755:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1508,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "2774:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1618,
                        "src": "2766:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2766:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1510,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "2790:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1618,
                        "src": "2782:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2782:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2765:32:11"
                  },
                  "returnParameters": {
                    "id": 1514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1513,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "2824:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1618,
                        "src": "2816:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2816:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2815:14:11"
                  },
                  "scope": 1747,
                  "src": "2746:1290:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1640,
                    "nodeType": "Block",
                    "src": "4192:128:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1624,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4206:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4210:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4206:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1626,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "4220:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4206:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1631,
                        "nodeType": "IfStatement",
                        "src": "4202:52:11",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1628,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "4240:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4240:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1630,
                          "nodeType": "RevertStatement",
                          "src": "4233:21:11"
                        }
                      },
                      {
                        "expression": {
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1632,
                            "name": "feeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "4264:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1633,
                            "name": "_feeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1621,
                            "src": "4272:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4264:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1635,
                        "nodeType": "ExpressionStatement",
                        "src": "4264:14:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1637,
                              "name": "_feeTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1621,
                              "src": "4306:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1636,
                            "name": "FeeToUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "4293:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4293:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1639,
                        "nodeType": "EmitStatement",
                        "src": "4288:25:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1619,
                    "nodeType": "StructuredDocumentation",
                    "src": "4046:98:11",
                    "text": " @dev feeToアドレスを設定\n @param _feeTo 新しいfeeToアドレス"
                  },
                  "functionSelector": "f46901ed",
                  "id": 1641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nameLocation": "4158:8:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1621,
                        "mutability": "mutable",
                        "name": "_feeTo",
                        "nameLocation": "4175:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "4167:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4167:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4166:16:11"
                  },
                  "returnParameters": {
                    "id": 1623,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4192:0:11"
                  },
                  "scope": 1747,
                  "src": "4149:171:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1673,
                    "nodeType": "Block",
                    "src": "4506:214:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1647,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4520:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4524:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4520:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1649,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "4534:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4520:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1654,
                        "nodeType": "IfStatement",
                        "src": "4516:52:11",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1651,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "4554:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4554:14:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1653,
                          "nodeType": "RevertStatement",
                          "src": "4547:21:11"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1655,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "4582:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4606:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4598:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1656,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4598:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4598:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4582:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1664,
                        "nodeType": "IfStatement",
                        "src": "4578:52:11",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1661,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "4617:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4617:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1663,
                          "nodeType": "RevertStatement",
                          "src": "4610:20:11"
                        }
                      },
                      {
                        "expression": {
                          "id": 1667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1665,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "4640:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1666,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "4654:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4640:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1668,
                        "nodeType": "ExpressionStatement",
                        "src": "4640:26:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1670,
                              "name": "_feeToSetter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "4700:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1669,
                            "name": "FeeToSetterUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1462,
                            "src": "4681:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4681:32:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1672,
                        "nodeType": "EmitStatement",
                        "src": "4676:37:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1642,
                    "nodeType": "StructuredDocumentation",
                    "src": "4330:116:11",
                    "text": " @dev feeToSetterアドレスを設定\n @param _feeToSetter 新しいfeeToSetterアドレス"
                  },
                  "functionSelector": "a2e74af6",
                  "id": 1674,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nameLocation": "4460:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "_feeToSetter",
                        "nameLocation": "4483:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1674,
                        "src": "4475:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4475:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4474:22:11"
                  },
                  "returnParameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4506:0:11"
                  },
                  "scope": 1747,
                  "src": "4451:269:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1745,
                    "nodeType": "Block",
                    "src": "5070:465:11",
                    "statements": [
                      {
                        "assignments": [
                          1685,
                          1687
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1685,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "5089:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1745,
                            "src": "5081:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1684,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5081:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1687,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "5105:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1745,
                            "src": "5097:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5097:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1698,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1688,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1677,
                              "src": "5115:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1689,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1679,
                              "src": "5124:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5115:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "components": [
                              {
                                "id": 1694,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "5179:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1695,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "5187:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1696,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5178:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5115:79:11",
                          "trueExpression": {
                            "components": [
                              {
                                "id": 1691,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "5147:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1692,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1679,
                                "src": "5155:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1693,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5146:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5080:114:11"
                      },
                      {
                        "assignments": [
                          1700
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1700,
                            "mutability": "mutable",
                            "name": "salt",
                            "nameLocation": "5221:4:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1745,
                            "src": "5213:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1699,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5213:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1708,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1704,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1685,
                                  "src": "5255:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1705,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1687,
                                  "src": "5263:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1702,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5238:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5242:12:11",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "5238:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5238:32:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1701,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5228:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5228:43:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5213:58:11"
                      },
                      {
                        "assignments": [
                          1710
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1710,
                            "mutability": "mutable",
                            "name": "bytecodeHash",
                            "nameLocation": "5289:12:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1745,
                            "src": "5281:20:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1709,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5281:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1717,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1713,
                                    "name": "DexPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2831,
                                    "src": "5319:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                      "typeString": "type(contract DexPair)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                      "typeString": "type(contract DexPair)"
                                    }
                                  ],
                                  "id": 1712,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "5314:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5314:13:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_DexPair_$2831",
                                  "typeString": "type(contract DexPair)"
                                }
                              },
                              "id": 1715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5328:12:11",
                              "memberName": "creationCode",
                              "nodeType": "MemberAccess",
                              "src": "5314:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1711,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5304:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5304:37:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5281:60:11"
                      },
                      {
                        "expression": {
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1718,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1682,
                            "src": "5360:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30786666",
                                                    "id": 1730,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "5438:4:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    },
                                                    "value": "0xff"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    }
                                                  ],
                                                  "id": 1729,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "5431:6:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_bytes1_$",
                                                    "typeString": "type(bytes1)"
                                                  },
                                                  "typeName": {
                                                    "id": 1728,
                                                    "name": "bytes1",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "5431:6:11",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1731,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5431:12:11",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 1734,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "5465:4:11",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_DexFactory_$1747",
                                                      "typeString": "contract DexFactory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_DexFactory_$1747",
                                                      "typeString": "contract DexFactory"
                                                    }
                                                  ],
                                                  "id": 1733,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "5457:7:11",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 1732,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "5457:7:11",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1735,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5457:13:11",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 1736,
                                                "name": "salt",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1700,
                                                "src": "5484:4:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "id": 1737,
                                                "name": "bytecodeHash",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1710,
                                                "src": "5502:12:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "id": 1726,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "5401:3:11",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 1727,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "5405:12:11",
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "5401:16:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 1738,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5401:123:11",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 1725,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "5391:9:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 1739,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5391:134:11",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 1724,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5383:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1723,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5383:7:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1740,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5383:143:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5375:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 1721,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5375:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5375:152:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 1720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5367:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1719,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5367:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5367:161:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5360:168:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1744,
                        "nodeType": "ExpressionStatement",
                        "src": "5360:168:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1675,
                    "nodeType": "StructuredDocumentation",
                    "src": "4730:249:11",
                    "text": " @dev 特定のペアアドレスを計算（CREATE2を使用）\n @param tokenA 最初のトークンアドレス\n @param tokenB 二番目のトークンアドレス\n @return pair 計算されたペアアドレス"
                  },
                  "functionSelector": "96ed28f9",
                  "id": 1746,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pairFor",
                  "nameLocation": "4993:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1677,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "5009:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1746,
                        "src": "5001:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5001:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1679,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "5025:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1746,
                        "src": "5017:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5017:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5000:32:11"
                  },
                  "returnParameters": {
                    "id": 1683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1682,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "5064:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1746,
                        "src": "5056:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1681,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5056:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5055:14:11"
                  },
                  "scope": 1747,
                  "src": "4984:551:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1748,
              "src": "278:5259:11",
              "usedErrors": [
                1465,
                1468,
                1471,
                1474
              ],
              "usedEvents": [
                1452,
                1457,
                1462
              ]
            }
          ],
          "src": "32:5506:11"
        },
        "id": 11
      },
      "contracts/DexPair.sol": {
        "ast": {
          "absolutePath": "contracts/DexPair.sol",
          "exportedSymbols": {
            "Context": [
              1339
            ],
            "DexPair": [
              2831
            ],
            "ERC20": [
              741
            ],
            "IERC1363": [
              81
            ],
            "IERC20": [
              819
            ],
            "IERC20Errors": [
              131
            ],
            "IERC20Metadata": [
              845
            ],
            "IFactory": [
              2838
            ],
            "ReentrancyGuard": [
              1408
            ],
            "SafeERC20": [
              1309
            ]
          },
          "id": 2839,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1749,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1750,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2839,
              "sourceUnit": 742,
              "src": "58:55:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1751,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2839,
              "sourceUnit": 1409,
              "src": "114:59:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1752,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2839,
              "sourceUnit": 820,
              "src": "174:56:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 1753,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2839,
              "sourceUnit": 1310,
              "src": "231:65:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1755,
                    "name": "ERC20",
                    "nameLocations": [
                      "500:5:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 741,
                    "src": "500:5:12"
                  },
                  "id": 1756,
                  "nodeType": "InheritanceSpecifier",
                  "src": "500:5:12"
                },
                {
                  "baseName": {
                    "id": 1757,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "507:15:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1408,
                    "src": "507:15:12"
                  },
                  "id": 1758,
                  "nodeType": "InheritanceSpecifier",
                  "src": "507:15:12"
                }
              ],
              "canonicalName": "DexPair",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1754,
                "nodeType": "StructuredDocumentation",
                "src": "298:181:12",
                "text": " @title DexPair\n @dev 流動性プールとLPトークンの機能を提供するペアコントラクト\n @notice Uniswap V2のペアパターンに基づいた実装"
              },
              "fullyImplemented": true,
              "id": 2831,
              "linearizedBaseContracts": [
                2831,
                1408,
                741,
                131,
                845,
                819,
                1339
              ],
              "name": "DexPair",
              "nameLocation": "489:7:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 1762,
                  "libraryName": {
                    "id": 1759,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "535:9:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1309,
                    "src": "535:9:12"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "529:27:12",
                  "typeName": {
                    "id": 1761,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1760,
                      "name": "IERC20",
                      "nameLocations": [
                        "549:6:12"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 819,
                      "src": "549:6:12"
                    },
                    "referencedDeclaration": 819,
                    "src": "549:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$819",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1763,
                    "nodeType": "StructuredDocumentation",
                    "src": "566:81:12",
                    "text": "@dev 最小流動性量（最初の流動性提供時にロックされる）"
                  },
                  "functionSelector": "ba9a7a56",
                  "id": 1768,
                  "mutability": "constant",
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "676:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "652:49:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "696:2:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 1766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "696:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1769,
                    "nodeType": "StructuredDocumentation",
                    "src": "712:60:12",
                    "text": "@dev ファクトリーコントラクトのアドレス"
                  },
                  "functionSelector": "c45a0155",
                  "id": 1771,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "792:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "777:22:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1772,
                    "nodeType": "StructuredDocumentation",
                    "src": "810:51:12",
                    "text": "@dev ペアの最初のトークンアドレス"
                  },
                  "functionSelector": "0dfe1681",
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "881:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "866:21:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1775,
                    "nodeType": "StructuredDocumentation",
                    "src": "898:54:12",
                    "text": "@dev ペアの二番目のトークンアドレス"
                  },
                  "functionSelector": "d21220a7",
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "972:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "957:21:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1778,
                    "nodeType": "StructuredDocumentation",
                    "src": "989:51:12",
                    "text": "@dev 前回の各トークンのリザーブ量"
                  },
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "reserve0",
                  "nameLocation": "1061:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1045:24:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1782,
                  "mutability": "mutable",
                  "name": "reserve1",
                  "nameLocation": "1091:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1075:24:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1781,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "blockTimestampLast",
                  "nameLocation": "1120:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1105:33:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1785,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:48:12",
                    "text": "@dev 累積価格（価格オラクル用）"
                  },
                  "functionSelector": "5909c0d5",
                  "id": 1787,
                  "mutability": "mutable",
                  "name": "price0CumulativeLast",
                  "nameLocation": "1217:20:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1202:35:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5a3d5493",
                  "id": 1789,
                  "mutability": "mutable",
                  "name": "price1CumulativeLast",
                  "nameLocation": "1258:20:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1243:35:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1790,
                    "nodeType": "StructuredDocumentation",
                    "src": "1289:38:12",
                    "text": "@dev kLast（手数料計算用）"
                  },
                  "functionSelector": "7464fc3d",
                  "id": 1792,
                  "mutability": "mutable",
                  "name": "kLast",
                  "nameLocation": "1347:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1332:20:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1793,
                    "nodeType": "StructuredDocumentation",
                    "src": "1363:349:12",
                    "text": " @dev スワップ時に発生するイベント\n @param sender スワップを実行したアドレス\n @param amount0In token0の入力量\n @param amount1In token1の入力量\n @param amount0Out token0の出力量\n @param amount1Out token1の出力量\n @param to 出力トークンの受取人"
                  },
                  "eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
                  "id": 1807,
                  "name": "Swap",
                  "nameLocation": "1723:4:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1806,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1795,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1753:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "1737:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1794,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1737:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1797,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "1777:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "1769:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1796,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1769:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1799,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "1804:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "1796:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1798,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1796:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1801,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "1831:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "1823:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1823:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1803,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "1859:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "1851:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1802,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1851:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1895:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1807,
                        "src": "1879:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1879:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1727:176:12"
                  },
                  "src": "1717:187:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1808,
                    "nodeType": "StructuredDocumentation",
                    "src": "1914:227:12",
                    "text": " @dev 流動性追加時に発生するイベント\n @param sender 流動性を追加したアドレス\n @param amount0 追加されたtoken0の量\n @param amount1 追加されたtoken1の量"
                  },
                  "eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
                  "id": 1816,
                  "name": "Mint",
                  "nameLocation": "2152:4:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1815,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1810,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2173:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1816,
                        "src": "2157:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2157:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1812,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2189:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1816,
                        "src": "2181:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1811,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2181:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1814,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2206:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1816,
                        "src": "2198:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1813,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2198:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2156:58:12"
                  },
                  "src": "2146:69:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1817,
                    "nodeType": "StructuredDocumentation",
                    "src": "2225:269:12",
                    "text": " @dev 流動性削除時に発生するイベント\n @param sender 流動性を削除したアドレス\n @param amount0 削除されたtoken0の量\n @param amount1 削除されたtoken1の量\n @param to トークンの受取人"
                  },
                  "eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
                  "id": 1827,
                  "name": "Burn",
                  "nameLocation": "2505:4:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1819,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2535:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2519:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1818,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2519:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1821,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2559:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2551:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1820,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2551:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1823,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2584:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2576:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1822,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2576:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1825,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2617:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2601:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2601:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2509:116:12"
                  },
                  "src": "2499:127:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1828,
                    "nodeType": "StructuredDocumentation",
                    "src": "2636:168:12",
                    "text": " @dev リザーブ同期時に発生するイベント\n @param reserve0 token0のリザーブ量\n @param reserve1 token1のリザーブ量"
                  },
                  "eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
                  "id": 1834,
                  "name": "Sync",
                  "nameLocation": "2815:4:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1830,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "2828:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1834,
                        "src": "2820:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1829,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2820:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1832,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "2846:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1834,
                        "src": "2838:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1831,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2838:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2819:36:12"
                  },
                  "src": "2809:47:12"
                },
                {
                  "documentation": {
                    "id": 1835,
                    "nodeType": "StructuredDocumentation",
                    "src": "2866:48:12",
                    "text": " @dev エラー：権限なし"
                  },
                  "errorSelector": "82b42900",
                  "id": 1837,
                  "name": "Unauthorized",
                  "nameLocation": "2925:12:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1836,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2937:2:12"
                  },
                  "src": "2919:21:12"
                },
                {
                  "documentation": {
                    "id": 1838,
                    "nodeType": "StructuredDocumentation",
                    "src": "2950:57:12",
                    "text": " @dev エラー：オーバーフロー"
                  },
                  "errorSelector": "35278d12",
                  "id": 1840,
                  "name": "Overflow",
                  "nameLocation": "3018:8:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1839,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3026:2:12"
                  },
                  "src": "3012:17:12"
                },
                {
                  "documentation": {
                    "id": 1841,
                    "nodeType": "StructuredDocumentation",
                    "src": "3039:57:12",
                    "text": " @dev エラー：不十分な流動性"
                  },
                  "errorSelector": "bb55fd27",
                  "id": 1843,
                  "name": "InsufficientLiquidity",
                  "nameLocation": "3107:21:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1842,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3128:2:12"
                  },
                  "src": "3101:30:12"
                },
                {
                  "documentation": {
                    "id": 1844,
                    "nodeType": "StructuredDocumentation",
                    "src": "3141:69:12",
                    "text": " @dev エラー：不十分な流動性をバーン"
                  },
                  "errorSelector": "749383ad",
                  "id": 1846,
                  "name": "InsufficientLiquidityBurned",
                  "nameLocation": "3221:27:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1845,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3248:2:12"
                  },
                  "src": "3215:36:12"
                },
                {
                  "documentation": {
                    "id": 1847,
                    "nodeType": "StructuredDocumentation",
                    "src": "3261:57:12",
                    "text": " @dev エラー：不十分な出力量"
                  },
                  "errorSelector": "42301c23",
                  "id": 1849,
                  "name": "InsufficientOutputAmount",
                  "nameLocation": "3329:24:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1848,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3353:2:12"
                  },
                  "src": "3323:33:12"
                },
                {
                  "documentation": {
                    "id": 1850,
                    "nodeType": "StructuredDocumentation",
                    "src": "3366:57:12",
                    "text": " @dev エラー：不十分な入力量"
                  },
                  "errorSelector": "098fb561",
                  "id": 1852,
                  "name": "InsufficientInputAmount",
                  "nameLocation": "3434:23:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1851,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3457:2:12"
                  },
                  "src": "3428:32:12"
                },
                {
                  "documentation": {
                    "id": 1853,
                    "nodeType": "StructuredDocumentation",
                    "src": "3470:49:12",
                    "text": " @dev エラー：不正なK値"
                  },
                  "errorSelector": "bd8bc364",
                  "id": 1855,
                  "name": "InvalidK",
                  "nameLocation": "3530:8:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1854,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3538:2:12"
                  },
                  "src": "3524:17:12"
                },
                {
                  "documentation": {
                    "id": 1856,
                    "nodeType": "StructuredDocumentation",
                    "src": "3551:66:12",
                    "text": " @dev エラー：無効な受取人アドレス"
                  },
                  "errorSelector": "290fa188",
                  "id": 1858,
                  "name": "InvalidTo",
                  "nameLocation": "3628:9:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1857,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3637:2:12"
                  },
                  "src": "3622:18:12"
                },
                {
                  "body": {
                    "id": 1871,
                    "nodeType": "Block",
                    "src": "3746:37:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1866,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "3756:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1867,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3766:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3770:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3766:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3756:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1870,
                        "nodeType": "ExpressionStatement",
                        "src": "3756:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1859,
                    "nodeType": "StructuredDocumentation",
                    "src": "3650:45:12",
                    "text": " @dev コンストラクタ"
                  },
                  "id": 1872,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "444558204c5020546f6b656e",
                          "id": 1862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3720:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_03cdc1b3942c53ee9c2070aaa3b60e6c18aae77653867f02fd9cd306602f7236",
                            "typeString": "literal_string \"DEX LP Token\""
                          },
                          "value": "DEX LP Token"
                        },
                        {
                          "hexValue": "4445582d4c50",
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3736:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_488dd486e3807b8e6ac07ed38226df40be52111460590ebc3909eadd7ae3bb67",
                            "typeString": "literal_string \"DEX-LP\""
                          },
                          "value": "DEX-LP"
                        }
                      ],
                      "id": 1864,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1861,
                        "name": "ERC20",
                        "nameLocations": [
                          "3714:5:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 741,
                        "src": "3714:5:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3714:31:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1860,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3711:2:12"
                  },
                  "returnParameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3746:0:12"
                  },
                  "scope": 2831,
                  "src": "3700:83:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1896,
                    "nodeType": "Block",
                    "src": "4066:117:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1880,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4080:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4084:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4080:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1882,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "4094:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4080:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1887,
                        "nodeType": "IfStatement",
                        "src": "4076:48:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1884,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1837,
                              "src": "4110:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4110:14:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1886,
                          "nodeType": "RevertStatement",
                          "src": "4103:21:12"
                        }
                      },
                      {
                        "expression": {
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1888,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "4134:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1889,
                            "name": "_token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1875,
                            "src": "4143:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4134:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1891,
                        "nodeType": "ExpressionStatement",
                        "src": "4134:16:12"
                      },
                      {
                        "expression": {
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1892,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1777,
                            "src": "4160:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1893,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1877,
                            "src": "4169:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4160:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1895,
                        "nodeType": "ExpressionStatement",
                        "src": "4160:16:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1873,
                    "nodeType": "StructuredDocumentation",
                    "src": "3793:205:12",
                    "text": " @dev ペアの初期化（ファクトリーから呼び出される）\n @param _token0 最初のトークンアドレス\n @param _token1 二番目のトークンアドレス"
                  },
                  "functionSelector": "485cc955",
                  "id": 1897,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "4012:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1878,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1875,
                        "mutability": "mutable",
                        "name": "_token0",
                        "nameLocation": "4031:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1897,
                        "src": "4023:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1874,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4023:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1877,
                        "mutability": "mutable",
                        "name": "_token1",
                        "nameLocation": "4048:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1897,
                        "src": "4040:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1876,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4040:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4022:34:12"
                  },
                  "returnParameters": {
                    "id": 1879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4066:0:12"
                  },
                  "scope": 2831,
                  "src": "4003:180:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1919,
                    "nodeType": "Block",
                    "src": "4594:117:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1907,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "4604:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1908,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1780,
                            "src": "4616:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "4604:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 1910,
                        "nodeType": "ExpressionStatement",
                        "src": "4604:20:12"
                      },
                      {
                        "expression": {
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1911,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "4634:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1912,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1782,
                            "src": "4646:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "4634:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 1914,
                        "nodeType": "ExpressionStatement",
                        "src": "4634:20:12"
                      },
                      {
                        "expression": {
                          "id": 1917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1915,
                            "name": "_blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "4664:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1916,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "4686:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4664:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1918,
                        "nodeType": "ExpressionStatement",
                        "src": "4664:40:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1898,
                    "nodeType": "StructuredDocumentation",
                    "src": "4193:256:12",
                    "text": " @dev 現在のリザーブ量と最終更新ブロック時刻を取得\n @return _reserve0 token0のリザーブ量\n @return _reserve1 token1のリザーブ量\n @return _blockTimestampLast 最終更新ブロック時刻"
                  },
                  "functionSelector": "0902f1ac",
                  "id": 1920,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "4463:11:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1899,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4474:2:12"
                  },
                  "returnParameters": {
                    "id": 1906,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1901,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "4515:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1920,
                        "src": "4507:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1900,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "4507:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1903,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "4542:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1920,
                        "src": "4534:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 1902,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "4534:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1905,
                        "mutability": "mutable",
                        "name": "_blockTimestampLast",
                        "nameLocation": "4568:19:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1920,
                        "src": "4561:26:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1904,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4561:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4497:96:12"
                  },
                  "scope": 2831,
                  "src": "4454:257:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2073,
                    "nodeType": "Block",
                    "src": "4988:1232:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1930,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1923,
                            "src": "5002:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1933,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5016:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexPair_$2831",
                                  "typeString": "contract DexPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexPair_$2831",
                                  "typeString": "contract DexPair"
                                }
                              ],
                              "id": 1932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5008:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1931,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5008:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5008:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5002:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1939,
                        "nodeType": "IfStatement",
                        "src": "4998:43:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1936,
                              "name": "InvalidTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1858,
                              "src": "5030:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 1937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5030:11:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1938,
                          "nodeType": "RevertStatement",
                          "src": "5023:18:12"
                        }
                      },
                      {
                        "assignments": [
                          1941,
                          1943,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1941,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "5069:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5061:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1940,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "5061:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1943,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "5088:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5080:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1942,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "5080:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1946,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1944,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "5102:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5102:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5060:55:12"
                      },
                      {
                        "assignments": [
                          1948
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1948,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "5133:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5125:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1947,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5125:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1958,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1955,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5177:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 1954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5169:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1953,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5169:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5169:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1950,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1774,
                                  "src": "5151:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1949,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "5144:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5144:14:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5159:9:12",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "5144:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5144:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5125:58:12"
                      },
                      {
                        "assignments": [
                          1960
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1960,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "5201:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5193:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1959,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5193:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1970,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1967,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5245:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 1966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5237:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1965,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5237:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5237:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1962,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1777,
                                  "src": "5219:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1961,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "5212:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5212:14:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5227:9:12",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "5212:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5212:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5193:58:12"
                      },
                      {
                        "assignments": [
                          1972
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1972,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "5269:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5261:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1971,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5261:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1976,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1973,
                            "name": "balance0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1948,
                            "src": "5279:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1974,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1941,
                            "src": "5290:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "5279:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5261:38:12"
                      },
                      {
                        "assignments": [
                          1978
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1978,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "5317:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5309:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1977,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5309:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1982,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1979,
                            "name": "balance1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1960,
                            "src": "5327:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1980,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "5338:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "5327:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5309:38:12"
                      },
                      {
                        "assignments": [
                          1984
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1984,
                            "mutability": "mutable",
                            "name": "feeOn",
                            "nameLocation": "5371:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5366:10:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1983,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5366:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1989,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1986,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1941,
                              "src": "5388:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 1987,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1943,
                              "src": "5399:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 1985,
                            "name": "_mintFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2736,
                            "src": "5379:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
                              "typeString": "function (uint112,uint112) returns (bool)"
                            }
                          },
                          "id": 1988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5379:30:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5366:43:12"
                      },
                      {
                        "assignments": [
                          1991
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1991,
                            "mutability": "mutable",
                            "name": "_totalSupply",
                            "nameLocation": "5427:12:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2073,
                            "src": "5419:20:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1990,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5419:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1994,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1992,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "5442:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5442:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5419:36:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1995,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1991,
                            "src": "5478:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5494:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5478:17:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2034,
                          "nodeType": "Block",
                          "src": "5732:200:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2017,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1928,
                                  "src": "5783:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2024,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2021,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2019,
                                              "name": "amount0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1972,
                                              "src": "5818:7:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2020,
                                              "name": "_totalSupply",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1991,
                                              "src": "5828:12:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5818:22:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2022,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5817:24:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2023,
                                        "name": "_reserve0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1941,
                                        "src": "5844:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "5817:36:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2030,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2027,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2025,
                                              "name": "amount1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1978,
                                              "src": "5872:7:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 2026,
                                              "name": "_totalSupply",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1991,
                                              "src": "5882:12:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5872:22:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 2028,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5871:24:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2029,
                                        "name": "_reserve1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1943,
                                        "src": "5898:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "5871:36:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2018,
                                    "name": "_min",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2809,
                                    "src": "5795:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2031,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5795:126:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5783:138:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2033,
                              "nodeType": "ExpressionStatement",
                              "src": "5783:138:12"
                            }
                          ]
                        },
                        "id": 2035,
                        "nodeType": "IfStatement",
                        "src": "5474:458:12",
                        "trueBody": {
                          "id": 2016,
                          "nodeType": "Block",
                          "src": "5497:229:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1998,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1928,
                                  "src": "5548:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2002,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2000,
                                          "name": "amount0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1972,
                                          "src": "5566:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 2001,
                                          "name": "amount1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1978,
                                          "src": "5576:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "5566:17:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1999,
                                      "name": "_sqrt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2791,
                                      "src": "5560:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2003,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5560:24:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2004,
                                    "name": "MINIMUM_LIQUIDITY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1768,
                                    "src": "5587:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5560:44:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5548:56:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2007,
                              "nodeType": "ExpressionStatement",
                              "src": "5548:56:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "307864656164",
                                        "id": 2011,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5632:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_57005_by_1",
                                          "typeString": "int_const 57005"
                                        },
                                        "value": "0xdead"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_57005_by_1",
                                          "typeString": "int_const 57005"
                                        }
                                      ],
                                      "id": 2010,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5624:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2009,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5624:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2012,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5624:15:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2013,
                                    "name": "MINIMUM_LIQUIDITY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1768,
                                    "src": "5641:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2008,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 581,
                                  "src": "5618:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 2014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5618:41:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2015,
                              "nodeType": "ExpressionStatement",
                              "src": "5618:41:12"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2036,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "5954:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5967:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5954:14:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2042,
                        "nodeType": "IfStatement",
                        "src": "5950:50:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2039,
                              "name": "InsufficientLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1843,
                              "src": "5977:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5977:23:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2041,
                          "nodeType": "RevertStatement",
                          "src": "5970:30:12"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2044,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1923,
                              "src": "6016:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2045,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1928,
                              "src": "6020:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2043,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "6010:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6010:20:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2047,
                        "nodeType": "ExpressionStatement",
                        "src": "6010:20:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2049,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1948,
                              "src": "6057:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2050,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1960,
                              "src": "6067:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2051,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1941,
                              "src": "6077:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2052,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1943,
                              "src": "6088:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2048,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2631,
                              548
                            ],
                            "referencedDeclaration": 2631,
                            "src": "6049:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6049:49:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2054,
                        "nodeType": "ExpressionStatement",
                        "src": "6049:49:12"
                      },
                      {
                        "condition": {
                          "id": 2055,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1984,
                          "src": "6112:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2065,
                        "nodeType": "IfStatement",
                        "src": "6108:47:12",
                        "trueBody": {
                          "expression": {
                            "id": 2063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2056,
                              "name": "kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "6119:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2059,
                                    "name": "reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1780,
                                    "src": "6135:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 2058,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6127:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2057,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6127:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6127:17:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2061,
                                "name": "reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1782,
                                "src": "6147:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "src": "6127:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6119:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2064,
                          "nodeType": "ExpressionStatement",
                          "src": "6119:36:12"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2067,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6184:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6188:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6184:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2069,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1972,
                              "src": "6196:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2070,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1978,
                              "src": "6205:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2066,
                            "name": "Mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1816,
                            "src": "6179:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6179:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2072,
                        "nodeType": "EmitStatement",
                        "src": "6174:39:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1921,
                    "nodeType": "StructuredDocumentation",
                    "src": "4721:186:12",
                    "text": " @dev 流動性をミント（流動性追加）\n @param to LPトークンの受取人アドレス\n @return liquidity ミントされたLPトークンの量"
                  },
                  "functionSelector": "6a627842",
                  "id": 2074,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1926,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1925,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4947:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "4947:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4947:12:12"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "4921:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1924,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1923,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4934:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2074,
                        "src": "4926:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1922,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4926:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4925:12:12"
                  },
                  "returnParameters": {
                    "id": 1929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1928,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "4977:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2074,
                        "src": "4969:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4969:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4968:19:12"
                  },
                  "scope": 2831,
                  "src": "4912:1308:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2259,
                    "nodeType": "Block",
                    "src": "6548:1184:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2086,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2077,
                            "src": "6562:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2089,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6576:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexPair_$2831",
                                  "typeString": "contract DexPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexPair_$2831",
                                  "typeString": "contract DexPair"
                                }
                              ],
                              "id": 2088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6568:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2087,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6568:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6568:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6562:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2095,
                        "nodeType": "IfStatement",
                        "src": "6558:43:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2092,
                              "name": "InvalidTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1858,
                              "src": "6590:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6590:11:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2094,
                          "nodeType": "RevertStatement",
                          "src": "6583:18:12"
                        }
                      },
                      {
                        "assignments": [
                          2097,
                          2099,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2097,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "6629:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6621:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2096,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "6621:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2099,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "6648:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6640:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2098,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "6640:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2102,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2100,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "6662:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6662:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6620:55:12"
                      },
                      {
                        "assignments": [
                          2104
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2104,
                            "mutability": "mutable",
                            "name": "_token0",
                            "nameLocation": "6693:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6685:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6685:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2106,
                        "initialValue": {
                          "id": 2105,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "6703:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6685:24:12"
                      },
                      {
                        "assignments": [
                          2108
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2108,
                            "mutability": "mutable",
                            "name": "_token1",
                            "nameLocation": "6727:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6719:15:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2107,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6719:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2110,
                        "initialValue": {
                          "id": 2109,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1777,
                          "src": "6737:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6719:24:12"
                      },
                      {
                        "assignments": [
                          2112
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2112,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "6761:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6753:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2111,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6753:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2122,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2119,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6806:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6798:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2117,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6798:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6798:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2114,
                                  "name": "_token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2104,
                                  "src": "6779:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2113,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "6772:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6772:15:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6788:9:12",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "6772:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6772:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6753:59:12"
                      },
                      {
                        "assignments": [
                          2124
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2124,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "6830:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6822:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2123,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6822:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2134,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2131,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6875:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6867:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2129,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6867:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6867:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2126,
                                  "name": "_token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2108,
                                  "src": "6848:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2125,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "6841:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6841:15:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6857:9:12",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 776,
                            "src": "6841:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6841:40:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6822:59:12"
                      },
                      {
                        "assignments": [
                          2136
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2136,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nameLocation": "6899:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6891:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2135,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6891:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2143,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2140,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6929:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6921:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2138,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6921:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6921:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2137,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "6911:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6911:24:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6891:44:12"
                      },
                      {
                        "assignments": [
                          2145
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2145,
                            "mutability": "mutable",
                            "name": "feeOn",
                            "nameLocation": "6959:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "6954:10:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2144,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6954:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2150,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2147,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2097,
                              "src": "6976:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2148,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2099,
                              "src": "6987:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2146,
                            "name": "_mintFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2736,
                            "src": "6967:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
                              "typeString": "function (uint112,uint112) returns (bool)"
                            }
                          },
                          "id": 2149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6967:30:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6954:43:12"
                      },
                      {
                        "assignments": [
                          2152
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2152,
                            "mutability": "mutable",
                            "name": "_totalSupply",
                            "nameLocation": "7015:12:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2259,
                            "src": "7007:20:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2151,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7007:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2155,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2153,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "7030:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7030:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7007:36:12"
                      },
                      {
                        "expression": {
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2156,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2082,
                            "src": "7062:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2159,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2157,
                                    "name": "liquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2136,
                                    "src": "7073:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2158,
                                    "name": "balance0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2112,
                                    "src": "7085:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7073:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2160,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7072:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 2161,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2152,
                              "src": "7097:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7072:37:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7062:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2164,
                        "nodeType": "ExpressionStatement",
                        "src": "7062:47:12"
                      },
                      {
                        "expression": {
                          "id": 2172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2165,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "7119:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2166,
                                    "name": "liquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2136,
                                    "src": "7130:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2167,
                                    "name": "balance1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2124,
                                    "src": "7142:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7130:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2169,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7129:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 2170,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2152,
                              "src": "7154:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7129:37:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7119:47:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2173,
                        "nodeType": "ExpressionStatement",
                        "src": "7119:47:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2174,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2082,
                              "src": "7189:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7200:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7189:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2177,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2084,
                              "src": "7205:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7216:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7205:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7189:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2184,
                        "nodeType": "IfStatement",
                        "src": "7185:70:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2181,
                              "name": "InsufficientLiquidityBurned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1846,
                              "src": "7226:27:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7226:29:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2183,
                          "nodeType": "RevertStatement",
                          "src": "7219:36:12"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2188,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7288:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexPair_$2831",
                                    "typeString": "contract DexPair"
                                  }
                                ],
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7280:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2186,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7280:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7280:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2190,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2136,
                              "src": "7295:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2185,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 614,
                            "src": "7274:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7274:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2192,
                        "nodeType": "ExpressionStatement",
                        "src": "7274:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2197,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2077,
                              "src": "7344:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2198,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2082,
                              "src": "7348:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2194,
                                  "name": "_token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2104,
                                  "src": "7322:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2193,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "7315:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7315:15:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7331:12:12",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 890,
                            "src": "7315:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7315:41:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2200,
                        "nodeType": "ExpressionStatement",
                        "src": "7315:41:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2205,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2077,
                              "src": "7395:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2206,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2084,
                              "src": "7399:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2202,
                                  "name": "_token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2108,
                                  "src": "7373:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2201,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "7366:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7366:15:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7382:12:12",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 890,
                            "src": "7366:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7366:41:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2208,
                        "nodeType": "ExpressionStatement",
                        "src": "7366:41:12"
                      },
                      {
                        "expression": {
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2209,
                            "name": "balance0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "7426:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2216,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7471:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DexPair_$2831",
                                      "typeString": "contract DexPair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DexPair_$2831",
                                      "typeString": "contract DexPair"
                                    }
                                  ],
                                  "id": 2215,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7463:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2214,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7463:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7463:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2211,
                                    "name": "_token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2104,
                                    "src": "7444:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2210,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 819,
                                  "src": "7437:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 2212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7437:15:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$819",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7453:9:12",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 776,
                              "src": "7437:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7437:40:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7426:51:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2220,
                        "nodeType": "ExpressionStatement",
                        "src": "7426:51:12"
                      },
                      {
                        "expression": {
                          "id": 2231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2221,
                            "name": "balance1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2124,
                            "src": "7487:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2228,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7532:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DexPair_$2831",
                                      "typeString": "contract DexPair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DexPair_$2831",
                                      "typeString": "contract DexPair"
                                    }
                                  ],
                                  "id": 2227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7524:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2226,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7524:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7524:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2223,
                                    "name": "_token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2108,
                                    "src": "7505:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2222,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 819,
                                  "src": "7498:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 2224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7498:15:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$819",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 2225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7514:9:12",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 776,
                              "src": "7498:25:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 2230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7498:40:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7487:51:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2232,
                        "nodeType": "ExpressionStatement",
                        "src": "7487:51:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2234,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "7565:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2235,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2124,
                              "src": "7575:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2236,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2097,
                              "src": "7585:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2237,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2099,
                              "src": "7596:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2233,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2631,
                              548
                            ],
                            "referencedDeclaration": 2631,
                            "src": "7557:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7557:49:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2239,
                        "nodeType": "ExpressionStatement",
                        "src": "7557:49:12"
                      },
                      {
                        "condition": {
                          "id": 2240,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2145,
                          "src": "7620:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2250,
                        "nodeType": "IfStatement",
                        "src": "7616:47:12",
                        "trueBody": {
                          "expression": {
                            "id": 2248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2241,
                              "name": "kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "7627:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 2244,
                                    "name": "reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1780,
                                    "src": "7643:8:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 2243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7635:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2242,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7635:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7635:17:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2246,
                                "name": "reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1782,
                                "src": "7655:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "src": "7635:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7627:36:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2249,
                          "nodeType": "ExpressionStatement",
                          "src": "7627:36:12"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2252,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7692:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7696:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7692:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2254,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2082,
                              "src": "7704:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2255,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2084,
                              "src": "7713:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2256,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2077,
                              "src": "7722:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2251,
                            "name": "Burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1827,
                            "src": "7687:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,address)"
                            }
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7687:38:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2258,
                        "nodeType": "EmitStatement",
                        "src": "7682:43:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2075,
                    "nodeType": "StructuredDocumentation",
                    "src": "6230:222:12",
                    "text": " @dev 流動性をバーン（流動性削除）\n @param to トークンの受取人アドレス\n @return amount0 返却されるtoken0の量\n @return amount1 返却されるtoken1の量"
                  },
                  "functionSelector": "89afcb44",
                  "id": 2260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2080,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2079,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6492:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "6492:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6492:12:12"
                    }
                  ],
                  "name": "burn",
                  "nameLocation": "6466:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2078,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2077,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6479:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2260,
                        "src": "6471:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2076,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6471:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6470:12:12"
                  },
                  "returnParameters": {
                    "id": 2085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2082,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "6522:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2260,
                        "src": "6514:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2081,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6514:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2084,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "6539:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2260,
                        "src": "6531:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6531:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6513:34:12"
                  },
                  "scope": 2831,
                  "src": "6457:1275:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2487,
                    "nodeType": "Block",
                    "src": "8122:1957:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2274,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "8136:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8150:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8136:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2277,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "8155:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8169:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8155:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8136:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2284,
                        "nodeType": "IfStatement",
                        "src": "8132:73:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2281,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1849,
                              "src": "8179:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8179:26:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2283,
                          "nodeType": "RevertStatement",
                          "src": "8172:33:12"
                        }
                      },
                      {
                        "assignments": [
                          2286,
                          2288,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2286,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "8233:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2487,
                            "src": "8225:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2285,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "8225:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2288,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "8252:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2487,
                            "src": "8244:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2287,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "8244:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2291,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2289,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "8266:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8266:13:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8224:55:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2292,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "8293:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2293,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "8307:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "8293:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2295,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "8320:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2296,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2288,
                              "src": "8334:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "8320:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8293:50:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2302,
                        "nodeType": "IfStatement",
                        "src": "8289:86:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2299,
                              "name": "InsufficientLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1843,
                              "src": "8352:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8352:23:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2301,
                          "nodeType": "RevertStatement",
                          "src": "8345:30:12"
                        }
                      },
                      {
                        "assignments": [
                          2304
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2304,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "8402:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2487,
                            "src": "8394:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2303,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8394:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2305,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8394:16:12"
                      },
                      {
                        "assignments": [
                          2307
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2307,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "8428:8:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2487,
                            "src": "8420:16:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2306,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8420:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2308,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8420:16:12"
                      },
                      {
                        "id": 2382,
                        "nodeType": "Block",
                        "src": "8446:693:12",
                        "statements": [
                          {
                            "assignments": [
                              2310
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2310,
                                "mutability": "mutable",
                                "name": "_token0",
                                "nameLocation": "8468:7:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2382,
                                "src": "8460:15:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 2309,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8460:7:12",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2312,
                            "initialValue": {
                              "id": 2311,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "8478:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8460:24:12"
                          },
                          {
                            "assignments": [
                              2314
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2314,
                                "mutability": "mutable",
                                "name": "_token1",
                                "nameLocation": "8506:7:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2382,
                                "src": "8498:15:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 2313,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8498:7:12",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2316,
                            "initialValue": {
                              "id": 2315,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1777,
                              "src": "8516:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8498:24:12"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2317,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2267,
                                  "src": "8540:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2318,
                                  "name": "_token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2310,
                                  "src": "8546:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8540:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2320,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2267,
                                  "src": "8557:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2321,
                                  "name": "_token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2314,
                                  "src": "8563:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "8557:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8540:30:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2327,
                            "nodeType": "IfStatement",
                            "src": "8536:54:12",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2324,
                                  "name": "InvalidTo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1858,
                                  "src": "8579:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8579:11:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2326,
                              "nodeType": "RevertStatement",
                              "src": "8572:18:12"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2328,
                                "name": "amount0Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2263,
                                "src": "8621:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8634:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8621:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2339,
                            "nodeType": "IfStatement",
                            "src": "8617:64:12",
                            "trueBody": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2335,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2267,
                                    "src": "8666:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2336,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2263,
                                    "src": "8670:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2332,
                                        "name": "_token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2310,
                                        "src": "8644:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2331,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 819,
                                      "src": "8637:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8637:15:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8653:12:12",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 890,
                                  "src": "8637:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 2337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8637:44:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2338,
                              "nodeType": "ExpressionStatement",
                              "src": "8637:44:12"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2340,
                                "name": "amount1Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2265,
                                "src": "8699:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8712:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8699:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2351,
                            "nodeType": "IfStatement",
                            "src": "8695:64:12",
                            "trueBody": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2347,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2267,
                                    "src": "8744:2:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2348,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2265,
                                    "src": "8748:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2344,
                                        "name": "_token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2314,
                                        "src": "8722:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2343,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 819,
                                      "src": "8715:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2345,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8715:15:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8731:12:12",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 890,
                                  "src": "8715:28:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 2349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8715:44:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2350,
                              "nodeType": "ExpressionStatement",
                              "src": "8715:44:12"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2352,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2269,
                                  "src": "8857:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 2353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8862:6:12",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "8857:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8871:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8857:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2357,
                            "nodeType": "IfStatement",
                            "src": "8853:133:12",
                            "trueBody": {
                              "id": 2356,
                              "nodeType": "Block",
                              "src": "8874:112:12",
                              "statements": []
                            }
                          },
                          {
                            "expression": {
                              "id": 2368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2358,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2304,
                                "src": "9012:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2365,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "9057:4:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DexPair_$2831",
                                          "typeString": "contract DexPair"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DexPair_$2831",
                                          "typeString": "contract DexPair"
                                        }
                                      ],
                                      "id": 2364,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9049:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2363,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9049:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9049:13:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2360,
                                        "name": "_token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2310,
                                        "src": "9030:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2359,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 819,
                                      "src": "9023:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2361,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9023:15:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9039:9:12",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 776,
                                  "src": "9023:25:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9023:40:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9012:51:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2369,
                            "nodeType": "ExpressionStatement",
                            "src": "9012:51:12"
                          },
                          {
                            "expression": {
                              "id": 2380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2370,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2307,
                                "src": "9077:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2377,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "9122:4:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DexPair_$2831",
                                          "typeString": "contract DexPair"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DexPair_$2831",
                                          "typeString": "contract DexPair"
                                        }
                                      ],
                                      "id": 2376,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9114:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2375,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9114:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2378,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9114:13:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2372,
                                        "name": "_token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2314,
                                        "src": "9095:7:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2371,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 819,
                                      "src": "9088:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2373,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9088:15:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$819",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9104:9:12",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 776,
                                  "src": "9088:25:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9088:40:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9077:51:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2381,
                            "nodeType": "ExpressionStatement",
                            "src": "9077:51:12"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          2384
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2384,
                            "mutability": "mutable",
                            "name": "amount0In",
                            "nameLocation": "9165:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2487,
                            "src": "9157:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2383,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9157:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2398,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2385,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2304,
                              "src": "9177:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2386,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2286,
                                "src": "9188:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2387,
                                "name": "amount0Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2263,
                                "src": "9200:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9188:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9177:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 2396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9277:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 2397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9177:101:12",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2390,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2304,
                              "src": "9226:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2391,
                                    "name": "_reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2286,
                                    "src": "9238:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2392,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2263,
                                    "src": "9250:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9238:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2394,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9237:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9226:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9157:121:12"
                      },
                      {
                        "assignments": [
                          2400
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2400,
                            "mutability": "mutable",
                            "name": "amount1In",
                            "nameLocation": "9296:9:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2487,
                            "src": "9288:17:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2399,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9288:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2414,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2401,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2307,
                              "src": "9308:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2402,
                                "name": "_reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2288,
                                "src": "9319:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2403,
                                "name": "amount1Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2265,
                                "src": "9331:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9319:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9308:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 2412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9408:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 2413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9308:101:12",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2406,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2307,
                              "src": "9357:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2407,
                                    "name": "_reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2288,
                                    "src": "9369:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2408,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2265,
                                    "src": "9381:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9369:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2410,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9368:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9357:35:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9288:121:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2415,
                              "name": "amount0In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "9432:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9445:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9432:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2418,
                              "name": "amount1In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2400,
                              "src": "9450:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9463:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9450:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9432:32:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2425,
                        "nodeType": "IfStatement",
                        "src": "9428:70:12",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2422,
                              "name": "InsufficientInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1852,
                              "src": "9473:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9473:25:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2424,
                          "nodeType": "RevertStatement",
                          "src": "9466:32:12"
                        }
                      },
                      {
                        "id": 2469,
                        "nodeType": "Block",
                        "src": "9517:398:12",
                        "statements": [
                          {
                            "assignments": [
                              2427
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2427,
                                "mutability": "mutable",
                                "name": "balance0Adjusted",
                                "nameLocation": "9614:16:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2469,
                                "src": "9606:24:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2426,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9606:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2437,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2428,
                                      "name": "balance0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2304,
                                      "src": "9634:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31303030",
                                      "id": 2429,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9645:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "src": "9634:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2431,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9633:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2434,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2432,
                                      "name": "amount0In",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2384,
                                      "src": "9654:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "33",
                                      "id": 2433,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9666:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "src": "9654:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2435,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9653:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9633:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9606:62:12"
                          },
                          {
                            "assignments": [
                              2439
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2439,
                                "mutability": "mutable",
                                "name": "balance1Adjusted",
                                "nameLocation": "9690:16:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2469,
                                "src": "9682:24:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2438,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9682:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2449,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2440,
                                      "name": "balance1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2307,
                                      "src": "9710:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31303030",
                                      "id": 2441,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9721:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "src": "9710:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2443,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9709:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2444,
                                      "name": "amount1In",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2400,
                                      "src": "9730:9:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "33",
                                      "id": 2445,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9742:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "src": "9730:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2447,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9729:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9709:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9682:62:12"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2450,
                                  "name": "balance0Adjusted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2427,
                                  "src": "9775:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2451,
                                  "name": "balance1Adjusted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2439,
                                  "src": "9794:16:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9775:35:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 2455,
                                        "name": "_reserve0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2286,
                                        "src": "9821:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      ],
                                      "id": 2454,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9813:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2453,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9813:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9813:18:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2457,
                                    "name": "_reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2288,
                                    "src": "9834:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "src": "9813:30:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "id": 2461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31303030",
                                    "id": 2459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9846:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 2460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9852:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "9846:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                },
                                "src": "9813:40:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9775:78:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2468,
                            "nodeType": "IfStatement",
                            "src": "9771:134:12",
                            "trueBody": {
                              "id": 2467,
                              "nodeType": "Block",
                              "src": "9855:50:12",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2464,
                                      "name": "InvalidK",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1855,
                                      "src": "9880:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                        "typeString": "function () pure returns (error)"
                                      }
                                    },
                                    "id": 2465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9880:10:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 2466,
                                  "nodeType": "RevertStatement",
                                  "src": "9873:17:12"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2471,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2304,
                              "src": "9941:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2472,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2307,
                              "src": "9951:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2473,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "9961:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2474,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2288,
                              "src": "9972:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2470,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2631,
                              548
                            ],
                            "referencedDeclaration": 2631,
                            "src": "9933:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9933:49:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2476,
                        "nodeType": "ExpressionStatement",
                        "src": "9933:49:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2478,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10011:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10015:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10011:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2480,
                              "name": "amount0In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "10023:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2481,
                              "name": "amount1In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2400,
                              "src": "10034:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2482,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "10045:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2483,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "10057:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2484,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2267,
                              "src": "10069:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2477,
                            "name": "Swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1807,
                            "src": "10006:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,uint256,address)"
                            }
                          },
                          "id": 2485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10006:66:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2486,
                        "nodeType": "EmitStatement",
                        "src": "10001:71:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2261,
                    "nodeType": "StructuredDocumentation",
                    "src": "7742:228:12",
                    "text": " @dev スワップ実行\n @param amount0Out token0の出力量\n @param amount1Out token1の出力量\n @param to 出力トークンの受取人\n @param data コールバック用データ"
                  },
                  "functionSelector": "022c0d9f",
                  "id": 2488,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2272,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2271,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "8109:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "8109:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8109:12:12"
                    }
                  ],
                  "name": "swap",
                  "nameLocation": "7984:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2263,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "8006:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "7998:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7998:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2265,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "8034:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "8026:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8026:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2267,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "8062:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "8054:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8054:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2269,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8089:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2488,
                        "src": "8074:19:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2268,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8074:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7988:111:12"
                  },
                  "returnParameters": {
                    "id": 2273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8122:0:12"
                  },
                  "scope": 2831,
                  "src": "7975:2104:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2517,
                    "nodeType": "Block",
                    "src": "10198:184:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2501,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "10262:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DexPair_$2831",
                                        "typeString": "contract DexPair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DexPair_$2831",
                                        "typeString": "contract DexPair"
                                      }
                                    ],
                                    "id": 2500,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10254:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2499,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10254:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10254:13:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2496,
                                      "name": "token0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1774,
                                      "src": "10236:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2495,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 819,
                                    "src": "10229:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 2497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10229:14:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$819",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10244:9:12",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 776,
                                "src": "10229:24:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 2503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10229:39:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2510,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "10315:4:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DexPair_$2831",
                                        "typeString": "contract DexPair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DexPair_$2831",
                                        "typeString": "contract DexPair"
                                      }
                                    ],
                                    "id": 2509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10307:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2508,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10307:7:12",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2511,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10307:13:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2505,
                                      "name": "token1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1777,
                                      "src": "10289:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2504,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 819,
                                    "src": "10282:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 2506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10282:14:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$819",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10297:9:12",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 776,
                                "src": "10282:24:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 2512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10282:39:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2513,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1780,
                              "src": "10335:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2514,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "10357:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2494,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2631,
                              548
                            ],
                            "referencedDeclaration": 2631,
                            "src": "10208:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 2515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10208:167:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2516,
                        "nodeType": "ExpressionStatement",
                        "src": "10208:167:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2489,
                    "nodeType": "StructuredDocumentation",
                    "src": "10089:66:12",
                    "text": " @dev トークン残高をリザーブに同期"
                  },
                  "functionSelector": "fff6cae9",
                  "id": 2518,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2492,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2491,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "10185:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "10185:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10185:12:12"
                    }
                  ],
                  "name": "sync",
                  "nameLocation": "10169:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10173:2:12"
                  },
                  "returnParameters": {
                    "id": 2493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10198:0:12"
                  },
                  "scope": 2831,
                  "src": "10160:222:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2630,
                    "nodeType": "Block",
                    "src": "10579:710:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2530,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2521,
                              "src": "10593:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10609:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    },
                                    "typeName": {
                                      "id": 2532,
                                      "name": "uint112",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10609:7:12",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    }
                                  ],
                                  "id": 2531,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "10604:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10604:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint112",
                                  "typeString": "type(uint112)"
                                }
                              },
                              "id": 2535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10618:3:12",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "10604:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "10593:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2537,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2523,
                              "src": "10625:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2540,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10641:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    },
                                    "typeName": {
                                      "id": 2539,
                                      "name": "uint112",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10641:7:12",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    }
                                  ],
                                  "id": 2538,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "10636:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10636:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint112",
                                  "typeString": "type(uint112)"
                                }
                              },
                              "id": 2542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10650:3:12",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "10636:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "src": "10625:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10593:60:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2549,
                        "nodeType": "IfStatement",
                        "src": "10589:108:12",
                        "trueBody": {
                          "id": 2548,
                          "nodeType": "Block",
                          "src": "10655:42:12",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2545,
                                  "name": "Overflow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1840,
                                  "src": "10676:8:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10676:10:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2547,
                              "nodeType": "RevertStatement",
                              "src": "10669:17:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2551
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2551,
                            "mutability": "mutable",
                            "name": "blockTimestamp",
                            "nameLocation": "10722:14:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2630,
                            "src": "10715:21:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 2550,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10715:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2561,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2554,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10746:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10752:9:12",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10746:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                },
                                "id": 2558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 2556,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10764:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 2557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10767:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "10764:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                }
                              },
                              "src": "10746:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10739:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2552,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10739:6:12",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10739:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10715:55:12"
                      },
                      {
                        "assignments": [
                          2563
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2563,
                            "mutability": "mutable",
                            "name": "timeElapsed",
                            "nameLocation": "10787:11:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2630,
                            "src": "10780:18:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 2562,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10780:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2567,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2564,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2551,
                            "src": "10801:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2565,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "10818:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10801:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10780:56:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 2570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2568,
                                "name": "timeElapsed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2563,
                                "src": "10859:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10873:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10859:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 2573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2571,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2525,
                                "src": "10878:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10891:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10878:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10859:33:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2575,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2527,
                              "src": "10896:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10909:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10896:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10859:51:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2606,
                        "nodeType": "IfStatement",
                        "src": "10855:250:12",
                        "trueBody": {
                          "id": 2605,
                          "nodeType": "Block",
                          "src": "10912:193:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2579,
                                  "name": "price0CumulativeLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1787,
                                  "src": "10926:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2589,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        },
                                        "id": 2586,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 2583,
                                              "name": "_reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2527,
                                              "src": "10966:9:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "id": 2582,
                                            "name": "_encode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2830,
                                            "src": "10958:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
                                              "typeString": "function (uint112) pure returns (uint224)"
                                            }
                                          },
                                          "id": 2584,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10958:18:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint224",
                                            "typeString": "uint224"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2585,
                                          "name": "_reserve0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2525,
                                          "src": "10979:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        },
                                        "src": "10958:30:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 2581,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10950:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2580,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10950:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10950:39:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2588,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2563,
                                    "src": "10992:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "10950:53:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10926:77:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2591,
                              "nodeType": "ExpressionStatement",
                              "src": "10926:77:12"
                            },
                            {
                              "expression": {
                                "id": 2603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2592,
                                  "name": "price1CumulativeLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1789,
                                  "src": "11017:20:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        },
                                        "id": 2599,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 2596,
                                              "name": "_reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2525,
                                              "src": "11057:9:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "id": 2595,
                                            "name": "_encode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2830,
                                            "src": "11049:7:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
                                              "typeString": "function (uint112) pure returns (uint224)"
                                            }
                                          },
                                          "id": 2597,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11049:18:12",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint224",
                                            "typeString": "uint224"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2598,
                                          "name": "_reserve1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2527,
                                          "src": "11070:9:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        },
                                        "src": "11049:30:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 2594,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11041:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 2593,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11041:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2600,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11041:39:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2601,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2563,
                                    "src": "11083:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "11041:53:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11017:77:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2604,
                              "nodeType": "ExpressionStatement",
                              "src": "11017:77:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2607,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1780,
                            "src": "11123:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2610,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2521,
                                "src": "11142:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11134:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 2608,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "11134:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11134:17:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "11123:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2613,
                        "nodeType": "ExpressionStatement",
                        "src": "11123:28:12"
                      },
                      {
                        "expression": {
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2614,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1782,
                            "src": "11161:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2617,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2523,
                                "src": "11180:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11172:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 2615,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "11172:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11172:17:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "11161:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 2620,
                        "nodeType": "ExpressionStatement",
                        "src": "11161:28:12"
                      },
                      {
                        "expression": {
                          "id": 2623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2621,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "11199:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2622,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2551,
                            "src": "11220:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "11199:35:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 2624,
                        "nodeType": "ExpressionStatement",
                        "src": "11199:35:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2626,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1780,
                              "src": "11263:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 2627,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "11273:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 2625,
                            "name": "Sync",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1834,
                            "src": "11258:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint112,uint112)"
                            }
                          },
                          "id": 2628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11258:24:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2629,
                        "nodeType": "EmitStatement",
                        "src": "11253:29:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2519,
                    "nodeType": "StructuredDocumentation",
                    "src": "10392:45:12",
                    "text": " @dev リザーブの更新"
                  },
                  "id": 2631,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "10451:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2521,
                        "mutability": "mutable",
                        "name": "balance0",
                        "nameLocation": "10476:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2631,
                        "src": "10468:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10468:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2523,
                        "mutability": "mutable",
                        "name": "balance1",
                        "nameLocation": "10502:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2631,
                        "src": "10494:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10494:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2525,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "10528:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2631,
                        "src": "10520:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2524,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "10520:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2527,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "10555:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2631,
                        "src": "10547:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2526,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "10547:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10458:112:12"
                  },
                  "returnParameters": {
                    "id": 2529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10579:0:12"
                  },
                  "scope": 2831,
                  "src": "10442:847:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2735,
                    "nodeType": "Block",
                    "src": "11434:723:12",
                    "statements": [
                      {
                        "assignments": [
                          2642
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2642,
                            "mutability": "mutable",
                            "name": "feeTo",
                            "nameLocation": "11452:5:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2735,
                            "src": "11444:13:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2641,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11444:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2648,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2644,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1771,
                                  "src": "11469:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2643,
                                "name": "IFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2838,
                                "src": "11460:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IFactory_$2838_$",
                                  "typeString": "type(contract IFactory)"
                                }
                              },
                              "id": 2645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11460:17:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFactory_$2838",
                                "typeString": "contract IFactory"
                              }
                            },
                            "id": 2646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11478:5:12",
                            "memberName": "feeTo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2837,
                            "src": "11460:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11460:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11444:41:12"
                      },
                      {
                        "expression": {
                          "id": 2656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2649,
                            "name": "feeOn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2639,
                            "src": "11495:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2650,
                              "name": "feeTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2642,
                              "src": "11503:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11520:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11512:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2651,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11512:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11512:10:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11503:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11495:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2657,
                        "nodeType": "ExpressionStatement",
                        "src": "11495:27:12"
                      },
                      {
                        "assignments": [
                          2659
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2659,
                            "mutability": "mutable",
                            "name": "_kLast",
                            "nameLocation": "11540:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2735,
                            "src": "11532:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2658,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11532:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2661,
                        "initialValue": {
                          "id": 2660,
                          "name": "kLast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1792,
                          "src": "11549:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11532:22:12"
                      },
                      {
                        "condition": {
                          "id": 2662,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2639,
                          "src": "11577:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2725,
                              "name": "_kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2659,
                              "src": "12104:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12114:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12104:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2733,
                          "nodeType": "IfStatement",
                          "src": "12100:51:12",
                          "trueBody": {
                            "id": 2732,
                            "nodeType": "Block",
                            "src": "12117:34:12",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2730,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2728,
                                    "name": "kLast",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1792,
                                    "src": "12131:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 2729,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12139:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "12131:9:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2731,
                                "nodeType": "ExpressionStatement",
                                "src": "12131:9:12"
                              }
                            ]
                          }
                        },
                        "id": 2734,
                        "nodeType": "IfStatement",
                        "src": "11573:578:12",
                        "trueBody": {
                          "id": 2724,
                          "nodeType": "Block",
                          "src": "11584:510:12",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2663,
                                  "name": "_kLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2659,
                                  "src": "11602:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11612:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11602:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2723,
                              "nodeType": "IfStatement",
                              "src": "11598:486:12",
                              "trueBody": {
                                "id": 2722,
                                "nodeType": "Block",
                                "src": "11615:469:12",
                                "statements": [
                                  {
                                    "assignments": [
                                      2667
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2667,
                                        "mutability": "mutable",
                                        "name": "rootK",
                                        "nameLocation": "11641:5:12",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2722,
                                        "src": "11633:13:12",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2666,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11633:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2676,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2674,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "id": 2671,
                                                "name": "_reserve0",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2634,
                                                "src": "11663:9:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              ],
                                              "id": 2670,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "11655:7:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 2669,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11655:7:12",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2672,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "11655:18:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 2673,
                                            "name": "_reserve1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2636,
                                            "src": "11676:9:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          },
                                          "src": "11655:30:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2668,
                                        "name": "_sqrt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2791,
                                        "src": "11649:5:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2675,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11649:37:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "11633:53:12"
                                  },
                                  {
                                    "assignments": [
                                      2678
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 2678,
                                        "mutability": "mutable",
                                        "name": "rootKLast",
                                        "nameLocation": "11712:9:12",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 2722,
                                        "src": "11704:17:12",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 2677,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11704:7:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 2682,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 2680,
                                          "name": "_kLast",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2659,
                                          "src": "11730:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2679,
                                        "name": "_sqrt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2791,
                                        "src": "11724:5:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2681,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11724:13:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "11704:33:12"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2685,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2683,
                                        "name": "rootK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2667,
                                        "src": "11759:5:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 2684,
                                        "name": "rootKLast",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2678,
                                        "src": "11767:9:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11759:17:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2721,
                                    "nodeType": "IfStatement",
                                    "src": "11755:315:12",
                                    "trueBody": {
                                      "id": 2720,
                                      "nodeType": "Block",
                                      "src": "11778:292:12",
                                      "statements": [
                                        {
                                          "assignments": [
                                            2687
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 2687,
                                              "mutability": "mutable",
                                              "name": "numerator",
                                              "nameLocation": "11808:9:12",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 2720,
                                              "src": "11800:17:12",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 2686,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11800:7:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 2695,
                                          "initialValue": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2694,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 2688,
                                                "name": "totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 314,
                                                "src": "11820:11:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                  "typeString": "function () view returns (uint256)"
                                                }
                                              },
                                              "id": 2689,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11820:13:12",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2692,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2690,
                                                    "name": "rootK",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2667,
                                                    "src": "11837:5:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "-",
                                                  "rightExpression": {
                                                    "id": 2691,
                                                    "name": "rootKLast",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2678,
                                                    "src": "11845:9:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "11837:17:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2693,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "11836:19:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11820:35:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "11800:55:12"
                                        },
                                        {
                                          "assignments": [
                                            2697
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 2697,
                                              "mutability": "mutable",
                                              "name": "denominator",
                                              "nameLocation": "11885:11:12",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 2720,
                                              "src": "11877:19:12",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 2696,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11877:7:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 2704,
                                          "initialValue": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2703,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2700,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2698,
                                                    "name": "rootK",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2667,
                                                    "src": "11900:5:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "35",
                                                    "id": 2699,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11908:1:12",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_5_by_1",
                                                      "typeString": "int_const 5"
                                                    },
                                                    "value": "5"
                                                  },
                                                  "src": "11900:9:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 2701,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "11899:11:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "id": 2702,
                                              "name": "rootKLast",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2678,
                                              "src": "11913:9:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11899:23:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "11877:45:12"
                                        },
                                        {
                                          "assignments": [
                                            2706
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 2706,
                                              "mutability": "mutable",
                                              "name": "liquidity",
                                              "nameLocation": "11952:9:12",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 2720,
                                              "src": "11944:17:12",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 2705,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "11944:7:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 2710,
                                          "initialValue": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2709,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2707,
                                              "name": "numerator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2687,
                                              "src": "11964:9:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "id": 2708,
                                              "name": "denominator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2697,
                                              "src": "11976:11:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11964:23:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "11944:43:12"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2713,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2711,
                                              "name": "liquidity",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2706,
                                              "src": "12013:9:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "hexValue": "30",
                                              "id": 2712,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12025:1:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "src": "12013:13:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 2719,
                                          "nodeType": "IfStatement",
                                          "src": "12009:42:12",
                                          "trueBody": {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 2715,
                                                  "name": "feeTo",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2642,
                                                  "src": "12034:5:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "id": 2716,
                                                  "name": "liquidity",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2706,
                                                  "src": "12041:9:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "id": 2714,
                                                "name": "_mint",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 581,
                                                "src": "12028:5:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                  "typeString": "function (address,uint256)"
                                                }
                                              },
                                              "id": 2717,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "12028:23:12",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 2718,
                                            "nodeType": "ExpressionStatement",
                                            "src": "12028:23:12"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2632,
                    "nodeType": "StructuredDocumentation",
                    "src": "11299:45:12",
                    "text": " @dev 手数料のミント"
                  },
                  "id": 2736,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mintFee",
                  "nameLocation": "11358:8:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2634,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "11375:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2736,
                        "src": "11367:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2633,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "11367:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2636,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "11394:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2736,
                        "src": "11386:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2635,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "11386:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11366:38:12"
                  },
                  "returnParameters": {
                    "id": 2640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2639,
                        "mutability": "mutable",
                        "name": "feeOn",
                        "nameLocation": "11427:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2736,
                        "src": "11422:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2638,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11422:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11421:12:12"
                  },
                  "scope": 2831,
                  "src": "11349:808:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2790,
                    "nodeType": "Block",
                    "src": "12297:242:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2744,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2739,
                            "src": "12311:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 2745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12315:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "12311:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2780,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2739,
                              "src": "12495:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12500:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12495:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2788,
                          "nodeType": "IfStatement",
                          "src": "12491:42:12",
                          "trueBody": {
                            "id": 2787,
                            "nodeType": "Block",
                            "src": "12503:30:12",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2783,
                                    "name": "z",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2742,
                                    "src": "12517:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 2784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12521:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "12517:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2786,
                                "nodeType": "ExpressionStatement",
                                "src": "12517:5:12"
                              }
                            ]
                          }
                        },
                        "id": 2789,
                        "nodeType": "IfStatement",
                        "src": "12307:226:12",
                        "trueBody": {
                          "id": 2779,
                          "nodeType": "Block",
                          "src": "12318:167:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2747,
                                  "name": "z",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2742,
                                  "src": "12332:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2748,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2739,
                                  "src": "12336:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12332:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2750,
                              "nodeType": "ExpressionStatement",
                              "src": "12332:5:12"
                            },
                            {
                              "assignments": [
                                2752
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2752,
                                  "mutability": "mutable",
                                  "name": "x",
                                  "nameLocation": "12359:1:12",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2779,
                                  "src": "12351:9:12",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2751,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12351:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2758,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2753,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2739,
                                    "src": "12363:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 2754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12367:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "12363:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12371:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "12363:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12351:21:12"
                            },
                            {
                              "body": {
                                "id": 2777,
                                "nodeType": "Block",
                                "src": "12400:75:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2764,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2762,
                                        "name": "z",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2742,
                                        "src": "12418:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2763,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2752,
                                        "src": "12422:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12418:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2765,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12418:5:12"
                                  },
                                  {
                                    "expression": {
                                      "id": 2775,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2766,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2752,
                                        "src": "12441:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2774,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2771,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2769,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2767,
                                                  "name": "y",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2739,
                                                  "src": "12446:1:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                  "id": 2768,
                                                  "name": "x",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2752,
                                                  "src": "12450:1:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "12446:5:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "id": 2770,
                                                "name": "x",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2752,
                                                "src": "12454:1:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "12446:9:12",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2772,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "12445:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 2773,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12459:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "12445:15:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12441:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2776,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12441:19:12"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2759,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2752,
                                  "src": "12393:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 2760,
                                  "name": "z",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2742,
                                  "src": "12397:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12393:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2778,
                              "nodeType": "WhileStatement",
                              "src": "12386:89:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2737,
                    "nodeType": "StructuredDocumentation",
                    "src": "12167:66:12",
                    "text": " @dev 平方根の計算（バビロニア法）"
                  },
                  "id": 2791,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_sqrt",
                  "nameLocation": "12247:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2740,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2739,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "12261:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2791,
                        "src": "12253:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2738,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12253:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12252:11:12"
                  },
                  "returnParameters": {
                    "id": 2743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2742,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "12294:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2791,
                        "src": "12286:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12286:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12285:11:12"
                  },
                  "scope": 2831,
                  "src": "12238:301:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2808,
                    "nodeType": "Block",
                    "src": "12663:37:12",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2801,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2794,
                              "src": "12680:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 2802,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2796,
                              "src": "12684:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12680:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2805,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2796,
                            "src": "12692:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "12680:13:12",
                          "trueExpression": {
                            "id": 2804,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2794,
                            "src": "12688:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2800,
                        "id": 2807,
                        "nodeType": "Return",
                        "src": "12673:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2792,
                    "nodeType": "StructuredDocumentation",
                    "src": "12549:42:12",
                    "text": " @dev 最小値を返す"
                  },
                  "id": 2809,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_min",
                  "nameLocation": "12605:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2794,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "12618:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2809,
                        "src": "12610:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2793,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12610:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2796,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "12629:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2809,
                        "src": "12621:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2795,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12621:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12609:22:12"
                  },
                  "returnParameters": {
                    "id": 2800,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2799,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2809,
                        "src": "12654:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2798,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12654:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12653:9:12"
                  },
                  "scope": 2831,
                  "src": "12596:104:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2829,
                    "nodeType": "Block",
                    "src": "12831:52:12",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          "id": 2827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2819,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2812,
                                "src": "12856:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              ],
                              "id": 2818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12848:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint224_$",
                                "typeString": "type(uint224)"
                              },
                              "typeName": {
                                "id": 2817,
                                "name": "uint224",
                                "nodeType": "ElementaryTypeName",
                                "src": "12848:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12848:10:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                  "typeString": "int_const 5192...(26 digits omitted)...0096"
                                },
                                "id": 2825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 2823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12869:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "313132",
                                  "id": 2824,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12872:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_112_by_1",
                                    "typeString": "int_const 112"
                                  },
                                  "value": "112"
                                },
                                "src": "12869:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                  "typeString": "int_const 5192...(26 digits omitted)...0096"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                                  "typeString": "int_const 5192...(26 digits omitted)...0096"
                                }
                              ],
                              "id": 2822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12861:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint224_$",
                                "typeString": "type(uint224)"
                              },
                              "typeName": {
                                "id": 2821,
                                "name": "uint224",
                                "nodeType": "ElementaryTypeName",
                                "src": "12861:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12861:15:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "12848:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "functionReturnParameters": 2816,
                        "id": 2828,
                        "nodeType": "Return",
                        "src": "12841:35:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2810,
                    "nodeType": "StructuredDocumentation",
                    "src": "12710:57:12",
                    "text": " @dev UQ112x112形式でエンコード"
                  },
                  "id": 2830,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_encode",
                  "nameLocation": "12781:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2812,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "12797:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2830,
                        "src": "12789:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2811,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "12789:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12788:11:12"
                  },
                  "returnParameters": {
                    "id": 2816,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2815,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2830,
                        "src": "12822:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 2814,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "12822:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12821:9:12"
                  },
                  "scope": 2831,
                  "src": "12772:111:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 2839,
              "src": "480:12405:12",
              "usedErrors": [
                101,
                106,
                111,
                120,
                125,
                130,
                857,
                1353,
                1837,
                1840,
                1843,
                1846,
                1849,
                1852,
                1855,
                1858
              ],
              "usedEvents": [
                753,
                762,
                1807,
                1816,
                1827,
                1834
              ]
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2832,
                "nodeType": "StructuredDocumentation",
                "src": "12887:58:12",
                "text": " @dev ファクトリーインターフェース"
              },
              "fullyImplemented": false,
              "id": 2838,
              "linearizedBaseContracts": [
                2838
              ],
              "name": "IFactory",
              "nameLocation": "12956:8:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "017e7e58",
                  "id": 2837,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nameLocation": "12980:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2833,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12985:2:12"
                  },
                  "returnParameters": {
                    "id": 2836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2835,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2837,
                        "src": "13011:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2834,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13011:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13010:9:12"
                  },
                  "scope": 2838,
                  "src": "12971:49:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2839,
              "src": "12946:76:12",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:12991:12"
        },
        "id": 12
      },
      "contracts/DexRouter.sol": {
        "ast": {
          "absolutePath": "contracts/DexRouter.sol",
          "exportedSymbols": {
            "Context": [
              1339
            ],
            "DexFactory": [
              1747
            ],
            "DexPair": [
              2831
            ],
            "DexRouter": [
              3952
            ],
            "ERC20": [
              741
            ],
            "IERC1363": [
              81
            ],
            "IERC20": [
              819
            ],
            "IERC20Errors": [
              131
            ],
            "IERC20Metadata": [
              845
            ],
            "IFactory": [
              2838
            ],
            "ReentrancyGuard": [
              1408
            ],
            "SafeERC20": [
              1309
            ]
          },
          "id": 3953,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2840,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 2841,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3953,
              "sourceUnit": 1409,
              "src": "58:59:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2842,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3953,
              "sourceUnit": 820,
              "src": "118:56:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 2843,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3953,
              "sourceUnit": 1310,
              "src": "175:65:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/DexFactory.sol",
              "file": "./DexFactory.sol",
              "id": 2844,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3953,
              "sourceUnit": 1748,
              "src": "241:26:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/DexPair.sol",
              "file": "./DexPair.sol",
              "id": 2845,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3953,
              "sourceUnit": 2839,
              "src": "268:23:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2847,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "502:15:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1408,
                    "src": "502:15:13"
                  },
                  "id": 2848,
                  "nodeType": "InheritanceSpecifier",
                  "src": "502:15:13"
                }
              ],
              "canonicalName": "DexRouter",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2846,
                "nodeType": "StructuredDocumentation",
                "src": "293:186:13",
                "text": " @title DexRouter\n @dev ユーザーとの主要インターフェースを提供するルーターコントラクト\n @notice 流動性管理とスワップ機能を提供"
              },
              "fullyImplemented": true,
              "id": 3952,
              "linearizedBaseContracts": [
                3952,
                1408
              ],
              "name": "DexRouter",
              "nameLocation": "489:9:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 2852,
                  "libraryName": {
                    "id": 2849,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "530:9:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1309,
                    "src": "530:9:13"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "524:27:13",
                  "typeName": {
                    "id": 2851,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2850,
                      "name": "IERC20",
                      "nameLocations": [
                        "544:6:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 819,
                      "src": "544:6:13"
                    },
                    "referencedDeclaration": 819,
                    "src": "544:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$819",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 2853,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:60:13",
                    "text": "@dev ファクトリーコントラクトのアドレス"
                  },
                  "functionSelector": "2dd31000",
                  "id": 2855,
                  "mutability": "immutable",
                  "name": "FACTORY",
                  "nameLocation": "651:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3952,
                  "src": "626:32:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 2856,
                    "nodeType": "StructuredDocumentation",
                    "src": "669:48:13",
                    "text": " @dev エラー：期限切れ"
                  },
                  "errorSelector": "1ab7da6b",
                  "id": 2858,
                  "name": "DeadlineExpired",
                  "nameLocation": "728:15:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2857,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "743:2:13"
                  },
                  "src": "722:24:13"
                },
                {
                  "documentation": {
                    "id": 2859,
                    "nodeType": "StructuredDocumentation",
                    "src": "756:52:13",
                    "text": " @dev エラー：不十分なA量"
                  },
                  "errorSelector": "8dc525d1",
                  "id": 2861,
                  "name": "InsufficientAAmount",
                  "nameLocation": "819:19:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2860,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "838:2:13"
                  },
                  "src": "813:28:13"
                },
                {
                  "documentation": {
                    "id": 2862,
                    "nodeType": "StructuredDocumentation",
                    "src": "851:52:13",
                    "text": " @dev エラー：不十分なB量"
                  },
                  "errorSelector": "ef71d091",
                  "id": 2864,
                  "name": "InsufficientBAmount",
                  "nameLocation": "914:19:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2863,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "933:2:13"
                  },
                  "src": "908:28:13"
                },
                {
                  "documentation": {
                    "id": 2865,
                    "nodeType": "StructuredDocumentation",
                    "src": "946:57:13",
                    "text": " @dev エラー：不十分な出力量"
                  },
                  "errorSelector": "42301c23",
                  "id": 2867,
                  "name": "InsufficientOutputAmount",
                  "nameLocation": "1014:24:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2866,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1038:2:13"
                  },
                  "src": "1008:33:13"
                },
                {
                  "documentation": {
                    "id": 2868,
                    "nodeType": "StructuredDocumentation",
                    "src": "1051:54:13",
                    "text": " @dev エラー：過度な入力量"
                  },
                  "errorSelector": "e1b0da4f",
                  "id": 2870,
                  "name": "ExcessiveInputAmount",
                  "nameLocation": "1116:20:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1136:2:13"
                  },
                  "src": "1110:29:13"
                },
                {
                  "documentation": {
                    "id": 2871,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:51:13",
                    "text": " @dev エラー：不正なパス"
                  },
                  "errorSelector": "20db8267",
                  "id": 2873,
                  "name": "InvalidPath",
                  "nameLocation": "1211:11:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2872,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1222:2:13"
                  },
                  "src": "1205:20:13"
                },
                {
                  "documentation": {
                    "id": 2874,
                    "nodeType": "StructuredDocumentation",
                    "src": "1235:54:13",
                    "text": " @dev エラー：ゼロアドレス"
                  },
                  "errorSelector": "d92e233d",
                  "id": 2876,
                  "name": "ZeroAddress",
                  "nameLocation": "1300:11:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2875,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1311:2:13"
                  },
                  "src": "1294:20:13"
                },
                {
                  "documentation": {
                    "id": 2877,
                    "nodeType": "StructuredDocumentation",
                    "src": "1324:54:13",
                    "text": " @dev エラー：同一トークン"
                  },
                  "errorSelector": "5c6d7b73",
                  "id": 2879,
                  "name": "IdenticalTokens",
                  "nameLocation": "1389:15:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1404:2:13"
                  },
                  "src": "1383:24:13"
                },
                {
                  "documentation": {
                    "id": 2880,
                    "nodeType": "StructuredDocumentation",
                    "src": "1417:60:13",
                    "text": " @dev エラー：ペアが存在しない"
                  },
                  "errorSelector": "c5fc4bf4",
                  "id": 2882,
                  "name": "PairDoesNotExist",
                  "nameLocation": "1488:16:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2881,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1504:2:13"
                  },
                  "src": "1482:25:13"
                },
                {
                  "documentation": {
                    "id": 2883,
                    "nodeType": "StructuredDocumentation",
                    "src": "1517:54:13",
                    "text": " @dev エラー：不正な入力量"
                  },
                  "errorSelector": "340dabef",
                  "id": 2885,
                  "name": "InvalidInputAmount",
                  "nameLocation": "1582:18:13",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2884,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1600:2:13"
                  },
                  "src": "1576:27:13"
                },
                {
                  "body": {
                    "id": 2905,
                    "nodeType": "Block",
                    "src": "1780:105:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2891,
                            "name": "factoryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2888,
                            "src": "1794:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1820:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1812:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2892,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1812:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1812:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1794:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2900,
                        "nodeType": "IfStatement",
                        "src": "1790:54:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2897,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2876,
                              "src": "1831:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1831:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2899,
                          "nodeType": "RevertStatement",
                          "src": "1824:20:13"
                        }
                      },
                      {
                        "expression": {
                          "id": 2903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2901,
                            "name": "FACTORY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2855,
                            "src": "1854:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2902,
                            "name": "factoryAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2888,
                            "src": "1864:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1854:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2904,
                        "nodeType": "ExpressionStatement",
                        "src": "1854:24:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2886,
                    "nodeType": "StructuredDocumentation",
                    "src": "1613:126:13",
                    "text": " @dev コンストラクタ\n @param factoryAddress ファクトリーコントラクトのアドレス"
                  },
                  "id": 2906,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2888,
                        "mutability": "mutable",
                        "name": "factoryAddress",
                        "nameLocation": "1764:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2906,
                        "src": "1756:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2887,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1756:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1755:24:13"
                  },
                  "returnParameters": {
                    "id": 2890,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1780:0:13"
                  },
                  "scope": 3952,
                  "src": "1744:141:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2920,
                    "nodeType": "Block",
                    "src": "2051:84:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2911,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2065:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2071:9:13",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2065:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2913,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2909,
                            "src": "2083:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2065:26:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2918,
                        "nodeType": "IfStatement",
                        "src": "2061:56:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2915,
                              "name": "DeadlineExpired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2858,
                              "src": "2100:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 2916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2100:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 2917,
                          "nodeType": "RevertStatement",
                          "src": "2093:24:13"
                        }
                      },
                      {
                        "id": 2919,
                        "nodeType": "PlaceholderStatement",
                        "src": "2127:1:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2907,
                    "nodeType": "StructuredDocumentation",
                    "src": "1895:117:13",
                    "text": " @dev デッドラインチェック用修飾子\n @param deadline 期限タイムスタンプ"
                  },
                  "id": 2921,
                  "name": "ensure",
                  "nameLocation": "2026:6:13",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2909,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2041:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2921,
                        "src": "2033:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2908,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2033:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2032:18:13"
                  },
                  "src": "2017:118:13",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3022,
                    "nodeType": "Block",
                    "src": "3191:582:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2952,
                                "name": "amountA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2946,
                                "src": "3202:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2953,
                                "name": "amountB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2948,
                                "src": "3211:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2954,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3201:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2956,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2924,
                                "src": "3249:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2957,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2926,
                                "src": "3269:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2958,
                                "name": "amountADesired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2928,
                                "src": "3289:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2959,
                                "name": "amountBDesired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2930,
                                "src": "3317:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2960,
                                "name": "amountAMin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2932,
                                "src": "3345:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2961,
                                "name": "amountBMin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2934,
                                "src": "3369:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2955,
                              "name": "_addLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3405,
                              "src": "3222:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,address,uint256,uint256,uint256,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 2962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3222:167:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "3201:188:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "3201:188:13"
                      },
                      {
                        "assignments": [
                          2966
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2966,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "3416:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3022,
                            "src": "3408:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2965,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3408:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2974,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2971,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "3451:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2972,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2926,
                              "src": "3459:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2968,
                                  "name": "FACTORY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2855,
                                  "src": "3434:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2967,
                                "name": "DexFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1747,
                                "src": "3423:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                  "typeString": "type(contract DexFactory)"
                                }
                              },
                              "id": 2969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3423:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexFactory_$1747",
                                "typeString": "contract DexFactory"
                              }
                            },
                            "id": 2970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3443:7:13",
                            "memberName": "getPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1437,
                            "src": "3423:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) view external returns (address)"
                            }
                          },
                          "id": 2973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3423:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3408:58:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2975,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2966,
                            "src": "3480:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3496:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3488:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2976,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3488:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3488:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3480:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2992,
                        "nodeType": "IfStatement",
                        "src": "3476:102:13",
                        "trueBody": {
                          "id": 2991,
                          "nodeType": "Block",
                          "src": "3500:78:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 2989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2981,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2966,
                                  "src": "3514:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2986,
                                      "name": "tokenA",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2924,
                                      "src": "3552:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 2987,
                                      "name": "tokenB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2926,
                                      "src": "3560:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2983,
                                          "name": "FACTORY",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2855,
                                          "src": "3532:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2982,
                                        "name": "DexFactory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1747,
                                        "src": "3521:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                          "typeString": "type(contract DexFactory)"
                                        }
                                      },
                                      "id": 2984,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3521:19:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DexFactory_$1747",
                                        "typeString": "contract DexFactory"
                                      }
                                    },
                                    "id": 2985,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3541:10:13",
                                    "memberName": "createPair",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1618,
                                    "src": "3521:30:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                                      "typeString": "function (address,address) external returns (address)"
                                    }
                                  },
                                  "id": 2988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3521:46:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3514:53:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2990,
                              "nodeType": "ExpressionStatement",
                              "src": "3514:53:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2997,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3628:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3632:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3628:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2999,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2966,
                              "src": "3640:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3000,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2946,
                              "src": "3646:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2994,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2924,
                                  "src": "3603:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2993,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "3596:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3596:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3611:16:13",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 917,
                            "src": "3596:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3596:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3002,
                        "nodeType": "ExpressionStatement",
                        "src": "3596:58:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3007,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3696:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3700:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3696:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3009,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2966,
                              "src": "3708:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3010,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2948,
                              "src": "3714:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3004,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2926,
                                  "src": "3671:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3003,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "3664:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3664:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3679:16:13",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 917,
                            "src": "3664:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3664:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3012,
                        "nodeType": "ExpressionStatement",
                        "src": "3664:58:13"
                      },
                      {
                        "expression": {
                          "id": 3020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3013,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2950,
                            "src": "3732:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3018,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2936,
                                "src": "3763:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3015,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2966,
                                    "src": "3752:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3014,
                                  "name": "DexPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2831,
                                  "src": "3744:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                    "typeString": "type(contract DexPair)"
                                  }
                                },
                                "id": 3016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3744:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexPair_$2831",
                                  "typeString": "contract DexPair"
                                }
                              },
                              "id": 3017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3758:4:13",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2074,
                              "src": "3744:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) external returns (uint256)"
                              }
                            },
                            "id": 3019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3744:22:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3732:34:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3021,
                        "nodeType": "ExpressionStatement",
                        "src": "3732:34:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2922,
                    "nodeType": "StructuredDocumentation",
                    "src": "2145:668:13",
                    "text": " @dev 流動性を追加\n @param tokenA トークンAのアドレス\n @param tokenB トークンBのアドレス\n @param amountADesired トークンAの希望追加量\n @param amountBDesired トークンBの希望追加量\n @param amountAMin トークンAの最小追加量\n @param amountBMin トークンBの最小追加量\n @param to LPトークンの受取人\n @param deadline 期限タイムスタンプ\n @return amountA 実際に追加されたトークンAの量\n @return amountB 実際に追加されたトークンBの量\n @return liquidity 受け取ったLPトークンの量"
                  },
                  "functionSelector": "e8e33700",
                  "id": 3023,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2941,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2938,
                          "src": "3076:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2942,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2940,
                        "name": "ensure",
                        "nameLocations": [
                          "3069:6:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2921,
                        "src": "3069:6:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3069:16:13"
                    },
                    {
                      "id": 2944,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2943,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "3086:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "3086:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3086:12:13"
                    }
                  ],
                  "name": "addLiquidity",
                  "nameLocation": "2827:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2924,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "2857:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "2849:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2849:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2926,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "2881:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "2873:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2873:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2928,
                        "mutability": "mutable",
                        "name": "amountADesired",
                        "nameLocation": "2905:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "2897:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2897:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2930,
                        "mutability": "mutable",
                        "name": "amountBDesired",
                        "nameLocation": "2937:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "2929:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2929:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2932,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "2969:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "2961:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2931,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2961:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2934,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "2997:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "2989:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2933,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2989:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2936,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3025:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "3017:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2935,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3017:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2938,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "3045:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "3037:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3037:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2839:220:13"
                  },
                  "returnParameters": {
                    "id": 2951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2946,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "3125:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "3117:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2945,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3117:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2948,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "3150:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "3142:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2947,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3142:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2950,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "3175:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3023,
                        "src": "3167:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2949,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3167:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3107:83:13"
                  },
                  "scope": 3952,
                  "src": "2818:955:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3127,
                    "nodeType": "Block",
                    "src": "4600:572:13",
                    "statements": [
                      {
                        "assignments": [
                          3051
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3051,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "4618:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3127,
                            "src": "4610:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3050,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4610:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3059,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3056,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3026,
                              "src": "4653:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3057,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3028,
                              "src": "4661:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3053,
                                  "name": "FACTORY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2855,
                                  "src": "4636:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3052,
                                "name": "DexFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1747,
                                "src": "4625:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                  "typeString": "type(contract DexFactory)"
                                }
                              },
                              "id": 3054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4625:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexFactory_$1747",
                                "typeString": "contract DexFactory"
                              }
                            },
                            "id": 3055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4645:7:13",
                            "memberName": "getPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1437,
                            "src": "4625:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) view external returns (address)"
                            }
                          },
                          "id": 3058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4625:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4610:58:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3060,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3051,
                            "src": "4682:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4698:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4690:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3061,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4690:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4690:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4682:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3069,
                        "nodeType": "IfStatement",
                        "src": "4678:49:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3066,
                              "name": "PairDoesNotExist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2882,
                              "src": "4709:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4709:18:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3068,
                          "nodeType": "RevertStatement",
                          "src": "4702:25:13"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3074,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4776:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4780:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4776:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3076,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "4788:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3077,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3030,
                              "src": "4794:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3071,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3051,
                                  "src": "4753:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3070,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "4746:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4746:12:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4759:16:13",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 917,
                            "src": "4746:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4746:58:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3079,
                        "nodeType": "ExpressionStatement",
                        "src": "4746:58:13"
                      },
                      {
                        "assignments": [
                          3081,
                          3083
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3081,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "4823:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3127,
                            "src": "4815:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3080,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4815:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3083,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "4840:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3127,
                            "src": "4832:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3082,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4832:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3090,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3088,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3036,
                              "src": "4870:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3085,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3051,
                                  "src": "4859:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3084,
                                "name": "DexPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2831,
                                "src": "4851:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              },
                              "id": 3086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4851:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexPair_$2831",
                                "typeString": "contract DexPair"
                              }
                            },
                            "id": 3087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4865:4:13",
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2260,
                            "src": "4851:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address) external returns (uint256,uint256)"
                            }
                          },
                          "id": 3089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4851:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4814:59:13"
                      },
                      {
                        "assignments": [
                          3092,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3092,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "4901:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3127,
                            "src": "4893:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4893:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3097,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3094,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3026,
                              "src": "4924:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3095,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3028,
                              "src": "4932:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3093,
                            "name": "_sortTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3951,
                            "src": "4912:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                              "typeString": "function (address,address) pure returns (address,address)"
                            }
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4912:27:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4892:47:13"
                      },
                      {
                        "expression": {
                          "id": 3111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3098,
                                "name": "amountA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3046,
                                "src": "4950:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3099,
                                "name": "amountB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3048,
                                "src": "4959:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3100,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4949:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3101,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3026,
                                "src": "4970:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3102,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3092,
                                "src": "4980:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4970:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "components": [
                                {
                                  "id": 3107,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3083,
                                  "src": "5011:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 3108,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3081,
                                  "src": "5020:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3109,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5010:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "id": 3110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "4970:58:13",
                            "trueExpression": {
                              "components": [
                                {
                                  "id": 3104,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3081,
                                  "src": "4990:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 3105,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3083,
                                  "src": "4999:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3106,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4989:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "4949:79:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3112,
                        "nodeType": "ExpressionStatement",
                        "src": "4949:79:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3113,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3046,
                            "src": "5051:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3114,
                            "name": "amountAMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3032,
                            "src": "5061:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5051:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3119,
                        "nodeType": "IfStatement",
                        "src": "5047:54:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3116,
                              "name": "InsufficientAAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2861,
                              "src": "5080:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5080:21:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3118,
                          "nodeType": "RevertStatement",
                          "src": "5073:28:13"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3120,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3048,
                            "src": "5115:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3121,
                            "name": "amountBMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3034,
                            "src": "5125:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5115:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3126,
                        "nodeType": "IfStatement",
                        "src": "5111:54:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3123,
                              "name": "InsufficientBAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2864,
                              "src": "5144:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5144:21:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3125,
                          "nodeType": "RevertStatement",
                          "src": "5137:28:13"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3024,
                    "nodeType": "StructuredDocumentation",
                    "src": "3783:522:13",
                    "text": " @dev 流動性を削除\n @param tokenA トークンAのアドレス\n @param tokenB トークンBのアドレス\n @param liquidity 削除するLPトークンの量\n @param amountAMin トークンAの最小受取量\n @param amountBMin トークンBの最小受取量\n @param to トークンの受取人\n @param deadline 期限タイムスタンプ\n @return amountA 受け取ったトークンAの量\n @return amountB 受け取ったトークンBの量"
                  },
                  "functionSelector": "baa2abde",
                  "id": 3128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3041,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3038,
                          "src": "4534:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3042,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3040,
                        "name": "ensure",
                        "nameLocations": [
                          "4527:6:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2921,
                        "src": "4527:6:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4527:16:13"
                    },
                    {
                      "id": 3044,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3043,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4544:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "4544:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4544:12:13"
                    }
                  ],
                  "name": "removeLiquidity",
                  "nameLocation": "4319:15:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3026,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "4352:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4344:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4344:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3028,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "4376:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4368:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4368:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3030,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "4400:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4392:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3029,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4392:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3032,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "4427:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4419:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3031,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4419:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3034,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "4455:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4447:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3033,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4447:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3036,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4483:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4475:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4475:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3038,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "4503:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4495:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3037,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4495:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4334:183:13"
                  },
                  "returnParameters": {
                    "id": 3049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3046,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "4574:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4566:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4566:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3048,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "4591:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3128,
                        "src": "4583:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4583:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4565:34:13"
                  },
                  "scope": 3952,
                  "src": "4310:862:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3200,
                    "nodeType": "Block",
                    "src": "5844:349:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 3156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3151,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3149,
                            "src": "5854:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3153,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3131,
                                "src": "5878:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3154,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3136,
                                "src": "5888:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "id": 3152,
                              "name": "getAmountsOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3783,
                              "src": "5864:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256,address[] memory) view returns (uint256[] memory)"
                              }
                            },
                            "id": 3155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5864:29:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "5854:39:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3157,
                        "nodeType": "ExpressionStatement",
                        "src": "5854:39:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3158,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "5907:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3163,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3159,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3149,
                                  "src": "5915:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5923:6:13",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5915:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5932:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5915:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5907:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3164,
                            "name": "amountOutMin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3133,
                            "src": "5937:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5907:42:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3169,
                        "nodeType": "IfStatement",
                        "src": "5903:81:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3166,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "5958:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5958:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3168,
                          "nodeType": "RevertStatement",
                          "src": "5951:33:13"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3176,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6049:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6053:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6049:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3182,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3136,
                                    "src": "6101:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 3184,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3183,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6106:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6101:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 3185,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3136,
                                    "src": "6110:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 3187,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 3186,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6115:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6110:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3179,
                                      "name": "FACTORY",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2855,
                                      "src": "6084:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3178,
                                    "name": "DexFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1747,
                                    "src": "6073:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                      "typeString": "type(contract DexFactory)"
                                    }
                                  },
                                  "id": 3180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6073:19:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexFactory_$1747",
                                    "typeString": "contract DexFactory"
                                  }
                                },
                                "id": 3181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6093:7:13",
                                "memberName": "getPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1437,
                                "src": "6073:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                                  "typeString": "function (address,address) view external returns (address)"
                                }
                              },
                              "id": 3188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6073:45:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3189,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3149,
                                "src": "6132:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 3191,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 3190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6140:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6132:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3171,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3136,
                                    "src": "6010:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 3173,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3172,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6015:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6010:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3170,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "6003:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6003:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6019:16:13",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 917,
                            "src": "6003:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6003:149:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3193,
                        "nodeType": "ExpressionStatement",
                        "src": "6003:149:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3195,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3149,
                              "src": "6168:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 3196,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3136,
                              "src": "6177:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 3197,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3138,
                              "src": "6183:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3194,
                            "name": "_swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3523,
                            "src": "6162:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (uint256[] memory,address[] memory,address)"
                            }
                          },
                          "id": 3198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6162:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3199,
                        "nodeType": "ExpressionStatement",
                        "src": "6162:24:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3129,
                    "nodeType": "StructuredDocumentation",
                    "src": "5182:408:13",
                    "text": " @dev 正確な入力量でトークンをスワップ\n @param amountIn 入力トークンの量\n @param amountOutMin 最小出力トークンの量\n @param path スワップパス（トークンアドレスの配列）\n @param to 出力トークンの受取人\n @param deadline 期限タイムスタンプ\n @return amounts 各段階でのトークン量"
                  },
                  "functionSelector": "38ed1739",
                  "id": 3201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3143,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3140,
                          "src": "5786:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3144,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3142,
                        "name": "ensure",
                        "nameLocations": [
                          "5779:6:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2921,
                        "src": "5779:6:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5779:16:13"
                    },
                    {
                      "id": 3146,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3145,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5796:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "5796:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5796:12:13"
                    }
                  ],
                  "name": "swapExactTokensForTokens",
                  "nameLocation": "5604:24:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3131,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "5646:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3201,
                        "src": "5638:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5638:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3133,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "5672:12:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3201,
                        "src": "5664:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5664:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3136,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "5713:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3201,
                        "src": "5694:23:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3134,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5694:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3135,
                          "nodeType": "ArrayTypeName",
                          "src": "5694:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3138,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5735:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3201,
                        "src": "5727:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5727:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3140,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "5755:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3201,
                        "src": "5747:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5747:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5628:141:13"
                  },
                  "returnParameters": {
                    "id": 3150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3149,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "5835:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3201,
                        "src": "5818:24:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3147,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5818:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3148,
                          "nodeType": "ArrayTypeName",
                          "src": "5818:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5817:26:13"
                  },
                  "scope": 3952,
                  "src": "5595:598:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3270,
                    "nodeType": "Block",
                    "src": "6865:327:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 3229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3224,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3222,
                            "src": "6875:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3226,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3204,
                                "src": "6898:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3227,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3209,
                                "src": "6909:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              ],
                              "id": 3225,
                              "name": "getAmountsIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3866,
                              "src": "6885:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256,address[] memory) view returns (uint256[] memory)"
                              }
                            },
                            "id": 3228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6885:29:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "6875:39:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3230,
                        "nodeType": "ExpressionStatement",
                        "src": "6875:39:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3231,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3222,
                              "src": "6928:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3233,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 3232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6936:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6928:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3234,
                            "name": "amountInMax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3206,
                            "src": "6941:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6928:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3239,
                        "nodeType": "IfStatement",
                        "src": "6924:59:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3236,
                              "name": "ExcessiveInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2870,
                              "src": "6961:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6961:22:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3238,
                          "nodeType": "RevertStatement",
                          "src": "6954:29:13"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3246,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7048:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7052:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7048:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3252,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3209,
                                    "src": "7100:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 3254,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7105:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7100:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 3255,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3209,
                                    "src": "7109:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 3257,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 3256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7114:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7109:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3249,
                                      "name": "FACTORY",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2855,
                                      "src": "7083:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3248,
                                    "name": "DexFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1747,
                                    "src": "7072:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                      "typeString": "type(contract DexFactory)"
                                    }
                                  },
                                  "id": 3250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7072:19:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexFactory_$1747",
                                    "typeString": "contract DexFactory"
                                  }
                                },
                                "id": 3251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7092:7:13",
                                "memberName": "getPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1437,
                                "src": "7072:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                                  "typeString": "function (address,address) view external returns (address)"
                                }
                              },
                              "id": 3258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7072:45:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 3259,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3222,
                                "src": "7131:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 3261,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 3260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7139:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7131:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3241,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3209,
                                    "src": "7009:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 3243,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 3242,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7014:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7009:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3240,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "7002:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$819_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7002:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7018:16:13",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 917,
                            "src": "7002:32:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7002:149:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3263,
                        "nodeType": "ExpressionStatement",
                        "src": "7002:149:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3265,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3222,
                              "src": "7167:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 3266,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3209,
                              "src": "7176:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 3267,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3211,
                              "src": "7182:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3264,
                            "name": "_swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3523,
                            "src": "7161:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (uint256[] memory,address[] memory,address)"
                            }
                          },
                          "id": 3268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7161:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3269,
                        "nodeType": "ExpressionStatement",
                        "src": "7161:24:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3202,
                    "nodeType": "StructuredDocumentation",
                    "src": "6203:408:13",
                    "text": " @dev 正確な出力量でトークンをスワップ\n @param amountOut 出力トークンの量\n @param amountInMax 最大入力トークンの量\n @param path スワップパス（トークンアドレスの配列）\n @param to 出力トークンの受取人\n @param deadline 期限タイムスタンプ\n @return amounts 各段階でのトークン量"
                  },
                  "functionSelector": "8803dbee",
                  "id": 3271,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3216,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3213,
                          "src": "6807:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3217,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3215,
                        "name": "ensure",
                        "nameLocations": [
                          "6800:6:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2921,
                        "src": "6800:6:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6800:16:13"
                    },
                    {
                      "id": 3219,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3218,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6817:12:13"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1372,
                        "src": "6817:12:13"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6817:12:13"
                    }
                  ],
                  "name": "swapTokensForExactTokens",
                  "nameLocation": "6625:24:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3204,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "6667:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "6659:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6659:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3206,
                        "mutability": "mutable",
                        "name": "amountInMax",
                        "nameLocation": "6694:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "6686:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6686:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3209,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "6734:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "6715:23:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3207,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6715:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3208,
                          "nodeType": "ArrayTypeName",
                          "src": "6715:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3211,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6756:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "6748:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6748:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3213,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "6776:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "6768:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6768:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6649:141:13"
                  },
                  "returnParameters": {
                    "id": 3223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3222,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "6856:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3271,
                        "src": "6839:24:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3220,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6839:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3221,
                          "nodeType": "ArrayTypeName",
                          "src": "6839:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6838:26:13"
                  },
                  "scope": 3952,
                  "src": "6616:576:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3404,
                    "nodeType": "Block",
                    "src": "7533:1420:13",
                    "statements": [
                      {
                        "assignments": [
                          3292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3292,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "7551:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3404,
                            "src": "7543:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3291,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7543:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3300,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3297,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "7586:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3298,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3276,
                              "src": "7594:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3294,
                                  "name": "FACTORY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2855,
                                  "src": "7569:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3293,
                                "name": "DexFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1747,
                                "src": "7558:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                  "typeString": "type(contract DexFactory)"
                                }
                              },
                              "id": 3295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7558:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexFactory_$1747",
                                "typeString": "contract DexFactory"
                              }
                            },
                            "id": 3296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7578:7:13",
                            "memberName": "getPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1437,
                            "src": "7558:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) view external returns (address)"
                            }
                          },
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7558:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7543:58:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3301,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3292,
                            "src": "7624:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7640:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7632:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3302,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7632:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7632:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7624:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3402,
                          "nodeType": "Block",
                          "src": "7768:1179:13",
                          "statements": [
                            {
                              "assignments": [
                                3317,
                                3319
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3317,
                                  "mutability": "mutable",
                                  "name": "reserveA",
                                  "nameLocation": "7852:8:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3402,
                                  "src": "7844:16:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3316,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7844:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3319,
                                  "mutability": "mutable",
                                  "name": "reserveB",
                                  "nameLocation": "7870:8:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3402,
                                  "src": "7862:16:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3318,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7862:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3324,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3321,
                                    "name": "tokenA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3274,
                                    "src": "7894:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3322,
                                    "name": "tokenB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3276,
                                    "src": "7902:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3320,
                                  "name": "getReserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3589,
                                  "src": "7882:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256,uint256)"
                                  }
                                },
                                "id": 3323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7882:27:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7843:66:13"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 3331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3325,
                                    "name": "reserveA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3317,
                                    "src": "7940:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 3326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7952:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7940:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3330,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3328,
                                    "name": "reserveB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3319,
                                    "src": "7957:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 3329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7969:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7957:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "7940:30:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 3400,
                                "nodeType": "Block",
                                "src": "8160:777:13",
                                "statements": [
                                  {
                                    "assignments": [
                                      3342
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3342,
                                        "mutability": "mutable",
                                        "name": "amountBOptimal",
                                        "nameLocation": "8254:14:13",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3400,
                                        "src": "8246:22:13",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 3341,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8246:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3348,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 3344,
                                          "name": "amountADesired",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3278,
                                          "src": "8278:14:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 3345,
                                          "name": "reserveA",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3317,
                                          "src": "8294:8:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 3346,
                                          "name": "reserveB",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3319,
                                          "src": "8304:8:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 3343,
                                        "name": "_quote",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3906,
                                        "src": "8271:6:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 3347,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8271:42:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8246:67:13"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3351,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3349,
                                        "name": "amountBOptimal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3342,
                                        "src": "8352:14:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "id": 3350,
                                        "name": "amountBDesired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3280,
                                        "src": "8370:14:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8352:32:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 3398,
                                      "nodeType": "Block",
                                      "src": "8569:354:13",
                                      "statements": [
                                        {
                                          "assignments": [
                                            3369
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 3369,
                                              "mutability": "mutable",
                                              "name": "amountAOptimal",
                                              "nameLocation": "8599:14:13",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 3398,
                                              "src": "8591:22:13",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 3368,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8591:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 3375,
                                          "initialValue": {
                                            "arguments": [
                                              {
                                                "id": 3371,
                                                "name": "amountBDesired",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3280,
                                                "src": "8623:14:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 3372,
                                                "name": "reserveB",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3319,
                                                "src": "8639:8:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 3373,
                                                "name": "reserveA",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3317,
                                                "src": "8649:8:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 3370,
                                              "name": "_quote",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3906,
                                              "src": "8616:6:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 3374,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8616:42:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "8591:67:13"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3378,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 3376,
                                              "name": "amountAOptimal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3369,
                                              "src": "8684:14:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "id": 3377,
                                              "name": "amountADesired",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3278,
                                              "src": "8701:14:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "8684:31:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 3382,
                                          "nodeType": "IfStatement",
                                          "src": "8680:66:13",
                                          "trueBody": {
                                            "errorCall": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 3379,
                                                "name": "ExcessiveInputAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2870,
                                                "src": "8724:20:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                                  "typeString": "function () pure returns (error)"
                                                }
                                              },
                                              "id": 3380,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "8724:22:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_error",
                                                "typeString": "error"
                                              }
                                            },
                                            "id": 3381,
                                            "nodeType": "RevertStatement",
                                            "src": "8717:29:13"
                                          }
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3385,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 3383,
                                              "name": "amountAOptimal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3369,
                                              "src": "8772:14:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "id": 3384,
                                              "name": "amountAMin",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3282,
                                              "src": "8789:10:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "8772:27:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 3389,
                                          "nodeType": "IfStatement",
                                          "src": "8768:61:13",
                                          "trueBody": {
                                            "errorCall": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 3386,
                                                "name": "InsufficientAAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2861,
                                                "src": "8808:19:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                                  "typeString": "function () pure returns (error)"
                                                }
                                              },
                                              "id": 3387,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "8808:21:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_error",
                                                "typeString": "error"
                                              }
                                            },
                                            "id": 3388,
                                            "nodeType": "RevertStatement",
                                            "src": "8801:28:13"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3396,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "components": [
                                                {
                                                  "id": 3390,
                                                  "name": "amountA",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3287,
                                                  "src": "8852:7:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                {
                                                  "id": 3391,
                                                  "name": "amountB",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3289,
                                                  "src": "8861:7:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 3392,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "TupleExpression",
                                              "src": "8851:18:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                                "typeString": "tuple(uint256,uint256)"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "components": [
                                                {
                                                  "id": 3393,
                                                  "name": "amountAOptimal",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3369,
                                                  "src": "8873:14:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                {
                                                  "id": 3394,
                                                  "name": "amountBDesired",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3280,
                                                  "src": "8889:14:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 3395,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "8872:32:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                                "typeString": "tuple(uint256,uint256)"
                                              }
                                            },
                                            "src": "8851:53:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 3397,
                                          "nodeType": "ExpressionStatement",
                                          "src": "8851:53:13"
                                        }
                                      ]
                                    },
                                    "id": 3399,
                                    "nodeType": "IfStatement",
                                    "src": "8348:575:13",
                                    "trueBody": {
                                      "id": 3367,
                                      "nodeType": "Block",
                                      "src": "8386:177:13",
                                      "statements": [
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3354,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 3352,
                                              "name": "amountBOptimal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3342,
                                              "src": "8412:14:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "id": 3353,
                                              "name": "amountBMin",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3284,
                                              "src": "8429:10:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "8412:27:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 3358,
                                          "nodeType": "IfStatement",
                                          "src": "8408:61:13",
                                          "trueBody": {
                                            "errorCall": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 3355,
                                                "name": "InsufficientBAmount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2864,
                                                "src": "8448:19:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                                  "typeString": "function () pure returns (error)"
                                                }
                                              },
                                              "id": 3356,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "8448:21:13",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_error",
                                                "typeString": "error"
                                              }
                                            },
                                            "id": 3357,
                                            "nodeType": "RevertStatement",
                                            "src": "8441:28:13"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3365,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "components": [
                                                {
                                                  "id": 3359,
                                                  "name": "amountA",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3287,
                                                  "src": "8492:7:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                {
                                                  "id": 3360,
                                                  "name": "amountB",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3289,
                                                  "src": "8501:7:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 3361,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "TupleExpression",
                                              "src": "8491:18:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                                "typeString": "tuple(uint256,uint256)"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "components": [
                                                {
                                                  "id": 3362,
                                                  "name": "amountADesired",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3278,
                                                  "src": "8513:14:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                {
                                                  "id": 3363,
                                                  "name": "amountBOptimal",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3342,
                                                  "src": "8529:14:13",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 3364,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "8512:32:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                                "typeString": "tuple(uint256,uint256)"
                                              }
                                            },
                                            "src": "8491:53:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 3366,
                                          "nodeType": "ExpressionStatement",
                                          "src": "8491:53:13"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 3401,
                              "nodeType": "IfStatement",
                              "src": "7936:1001:13",
                              "trueBody": {
                                "id": 3340,
                                "nodeType": "Block",
                                "src": "7972:182:13",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "id": 3332,
                                            "name": "amountA",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3287,
                                            "src": "8087:7:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3333,
                                            "name": "amountB",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3289,
                                            "src": "8096:7:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3334,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "8086:18:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "components": [
                                          {
                                            "id": 3335,
                                            "name": "amountADesired",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3278,
                                            "src": "8108:14:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3336,
                                            "name": "amountBDesired",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3280,
                                            "src": "8124:14:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3337,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "8107:32:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256)"
                                        }
                                      },
                                      "src": "8086:53:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3339,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8086:53:13"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 3403,
                        "nodeType": "IfStatement",
                        "src": "7620:1327:13",
                        "trueBody": {
                          "id": 3315,
                          "nodeType": "Block",
                          "src": "7644:118:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 3313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 3307,
                                      "name": "amountA",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3287,
                                      "src": "7699:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3308,
                                      "name": "amountB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3289,
                                      "src": "7708:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3309,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "7698:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "id": 3310,
                                      "name": "amountADesired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3278,
                                      "src": "7720:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3311,
                                      "name": "amountBDesired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3280,
                                      "src": "7736:14:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3312,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7719:32:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "src": "7698:53:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3314,
                              "nodeType": "ExpressionStatement",
                              "src": "7698:53:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3272,
                    "nodeType": "StructuredDocumentation",
                    "src": "7202:72:13",
                    "text": " @dev 流動性追加のための最適な量を計算"
                  },
                  "id": 3405,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addLiquidity",
                  "nameLocation": "7288:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3274,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "7319:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7311:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7311:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3276,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "7343:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7335:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7335:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3278,
                        "mutability": "mutable",
                        "name": "amountADesired",
                        "nameLocation": "7367:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7359:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7359:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3280,
                        "mutability": "mutable",
                        "name": "amountBDesired",
                        "nameLocation": "7399:14:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7391:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7391:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3282,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nameLocation": "7431:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7423:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7423:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3284,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nameLocation": "7459:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7451:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7451:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7301:174:13"
                  },
                  "returnParameters": {
                    "id": 3290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3287,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "7507:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7499:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3286,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7499:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3289,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "7524:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3405,
                        "src": "7516:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7516:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7498:34:13"
                  },
                  "scope": 3952,
                  "src": "7279:1674:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3522,
                    "nodeType": "Block",
                    "src": "9099:745:13",
                    "statements": [
                      {
                        "body": {
                          "id": 3520,
                          "nodeType": "Block",
                          "src": "9151:687:13",
                          "statements": [
                            {
                              "assignments": [
                                3430,
                                3432
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3430,
                                  "mutability": "mutable",
                                  "name": "input",
                                  "nameLocation": "9174:5:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3520,
                                  "src": "9166:13:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3429,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9166:7:13",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3432,
                                  "mutability": "mutable",
                                  "name": "output",
                                  "nameLocation": "9189:6:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3520,
                                  "src": "9181:14:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3431,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9181:7:13",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3442,
                              "initialValue": {
                                "components": [
                                  {
                                    "baseExpression": {
                                      "id": 3433,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3412,
                                      "src": "9200:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 3435,
                                    "indexExpression": {
                                      "id": 3434,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3418,
                                      "src": "9205:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9200:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3436,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3412,
                                      "src": "9209:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 3440,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3439,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3437,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3418,
                                        "src": "9214:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 3438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9218:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "9214:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9209:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "id": 3441,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9199:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                  "typeString": "tuple(address,address)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9165:56:13"
                            },
                            {
                              "assignments": [
                                3444,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3444,
                                  "mutability": "mutable",
                                  "name": "token0",
                                  "nameLocation": "9244:6:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3520,
                                  "src": "9236:14:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3443,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9236:7:13",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 3449,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 3446,
                                    "name": "input",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3430,
                                    "src": "9267:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3447,
                                    "name": "output",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3432,
                                    "src": "9274:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3445,
                                  "name": "_sortTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3951,
                                  "src": "9255:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                                    "typeString": "function (address,address) pure returns (address,address)"
                                  }
                                },
                                "id": 3448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9255:26:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                  "typeString": "tuple(address,address)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9235:46:13"
                            },
                            {
                              "assignments": [
                                3451
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3451,
                                  "mutability": "mutable",
                                  "name": "amountOut",
                                  "nameLocation": "9303:9:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3520,
                                  "src": "9295:17:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3450,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9295:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3457,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3452,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3409,
                                  "src": "9315:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3456,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3453,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3418,
                                    "src": "9323:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 3454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9327:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "9323:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9315:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9295:34:13"
                            },
                            {
                              "assignments": [
                                3459,
                                3461
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3459,
                                  "mutability": "mutable",
                                  "name": "amount0Out",
                                  "nameLocation": "9352:10:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3520,
                                  "src": "9344:18:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3458,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9344:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3461,
                                  "mutability": "mutable",
                                  "name": "amount1Out",
                                  "nameLocation": "9372:10:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3520,
                                  "src": "9364:18:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3460,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9364:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3478,
                              "initialValue": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 3464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3462,
                                    "name": "input",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3430,
                                    "src": "9386:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3463,
                                    "name": "token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3444,
                                    "src": "9395:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "9386:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "components": [
                                    {
                                      "id": 3471,
                                      "name": "amountOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3451,
                                      "src": "9465:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 3474,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9484:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 3473,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9476:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 3472,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9476:7:13",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3475,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9476:10:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3476,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9464:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "id": 3477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9386:101:13",
                                "trueExpression": {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 3467,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9430:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 3466,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9422:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 3465,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9422:7:13",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3468,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9422:10:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3469,
                                      "name": "amountOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3451,
                                      "src": "9434:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 3470,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9421:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9343:144:13"
                            },
                            {
                              "assignments": [
                                3480
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3480,
                                  "mutability": "mutable",
                                  "name": "to",
                                  "nameLocation": "9509:2:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3520,
                                  "src": "9501:10:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3479,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9501:7:13",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3500,
                              "initialValue": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3481,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3418,
                                    "src": "9514:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3485,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 3482,
                                        "name": "path",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3412,
                                        "src": "9518:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 3483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9523:6:13",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "9518:11:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "32",
                                      "id": 3484,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9532:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "9518:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9514:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "id": 3498,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3414,
                                  "src": "9621:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 3499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9514:110:13",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 3491,
                                      "name": "output",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3432,
                                      "src": "9581:6:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 3492,
                                        "name": "path",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3412,
                                        "src": "9589:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 3496,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3495,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 3493,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3418,
                                          "src": "9594:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 3494,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9598:1:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "9594:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9589:11:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3488,
                                          "name": "FACTORY",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2855,
                                          "src": "9564:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3487,
                                        "name": "DexFactory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1747,
                                        "src": "9553:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                          "typeString": "type(contract DexFactory)"
                                        }
                                      },
                                      "id": 3489,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9553:19:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DexFactory_$1747",
                                        "typeString": "contract DexFactory"
                                      }
                                    },
                                    "id": 3490,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9573:7:13",
                                    "memberName": "getPair",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1437,
                                    "src": "9553:27:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                                      "typeString": "function (address,address) view external returns (address)"
                                    }
                                  },
                                  "id": 3497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9553:48:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9501:123:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3511,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3459,
                                    "src": "9725:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3512,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3461,
                                    "src": "9753:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3513,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3480,
                                    "src": "9781:2:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 3516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9811:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 3515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "9801:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 3514,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9805:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 3517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9801:12:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 3506,
                                            "name": "input",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3430,
                                            "src": "9687:5:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 3507,
                                            "name": "output",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3432,
                                            "src": "9694:6:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 3503,
                                                "name": "FACTORY",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2855,
                                                "src": "9670:7:13",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 3502,
                                              "name": "DexFactory",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1747,
                                              "src": "9659:10:13",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                                "typeString": "type(contract DexFactory)"
                                              }
                                            },
                                            "id": 3504,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9659:19:13",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DexFactory_$1747",
                                              "typeString": "contract DexFactory"
                                            }
                                          },
                                          "id": 3505,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9679:7:13",
                                          "memberName": "getPair",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1437,
                                          "src": "9659:27:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                                            "typeString": "function (address,address) view external returns (address)"
                                          }
                                        },
                                        "id": 3508,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9659:42:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3501,
                                      "name": "DexPair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2831,
                                      "src": "9651:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                        "typeString": "type(contract DexPair)"
                                      }
                                    },
                                    "id": 3509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9651:51:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DexPair_$2831",
                                      "typeString": "contract DexPair"
                                    }
                                  },
                                  "id": 3510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9703:4:13",
                                  "memberName": "swap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2488,
                                  "src": "9651:56:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,address,bytes memory) external"
                                  }
                                },
                                "id": 3518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9651:176:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3519,
                              "nodeType": "ExpressionStatement",
                              "src": "9651:176:13"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3420,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3418,
                            "src": "9125:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3421,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3412,
                                "src": "9129:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 3422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9134:6:13",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "9129:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 3423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9143:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9129:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9125:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3521,
                        "initializationExpression": {
                          "assignments": [
                            3418
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3418,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9122:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 3521,
                              "src": "9114:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3417,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9114:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3419,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9114:9:13"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9146:3:13",
                            "subExpression": {
                              "id": 3426,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3418,
                              "src": "9146:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3428,
                          "nodeType": "ExpressionStatement",
                          "src": "9146:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "9109:729:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3406,
                    "nodeType": "StructuredDocumentation",
                    "src": "8963:45:13",
                    "text": " @dev スワップの実行"
                  },
                  "id": 3523,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swap",
                  "nameLocation": "9022:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3409,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "9045:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3523,
                        "src": "9028:24:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3407,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9028:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3408,
                          "nodeType": "ArrayTypeName",
                          "src": "9028:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3412,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "9071:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3523,
                        "src": "9054:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9054:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3411,
                          "nodeType": "ArrayTypeName",
                          "src": "9054:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3414,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "9085:3:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3523,
                        "src": "9077:11:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9077:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9027:62:13"
                  },
                  "returnParameters": {
                    "id": 3416,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9099:0:13"
                  },
                  "scope": 3952,
                  "src": "9013:831:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3588,
                    "nodeType": "Block",
                    "src": "10238:360:13",
                    "statements": [
                      {
                        "assignments": [
                          3536,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3536,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "10257:6:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3588,
                            "src": "10249:14:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3535,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10249:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3541,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3538,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "10280:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3539,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3528,
                              "src": "10288:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3537,
                            "name": "_sortTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3951,
                            "src": "10268:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_address_$_t_address_$",
                              "typeString": "function (address,address) pure returns (address,address)"
                            }
                          },
                          "id": 3540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10268:27:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10248:47:13"
                      },
                      {
                        "assignments": [
                          3543
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3543,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "10313:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3588,
                            "src": "10305:12:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10305:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3551,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3548,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "10348:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3549,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3528,
                              "src": "10356:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3545,
                                  "name": "FACTORY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2855,
                                  "src": "10331:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3544,
                                "name": "DexFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1747,
                                "src": "10320:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexFactory_$1747_$",
                                  "typeString": "type(contract DexFactory)"
                                }
                              },
                              "id": 3546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10320:19:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexFactory_$1747",
                                "typeString": "contract DexFactory"
                              }
                            },
                            "id": 3547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10340:7:13",
                            "memberName": "getPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1437,
                            "src": "10320:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) view external returns (address)"
                            }
                          },
                          "id": 3550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10320:43:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10305:58:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3552,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3543,
                            "src": "10377:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10393:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10385:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3553,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10385:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10385:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10377:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3562,
                        "nodeType": "IfStatement",
                        "src": "10373:37:13",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "30",
                                "id": 3558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10405:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 3559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10408:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 3560,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10404:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                              "typeString": "tuple(int_const 0,int_const 0)"
                            }
                          },
                          "functionReturnParameters": 3534,
                          "id": 3561,
                          "nodeType": "Return",
                          "src": "10397:13:13"
                        }
                      },
                      {
                        "assignments": [
                          3564,
                          3566,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3564,
                            "mutability": "mutable",
                            "name": "reserve0",
                            "nameLocation": "10438:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3588,
                            "src": "10430:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3563,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10430:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3566,
                            "mutability": "mutable",
                            "name": "reserve1",
                            "nameLocation": "10456:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3588,
                            "src": "10448:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3565,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10448:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3572,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3568,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3543,
                                  "src": "10477:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3567,
                                "name": "DexPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2831,
                                "src": "10469:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DexPair_$2831_$",
                                  "typeString": "type(contract DexPair)"
                                }
                              },
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10469:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexPair_$2831",
                                "typeString": "contract DexPair"
                              }
                            },
                            "id": 3570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10483:11:13",
                            "memberName": "getReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1920,
                            "src": "10469:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view external returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 3571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10469:27:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10429:67:13"
                      },
                      {
                        "expression": {
                          "id": 3586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3573,
                                "name": "reserveA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3531,
                                "src": "10507:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3574,
                                "name": "reserveB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3533,
                                "src": "10517:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3575,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "10506:20:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3576,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3526,
                                "src": "10529:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3577,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3536,
                                "src": "10539:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10529:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "components": [
                                {
                                  "id": 3582,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3566,
                                  "src": "10572:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 3583,
                                  "name": "reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3564,
                                  "src": "10582:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3584,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10571:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "id": 3585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "10529:62:13",
                            "trueExpression": {
                              "components": [
                                {
                                  "id": 3579,
                                  "name": "reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3564,
                                  "src": "10549:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 3580,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3566,
                                  "src": "10559:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3581,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10548:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(uint256,uint256)"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "10506:85:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3587,
                        "nodeType": "ExpressionStatement",
                        "src": "10506:85:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3524,
                    "nodeType": "StructuredDocumentation",
                    "src": "9854:260:13",
                    "text": " @dev リザーブ量を取得\n @param tokenA トークンAのアドレス\n @param tokenB トークンBのアドレス\n @return reserveA トークンAのリザーブ量\n @return reserveB トークンBのリザーブ量"
                  },
                  "functionSelector": "d52bb6f4",
                  "id": 3589,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "10128:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3526,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "10148:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3589,
                        "src": "10140:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10140:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3528,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "10164:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3589,
                        "src": "10156:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3527,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10156:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10139:32:13"
                  },
                  "returnParameters": {
                    "id": 3534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3531,
                        "mutability": "mutable",
                        "name": "reserveA",
                        "nameLocation": "10210:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3589,
                        "src": "10202:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10202:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3533,
                        "mutability": "mutable",
                        "name": "reserveB",
                        "nameLocation": "10228:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3589,
                        "src": "10220:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3532,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10220:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10201:36:13"
                  },
                  "scope": 3952,
                  "src": "10119:479:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3646,
                    "nodeType": "Block",
                    "src": "11018:395:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3601,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3592,
                            "src": "11032:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11044:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11032:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3607,
                        "nodeType": "IfStatement",
                        "src": "11028:46:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3604,
                              "name": "InvalidInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2885,
                              "src": "11054:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11054:20:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3606,
                          "nodeType": "RevertStatement",
                          "src": "11047:27:13"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3608,
                              "name": "reserveIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3594,
                              "src": "11088:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11101:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11088:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3611,
                              "name": "reserveOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "11106:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11120:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11106:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11088:33:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3618,
                        "nodeType": "IfStatement",
                        "src": "11084:72:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3615,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "11130:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11130:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3617,
                          "nodeType": "RevertStatement",
                          "src": "11123:33:13"
                        }
                      },
                      {
                        "assignments": [
                          3620
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3620,
                            "mutability": "mutable",
                            "name": "amountInWithFee",
                            "nameLocation": "11183:15:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3646,
                            "src": "11175:23:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3619,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11175:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3624,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3621,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3592,
                            "src": "11201:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "393937",
                            "id": 3622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11212:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_997_by_1",
                              "typeString": "int_const 997"
                            },
                            "value": "997"
                          },
                          "src": "11201:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11175:40:13"
                      },
                      {
                        "assignments": [
                          3626
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3626,
                            "mutability": "mutable",
                            "name": "numerator",
                            "nameLocation": "11253:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3646,
                            "src": "11245:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3625,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11245:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3630,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3627,
                            "name": "amountInWithFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3620,
                            "src": "11265:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 3628,
                            "name": "reserveOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3596,
                            "src": "11283:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11265:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11245:48:13"
                      },
                      {
                        "assignments": [
                          3632
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3632,
                            "mutability": "mutable",
                            "name": "denominator",
                            "nameLocation": "11311:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3646,
                            "src": "11303:19:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3631,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11303:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3639,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3633,
                                  "name": "reserveIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3594,
                                  "src": "11326:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 3634,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11338:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "11326:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3636,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11325:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3637,
                            "name": "amountInWithFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3620,
                            "src": "11346:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11325:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11303:58:13"
                      },
                      {
                        "expression": {
                          "id": 3644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3640,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3599,
                            "src": "11371:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3641,
                              "name": "numerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3626,
                              "src": "11383:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3642,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3632,
                              "src": "11395:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11383:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11371:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3645,
                        "nodeType": "ExpressionStatement",
                        "src": "11371:35:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3590,
                    "nodeType": "StructuredDocumentation",
                    "src": "10608:278:13",
                    "text": " @dev 入力量から出力量を計算\n @param amountIn 入力トークンの量\n @param reserveIn 入力トークンのリザーブ量\n @param reserveOut 出力トークンのリザーブ量\n @return amountOut 出力トークンの量"
                  },
                  "functionSelector": "054d50d4",
                  "id": 3647,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "10900:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3592,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "10921:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3647,
                        "src": "10913:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10913:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3594,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nameLocation": "10939:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3647,
                        "src": "10931:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10931:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3596,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nameLocation": "10958:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3647,
                        "src": "10950:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3595,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10950:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10912:57:13"
                  },
                  "returnParameters": {
                    "id": 3600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3599,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "11007:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3647,
                        "src": "10999:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10999:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10998:19:13"
                  },
                  "scope": 3952,
                  "src": "10891:522:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3703,
                    "nodeType": "Block",
                    "src": "11832:325:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3659,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3650,
                            "src": "11846:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11859:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11846:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3665,
                        "nodeType": "IfStatement",
                        "src": "11842:53:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3662,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "11869:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11869:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3664,
                          "nodeType": "RevertStatement",
                          "src": "11862:33:13"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3666,
                              "name": "reserveIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3652,
                              "src": "11909:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11922:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11909:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3669,
                              "name": "reserveOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3654,
                              "src": "11927:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11941:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11927:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11909:33:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3676,
                        "nodeType": "IfStatement",
                        "src": "11905:66:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3673,
                              "name": "InvalidInputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2885,
                              "src": "11951:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11951:20:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3675,
                          "nodeType": "RevertStatement",
                          "src": "11944:27:13"
                        }
                      },
                      {
                        "assignments": [
                          3678
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3678,
                            "mutability": "mutable",
                            "name": "numerator",
                            "nameLocation": "11998:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3703,
                            "src": "11990:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3677,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11990:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3684,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3679,
                              "name": "reserveIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3652,
                              "src": "12010:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 3680,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3650,
                              "src": "12022:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12010:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 3682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12034:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "12010:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11990:48:13"
                      },
                      {
                        "assignments": [
                          3686
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3686,
                            "mutability": "mutable",
                            "name": "denominator",
                            "nameLocation": "12056:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 3703,
                            "src": "12048:19:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3685,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12048:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3693,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3687,
                                  "name": "reserveOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3654,
                                  "src": "12071:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 3688,
                                  "name": "amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3650,
                                  "src": "12084:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12071:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3690,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12070:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "393937",
                            "id": 3691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12097:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_997_by_1",
                              "typeString": "int_const 997"
                            },
                            "value": "997"
                          },
                          "src": "12070:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12048:52:13"
                      },
                      {
                        "expression": {
                          "id": 3701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3694,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3657,
                            "src": "12110:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3695,
                                    "name": "numerator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3678,
                                    "src": "12122:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 3696,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3686,
                                    "src": "12134:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12122:23:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3698,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12121:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 3699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12149:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12121:29:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12110:40:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3702,
                        "nodeType": "ExpressionStatement",
                        "src": "12110:40:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3648,
                    "nodeType": "StructuredDocumentation",
                    "src": "11423:278:13",
                    "text": " @dev 出力量から入力量を計算\n @param amountOut 出力トークンの量\n @param reserveIn 入力トークンのリザーブ量\n @param reserveOut 出力トークンのリザーブ量\n @return amountIn 入力トークンの量"
                  },
                  "functionSelector": "85f8c259",
                  "id": 3704,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountIn",
                  "nameLocation": "11715:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3650,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "11735:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3704,
                        "src": "11727:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3649,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11727:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3652,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nameLocation": "11754:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3704,
                        "src": "11746:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11746:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3654,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nameLocation": "11773:10:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3704,
                        "src": "11765:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3653,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11765:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11726:58:13"
                  },
                  "returnParameters": {
                    "id": 3658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3657,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "11822:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3704,
                        "src": "11814:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11814:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11813:18:13"
                  },
                  "scope": 3952,
                  "src": "11706:451:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3782,
                    "nodeType": "Block",
                    "src": "12464:373:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3716,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3710,
                              "src": "12478:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12483:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12478:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 3718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12492:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "12478:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3723,
                        "nodeType": "IfStatement",
                        "src": "12474:41:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3720,
                              "name": "InvalidPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2873,
                              "src": "12502:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12502:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3722,
                          "nodeType": "RevertStatement",
                          "src": "12495:20:13"
                        }
                      },
                      {
                        "expression": {
                          "id": 3731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3724,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3714,
                            "src": "12525:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3728,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3710,
                                  "src": "12549:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12554:6:13",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "12549:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "12535:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 3725,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12539:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3726,
                                "nodeType": "ArrayTypeName",
                                "src": "12539:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 3730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12535:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "12525:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3732,
                        "nodeType": "ExpressionStatement",
                        "src": "12525:36:13"
                      },
                      {
                        "expression": {
                          "id": 3737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3733,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3714,
                              "src": "12571:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3735,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 3734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12579:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12571:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3736,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3707,
                            "src": "12584:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12571:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3738,
                        "nodeType": "ExpressionStatement",
                        "src": "12571:21:13"
                      },
                      {
                        "body": {
                          "id": 3780,
                          "nodeType": "Block",
                          "src": "12653:178:13",
                          "statements": [
                            {
                              "assignments": [
                                3752,
                                3754
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3752,
                                  "mutability": "mutable",
                                  "name": "reserveIn",
                                  "nameLocation": "12676:9:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3780,
                                  "src": "12668:17:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3751,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12668:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3754,
                                  "mutability": "mutable",
                                  "name": "reserveOut",
                                  "nameLocation": "12695:10:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3780,
                                  "src": "12687:18:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3753,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12687:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3765,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3756,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3710,
                                      "src": "12721:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 3758,
                                    "indexExpression": {
                                      "id": 3757,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3740,
                                      "src": "12726:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12721:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3759,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3710,
                                      "src": "12730:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 3763,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3760,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3740,
                                        "src": "12735:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 3761,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12739:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "12735:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12730:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3755,
                                  "name": "getReserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3589,
                                  "src": "12709:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256,uint256)"
                                  }
                                },
                                "id": 3764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12709:33:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12667:75:13"
                            },
                            {
                              "expression": {
                                "id": 3778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3766,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3714,
                                    "src": "12756:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3770,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3767,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3740,
                                      "src": "12764:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 3768,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12768:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "12764:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12756:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 3772,
                                        "name": "amounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3714,
                                        "src": "12786:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3774,
                                      "indexExpression": {
                                        "id": 3773,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3740,
                                        "src": "12794:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12786:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3775,
                                      "name": "reserveIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3752,
                                      "src": "12798:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3776,
                                      "name": "reserveOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3754,
                                      "src": "12809:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 3771,
                                    "name": "getAmountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3647,
                                    "src": "12773:12:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12773:47:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12756:64:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3779,
                              "nodeType": "ExpressionStatement",
                              "src": "12756:64:13"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3742,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3740,
                            "src": "12627:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3743,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3710,
                                "src": "12631:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 3744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12636:6:13",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12631:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 3745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12645:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12631:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12627:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3781,
                        "initializationExpression": {
                          "assignments": [
                            3740
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3740,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12624:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 3781,
                              "src": "12616:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3739,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12616:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3741,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12616:9:13"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12648:3:13",
                            "subExpression": {
                              "id": 3748,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3740,
                              "src": "12648:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3750,
                          "nodeType": "ExpressionStatement",
                          "src": "12648:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "12611:220:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3705,
                    "nodeType": "StructuredDocumentation",
                    "src": "12167:173:13",
                    "text": " @dev パス全体での出力量を計算\n @param amountIn 入力量\n @param path スワップパス\n @return amounts 各段階での量"
                  },
                  "functionSelector": "d06ca61f",
                  "id": 3783,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nameLocation": "12354:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3707,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "12376:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3783,
                        "src": "12368:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3706,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12368:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3710,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "12403:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3783,
                        "src": "12386:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3708,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12386:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3709,
                          "nodeType": "ArrayTypeName",
                          "src": "12386:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12367:41:13"
                  },
                  "returnParameters": {
                    "id": 3715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3714,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "12455:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3783,
                        "src": "12438:24:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3712,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "12438:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3713,
                          "nodeType": "ArrayTypeName",
                          "src": "12438:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12437:26:13"
                  },
                  "scope": 3952,
                  "src": "12345:492:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3865,
                    "nodeType": "Block",
                    "src": "13145:394:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3795,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3789,
                              "src": "13159:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13164:6:13",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13159:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13173:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13159:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3802,
                        "nodeType": "IfStatement",
                        "src": "13155:41:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3799,
                              "name": "InvalidPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2873,
                              "src": "13183:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13183:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3801,
                          "nodeType": "RevertStatement",
                          "src": "13176:20:13"
                        }
                      },
                      {
                        "expression": {
                          "id": 3810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3803,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3793,
                            "src": "13206:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3807,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3789,
                                  "src": "13230:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13235:6:13",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "13230:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "13216:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 3804,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13220:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3805,
                                "nodeType": "ArrayTypeName",
                                "src": "13220:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 3809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13216:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "13206:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3811,
                        "nodeType": "ExpressionStatement",
                        "src": "13206:36:13"
                      },
                      {
                        "expression": {
                          "id": 3819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3812,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3793,
                              "src": "13252:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3817,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3813,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3793,
                                  "src": "13260:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 3814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13268:6:13",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "13260:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13277:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "13260:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13252:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3818,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3786,
                            "src": "13282:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13252:39:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3820,
                        "nodeType": "ExpressionStatement",
                        "src": "13252:39:13"
                      },
                      {
                        "body": {
                          "id": 3863,
                          "nodeType": "Block",
                          "src": "13356:177:13",
                          "statements": [
                            {
                              "assignments": [
                                3835,
                                3837
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3835,
                                  "mutability": "mutable",
                                  "name": "reserveIn",
                                  "nameLocation": "13379:9:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3863,
                                  "src": "13371:17:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3834,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13371:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3837,
                                  "mutability": "mutable",
                                  "name": "reserveOut",
                                  "nameLocation": "13398:10:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3863,
                                  "src": "13390:18:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3836,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13390:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3848,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 3839,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3789,
                                      "src": "13424:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 3843,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3842,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3840,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3822,
                                        "src": "13429:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 3841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13433:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "13429:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13424:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3844,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3789,
                                      "src": "13437:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 3846,
                                    "indexExpression": {
                                      "id": 3845,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3822,
                                      "src": "13442:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13437:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3838,
                                  "name": "getReserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3589,
                                  "src": "13412:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256,uint256)"
                                  }
                                },
                                "id": 3847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13412:33:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13370:75:13"
                            },
                            {
                              "expression": {
                                "id": 3861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3849,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3793,
                                    "src": "13459:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 3853,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3850,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3822,
                                      "src": "13467:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 3851,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13471:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "13467:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13459:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 3855,
                                        "name": "amounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3793,
                                        "src": "13488:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 3857,
                                      "indexExpression": {
                                        "id": 3856,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3822,
                                        "src": "13496:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13488:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3858,
                                      "name": "reserveIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3835,
                                      "src": "13500:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 3859,
                                      "name": "reserveOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3837,
                                      "src": "13511:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 3854,
                                    "name": "getAmountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3704,
                                    "src": "13476:11:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 3860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13476:46:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13459:63:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3862,
                              "nodeType": "ExpressionStatement",
                              "src": "13459:63:13"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3828,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3822,
                            "src": "13344:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13348:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13344:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3864,
                        "initializationExpression": {
                          "assignments": [
                            3822
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3822,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13323:1:13",
                              "nodeType": "VariableDeclaration",
                              "scope": 3864,
                              "src": "13315:9:13",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3821,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13315:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3827,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3823,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3789,
                                "src": "13327:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 3824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13332:6:13",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "13327:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 3825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13341:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13327:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13315:27:13"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 3832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": false,
                            "src": "13351:3:13",
                            "subExpression": {
                              "id": 3831,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3822,
                              "src": "13351:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3833,
                          "nodeType": "ExpressionStatement",
                          "src": "13351:3:13"
                        },
                        "nodeType": "ForStatement",
                        "src": "13310:223:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3784,
                    "nodeType": "StructuredDocumentation",
                    "src": "12847:174:13",
                    "text": " @dev パス全体での入力量を計算\n @param amountOut 出力量\n @param path スワップパス\n @return amounts 各段階での量"
                  },
                  "functionSelector": "1f00ca74",
                  "id": 3866,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsIn",
                  "nameLocation": "13035:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3786,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "13056:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3866,
                        "src": "13048:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3785,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13048:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3789,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "13084:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3866,
                        "src": "13067:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13067:7:13",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3788,
                          "nodeType": "ArrayTypeName",
                          "src": "13067:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13047:42:13"
                  },
                  "returnParameters": {
                    "id": 3794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3793,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "13136:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3866,
                        "src": "13119:24:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3791,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13119:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3792,
                          "nodeType": "ArrayTypeName",
                          "src": "13119:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13118:26:13"
                  },
                  "scope": 3952,
                  "src": "13026:513:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3905,
                    "nodeType": "Block",
                    "src": "13726:193:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3878,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3869,
                            "src": "13740:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13751:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13740:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3884,
                        "nodeType": "IfStatement",
                        "src": "13736:46:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3881,
                              "name": "InsufficientAAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2861,
                              "src": "13761:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13761:21:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3883,
                          "nodeType": "RevertStatement",
                          "src": "13754:28:13"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3885,
                              "name": "reserveA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3871,
                              "src": "13796:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13808:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "13796:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3888,
                              "name": "reserveB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3873,
                              "src": "13813:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13825:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "13813:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13796:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3895,
                        "nodeType": "IfStatement",
                        "src": "13792:69:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3892,
                              "name": "InsufficientOutputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "13835:24:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13835:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3894,
                          "nodeType": "RevertStatement",
                          "src": "13828:33:13"
                        }
                      },
                      {
                        "expression": {
                          "id": 3903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3896,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3876,
                            "src": "13871:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3897,
                                    "name": "amountA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3869,
                                    "src": "13882:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 3898,
                                    "name": "reserveB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3873,
                                    "src": "13892:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13882:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3900,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13881:20:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3901,
                              "name": "reserveA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3871,
                              "src": "13904:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13881:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13871:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3904,
                        "nodeType": "ExpressionStatement",
                        "src": "13871:41:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3867,
                    "nodeType": "StructuredDocumentation",
                    "src": "13549:54:13",
                    "text": " @dev 比例計算（クォート）"
                  },
                  "id": 3906,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_quote",
                  "nameLocation": "13617:6:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3874,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3869,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nameLocation": "13632:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3906,
                        "src": "13624:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3868,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13624:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3871,
                        "mutability": "mutable",
                        "name": "reserveA",
                        "nameLocation": "13649:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3906,
                        "src": "13641:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13641:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3873,
                        "mutability": "mutable",
                        "name": "reserveB",
                        "nameLocation": "13667:8:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3906,
                        "src": "13659:16:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3872,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13659:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13623:53:13"
                  },
                  "returnParameters": {
                    "id": 3877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3876,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nameLocation": "13717:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3906,
                        "src": "13709:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3875,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13709:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13708:17:13"
                  },
                  "scope": 3952,
                  "src": "13608:311:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3950,
                    "nodeType": "Block",
                    "src": "14111:201:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3918,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3909,
                            "src": "14125:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3919,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3911,
                            "src": "14135:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14125:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3924,
                        "nodeType": "IfStatement",
                        "src": "14121:46:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3921,
                              "name": "IdenticalTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2879,
                              "src": "14150:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14150:17:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3923,
                          "nodeType": "RevertStatement",
                          "src": "14143:24:13"
                        }
                      },
                      {
                        "expression": {
                          "id": 3938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3925,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3914,
                                "src": "14178:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3926,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3916,
                                "src": "14186:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 3927,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "14177:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3928,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3909,
                                "src": "14196:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 3929,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3911,
                                "src": "14205:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14196:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "components": [
                                {
                                  "id": 3934,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3911,
                                  "src": "14234:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3935,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3909,
                                  "src": "14242:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 3936,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14233:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "id": 3937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "14196:53:13",
                            "trueExpression": {
                              "components": [
                                {
                                  "id": 3931,
                                  "name": "tokenA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3909,
                                  "src": "14215:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3932,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3911,
                                  "src": "14223:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "id": 3933,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14214:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                                "typeString": "tuple(address,address)"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "src": "14177:72:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3939,
                        "nodeType": "ExpressionStatement",
                        "src": "14177:72:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3940,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3914,
                            "src": "14263:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14281:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14273:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3941,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14273:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14273:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14263:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3949,
                        "nodeType": "IfStatement",
                        "src": "14259:46:13",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3946,
                              "name": "ZeroAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2876,
                              "src": "14292:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14292:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3948,
                          "nodeType": "RevertStatement",
                          "src": "14285:20:13"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3907,
                    "nodeType": "StructuredDocumentation",
                    "src": "13929:60:13",
                    "text": " @dev トークンアドレスをソート"
                  },
                  "id": 3951,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_sortTokens",
                  "nameLocation": "14003:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3912,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3909,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "14023:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3951,
                        "src": "14015:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14015:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3911,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "14039:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3951,
                        "src": "14031:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3910,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14031:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14014:32:13"
                  },
                  "returnParameters": {
                    "id": 3917,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3914,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "14087:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3951,
                        "src": "14079:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3913,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14079:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3916,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "14103:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 3951,
                        "src": "14095:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3915,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14095:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14078:32:13"
                  },
                  "scope": 3952,
                  "src": "13994:318:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3953,
              "src": "480:13834:13",
              "usedErrors": [
                857,
                1353,
                2858,
                2861,
                2864,
                2867,
                2870,
                2873,
                2876,
                2879,
                2882,
                2885
              ],
              "usedEvents": []
            }
          ],
          "src": "32:14283:13"
        },
        "id": 13
      }
    },
    "contracts": {
      "@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "IERC1363": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFromAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256)": "3177029f",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256)": "1296ee62",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferFromAndCall(address,address,uint256)": "d8fbe994",
              "transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_unbounded": {
                  "entryPoint": 33,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 39,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234601d57600e6021565b603f602d823930815050603f90f35b6027565b60405190565b600080fdfe6080604052600080fdfea26469706673582212202e3ba1a601c76a27521573f36dd0c7b04d8ec8020867bd779aeda7d0dd28b1df64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1D JUMPI PUSH1 0xE PUSH1 0x21 JUMP JUMPDEST PUSH1 0x3F PUSH1 0x2D DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x27 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXTCODESIZE LOG1 0xA6 ADD 0xC7 PUSH11 0x27521573F36DD0C7B04D8E 0xC8 MUL ADDMOD PUSH8 0xBD779AEDA7D0DD28 0xB1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "698:9376:7:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea26469706673582212202e3ba1a601c76a27521573f36dd0c7b04d8ec8020867bd779aeda7d0dd28b1df64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E EXTCODESIZE LOG1 0xA6 ADD 0xC7 PUSH11 0x27521573F36DD0C7B04D8E 0xC8 MUL ADDMOD PUSH8 0xBD779AEDA7D0DD28 0xB1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "698:9376:7:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"
        }
      },
      "contracts/DexFactory.sol": {
        "DexFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeToSetter",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "IdenticalTokens",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "PairAlreadyExists",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ZeroAddress",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newFeeToSetter",
                  "type": "address"
                }
              ],
              "name": "FeeToSetterUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newFeeTo",
                  "type": "address"
                }
              ],
              "name": "FeeToUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "pairLength",
                  "type": "uint256"
                }
              ],
              "name": "PairCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "pairFor",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeTo",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeToSetter",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 329,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 134,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 52,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 283,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constructor_DexFactory": {
                  "entryPoint": 455,
                  "id": 1495,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 317,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 396,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 368,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_DexFactory": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 95,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 286,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 73,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 420,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 58,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 155,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 63,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 335,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 341,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 423,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461002f576100196100146100fa565b6101c7565b610021610034565b614396610213823961439690f35b61003a565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906100699061003f565b810190811060018060401b0382111761008157604052565b610049565b90610099610092610034565b928361005f565b565b600080fd5b60018060a01b031690565b6100b4906100a0565b90565b6100c0816100ab565b036100c757565b600080fd5b905051906100d9826100b7565b565b906020828203126100f5576100f2916000016100cc565b90565b61009b565b6101186145a98038038061010d81610086565b9283398101906100db565b90565b90565b90565b61013561013061013a9261011b565b61011e565b6100a0565b90565b61014690610121565b90565b60000190565b60001b90565b9061016660018060a01b039161014f565b9181191691161790565b61018461017f610189926100a0565b61011e565b6100a0565b90565b61019590610170565b90565b6101a19061018c565b90565b90565b906101bc6101b76101c392610198565b6101a4565b8254610155565b9055565b806101e36101dd6101d8600061013d565b6100ab565b916100ab565b146101f5576101f39060016101a7565b565b600063d92e233d60e01b81528061020e60048201610149565b0390fdfe60806040526004361015610013575b610520565b61001e6000356100ad565b8063017e7e58146100a8578063094b7415146100a35780631e3dd18b1461009e578063574f2ba31461009957806396ed28f914610094578063a2e74af61461008f578063c9c653961461008a578063e6a43905146100855763f46901ed0361000e576104ed565b6104b7565b6103f8565b6103c5565b61036a565b6102e3565b61028b565b610195565b610150565b60e01c90565b60405190565b600080fd5b600080fd5b60009103126100ce57565b6100be565b1c90565b60018060a01b031690565b6100f29060086100f793026100d3565b6100d7565b90565b9061010591546100e2565b90565b6101136000806100fa565b90565b60018060a01b031690565b61012a90610116565b90565b61013690610121565b9052565b919061014e9060006020850194019061012d565b565b34610180576101603660046100c3565b61017c61016b610108565b6101736100b3565b9182918261013a565b0390f35b6100b9565b61019260016000906100fa565b90565b346101c5576101a53660046100c3565b6101c16101b0610185565b6101b86100b3565b9182918261013a565b0390f35b6100b9565b90565b6101d6816101ca565b036101dd57565b600080fd5b905035906101ef826101cd565b565b9060208282031261020b57610208916000016101e2565b90565b6100be565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b61023e81610226565b8210156102595761025060019161022a565b91020190600090565b610210565b600361026981610226565b821015610286576102839161027d91610235565b906100fa565b90565b600080fd5b346102bb576102b76102a66102a13660046101f1565b61025e565b6102ae6100b3565b9182918261013a565b0390f35b6100b9565b6102c9906101ca565b9052565b91906102e1906000602085019401906102c0565b565b34610313576102f33660046100c3565b61030f6102fe61052a565b6103066100b3565b918291826102cd565b0390f35b6100b9565b61032181610121565b0361032857565b600080fd5b9050359061033a82610318565b565b91906040838203126103655780610359610362926000860161032d565b9360200161032d565b90565b6100be565b3461039b5761039761038661038036600461033c565b906106f7565b61038e6100b3565b9182918261013a565b0390f35b6100b9565b906020828203126103ba576103b79160000161032d565b90565b6100be565b60000190565b346103f3576103dd6103d83660046103a0565b61088f565b6103e56100b3565b806103ef816103bf565b0390f35b6100b9565b346104295761042561041461040e36600461033c565b90610aaf565b61041c6100b3565b9182918261013a565b0390f35b6100b9565b90565b61044561044061044a92610116565b61042e565b610116565b90565b61045690610431565b90565b6104629061044d565b90565b9061046f90610459565b600052602052604060002090565b9061048790610459565b600052602052604060002090565b6104af6104b4926104aa600293600094610465565b61047d565b6100fa565b90565b346104e8576104e46104d36104cd36600461033c565b90610495565b6104db6100b3565b9182918261013a565b0390f35b6100b9565b3461051b576105056105003660046103a0565b610d4d565b61050d6100b3565b80610517816103bf565b0390f35b6100b9565b600080fd5b600090565b610532610525565b5061053d6003610226565b90565b600090565b60601b90565b61055490610545565b90565b6105609061054b565b90565b61056f61057491610121565b610557565b9052565b60148161058a61059293839695610563565b018092610563565b0190565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906105c090610596565b810190811067ffffffffffffffff8211176105da57604052565b6105a0565b60200190565b5190565b906105fc6105f56100b3565b92836105b6565b565b90565b60ff60f81b1690565b60f81b90565b61062461061f610629926105fe565b61060a565b610601565b90565b6106359061044d565b90565b90565b61064761064c91610601565b610638565b9052565b90565b90565b61066261066791610650565b610653565b9052565b9261069960146106a19461069160018861068960209b9a8c9961063b565b018092610563565b018092610656565b018092610656565b0190565b60001c90565b6106bf6106ba6106c4926101ca565b61042e565b6101ca565b90565b6106d36106d8916106a5565b6106ab565b90565b6106ef6106ea6106f4926101ca565b61042e565b610116565b90565b6107e86107f2926107ed9261070a610540565b508061071e61071884610121565b91610121565b106000146107f557610751905b6107426107366100b3565b93849260208401610578565b602082018103825203826105b6565b61076361075d826105e5565b916105df565b206107d0613589610776602082016105e9565b90808252610dd8602083013961079461078e826105e5565b916105df565b206107c16107a260ff610610565b916107ac3061062c565b946107b56100b3565b9586946020860161066b565b602082018103825203826105b6565b6107e26107dc826105e5565b916105df565b206106c7565b6106db565b61044d565b90565b906107519061072b565b61080b610810916106a5565b6100d7565b90565b61081d90546107ff565b90565b90565b61083761083261083c92610820565b61042e565b610116565b90565b61084890610823565b90565b60001b90565b9061086260018060a01b039161084b565b9181191691161790565b90565b9061088461087f61088b92610459565b61086c565b8254610851565b9055565b336108ab6108a56108a06001610813565b610121565b91610121565b0361093b57806108cc6108c66108c1600061083f565b610121565b91610121565b1461091e576108dc81600161086f565b6109067f021a5d032b24a495206270942f8c755327f3b27539f23099539ff95e2500b28d91610459565b9061090f6100b3565b80610919816103bf565b0390a2565b600063d92e233d60e01b815280610937600482016103bf565b0390fd5b60006282b42960e81b815280610953600482016103bf565b0390fd5b61096090610431565b90565b61096c90610957565b90565b6109789061044d565b90565b600080fd5b60e01b90565b600091031261099157565b6100be565b9160206109b89294936109b16040820196600083019061012d565b019061012d565b565b6109c26100b3565b3d6000823e3d90fd5b90565b600052602060002090565b5490565b6109e6816109d9565b821015610a01576109f86001916109ce565b91020190600090565b610210565b1b90565b91906008610a2a910291610a2460018060a01b0384610a06565b92610a06565b9181191691161790565b9190610a4a610a45610a5293610459565b61086c565b908354610a0a565b9055565b9081549168010000000000000000831015610a865782610a7e916001610a84950181556109dd565b90610a34565b565b6105a0565b916020610aad929493610aa66040820196600083019061012d565b01906102c0565b565b919091610aba610540565b5080610ace610ac885610121565b91610121565b14610d305780610ae6610ae085610121565b91610121565b10600014610d2a575b9182610b0c610b06610b01600061083f565b610121565b91610121565b14610d0d57610b2f610b2a610b2360028690610465565b839061047d565b610813565b610b4a610b44610b3f600061083f565b610121565b91610121565b03610cf057613589610b5e602082016105e9565b90808252610dd8602083013983610b968391610b87610b7b6100b3565b93849260208401610578565b602082018103825203826105b6565b610ba8610ba2826105e5565b916105df565b20906020815191016000f592610bc5610bc085610963565b61096f565b63485cc955828492803b15610ceb57610bf260008094610bfd610be66100b3565b97889687958694610980565b845260048401610996565b03925af18015610ce657610cb9575b50610c2c84610c27610c2060028590610465565b859061047d565b61086f565b610c4b84610c46610c3f60028690610465565b849061047d565b61086f565b610c5f610c5860036109cb565b8590610a56565b908391610c6c6003610226565b610c9f610c997f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e993610459565b93610459565b93610cb4610cab6100b3565b92839283610a8b565b0390a3565b610cd99060003d8111610cdf575b610cd181836105b6565b810190610986565b38610c0c565b503d610cc7565b6109ba565b61097b565b600063c9bb25eb60e01b815280610d09600482016103bf565b0390fd5b600063d92e233d60e01b815280610d26600482016103bf565b0390fd5b91610aef565b6000635c6d7b7360e01b815280610d49600482016103bf565b0390fd5b33610d69610d63610d5e6001610813565b610121565b91610121565b03610dbb57610d7981600061086f565b610da37f9887df018dfa75103faf0f1388028e55a1124783c285d8d2cbcf62a067a6b84491610459565b90610dac6100b3565b80610db6816103bf565b0390a2565b60006282b42960e81b815280610dd3600482016103bf565b0390fdfe608060405234610027576100116101e9565b61001961002c565b613082610507823961308290f35b610032565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061006190610037565b810190811060018060401b0382111761007957604052565b610041565b9061009161008a61002c565b9283610057565b565b60018060401b0381116100af576100ab602091610037565b0190565b610041565b906100c66100c183610093565b61007e565b918252565b60007f444558204c5020546f6b656e0000000000000000000000000000000000000000910152565b6100fd600c6100b4565b9061010a602083016100cb565b565b6101146100f3565b90565b60007f4445582d4c500000000000000000000000000000000000000000000000000000910152565b61014960066100b4565b9061015660208301610117565b565b61016061013f565b90565b60001b90565b9061017a60018060a01b0391610163565b9181191691161790565b60018060a01b031690565b90565b6101a66101a16101ab92610184565b61018f565b610184565b90565b6101b790610192565b90565b6101c3906101ae565b90565b90565b906101de6101d96101e5926101ba565b6101c6565b8254610169565b9055565b6102026101f461010c565b6101fc610158565b90610294565b61020d3360066101c9565b565b90565b90565b61022961022461022e9261020f565b61018f565b610212565b90565b61023b6001610215565b90565b9061024b60001991610163565b9181191691161790565b61026961026461026e92610212565b61018f565b610212565b90565b90565b9061028961028461029092610255565b610271565b825461023e565b9055565b9061029e916104ee565b6102b06102a9610231565b6005610274565b565b5190565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156102ec575b60208310146102e757565b6102b6565b91607f16916102dc565b600052602060002090565b601f602091010490565b1b90565b9190600861032b9102916103256000198461030b565b9261030b565b9181191691161790565b919061034b61034661035393610255565b610271565b90835461030f565b9055565b600090565b61036e91610368610357565b91610335565b565b5b81811061037c575050565b8061038a600060019361035c565b01610371565b9190601f81116103a0575b505050565b6103ac6103d1936102f6565b9060206103b884610301565b830193106103d9575b6103ca90610301565b0190610370565b38808061039b565b91506103ca819290506103c1565b1c90565b906103fc90600019906008026103e7565b191690565b8161040b916103eb565b906002021790565b9061041d816102b2565b9060018060401b0382116104dd5761043f8261043985546102cc565b85610390565b602090601f83116001146104745791809161046393600092610468575b5050610401565b90555b565b9091500151388061045c565b601f19831691610483856102f6565b9260005b8181106104c5575091600293918560019694106104ab575b50505002019055610466565b6104bb910151601f8416906103eb565b905538808061049f565b91936020600181928787015181550195019201610487565b610041565b906104ec91610413565b565b906104fd6105049260036104e2565b60046104e2565b56fe60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119c3565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119ef565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e50565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6e565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e84565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611ebe565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a92612050565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612086565b610d11565b610acf61210b565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612464565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b91909161216b565b8d8d610dee565b6111938d61118b86610b60565b908d9161216b565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e6126a0565b9190916126ad565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb6126a0565b829084916126fe565b9190916127b5565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612086565b61168a565b906115cf61210b565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b90565b61162061161b61162592611609565b61094d565b6101bf565b90565b6116319061160c565b90565b906116416000199161151b565b9181191691161790565b61165f61165a61166492610198565b61094d565b610198565b90565b90565b9061167f61167a6116869261164b565b611667565b8254611634565b9055565b91909150816116a96116a361169e30610b88565b6101ca565b916101ca565b146119a6576116b6611416565b509290929061170c60206116da6116d56116d06007610b2b565b610b60565b610b7c565b6370a08231906117016116ec30610b88565b926116f5610183565b95869485938493610bd3565b835260048301610530565b03915afa9081156119a157600091611973575b5093611772602061174061173b6117366008610b2b565b610b60565b610b7c565b6370a082319061176761175230610b88565b9261175b610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196e57600091611940575b509161179a8661179484610af0565b90610c2e565b926117ae816117a887610af0565b90610c2e565b946117ba8482906128c9565b936117c361149c565b806117d76117d16000610ad4565b91610198565b146000146118f757506118046117f66117f1888a90610c53565b612adf565b6117fe61096c565b90610c2e565b9861182161181361dead611628565b61181b61096c565b90612bae565b5b896118366118306000610ad4565b91610198565b146118da57611849611852958b90612bae565b92909192612464565b61189e575b3390916118847f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b92611899611890610183565b92839283610885565b0390a2565b6118d56118ce6118b66118b160096113b8565b610af0565b6118c86118c360096113df565b610af0565b90610c53565b600c61166a565b611857565b600063bb55fd2760e01b8152806118f3600482016102a9565b0390fd5b61193a9061193461192561191e61190f8b8590610c53565b61191887610af0565b906115e7565b928b610c53565b61192e86610af0565b906115e7565b90612aae565b98611822565b611961915060203d8111611967575b6119598183610baa565b810190610be8565b38611785565b503d61194f565b610c07565b611994915060203d811161199a575b61198c8183610baa565b810190610be8565b3861171f565b503d611982565b610c07565b6000630521f43160e31b8152806119bf600482016102a9565b0390fd5b6119d4906119cf610b0c565b6115b4565b90565b906119e190610cc6565b600052602052604060002090565b611a06611a0b916119fe610b0c565b5060006119d7565b61148f565b90565b90611a219291611a1c612086565b611a2d565b9091611a2b61210b565b565b929192505081611a4d611a47611a4230610b88565b6101ca565b916101ca565b14611e3357611a5a611416565b5091909192611a696007610b2b565b611a736008610b2b565b90611abc6020611a8a611a8584610b60565b610b7c565b6370a0823190611ab1611a9c30610b88565b92611aa5610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2e57600091611e00575b5091611b196020611ae7611ae284610b60565b610b7c565b6370a0823190611b0e611af930610b88565b92611b02610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611dfb57600091611dcd575b5096611b3f611b3a30610b88565b6119ef565b96611b7a611b4e8284906128c9565b95611b75611b6e611b67611b6061149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8f611b896000610ad4565b91610198565b148015611db2575b611d9557611bee611be9611c2096611bb9602094611bb430610b88565b612c10565b611bcf8d611bc683610b60565b908c909161216b565b611be4611bdb88610b60565b8d8c909161216b565b610b60565b610b7c565b6370a0823190611c15611c0030610b88565b92611c09610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d9057611c4c611c47611c7e96602093600091611d63575b5095610b60565b610b7c565b6370a0823190611c73611c5e30610b88565b92611c67610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5e57611c9d94600091611d30575b50909192612464565b611cf4575b3390849184611cda611cd47fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611cef611ce6610183565b92839283610885565b0390a3565b611d2b611d24611d0c611d0760096113b8565b610af0565b611d1e611d1960096113df565b610af0565b90610c53565b600c61166a565b611ca2565b611d51915060203d8111611d57575b611d498183610baa565b810190610be8565b38611c94565b503d611d3f565b610c07565b611d839150843d8111611d89575b611d7b8183610baa565b810190610be8565b38611c40565b503d611d71565b610c07565b600063749383ad60e01b815280611dae600482016102a9565b0390fd5b5088611dc7611dc16000610ad4565b91610198565b14611b97565b611dee915060203d8111611df4575b611de68183610baa565b810190610be8565b38611b2c565b503d611ddc565b610c07565b611e21915060203d8111611e27575b611e198183610baa565b810190610be8565b38611acf565b503d611e0f565b610c07565b6000630521f43160e31b815280611e4c600482016102a9565b0390fd5b611e6a90611e5c610b0c565b611e64610b0c565b90611a0e565b9091565b611e7661124e565b50611e816004611365565b90565b611ea191611e90611454565b50611e996126a0565b9190916127b5565b600190565b90611eb090610cc6565b600052602052604060002090565b611ee391611ed9611ede92611ed1610b0c565b506001611ea6565b6119d7565b61148f565b90565b611eee612086565b611ef6611f00565b611efe61210b565b565b611f516020611f1f611f1a611f156007610b2b565b610b60565b610b7c565b6370a0823190611f46611f3130610b88565b92611f3a610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204b57611fb69160009161201d575b506020611f84611f7f611f7a6008610b2b565b610b60565b610b7c565b6370a0823190611fab611f9630610b88565b92611f9f610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201857611fe892600091611fea575b50611fd760096113b8565b90611fe260096113df565b92612464565b565b61200b915060203d8111612011575b6120038183610baa565b810190610be8565b38611fcc565b503d611ff9565b610c07565b61203e915060203d8111612044575b6120368183610baa565b810190610be8565b38611f67565b503d61202c565b610c07565b612058611ee6565b565b90565b61207161206c6120769261205a565b61094d565b610198565b90565b612083600261205d565b90565b612090600561148f565b6120a96120a361209e612079565b610198565b91610198565b146120c2576120c06120b9612079565b600561166a565b565b6000633ee5aeb560e01b8152806120db600482016102a9565b0390fd5b90565b6120f66120f16120fb926120df565b61094d565b610198565b90565b61210860016120e2565b90565b61211d6121166120fe565b600561166a565b565b63ffffffff60e01b1690565b61213f61213a612144926103d1565b610bd3565b61211f565b90565b91602061216992949361216260408201966000830190610523565b019061057b565b565b906121b26121b7936121a36004949361218a63a9059cbb91939161212b565b92612193610183565b9687946020860190815201612147565b60208201810382520383610baa565b612c73565b565b90565b6121d06121cb6121d5926121b9565b61094d565b610198565b90565b6121e46121ea91610198565b91610198565b9081156121f5570690565b6115d1565b61220e61220961221392610198565b61094d565b6103d1565b90565b612222612228916103d1565b916103d1565b90039063ffffffff821161223857565b610c18565b61225161224c61225692610ad1565b61094d565b6103d1565b90565b61226d61226861227292610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229461228f612299926103b1565b61094d565b612275565b90565b6122a86122ae91612275565b91612275565b9081156122b9570490565b6115d1565b6122d26122cd6122d792612275565b61094d565b610198565b90565b6122ee6122e96122f3926103d1565b61094d565b610198565b90565b61230561230b91939293610198565b92610198565b820180921161231657565b610c18565b61232f61232a61233492610198565b61094d565b6103b1565b90565b906123506dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236e612369612373926103b1565b61094d565b6103b1565b90565b90565b9061238e6123896123959261235a565b612376565b8254612337565b9055565b60701b90565b906123bb6dffffffffffffffffffffffffffff60701b91612399565b9181191691161790565b906123da6123d56123e19261235a565b612376565b825461239f565b9055565b906123f763ffffffff60e01b91610bd3565b9181191691161790565b61241561241061241a926103d1565b61094d565b6103d1565b90565b90565b9061243561243061243c92612401565b61241d565b82546123e5565b9055565b91602061246292949361245b604082019660008301906103c4565b01906103c4565b565b9092816124876124816dffffffffffffffffffffffffffff610af0565b91610198565b118015612673575b612656576125239361251061250961251c94612515946124c56124c0426124ba6401000000006121bc565b906121d8565b6121fa565b976124da896124d46009611409565b90612216565b91826124ef6124e9600061223d565b916103d1565b118061263a575b8061261e575b612572575b50505061231b565b6009612379565b61231b565b60096123c5565b6009612420565b61252d60096113b8565b61253760096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad19161256d612564610183565b92839283612440565b0390a1565b612616926125fa6125f46125ef846125e96125e361260f986125de6125d76125c86125b96125b46125a56126009e612d87565b6125ae87612280565b9061229c565b6122be565b6125c28c6122da565b90610c53565b6125d2600a61148f565b6122f6565b600a61166a565b612d87565b91612280565b9061229c565b6122be565b916122da565b90610c53565b61260a600b61148f565b6122f6565b600b61166a565b388080612501565b508061263361262d6000612259565b916103b1565b14156124fc565b508161264f6126496000612259565b916103b1565b14156124f6565b6000631a93c68960e11b81528061266f600482016102a9565b0390fd5b508361269561268f6dffffffffffffffffffffffffffff610af0565b91610198565b1161248f565b600090565b6126a861269b565b503390565b916126bb9291600192612db2565b565b6040906126e76126ee94969593966126dd60608401986000850190610523565b602083019061057b565b019061057b565b565b906126fb9103610198565b90565b92919261270c818390611ebe565b908161272261271c600019610198565b91610198565b1061272f575b5050509050565b8161274261273c87610198565b91610198565b106127695761276093946127579193926126f0565b90600092612db2565b80388080612728565b50612789849291926000938493637dc7a0d960e11b8552600485016126bd565b0390fd5b6127a161279c6127a692610ad1565b61094d565b6101bf565b90565b6127b29061278d565b90565b91826127d26127cc6127c760006127a9565b6101ca565b916101ca565b1461282f57816127f36127ed6127e860006127a9565b6101ca565b916101ca565b146128065761280492919091612ed5565b565b61282b61281360006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b61285461283c60006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61286190610b38565b90565b61286d90612858565b90565b61287990610b70565b90565b90505190612889826101d6565b565b906020828203126128a5576128a29160000161287c565b90565b61018e565b90565b6128c16128bc6128c6926128aa565b61094d565b610198565b90565b91906128d3611454565b5061290960206128f36128ee6128e96006610b2b565b612864565b612870565b63017e7e5890612901610183565b938492610bd3565b82528180612919600482016102a9565b03915afa908115612aa957600091612a7b575b50908161294a61294461293f60006127a9565b6101ca565b916101ca565b141593612957600c61148f565b9185600014612a40578261297461296e6000610ad4565b91610198565b03612981575b505050505b565b6129a36129a89161299d6129976129ae95610af0565b91610af0565b90610c53565b612adf565b91612adf565b90806129c26129bc84610198565b91610198565b116129ce575b8061297a565b612a0a612a1092612a056129f46129e361149c565b6129ee868590610c2e565b90610c53565b936129ff60056128ad565b90610c53565b6122f6565b906115e7565b80612a24612a1e6000610ad4565b91610198565b11612a30575b806129c8565b612a3991612bae565b3880612a2a565b50509050612a57612a516000610ad4565b91610198565b03612a62575b61297f565b612a76612a6f6000610ad4565b600c61166a565b612a5d565b612a9c915060203d8111612aa2575b612a948183610baa565b81019061288b565b3861292c565b503d612a8a565b610c07565b90612ab7610b0c565b5081612acb612ac583610198565b91610198565b10600014612ad857505b90565b9050612ad5565b612ae7610b0c565b81612afb612af56003610c8b565b91610198565b11600014612b7c575080612b2c612b1c83612b16600261205d565b906115e7565b612b2660016120e2565b906122f6565b905b81612b41612b3b83610198565b91610198565b1015612b755750612b6f612b5f82612b5a8582906115e7565b6122f6565b612b69600261205d565b906115e7565b90612b2e565b929150505b565b9190612b91612b8b6000610ad4565b91610198565b03612b9c575b612b7a565b9050612ba860016120e2565b90612b97565b80612bca612bc4612bbf60006127a9565b6101ca565b916101ca565b14612be757612be591612bdd60006127a9565b919091612ed5565b565b612c0c612bf460006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c2d612c27612c2260006127a9565b6101ca565b916101ca565b14612c4a57612c489190612c4160006127a9565b9091612ed5565b565b612c6f612c5760006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c81610b0c565b50612c8a610b0c565b50828151910182855af115612d22573d60005190612cb1612cab6000610ad4565b91610198565b14600014612d085750612cc381610b7c565b3b612cd7612cd16000610ad4565b91610198565b145b612ce05750565b612cec612d0491610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612d1b612d1560016120e2565b91610198565b1415612cd9565b6040513d6000823e3d90fd5b600090565b90565b612d4a612d45612d4f92612d33565b61094d565b612275565b90565b612d61612d6791939293612275565b92612275565b91612d73838202612275565b928184041490151715612d8257565b610c18565b612d9c612daf91612d96612d2e565b50612280565b612da9600160701b612d36565b90612d52565b90565b909281612dd0612dca612dc560006127a9565b6101ca565b916101ca565b14612e9e5783612df1612deb612de660006127a9565b6101ca565b916101ca565b14612e7557612e1583612e10612e0960018690611ea6565b87906119d7565b61166a565b612e1f575b505050565b919091612e6a612e58612e527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e61610183565b91829182610588565b0390a3388080612e1a565b612e9a612e8260006127a9565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612ec3612eab60006127a9565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ed29101610198565b90565b91909180612ef4612eee612ee960006127a9565b6101ca565b916101ca565b14600014612fd957612f19612f1283612f0d600261148f565b6122f6565b600261166a565b5b82612f36612f30612f2b60006127a9565b6101ca565b916101ca565b14600014612fac57612f5b612f5483612f4f600261148f565b6126f0565b600261166a565b5b919091612fa7612f95612f8f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f9e610183565b91829182610588565b0390a3565b612fd482612fce612fbf600087906119d7565b91612fc98361148f565b612ec7565b9061166a565b612f5c565b612fed612fe8600083906119d7565b61148f565b80613000612ffa85610198565b91610198565b10613029576130136130249184906126f0565b61301f600084906119d7565b61166a565b612f1a565b90613048909192600093849363391434e360e21b8552600485016126bd565b0390fdfea26469706673582212205bfd44fd13409b42551b4ec8d02c5dd3513b06c86e2916dfd23d0310b6ddc88064736f6c634300081e0033a2646970667358221220d450e8fe727b12abcb61a5f6737b760acd1f79145f3abb48abff21e74f626ecd64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2F JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xFA JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x21 PUSH2 0x34 JUMP JUMPDEST PUSH2 0x4396 PUSH2 0x213 DUP3 CODECOPY PUSH2 0x4396 SWAP1 RETURN JUMPDEST PUSH2 0x3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x69 SWAP1 PUSH2 0x3F JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x81 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST SWAP1 PUSH2 0x99 PUSH2 0x92 PUSH2 0x34 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB4 SWAP1 PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0 DUP2 PUSH2 0xAB JUMP JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xD9 DUP3 PUSH2 0xB7 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xF5 JUMPI PUSH2 0xF2 SWAP2 PUSH1 0x0 ADD PUSH2 0xCC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH2 0x118 PUSH2 0x45A9 DUP1 CODESIZE SUB DUP1 PUSH2 0x10D DUP2 PUSH2 0x86 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xDB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 PUSH2 0x13A SWAP3 PUSH2 0x11B JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x146 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x166 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x14F JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F PUSH2 0x189 SWAP3 PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x195 SWAP1 PUSH2 0x170 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A1 SWAP1 PUSH2 0x18C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BC PUSH2 0x1B7 PUSH2 0x1C3 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x155 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1E3 PUSH2 0x1DD PUSH2 0x1D8 PUSH1 0x0 PUSH2 0x13D JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST SWAP2 PUSH2 0xAB JUMP JUMPDEST EQ PUSH2 0x1F5 JUMPI PUSH2 0x1F3 SWAP1 PUSH1 0x1 PUSH2 0x1A7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20E PUSH1 0x4 DUP3 ADD PUSH2 0x149 JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xAD JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x94B7415 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x96ED28F9 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0x85 JUMPI PUSH4 0xF46901ED SUB PUSH2 0xE JUMPI PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xCE JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x8 PUSH2 0xF7 SWAP4 MUL PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x105 SWAP2 SLOAD PUSH2 0xE2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x0 DUP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x12A SWAP1 PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x14E SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x16B PUSH2 0x108 JUMP JUMPDEST PUSH2 0x173 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x1 PUSH1 0x0 SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1B0 PUSH2 0x185 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1DD JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1EF DUP3 PUSH2 0x1CD JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x20B JUMPI PUSH2 0x208 SWAP2 PUSH1 0x0 ADD PUSH2 0x1E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x259 JUMPI PUSH2 0x250 PUSH1 0x1 SWAP2 PUSH2 0x22A JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x269 DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x286 JUMPI PUSH2 0x283 SWAP2 PUSH2 0x27D SWAP2 PUSH2 0x235 JUMP JUMPDEST SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI PUSH2 0x2B7 PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2AE PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x2C9 SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x313 JUMPI PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x30F PUSH2 0x2FE PUSH2 0x52A JUMP JUMPDEST PUSH2 0x306 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2CD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x328 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x33A DUP3 PUSH2 0x318 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x365 JUMPI DUP1 PUSH2 0x359 PUSH2 0x362 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x32D JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST CALLVALUE PUSH2 0x39B JUMPI PUSH2 0x397 PUSH2 0x386 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x38E PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x3BA JUMPI PUSH2 0x3B7 SWAP2 PUSH1 0x0 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x3DD PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x3EF DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x425 PUSH2 0x414 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x41C PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x440 PUSH2 0x44A SWAP3 PUSH2 0x116 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x456 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x462 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x46F SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x487 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x4B4 SWAP3 PUSH2 0x4AA PUSH1 0x2 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4E8 JUMPI PUSH2 0x4E4 PUSH2 0x4D3 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x51B JUMPI PUSH2 0x505 PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x50D PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x517 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x525 JUMP JUMPDEST POP PUSH2 0x53D PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0x554 SWAP1 PUSH2 0x545 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x560 SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56F PUSH2 0x574 SWAP2 PUSH2 0x121 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x58A PUSH2 0x592 SWAP4 DUP4 SWAP7 SWAP6 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x5C0 SWAP1 PUSH2 0x596 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5FC PUSH2 0x5F5 PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5B6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST PUSH2 0x624 PUSH2 0x61F PUSH2 0x629 SWAP3 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x635 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x647 PUSH2 0x64C SWAP2 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x667 SWAP2 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP3 PUSH2 0x699 PUSH1 0x14 PUSH2 0x6A1 SWAP5 PUSH2 0x691 PUSH1 0x1 DUP9 PUSH2 0x689 PUSH1 0x20 SWAP12 SWAP11 DUP13 SWAP10 PUSH2 0x63B JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x6BA PUSH2 0x6C4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x6D8 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6EF PUSH2 0x6EA PUSH2 0x6F4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x7F2 SWAP3 PUSH2 0x7ED SWAP3 PUSH2 0x70A PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0x71E PUSH2 0x718 DUP5 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x7F5 JUMPI PUSH2 0x751 SWAP1 JUMPDEST PUSH2 0x742 PUSH2 0x736 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x75D DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7D0 PUSH2 0x3589 PUSH2 0x776 PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x794 PUSH2 0x78E DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7C1 PUSH2 0x7A2 PUSH1 0xFF PUSH2 0x610 JUMP JUMPDEST SWAP2 PUSH2 0x7AC ADDRESS PUSH2 0x62C JUMP JUMPDEST SWAP5 PUSH2 0x7B5 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x7DC DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x751 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x80B PUSH2 0x810 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x81D SWAP1 SLOAD PUSH2 0x7FF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0x832 PUSH2 0x83C SWAP3 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP1 PUSH2 0x823 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x862 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x84B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x884 PUSH2 0x87F PUSH2 0x88B SWAP3 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x851 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x8AB PUSH2 0x8A5 PUSH2 0x8A0 PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x93B JUMPI DUP1 PUSH2 0x8CC PUSH2 0x8C6 PUSH2 0x8C1 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0x91E JUMPI PUSH2 0x8DC DUP2 PUSH1 0x1 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x906 PUSH32 0x21A5D032B24A495206270942F8C755327F3B27539F23099539FF95E2500B28D SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0x90F PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x919 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x937 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x953 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x960 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x96C SWAP1 PUSH2 0x957 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x978 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x991 JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x9B8 SWAP3 SWAP5 SWAP4 PUSH2 0x9B1 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0xB3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0x9D9 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA01 JUMPI PUSH2 0x9F8 PUSH1 0x1 SWAP2 PUSH2 0x9CE JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0xA2A SWAP2 MUL SWAP2 PUSH2 0xA24 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 PUSH2 0xA06 JUMP JUMPDEST SWAP3 PUSH2 0xA06 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA4A PUSH2 0xA45 PUSH2 0xA52 SWAP4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0xA86 JUMPI DUP3 PUSH2 0xA7E SWAP2 PUSH1 0x1 PUSH2 0xA84 SWAP6 ADD DUP2 SSTORE PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0xA34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xAAD SWAP3 SWAP5 SWAP4 PUSH2 0xAA6 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xABA PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0xACE PUSH2 0xAC8 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD30 JUMPI DUP1 PUSH2 0xAE6 PUSH2 0xAE0 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0xD2A JUMPI JUMPDEST SWAP2 DUP3 PUSH2 0xB0C PUSH2 0xB06 PUSH2 0xB01 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD0D JUMPI PUSH2 0xB2F PUSH2 0xB2A PUSH2 0xB23 PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xB44 PUSH2 0xB3F PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xCF0 JUMPI PUSH2 0x3589 PUSH2 0xB5E PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY DUP4 PUSH2 0xB96 DUP4 SWAP2 PUSH2 0xB87 PUSH2 0xB7B PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0xBA8 PUSH2 0xBA2 DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 SWAP1 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD PUSH1 0x0 CREATE2 SWAP3 PUSH2 0xBC5 PUSH2 0xBC0 DUP6 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH4 0x485CC955 DUP3 DUP5 SWAP3 DUP1 EXTCODESIZE ISZERO PUSH2 0xCEB JUMPI PUSH2 0xBF2 PUSH1 0x0 DUP1 SWAP5 PUSH2 0xBFD PUSH2 0xBE6 PUSH2 0xB3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x980 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x996 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCB9 JUMPI JUMPDEST POP PUSH2 0xC2C DUP5 PUSH2 0xC27 PUSH2 0xC20 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC4B DUP5 PUSH2 0xC46 PUSH2 0xC3F PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC5F PUSH2 0xC58 PUSH1 0x3 PUSH2 0x9CB JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 DUP4 SWAP2 PUSH2 0xC6C PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC99 PUSH32 0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9 SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0xCB4 PUSH2 0xCAB PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xA8B JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xCD9 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0xCDF JUMPI JUMPDEST PUSH2 0xCD1 DUP2 DUP4 PUSH2 0x5B6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x986 JUMP JUMPDEST CODESIZE PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC9BB25EB PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD09 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD26 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5C6D7B73 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD49 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xD69 PUSH2 0xD63 PUSH2 0xD5E PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xDBB JUMPI PUSH2 0xD79 DUP2 PUSH1 0x0 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xDA3 PUSH32 0x9887DF018DFA75103FAF0F1388028E55A1124783C285D8D2CBCF62A067A6B844 SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0xDAC PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0xDB6 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0xDD3 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x27 JUMPI PUSH2 0x11 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x19 PUSH2 0x2C JUMP JUMPDEST PUSH2 0x3082 PUSH2 0x507 DUP3 CODECOPY PUSH2 0x3082 SWAP1 RETURN JUMPDEST PUSH2 0x32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x61 SWAP1 PUSH2 0x37 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x91 PUSH2 0x8A PUSH2 0x2C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x57 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAF JUMPI PUSH2 0xAB PUSH1 0x20 SWAP2 PUSH2 0x37 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0xC6 PUSH2 0xC1 DUP4 PUSH2 0x93 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x444558204C5020546F6B656E0000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xFD PUSH1 0xC PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x10A PUSH1 0x20 DUP4 ADD PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114 PUSH2 0xF3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4445582D4C500000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x149 PUSH1 0x6 PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x156 PUSH1 0x20 DUP4 ADD PUSH2 0x117 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 PUSH2 0x1AB SWAP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B7 SWAP1 PUSH2 0x192 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C3 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D9 PUSH2 0x1E5 SWAP3 PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1F4 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x158 JUMP JUMPDEST SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x20D CALLER PUSH1 0x6 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 PUSH2 0x22E SWAP3 PUSH2 0x20F JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x1 PUSH2 0x215 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24B PUSH1 0x0 NOT SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 PUSH2 0x26E SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x289 PUSH2 0x284 PUSH2 0x290 SWAP3 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x29E SWAP2 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2A9 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x274 JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2E7 JUMPI JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x32B SWAP2 MUL SWAP2 PUSH2 0x325 PUSH1 0x0 NOT DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x30B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x34B PUSH2 0x346 PUSH2 0x353 SWAP4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x30F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x36E SWAP2 PUSH2 0x368 PUSH2 0x357 JUMP JUMPDEST SWAP2 PUSH2 0x335 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x38A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x35C JUMP JUMPDEST ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3A0 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3D1 SWAP4 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3B8 DUP5 PUSH2 0x301 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x3D9 JUMPI JUMPDEST PUSH2 0x3CA SWAP1 PUSH2 0x301 JUMP JUMPDEST ADD SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA DUP2 SWAP3 SWAP1 POP PUSH2 0x3C1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3FC SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x40B SWAP2 PUSH2 0x3EB JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x41D DUP2 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4DD JUMPI PUSH2 0x43F DUP3 PUSH2 0x439 DUP6 SLOAD PUSH2 0x2CC JUMP JUMPDEST DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x474 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x463 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x401 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x483 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4BB SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x3EB JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x49F JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x487 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x4EC SWAP2 PUSH2 0x413 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x4FD PUSH2 0x504 SWAP3 PUSH1 0x3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E50 JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x26A0 JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x161B PUSH2 0x1625 SWAP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1631 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1641 PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165F PUSH2 0x165A PUSH2 0x1664 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167F PUSH2 0x167A PUSH2 0x1686 SWAP3 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1634 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A9 PUSH2 0x16A3 PUSH2 0x169E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A6 JUMPI PUSH2 0x16B6 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x170C PUSH1 0x20 PUSH2 0x16DA PUSH2 0x16D5 PUSH2 0x16D0 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1701 PUSH2 0x16EC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19A1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1973 JUMPI JUMPDEST POP SWAP4 PUSH2 0x1772 PUSH1 0x20 PUSH2 0x1740 PUSH2 0x173B PUSH2 0x1736 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1767 PUSH2 0x1752 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x175B PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1940 JUMPI JUMPDEST POP SWAP2 PUSH2 0x179A DUP7 PUSH2 0x1794 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AE DUP2 PUSH2 0x17A8 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17BA DUP5 DUP3 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP4 PUSH2 0x17C3 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D7 PUSH2 0x17D1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F7 JUMPI POP PUSH2 0x1804 PUSH2 0x17F6 PUSH2 0x17F1 DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x1821 PUSH2 0x1813 PUSH2 0xDEAD PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x181B PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2BAE JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1836 PUSH2 0x1830 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18DA JUMPI PUSH2 0x1849 PUSH2 0x1852 SWAP6 DUP12 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x189E JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1884 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1899 PUSH2 0x1890 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D5 PUSH2 0x18CE PUSH2 0x18B6 PUSH2 0x18B1 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C8 PUSH2 0x18C3 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18F3 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x193A SWAP1 PUSH2 0x1934 PUSH2 0x1925 PUSH2 0x191E PUSH2 0x190F DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1918 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192E DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2AAE JUMP JUMPDEST SWAP9 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1961 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1967 JUMPI JUMPDEST PUSH2 0x1959 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1785 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1994 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x199A JUMPI JUMPDEST PUSH2 0x198C DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1982 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D4 SWAP1 PUSH2 0x19CF PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19E1 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A06 PUSH2 0x1A0B SWAP2 PUSH2 0x19FE PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A21 SWAP3 SWAP2 PUSH2 0x1A1C PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1A2D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A2B PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A4D PUSH2 0x1A47 PUSH2 0x1A42 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E33 JUMPI PUSH2 0x1A5A PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A69 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A73 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1ABC PUSH1 0x20 PUSH2 0x1A8A PUSH2 0x1A85 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AB1 PUSH2 0x1A9C ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1E00 JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B19 PUSH1 0x20 PUSH2 0x1AE7 PUSH2 0x1AE2 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0E PUSH2 0x1AF9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1B02 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DCD JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3F PUSH2 0x1B3A ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST SWAP7 PUSH2 0x1B7A PUSH2 0x1B4E DUP3 DUP5 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP6 PUSH2 0x1B75 PUSH2 0x1B6E PUSH2 0x1B67 PUSH2 0x1B60 PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8F PUSH2 0x1B89 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DB2 JUMPI JUMPDEST PUSH2 0x1D95 JUMPI PUSH2 0x1BEE PUSH2 0x1BE9 PUSH2 0x1C20 SWAP7 PUSH2 0x1BB9 PUSH1 0x20 SWAP5 PUSH2 0x1BB4 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1BCF DUP14 PUSH2 0x1BC6 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0x1BE4 PUSH2 0x1BDB DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C15 PUSH2 0x1C00 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C09 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1C4C PUSH2 0x1C47 PUSH2 0x1C7E SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D63 JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C73 PUSH2 0x1C5E ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C67 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH2 0x1C9D SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D30 JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1CF4 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CDA PUSH2 0x1CD4 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEF PUSH2 0x1CE6 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D2B PUSH2 0x1D24 PUSH2 0x1D0C PUSH2 0x1D07 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1E PUSH2 0x1D19 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1D51 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D57 JUMPI JUMPDEST PUSH2 0x1D49 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C94 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D83 SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D89 JUMPI JUMPDEST PUSH2 0x1D7B DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C40 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAE PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC7 PUSH2 0x1DC1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1DEE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF4 JUMPI JUMPDEST PUSH2 0x1DE6 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B2C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DDC JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E21 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E27 JUMPI JUMPDEST PUSH2 0x1E19 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E4C PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E6A SWAP1 PUSH2 0x1E5C PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E64 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E81 PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 SWAP2 PUSH2 0x1E90 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E99 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EB0 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EE3 SWAP2 PUSH2 0x1ED9 PUSH2 0x1EDE SWAP3 PUSH2 0x1ED1 PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEE PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1EF6 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x1EFE PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x20 PUSH2 0x1F1F PUSH2 0x1F1A PUSH2 0x1F15 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F46 PUSH2 0x1F31 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F3A PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x204B JUMPI PUSH2 0x1FB6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x201D JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F84 PUSH2 0x1F7F PUSH2 0x1F7A PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FAB PUSH2 0x1F96 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2018 JUMPI PUSH2 0x1FE8 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FEA JUMPI JUMPDEST POP PUSH2 0x1FD7 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FE2 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2464 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x200B SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2011 JUMPI JUMPDEST PUSH2 0x2003 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FCC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2044 JUMPI JUMPDEST PUSH2 0x2036 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F67 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x202C JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2058 PUSH2 0x1EE6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2071 PUSH2 0x206C PUSH2 0x2076 SWAP3 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2083 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2090 PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A9 PUSH2 0x20A3 PUSH2 0x209E PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20C2 JUMPI PUSH2 0x20C0 PUSH2 0x20B9 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20DB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F6 PUSH2 0x20F1 PUSH2 0x20FB SWAP3 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2108 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x211D PUSH2 0x2116 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213F PUSH2 0x213A PUSH2 0x2144 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2169 SWAP3 SWAP5 SWAP4 PUSH2 0x2162 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21B2 PUSH2 0x21B7 SWAP4 PUSH2 0x21A3 PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x218A PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x212B JUMP JUMPDEST SWAP3 PUSH2 0x2193 PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C73 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21D0 PUSH2 0x21CB PUSH2 0x21D5 SWAP3 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E4 PUSH2 0x21EA SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F5 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220E PUSH2 0x2209 PUSH2 0x2213 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2222 PUSH2 0x2228 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2238 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2251 PUSH2 0x224C PUSH2 0x2256 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x226D PUSH2 0x2268 PUSH2 0x2272 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2294 PUSH2 0x228F PUSH2 0x2299 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A8 PUSH2 0x22AE SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22D2 PUSH2 0x22CD PUSH2 0x22D7 SWAP3 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EE PUSH2 0x22E9 PUSH2 0x22F3 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2305 PUSH2 0x230B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2316 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232F PUSH2 0x232A PUSH2 0x2334 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2350 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236E PUSH2 0x2369 PUSH2 0x2373 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238E PUSH2 0x2389 PUSH2 0x2395 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2337 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23BB PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2399 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23DA PUSH2 0x23D5 PUSH2 0x23E1 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F7 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2415 PUSH2 0x2410 PUSH2 0x241A SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2435 PUSH2 0x2430 PUSH2 0x243C SWAP3 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x241D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2462 SWAP3 SWAP5 SWAP4 PUSH2 0x245B PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2487 PUSH2 0x2481 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2673 JUMPI JUMPDEST PUSH2 0x2656 JUMPI PUSH2 0x2523 SWAP4 PUSH2 0x2510 PUSH2 0x2509 PUSH2 0x251C SWAP5 PUSH2 0x2515 SWAP5 PUSH2 0x24C5 PUSH2 0x24C0 TIMESTAMP PUSH2 0x24BA PUSH5 0x100000000 PUSH2 0x21BC JUMP JUMPDEST SWAP1 PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST SWAP8 PUSH2 0x24DA DUP10 PUSH2 0x24D4 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2216 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EF PUSH2 0x24E9 PUSH1 0x0 PUSH2 0x223D JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x263A JUMPI JUMPDEST DUP1 PUSH2 0x261E JUMPI JUMPDEST PUSH2 0x2572 JUMPI JUMPDEST POP POP POP PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x252D PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2537 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x256D PUSH2 0x2564 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2440 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2616 SWAP3 PUSH2 0x25FA PUSH2 0x25F4 PUSH2 0x25EF DUP5 PUSH2 0x25E9 PUSH2 0x25E3 PUSH2 0x260F SWAP9 PUSH2 0x25DE PUSH2 0x25D7 PUSH2 0x25C8 PUSH2 0x25B9 PUSH2 0x25B4 PUSH2 0x25A5 PUSH2 0x2600 SWAP15 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x25AE DUP8 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x25C2 DUP13 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25D2 PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xA PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2D87 JUMP JUMPDEST SWAP2 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST SWAP2 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x260A PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xB PUSH2 0x166A JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2501 JUMP JUMPDEST POP DUP1 PUSH2 0x2633 PUSH2 0x262D PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24FC JUMP JUMPDEST POP DUP2 PUSH2 0x264F PUSH2 0x2649 PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266F PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2695 PUSH2 0x268F PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248F JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A8 PUSH2 0x269B JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26BB SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E7 PUSH2 0x26EE SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26DD PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26FB SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x270C DUP2 DUP4 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2722 PUSH2 0x271C PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272F JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x2742 PUSH2 0x273C DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2769 JUMPI PUSH2 0x2760 SWAP4 SWAP5 PUSH2 0x2757 SWAP2 SWAP4 SWAP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2728 JUMP JUMPDEST POP PUSH2 0x2789 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x27A1 PUSH2 0x279C PUSH2 0x27A6 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x27B2 SWAP1 PUSH2 0x278D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x27D2 PUSH2 0x27CC PUSH2 0x27C7 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x282F JUMPI DUP2 PUSH2 0x27F3 PUSH2 0x27ED PUSH2 0x27E8 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2806 JUMPI PUSH2 0x2804 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x282B PUSH2 0x2813 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2854 PUSH2 0x283C PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2861 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x286D SWAP1 PUSH2 0x2858 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2879 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2889 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x28A5 JUMPI PUSH2 0x28A2 SWAP2 PUSH1 0x0 ADD PUSH2 0x287C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x28C1 PUSH2 0x28BC PUSH2 0x28C6 SWAP3 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28D3 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x2909 PUSH1 0x20 PUSH2 0x28F3 PUSH2 0x28EE PUSH2 0x28E9 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x2870 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x2901 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x2919 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2AA9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x294A PUSH2 0x2944 PUSH2 0x293F PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x2957 PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A40 JUMPI DUP3 PUSH2 0x2974 PUSH2 0x296E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2981 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x29A3 PUSH2 0x29A8 SWAP2 PUSH2 0x299D PUSH2 0x2997 PUSH2 0x29AE SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST SWAP2 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x29C2 PUSH2 0x29BC DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29CE JUMPI JUMPDEST DUP1 PUSH2 0x297A JUMP JUMPDEST PUSH2 0x2A0A PUSH2 0x2A10 SWAP3 PUSH2 0x2A05 PUSH2 0x29F4 PUSH2 0x29E3 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29EE DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29FF PUSH1 0x5 PUSH2 0x28AD JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x2A24 PUSH2 0x2A1E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A30 JUMPI JUMPDEST DUP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH2 0x2A39 SWAP2 PUSH2 0x2BAE JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2A2A JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A57 PUSH2 0x2A51 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A62 JUMPI JUMPDEST PUSH2 0x297F JUMP JUMPDEST PUSH2 0x2A76 PUSH2 0x2A6F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2A5D JUMP JUMPDEST PUSH2 0x2A9C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2AA2 JUMPI JUMPDEST PUSH2 0x2A94 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288B JUMP JUMPDEST CODESIZE PUSH2 0x292C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2AB7 PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2ACB PUSH2 0x2AC5 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AD8 JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2AFB PUSH2 0x2AF5 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B7C JUMPI POP DUP1 PUSH2 0x2B2C PUSH2 0x2B1C DUP4 PUSH2 0x2B16 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2B26 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B41 PUSH2 0x2B3B DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B75 JUMPI POP PUSH2 0x2B6F PUSH2 0x2B5F DUP3 PUSH2 0x2B5A DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH2 0x2B69 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B91 PUSH2 0x2B8B PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B9C JUMPI JUMPDEST PUSH2 0x2B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA8 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x2B97 JUMP JUMPDEST DUP1 PUSH2 0x2BCA PUSH2 0x2BC4 PUSH2 0x2BBF PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BE7 JUMPI PUSH2 0x2BE5 SWAP2 PUSH2 0x2BDD PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C0C PUSH2 0x2BF4 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C2D PUSH2 0x2C27 PUSH2 0x2C22 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C4A JUMPI PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x2C41 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C6F PUSH2 0x2C57 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C81 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C8A PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2D22 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2CB1 PUSH2 0x2CAB PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2D08 JUMPI POP PUSH2 0x2CC3 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CD7 PUSH2 0x2CD1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CE0 JUMPI POP JUMP JUMPDEST PUSH2 0x2CEC PUSH2 0x2D04 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D1B PUSH2 0x2D15 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D4A PUSH2 0x2D45 PUSH2 0x2D4F SWAP3 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D61 PUSH2 0x2D67 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2275 JUMP JUMPDEST SWAP3 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2D73 DUP4 DUP3 MUL PUSH2 0x2275 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D82 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D9C PUSH2 0x2DAF SWAP2 PUSH2 0x2D96 PUSH2 0x2D2E JUMP JUMPDEST POP PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x2DA9 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D36 JUMP JUMPDEST SWAP1 PUSH2 0x2D52 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DD0 PUSH2 0x2DCA PUSH2 0x2DC5 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E9E JUMPI DUP4 PUSH2 0x2DF1 PUSH2 0x2DEB PUSH2 0x2DE6 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E75 JUMPI PUSH2 0x2E15 DUP4 PUSH2 0x2E10 PUSH2 0x2E09 PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2E1F JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E6A PUSH2 0x2E58 PUSH2 0x2E52 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E61 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2E1A JUMP JUMPDEST PUSH2 0x2E9A PUSH2 0x2E82 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EC3 PUSH2 0x2EAB PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2ED2 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EF4 PUSH2 0x2EEE PUSH2 0x2EE9 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FD9 JUMPI PUSH2 0x2F19 PUSH2 0x2F12 DUP4 PUSH2 0x2F0D PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F36 PUSH2 0x2F30 PUSH2 0x2F2B PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAC JUMPI PUSH2 0x2F5B PUSH2 0x2F54 DUP4 PUSH2 0x2F4F PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2FA7 PUSH2 0x2F95 PUSH2 0x2F8F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F9E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FD4 DUP3 PUSH2 0x2FCE PUSH2 0x2FBF PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 PUSH2 0x2FC9 DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2EC7 JUMP JUMPDEST SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x2FED PUSH2 0x2FE8 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x3000 PUSH2 0x2FFA DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x3029 JUMPI PUSH2 0x3013 PUSH2 0x3024 SWAP2 DUP5 SWAP1 PUSH2 0x26F0 JUMP JUMPDEST PUSH2 0x301F PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F1A JUMP JUMPDEST SWAP1 PUSH2 0x3048 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST REVERT PREVRANDAO REVERT SGT BLOCKHASH SWAP12 TIMESTAMP SSTORE SHL 0x4E 0xC8 0xD0 0x2C TSTORE 0xD3 MLOAD EXTCODESIZE MOD 0xC8 PUSH15 0x2916DFD23D0310B6DDC88064736F6C PUSH4 0x4300081E STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 POP 0xE8 INVALID PUSH19 0x7B12ABCB61A5F6737B760ACD1F79145F3ABB48 0xAB SELFDESTRUCT 0x21 SWAPN 0x4F PUSH3 0x6ECD64 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
              "sourceMap": "278:5259:11:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2141:139::-;2189:12;:26;;2205:10;2213:1;2205:10;:::i;:::-;2189:26;:::i;:::-;;;:::i;:::-;;2185:52;;2247:26;2261:12;2247:26;;:::i;:::-;2141:139::o;2185:52::-;2224:13;;;;;;;;;;;;:::i;:::-;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 195,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 813,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 828,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_fromMemory": {
                  "entryPoint": 2438,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 928,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 497,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 482,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 301,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_address": {
                  "entryPoint": 2454,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_to_address_nonPadded_inplace": {
                  "entryPoint": 1379,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 2699,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bytes1": {
                  "entryPoint": 1595,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_bytes32": {
                  "entryPoint": 1622,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_packed_address_address": {
                  "entryPoint": 1400,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_packed_bytes1_address_bytes32_bytes32": {
                  "entryPoint": 1643,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 959,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 314,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 717,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 704,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_memory": {
                  "entryPoint": 1513,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 179,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_array_address_dyn_storage": {
                  "entryPoint": 554,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_address_dyn_storage_ptr": {
                  "entryPoint": 2510,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_bytes": {
                  "entryPoint": 1503,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_address_dyn_storage": {
                  "entryPoint": 550,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_address_dyn_storage_ptr": {
                  "entryPoint": 2521,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_bytes": {
                  "entryPoint": 1509,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_address_to_array_address_dyn_storage_ptr": {
                  "entryPoint": 2646,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes1": {
                  "entryPoint": 1537,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes32": {
                  "entryPoint": 1616,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 215,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 1534,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 2080,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 458,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 1113,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_DexPair": {
                  "entryPoint": 2403,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_array_address_dyn_storage_to_array_address_dyn__ptr": {
                  "entryPoint": 2507,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bytes32_to_uint256": {
                  "entryPoint": 1735,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DexFactory_to_address": {
                  "entryPoint": 1580,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DexPair_to_address": {
                  "entryPoint": 2415,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 2111,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_bytes1": {
                  "entryPoint": 1552,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 2083,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 1101,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_DexPair": {
                  "entryPoint": 2391,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 1073,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint160": {
                  "entryPoint": 1755,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 1707,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_allPairs": {
                  "entryPoint": 651,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_allPairsLength": {
                  "entryPoint": 739,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_createPair": {
                  "entryPoint": 1016,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_feeTo": {
                  "entryPoint": 336,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_feeToSetter": {
                  "entryPoint": 405,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getPair": {
                  "entryPoint": 1207,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_pairFor": {
                  "entryPoint": 874,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setFeeTo": {
                  "entryPoint": 1261,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setFeeToSetter": {
                  "entryPoint": 965,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 226,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 2047,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1462,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_allPairsLength": {
                  "entryPoint": 1322,
                  "id": 1505,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_createPair": {
                  "entryPoint": 2735,
                  "id": 1618,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_pairFor": {
                  "entryPoint": 1783,
                  "id": 1746,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_setFeeTo": {
                  "entryPoint": 3405,
                  "id": 1641,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setFeeToSetter": {
                  "entryPoint": 2191,
                  "id": 1674,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "getter_fun_allPairs": {
                  "entryPoint": 606,
                  "id": 1441,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "getter_fun_feeTo": {
                  "entryPoint": 264,
                  "id": 1427,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_feeToSetter": {
                  "entryPoint": 389,
                  "id": 1430,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_getPair": {
                  "entryPoint": 1173,
                  "id": 1437,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 1070,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_address": {
                  "entryPoint": 1367,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_bytes1": {
                  "entryPoint": 1592,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_bytes32": {
                  "entryPoint": 1619,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "leftAlign_uint160": {
                  "entryPoint": 1355,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_address_of_address": {
                  "entryPoint": 1149,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_address_address__of_address": {
                  "entryPoint": 1125,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x32": {
                  "entryPoint": 528,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1440,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 2156,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 250,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 2067,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20": {
                  "entryPoint": 2427,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 1312,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 185,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 190,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 2490,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 1430,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 2123,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 2432,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_248": {
                  "entryPoint": 1546,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_96": {
                  "entryPoint": 1349,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 2566,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 1701,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 173,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 211,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 565,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_address_dyn__ptr": {
                  "entryPoint": 2525,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "update_byte_slice_dynamic20": {
                  "entryPoint": 2570,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 2129,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": 2612,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 2159,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 792,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 461,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": 1344,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 1317,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b610520565b61001e6000356100ad565b8063017e7e58146100a8578063094b7415146100a35780631e3dd18b1461009e578063574f2ba31461009957806396ed28f914610094578063a2e74af61461008f578063c9c653961461008a578063e6a43905146100855763f46901ed0361000e576104ed565b6104b7565b6103f8565b6103c5565b61036a565b6102e3565b61028b565b610195565b610150565b60e01c90565b60405190565b600080fd5b600080fd5b60009103126100ce57565b6100be565b1c90565b60018060a01b031690565b6100f29060086100f793026100d3565b6100d7565b90565b9061010591546100e2565b90565b6101136000806100fa565b90565b60018060a01b031690565b61012a90610116565b90565b61013690610121565b9052565b919061014e9060006020850194019061012d565b565b34610180576101603660046100c3565b61017c61016b610108565b6101736100b3565b9182918261013a565b0390f35b6100b9565b61019260016000906100fa565b90565b346101c5576101a53660046100c3565b6101c16101b0610185565b6101b86100b3565b9182918261013a565b0390f35b6100b9565b90565b6101d6816101ca565b036101dd57565b600080fd5b905035906101ef826101cd565b565b9060208282031261020b57610208916000016101e2565b90565b6100be565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b61023e81610226565b8210156102595761025060019161022a565b91020190600090565b610210565b600361026981610226565b821015610286576102839161027d91610235565b906100fa565b90565b600080fd5b346102bb576102b76102a66102a13660046101f1565b61025e565b6102ae6100b3565b9182918261013a565b0390f35b6100b9565b6102c9906101ca565b9052565b91906102e1906000602085019401906102c0565b565b34610313576102f33660046100c3565b61030f6102fe61052a565b6103066100b3565b918291826102cd565b0390f35b6100b9565b61032181610121565b0361032857565b600080fd5b9050359061033a82610318565b565b91906040838203126103655780610359610362926000860161032d565b9360200161032d565b90565b6100be565b3461039b5761039761038661038036600461033c565b906106f7565b61038e6100b3565b9182918261013a565b0390f35b6100b9565b906020828203126103ba576103b79160000161032d565b90565b6100be565b60000190565b346103f3576103dd6103d83660046103a0565b61088f565b6103e56100b3565b806103ef816103bf565b0390f35b6100b9565b346104295761042561041461040e36600461033c565b90610aaf565b61041c6100b3565b9182918261013a565b0390f35b6100b9565b90565b61044561044061044a92610116565b61042e565b610116565b90565b61045690610431565b90565b6104629061044d565b90565b9061046f90610459565b600052602052604060002090565b9061048790610459565b600052602052604060002090565b6104af6104b4926104aa600293600094610465565b61047d565b6100fa565b90565b346104e8576104e46104d36104cd36600461033c565b90610495565b6104db6100b3565b9182918261013a565b0390f35b6100b9565b3461051b576105056105003660046103a0565b610d4d565b61050d6100b3565b80610517816103bf565b0390f35b6100b9565b600080fd5b600090565b610532610525565b5061053d6003610226565b90565b600090565b60601b90565b61055490610545565b90565b6105609061054b565b90565b61056f61057491610121565b610557565b9052565b60148161058a61059293839695610563565b018092610563565b0190565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906105c090610596565b810190811067ffffffffffffffff8211176105da57604052565b6105a0565b60200190565b5190565b906105fc6105f56100b3565b92836105b6565b565b90565b60ff60f81b1690565b60f81b90565b61062461061f610629926105fe565b61060a565b610601565b90565b6106359061044d565b90565b90565b61064761064c91610601565b610638565b9052565b90565b90565b61066261066791610650565b610653565b9052565b9261069960146106a19461069160018861068960209b9a8c9961063b565b018092610563565b018092610656565b018092610656565b0190565b60001c90565b6106bf6106ba6106c4926101ca565b61042e565b6101ca565b90565b6106d36106d8916106a5565b6106ab565b90565b6106ef6106ea6106f4926101ca565b61042e565b610116565b90565b6107e86107f2926107ed9261070a610540565b508061071e61071884610121565b91610121565b106000146107f557610751905b6107426107366100b3565b93849260208401610578565b602082018103825203826105b6565b61076361075d826105e5565b916105df565b206107d0613589610776602082016105e9565b90808252610dd8602083013961079461078e826105e5565b916105df565b206107c16107a260ff610610565b916107ac3061062c565b946107b56100b3565b9586946020860161066b565b602082018103825203826105b6565b6107e26107dc826105e5565b916105df565b206106c7565b6106db565b61044d565b90565b906107519061072b565b61080b610810916106a5565b6100d7565b90565b61081d90546107ff565b90565b90565b61083761083261083c92610820565b61042e565b610116565b90565b61084890610823565b90565b60001b90565b9061086260018060a01b039161084b565b9181191691161790565b90565b9061088461087f61088b92610459565b61086c565b8254610851565b9055565b336108ab6108a56108a06001610813565b610121565b91610121565b0361093b57806108cc6108c66108c1600061083f565b610121565b91610121565b1461091e576108dc81600161086f565b6109067f021a5d032b24a495206270942f8c755327f3b27539f23099539ff95e2500b28d91610459565b9061090f6100b3565b80610919816103bf565b0390a2565b600063d92e233d60e01b815280610937600482016103bf565b0390fd5b60006282b42960e81b815280610953600482016103bf565b0390fd5b61096090610431565b90565b61096c90610957565b90565b6109789061044d565b90565b600080fd5b60e01b90565b600091031261099157565b6100be565b9160206109b89294936109b16040820196600083019061012d565b019061012d565b565b6109c26100b3565b3d6000823e3d90fd5b90565b600052602060002090565b5490565b6109e6816109d9565b821015610a01576109f86001916109ce565b91020190600090565b610210565b1b90565b91906008610a2a910291610a2460018060a01b0384610a06565b92610a06565b9181191691161790565b9190610a4a610a45610a5293610459565b61086c565b908354610a0a565b9055565b9081549168010000000000000000831015610a865782610a7e916001610a84950181556109dd565b90610a34565b565b6105a0565b916020610aad929493610aa66040820196600083019061012d565b01906102c0565b565b919091610aba610540565b5080610ace610ac885610121565b91610121565b14610d305780610ae6610ae085610121565b91610121565b10600014610d2a575b9182610b0c610b06610b01600061083f565b610121565b91610121565b14610d0d57610b2f610b2a610b2360028690610465565b839061047d565b610813565b610b4a610b44610b3f600061083f565b610121565b91610121565b03610cf057613589610b5e602082016105e9565b90808252610dd8602083013983610b968391610b87610b7b6100b3565b93849260208401610578565b602082018103825203826105b6565b610ba8610ba2826105e5565b916105df565b20906020815191016000f592610bc5610bc085610963565b61096f565b63485cc955828492803b15610ceb57610bf260008094610bfd610be66100b3565b97889687958694610980565b845260048401610996565b03925af18015610ce657610cb9575b50610c2c84610c27610c2060028590610465565b859061047d565b61086f565b610c4b84610c46610c3f60028690610465565b849061047d565b61086f565b610c5f610c5860036109cb565b8590610a56565b908391610c6c6003610226565b610c9f610c997f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e993610459565b93610459565b93610cb4610cab6100b3565b92839283610a8b565b0390a3565b610cd99060003d8111610cdf575b610cd181836105b6565b810190610986565b38610c0c565b503d610cc7565b6109ba565b61097b565b600063c9bb25eb60e01b815280610d09600482016103bf565b0390fd5b600063d92e233d60e01b815280610d26600482016103bf565b0390fd5b91610aef565b6000635c6d7b7360e01b815280610d49600482016103bf565b0390fd5b33610d69610d63610d5e6001610813565b610121565b91610121565b03610dbb57610d7981600061086f565b610da37f9887df018dfa75103faf0f1388028e55a1124783c285d8d2cbcf62a067a6b84491610459565b90610dac6100b3565b80610db6816103bf565b0390a2565b60006282b42960e81b815280610dd3600482016103bf565b0390fdfe608060405234610027576100116101e9565b61001961002c565b613082610507823961308290f35b610032565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061006190610037565b810190811060018060401b0382111761007957604052565b610041565b9061009161008a61002c565b9283610057565b565b60018060401b0381116100af576100ab602091610037565b0190565b610041565b906100c66100c183610093565b61007e565b918252565b60007f444558204c5020546f6b656e0000000000000000000000000000000000000000910152565b6100fd600c6100b4565b9061010a602083016100cb565b565b6101146100f3565b90565b60007f4445582d4c500000000000000000000000000000000000000000000000000000910152565b61014960066100b4565b9061015660208301610117565b565b61016061013f565b90565b60001b90565b9061017a60018060a01b0391610163565b9181191691161790565b60018060a01b031690565b90565b6101a66101a16101ab92610184565b61018f565b610184565b90565b6101b790610192565b90565b6101c3906101ae565b90565b90565b906101de6101d96101e5926101ba565b6101c6565b8254610169565b9055565b6102026101f461010c565b6101fc610158565b90610294565b61020d3360066101c9565b565b90565b90565b61022961022461022e9261020f565b61018f565b610212565b90565b61023b6001610215565b90565b9061024b60001991610163565b9181191691161790565b61026961026461026e92610212565b61018f565b610212565b90565b90565b9061028961028461029092610255565b610271565b825461023e565b9055565b9061029e916104ee565b6102b06102a9610231565b6005610274565b565b5190565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156102ec575b60208310146102e757565b6102b6565b91607f16916102dc565b600052602060002090565b601f602091010490565b1b90565b9190600861032b9102916103256000198461030b565b9261030b565b9181191691161790565b919061034b61034661035393610255565b610271565b90835461030f565b9055565b600090565b61036e91610368610357565b91610335565b565b5b81811061037c575050565b8061038a600060019361035c565b01610371565b9190601f81116103a0575b505050565b6103ac6103d1936102f6565b9060206103b884610301565b830193106103d9575b6103ca90610301565b0190610370565b38808061039b565b91506103ca819290506103c1565b1c90565b906103fc90600019906008026103e7565b191690565b8161040b916103eb565b906002021790565b9061041d816102b2565b9060018060401b0382116104dd5761043f8261043985546102cc565b85610390565b602090601f83116001146104745791809161046393600092610468575b5050610401565b90555b565b9091500151388061045c565b601f19831691610483856102f6565b9260005b8181106104c5575091600293918560019694106104ab575b50505002019055610466565b6104bb910151601f8416906103eb565b905538808061049f565b91936020600181928787015181550195019201610487565b610041565b906104ec91610413565b565b906104fd6105049260036104e2565b60046104e2565b56fe60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119c3565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119ef565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e50565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6e565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e84565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611ebe565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a92612050565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612086565b610d11565b610acf61210b565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612464565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b91909161216b565b8d8d610dee565b6111938d61118b86610b60565b908d9161216b565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e6126a0565b9190916126ad565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb6126a0565b829084916126fe565b9190916127b5565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612086565b61168a565b906115cf61210b565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b90565b61162061161b61162592611609565b61094d565b6101bf565b90565b6116319061160c565b90565b906116416000199161151b565b9181191691161790565b61165f61165a61166492610198565b61094d565b610198565b90565b90565b9061167f61167a6116869261164b565b611667565b8254611634565b9055565b91909150816116a96116a361169e30610b88565b6101ca565b916101ca565b146119a6576116b6611416565b509290929061170c60206116da6116d56116d06007610b2b565b610b60565b610b7c565b6370a08231906117016116ec30610b88565b926116f5610183565b95869485938493610bd3565b835260048301610530565b03915afa9081156119a157600091611973575b5093611772602061174061173b6117366008610b2b565b610b60565b610b7c565b6370a082319061176761175230610b88565b9261175b610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196e57600091611940575b509161179a8661179484610af0565b90610c2e565b926117ae816117a887610af0565b90610c2e565b946117ba8482906128c9565b936117c361149c565b806117d76117d16000610ad4565b91610198565b146000146118f757506118046117f66117f1888a90610c53565b612adf565b6117fe61096c565b90610c2e565b9861182161181361dead611628565b61181b61096c565b90612bae565b5b896118366118306000610ad4565b91610198565b146118da57611849611852958b90612bae565b92909192612464565b61189e575b3390916118847f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b92611899611890610183565b92839283610885565b0390a2565b6118d56118ce6118b66118b160096113b8565b610af0565b6118c86118c360096113df565b610af0565b90610c53565b600c61166a565b611857565b600063bb55fd2760e01b8152806118f3600482016102a9565b0390fd5b61193a9061193461192561191e61190f8b8590610c53565b61191887610af0565b906115e7565b928b610c53565b61192e86610af0565b906115e7565b90612aae565b98611822565b611961915060203d8111611967575b6119598183610baa565b810190610be8565b38611785565b503d61194f565b610c07565b611994915060203d811161199a575b61198c8183610baa565b810190610be8565b3861171f565b503d611982565b610c07565b6000630521f43160e31b8152806119bf600482016102a9565b0390fd5b6119d4906119cf610b0c565b6115b4565b90565b906119e190610cc6565b600052602052604060002090565b611a06611a0b916119fe610b0c565b5060006119d7565b61148f565b90565b90611a219291611a1c612086565b611a2d565b9091611a2b61210b565b565b929192505081611a4d611a47611a4230610b88565b6101ca565b916101ca565b14611e3357611a5a611416565b5091909192611a696007610b2b565b611a736008610b2b565b90611abc6020611a8a611a8584610b60565b610b7c565b6370a0823190611ab1611a9c30610b88565b92611aa5610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2e57600091611e00575b5091611b196020611ae7611ae284610b60565b610b7c565b6370a0823190611b0e611af930610b88565b92611b02610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611dfb57600091611dcd575b5096611b3f611b3a30610b88565b6119ef565b96611b7a611b4e8284906128c9565b95611b75611b6e611b67611b6061149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8f611b896000610ad4565b91610198565b148015611db2575b611d9557611bee611be9611c2096611bb9602094611bb430610b88565b612c10565b611bcf8d611bc683610b60565b908c909161216b565b611be4611bdb88610b60565b8d8c909161216b565b610b60565b610b7c565b6370a0823190611c15611c0030610b88565b92611c09610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d9057611c4c611c47611c7e96602093600091611d63575b5095610b60565b610b7c565b6370a0823190611c73611c5e30610b88565b92611c67610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5e57611c9d94600091611d30575b50909192612464565b611cf4575b3390849184611cda611cd47fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611cef611ce6610183565b92839283610885565b0390a3565b611d2b611d24611d0c611d0760096113b8565b610af0565b611d1e611d1960096113df565b610af0565b90610c53565b600c61166a565b611ca2565b611d51915060203d8111611d57575b611d498183610baa565b810190610be8565b38611c94565b503d611d3f565b610c07565b611d839150843d8111611d89575b611d7b8183610baa565b810190610be8565b38611c40565b503d611d71565b610c07565b600063749383ad60e01b815280611dae600482016102a9565b0390fd5b5088611dc7611dc16000610ad4565b91610198565b14611b97565b611dee915060203d8111611df4575b611de68183610baa565b810190610be8565b38611b2c565b503d611ddc565b610c07565b611e21915060203d8111611e27575b611e198183610baa565b810190610be8565b38611acf565b503d611e0f565b610c07565b6000630521f43160e31b815280611e4c600482016102a9565b0390fd5b611e6a90611e5c610b0c565b611e64610b0c565b90611a0e565b9091565b611e7661124e565b50611e816004611365565b90565b611ea191611e90611454565b50611e996126a0565b9190916127b5565b600190565b90611eb090610cc6565b600052602052604060002090565b611ee391611ed9611ede92611ed1610b0c565b506001611ea6565b6119d7565b61148f565b90565b611eee612086565b611ef6611f00565b611efe61210b565b565b611f516020611f1f611f1a611f156007610b2b565b610b60565b610b7c565b6370a0823190611f46611f3130610b88565b92611f3a610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204b57611fb69160009161201d575b506020611f84611f7f611f7a6008610b2b565b610b60565b610b7c565b6370a0823190611fab611f9630610b88565b92611f9f610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201857611fe892600091611fea575b50611fd760096113b8565b90611fe260096113df565b92612464565b565b61200b915060203d8111612011575b6120038183610baa565b810190610be8565b38611fcc565b503d611ff9565b610c07565b61203e915060203d8111612044575b6120368183610baa565b810190610be8565b38611f67565b503d61202c565b610c07565b612058611ee6565b565b90565b61207161206c6120769261205a565b61094d565b610198565b90565b612083600261205d565b90565b612090600561148f565b6120a96120a361209e612079565b610198565b91610198565b146120c2576120c06120b9612079565b600561166a565b565b6000633ee5aeb560e01b8152806120db600482016102a9565b0390fd5b90565b6120f66120f16120fb926120df565b61094d565b610198565b90565b61210860016120e2565b90565b61211d6121166120fe565b600561166a565b565b63ffffffff60e01b1690565b61213f61213a612144926103d1565b610bd3565b61211f565b90565b91602061216992949361216260408201966000830190610523565b019061057b565b565b906121b26121b7936121a36004949361218a63a9059cbb91939161212b565b92612193610183565b9687946020860190815201612147565b60208201810382520383610baa565b612c73565b565b90565b6121d06121cb6121d5926121b9565b61094d565b610198565b90565b6121e46121ea91610198565b91610198565b9081156121f5570690565b6115d1565b61220e61220961221392610198565b61094d565b6103d1565b90565b612222612228916103d1565b916103d1565b90039063ffffffff821161223857565b610c18565b61225161224c61225692610ad1565b61094d565b6103d1565b90565b61226d61226861227292610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229461228f612299926103b1565b61094d565b612275565b90565b6122a86122ae91612275565b91612275565b9081156122b9570490565b6115d1565b6122d26122cd6122d792612275565b61094d565b610198565b90565b6122ee6122e96122f3926103d1565b61094d565b610198565b90565b61230561230b91939293610198565b92610198565b820180921161231657565b610c18565b61232f61232a61233492610198565b61094d565b6103b1565b90565b906123506dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236e612369612373926103b1565b61094d565b6103b1565b90565b90565b9061238e6123896123959261235a565b612376565b8254612337565b9055565b60701b90565b906123bb6dffffffffffffffffffffffffffff60701b91612399565b9181191691161790565b906123da6123d56123e19261235a565b612376565b825461239f565b9055565b906123f763ffffffff60e01b91610bd3565b9181191691161790565b61241561241061241a926103d1565b61094d565b6103d1565b90565b90565b9061243561243061243c92612401565b61241d565b82546123e5565b9055565b91602061246292949361245b604082019660008301906103c4565b01906103c4565b565b9092816124876124816dffffffffffffffffffffffffffff610af0565b91610198565b118015612673575b612656576125239361251061250961251c94612515946124c56124c0426124ba6401000000006121bc565b906121d8565b6121fa565b976124da896124d46009611409565b90612216565b91826124ef6124e9600061223d565b916103d1565b118061263a575b8061261e575b612572575b50505061231b565b6009612379565b61231b565b60096123c5565b6009612420565b61252d60096113b8565b61253760096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad19161256d612564610183565b92839283612440565b0390a1565b612616926125fa6125f46125ef846125e96125e361260f986125de6125d76125c86125b96125b46125a56126009e612d87565b6125ae87612280565b9061229c565b6122be565b6125c28c6122da565b90610c53565b6125d2600a61148f565b6122f6565b600a61166a565b612d87565b91612280565b9061229c565b6122be565b916122da565b90610c53565b61260a600b61148f565b6122f6565b600b61166a565b388080612501565b508061263361262d6000612259565b916103b1565b14156124fc565b508161264f6126496000612259565b916103b1565b14156124f6565b6000631a93c68960e11b81528061266f600482016102a9565b0390fd5b508361269561268f6dffffffffffffffffffffffffffff610af0565b91610198565b1161248f565b600090565b6126a861269b565b503390565b916126bb9291600192612db2565b565b6040906126e76126ee94969593966126dd60608401986000850190610523565b602083019061057b565b019061057b565b565b906126fb9103610198565b90565b92919261270c818390611ebe565b908161272261271c600019610198565b91610198565b1061272f575b5050509050565b8161274261273c87610198565b91610198565b106127695761276093946127579193926126f0565b90600092612db2565b80388080612728565b50612789849291926000938493637dc7a0d960e11b8552600485016126bd565b0390fd5b6127a161279c6127a692610ad1565b61094d565b6101bf565b90565b6127b29061278d565b90565b91826127d26127cc6127c760006127a9565b6101ca565b916101ca565b1461282f57816127f36127ed6127e860006127a9565b6101ca565b916101ca565b146128065761280492919091612ed5565b565b61282b61281360006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b61285461283c60006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61286190610b38565b90565b61286d90612858565b90565b61287990610b70565b90565b90505190612889826101d6565b565b906020828203126128a5576128a29160000161287c565b90565b61018e565b90565b6128c16128bc6128c6926128aa565b61094d565b610198565b90565b91906128d3611454565b5061290960206128f36128ee6128e96006610b2b565b612864565b612870565b63017e7e5890612901610183565b938492610bd3565b82528180612919600482016102a9565b03915afa908115612aa957600091612a7b575b50908161294a61294461293f60006127a9565b6101ca565b916101ca565b141593612957600c61148f565b9185600014612a40578261297461296e6000610ad4565b91610198565b03612981575b505050505b565b6129a36129a89161299d6129976129ae95610af0565b91610af0565b90610c53565b612adf565b91612adf565b90806129c26129bc84610198565b91610198565b116129ce575b8061297a565b612a0a612a1092612a056129f46129e361149c565b6129ee868590610c2e565b90610c53565b936129ff60056128ad565b90610c53565b6122f6565b906115e7565b80612a24612a1e6000610ad4565b91610198565b11612a30575b806129c8565b612a3991612bae565b3880612a2a565b50509050612a57612a516000610ad4565b91610198565b03612a62575b61297f565b612a76612a6f6000610ad4565b600c61166a565b612a5d565b612a9c915060203d8111612aa2575b612a948183610baa565b81019061288b565b3861292c565b503d612a8a565b610c07565b90612ab7610b0c565b5081612acb612ac583610198565b91610198565b10600014612ad857505b90565b9050612ad5565b612ae7610b0c565b81612afb612af56003610c8b565b91610198565b11600014612b7c575080612b2c612b1c83612b16600261205d565b906115e7565b612b2660016120e2565b906122f6565b905b81612b41612b3b83610198565b91610198565b1015612b755750612b6f612b5f82612b5a8582906115e7565b6122f6565b612b69600261205d565b906115e7565b90612b2e565b929150505b565b9190612b91612b8b6000610ad4565b91610198565b03612b9c575b612b7a565b9050612ba860016120e2565b90612b97565b80612bca612bc4612bbf60006127a9565b6101ca565b916101ca565b14612be757612be591612bdd60006127a9565b919091612ed5565b565b612c0c612bf460006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c2d612c27612c2260006127a9565b6101ca565b916101ca565b14612c4a57612c489190612c4160006127a9565b9091612ed5565b565b612c6f612c5760006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c81610b0c565b50612c8a610b0c565b50828151910182855af115612d22573d60005190612cb1612cab6000610ad4565b91610198565b14600014612d085750612cc381610b7c565b3b612cd7612cd16000610ad4565b91610198565b145b612ce05750565b612cec612d0491610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612d1b612d1560016120e2565b91610198565b1415612cd9565b6040513d6000823e3d90fd5b600090565b90565b612d4a612d45612d4f92612d33565b61094d565b612275565b90565b612d61612d6791939293612275565b92612275565b91612d73838202612275565b928184041490151715612d8257565b610c18565b612d9c612daf91612d96612d2e565b50612280565b612da9600160701b612d36565b90612d52565b90565b909281612dd0612dca612dc560006127a9565b6101ca565b916101ca565b14612e9e5783612df1612deb612de660006127a9565b6101ca565b916101ca565b14612e7557612e1583612e10612e0960018690611ea6565b87906119d7565b61166a565b612e1f575b505050565b919091612e6a612e58612e527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e61610183565b91829182610588565b0390a3388080612e1a565b612e9a612e8260006127a9565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612ec3612eab60006127a9565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ed29101610198565b90565b91909180612ef4612eee612ee960006127a9565b6101ca565b916101ca565b14600014612fd957612f19612f1283612f0d600261148f565b6122f6565b600261166a565b5b82612f36612f30612f2b60006127a9565b6101ca565b916101ca565b14600014612fac57612f5b612f5483612f4f600261148f565b6126f0565b600261166a565b5b919091612fa7612f95612f8f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f9e610183565b91829182610588565b0390a3565b612fd482612fce612fbf600087906119d7565b91612fc98361148f565b612ec7565b9061166a565b612f5c565b612fed612fe8600083906119d7565b61148f565b80613000612ffa85610198565b91610198565b10613029576130136130249184906126f0565b61301f600084906119d7565b61166a565b612f1a565b90613048909192600093849363391434e360e21b8552600485016126bd565b0390fdfea26469706673582212205bfd44fd13409b42551b4ec8d02c5dd3513b06c86e2916dfd23d0310b6ddc88064736f6c634300081e0033a2646970667358221220d450e8fe727b12abcb61a5f6737b760acd1f79145f3abb48abff21e74f626ecd64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xAD JUMP JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x94B7415 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x96ED28F9 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0x85 JUMPI PUSH4 0xF46901ED SUB PUSH2 0xE JUMPI PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xCE JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF2 SWAP1 PUSH1 0x8 PUSH2 0xF7 SWAP4 MUL PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x105 SWAP2 SLOAD PUSH2 0xE2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x0 DUP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x12A SWAP1 PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x136 SWAP1 PUSH2 0x121 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x14E SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x180 JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x16B PUSH2 0x108 JUMP JUMPDEST PUSH2 0x173 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x1 PUSH1 0x0 SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1B0 PUSH2 0x185 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1DD JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1EF DUP3 PUSH2 0x1CD JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x20B JUMPI PUSH2 0x208 SWAP2 PUSH1 0x0 ADD PUSH2 0x1E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x259 JUMPI PUSH2 0x250 PUSH1 0x1 SWAP2 PUSH2 0x22A JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x269 DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x286 JUMPI PUSH2 0x283 SWAP2 PUSH2 0x27D SWAP2 PUSH2 0x235 JUMP JUMPDEST SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2BB JUMPI PUSH2 0x2B7 PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0x2AE PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x2C9 SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2E1 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x313 JUMPI PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x30F PUSH2 0x2FE PUSH2 0x52A JUMP JUMPDEST PUSH2 0x306 PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2CD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x328 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x33A DUP3 PUSH2 0x318 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x365 JUMPI DUP1 PUSH2 0x359 PUSH2 0x362 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x32D JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST CALLVALUE PUSH2 0x39B JUMPI PUSH2 0x397 PUSH2 0x386 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x38E PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x3BA JUMPI PUSH2 0x3B7 SWAP2 PUSH1 0x0 ADD PUSH2 0x32D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x3DD PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x3EF DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x429 JUMPI PUSH2 0x425 PUSH2 0x414 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x41C PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x440 PUSH2 0x44A SWAP3 PUSH2 0x116 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x456 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x462 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x46F SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x487 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x4B4 SWAP3 PUSH2 0x4AA PUSH1 0x2 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x465 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x4E8 JUMPI PUSH2 0x4E4 PUSH2 0x4D3 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0xB3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x13A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST CALLVALUE PUSH2 0x51B JUMPI PUSH2 0x505 PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x50D PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x517 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x525 JUMP JUMPDEST POP PUSH2 0x53D PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0x554 SWAP1 PUSH2 0x545 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x560 SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x56F PUSH2 0x574 SWAP2 PUSH2 0x121 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x58A PUSH2 0x592 SWAP4 DUP4 SWAP7 SWAP6 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x5C0 SWAP1 PUSH2 0x596 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x5FC PUSH2 0x5F5 PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x5B6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST PUSH2 0x624 PUSH2 0x61F PUSH2 0x629 SWAP3 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x635 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x647 PUSH2 0x64C SWAP2 PUSH2 0x601 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x667 SWAP2 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP3 PUSH2 0x699 PUSH1 0x14 PUSH2 0x6A1 SWAP5 PUSH2 0x691 PUSH1 0x1 DUP9 PUSH2 0x689 PUSH1 0x20 SWAP12 SWAP11 DUP13 SWAP10 PUSH2 0x63B JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x563 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x656 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x6BA PUSH2 0x6C4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x6D8 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x6EF PUSH2 0x6EA PUSH2 0x6F4 SWAP3 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x7F2 SWAP3 PUSH2 0x7ED SWAP3 PUSH2 0x70A PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0x71E PUSH2 0x718 DUP5 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x7F5 JUMPI PUSH2 0x751 SWAP1 JUMPDEST PUSH2 0x742 PUSH2 0x736 PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x75D DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7D0 PUSH2 0x3589 PUSH2 0x776 PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY PUSH2 0x794 PUSH2 0x78E DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x7C1 PUSH2 0x7A2 PUSH1 0xFF PUSH2 0x610 JUMP JUMPDEST SWAP2 PUSH2 0x7AC ADDRESS PUSH2 0x62C JUMP JUMPDEST SWAP5 PUSH2 0x7B5 PUSH2 0xB3 JUMP JUMPDEST SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 ADD PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0x7DC DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x751 SWAP1 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x80B PUSH2 0x810 SWAP2 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x81D SWAP1 SLOAD PUSH2 0x7FF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x837 PUSH2 0x832 PUSH2 0x83C SWAP3 PUSH2 0x820 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x848 SWAP1 PUSH2 0x823 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x862 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x84B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x884 PUSH2 0x87F PUSH2 0x88B SWAP3 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x851 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x8AB PUSH2 0x8A5 PUSH2 0x8A0 PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0x93B JUMPI DUP1 PUSH2 0x8CC PUSH2 0x8C6 PUSH2 0x8C1 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0x91E JUMPI PUSH2 0x8DC DUP2 PUSH1 0x1 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x906 PUSH32 0x21A5D032B24A495206270942F8C755327F3B27539F23099539FF95E2500B28D SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0x90F PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0x919 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x937 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x953 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x960 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x96C SWAP1 PUSH2 0x957 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x978 SWAP1 PUSH2 0x44D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x991 JUMPI JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x9B8 SWAP3 SWAP5 SWAP4 PUSH2 0x9B1 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0xB3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0x9D9 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xA01 JUMPI PUSH2 0x9F8 PUSH1 0x1 SWAP2 PUSH2 0x9CE JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0xA2A SWAP2 MUL SWAP2 PUSH2 0xA24 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 PUSH2 0xA06 JUMP JUMPDEST SWAP3 PUSH2 0xA06 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA4A PUSH2 0xA45 PUSH2 0xA52 SWAP4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xA0A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0xA86 JUMPI DUP3 PUSH2 0xA7E SWAP2 PUSH1 0x1 PUSH2 0xA84 SWAP6 ADD DUP2 SSTORE PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0xA34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xAAD SWAP3 SWAP5 SWAP4 PUSH2 0xAA6 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x12D JUMP JUMPDEST ADD SWAP1 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xABA PUSH2 0x540 JUMP JUMPDEST POP DUP1 PUSH2 0xACE PUSH2 0xAC8 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD30 JUMPI DUP1 PUSH2 0xAE6 PUSH2 0xAE0 DUP6 PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0xD2A JUMPI JUMPDEST SWAP2 DUP3 PUSH2 0xB0C PUSH2 0xB06 PUSH2 0xB01 PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST EQ PUSH2 0xD0D JUMPI PUSH2 0xB2F PUSH2 0xB2A PUSH2 0xB23 PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xB44 PUSH2 0xB3F PUSH1 0x0 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xCF0 JUMPI PUSH2 0x3589 PUSH2 0xB5E PUSH1 0x20 DUP3 ADD PUSH2 0x5E9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MSTORE PUSH2 0xDD8 PUSH1 0x20 DUP4 ADD CODECOPY DUP4 PUSH2 0xB96 DUP4 SWAP2 PUSH2 0xB87 PUSH2 0xB7B PUSH2 0xB3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0xBA8 PUSH2 0xBA2 DUP3 PUSH2 0x5E5 JUMP JUMPDEST SWAP2 PUSH2 0x5DF JUMP JUMPDEST KECCAK256 SWAP1 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD PUSH1 0x0 CREATE2 SWAP3 PUSH2 0xBC5 PUSH2 0xBC0 DUP6 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH4 0x485CC955 DUP3 DUP5 SWAP3 DUP1 EXTCODESIZE ISZERO PUSH2 0xCEB JUMPI PUSH2 0xBF2 PUSH1 0x0 DUP1 SWAP5 PUSH2 0xBFD PUSH2 0xBE6 PUSH2 0xB3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0x980 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x996 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCB9 JUMPI JUMPDEST POP PUSH2 0xC2C DUP5 PUSH2 0xC27 PUSH2 0xC20 PUSH1 0x2 DUP6 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC4B DUP5 PUSH2 0xC46 PUSH2 0xC3F PUSH1 0x2 DUP7 SWAP1 PUSH2 0x465 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x47D JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0xC5F PUSH2 0xC58 PUSH1 0x3 PUSH2 0x9CB JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 DUP4 SWAP2 PUSH2 0xC6C PUSH1 0x3 PUSH2 0x226 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC99 PUSH32 0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9 SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0x459 JUMP JUMPDEST SWAP4 PUSH2 0xCB4 PUSH2 0xCAB PUSH2 0xB3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xA8B JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0xCD9 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0xCDF JUMPI JUMPDEST PUSH2 0xCD1 DUP2 DUP4 PUSH2 0x5B6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x986 JUMP JUMPDEST CODESIZE PUSH2 0xC0C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC9BB25EB PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD09 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD26 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5C6D7B73 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD49 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0xD69 PUSH2 0xD63 PUSH2 0xD5E PUSH1 0x1 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST SWAP2 PUSH2 0x121 JUMP JUMPDEST SUB PUSH2 0xDBB JUMPI PUSH2 0xD79 DUP2 PUSH1 0x0 PUSH2 0x86F JUMP JUMPDEST PUSH2 0xDA3 PUSH32 0x9887DF018DFA75103FAF0F1388028E55A1124783C285D8D2CBCF62A067A6B844 SWAP2 PUSH2 0x459 JUMP JUMPDEST SWAP1 PUSH2 0xDAC PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH2 0xDB6 DUP2 PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0xDD3 PUSH1 0x4 DUP3 ADD PUSH2 0x3BF JUMP JUMPDEST SUB SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x27 JUMPI PUSH2 0x11 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x19 PUSH2 0x2C JUMP JUMPDEST PUSH2 0x3082 PUSH2 0x507 DUP3 CODECOPY PUSH2 0x3082 SWAP1 RETURN JUMPDEST PUSH2 0x32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x61 SWAP1 PUSH2 0x37 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x91 PUSH2 0x8A PUSH2 0x2C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x57 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAF JUMPI PUSH2 0xAB PUSH1 0x20 SWAP2 PUSH2 0x37 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0xC6 PUSH2 0xC1 DUP4 PUSH2 0x93 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x444558204C5020546F6B656E0000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xFD PUSH1 0xC PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x10A PUSH1 0x20 DUP4 ADD PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114 PUSH2 0xF3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4445582D4C500000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x149 PUSH1 0x6 PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x156 PUSH1 0x20 DUP4 ADD PUSH2 0x117 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 PUSH2 0x1AB SWAP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B7 SWAP1 PUSH2 0x192 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C3 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D9 PUSH2 0x1E5 SWAP3 PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1F4 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x158 JUMP JUMPDEST SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x20D CALLER PUSH1 0x6 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 PUSH2 0x22E SWAP3 PUSH2 0x20F JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x1 PUSH2 0x215 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24B PUSH1 0x0 NOT SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 PUSH2 0x26E SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x289 PUSH2 0x284 PUSH2 0x290 SWAP3 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x29E SWAP2 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2A9 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x274 JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2E7 JUMPI JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x32B SWAP2 MUL SWAP2 PUSH2 0x325 PUSH1 0x0 NOT DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x30B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x34B PUSH2 0x346 PUSH2 0x353 SWAP4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x30F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x36E SWAP2 PUSH2 0x368 PUSH2 0x357 JUMP JUMPDEST SWAP2 PUSH2 0x335 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x38A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x35C JUMP JUMPDEST ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3A0 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3D1 SWAP4 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3B8 DUP5 PUSH2 0x301 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x3D9 JUMPI JUMPDEST PUSH2 0x3CA SWAP1 PUSH2 0x301 JUMP JUMPDEST ADD SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA DUP2 SWAP3 SWAP1 POP PUSH2 0x3C1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3FC SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x40B SWAP2 PUSH2 0x3EB JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x41D DUP2 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4DD JUMPI PUSH2 0x43F DUP3 PUSH2 0x439 DUP6 SLOAD PUSH2 0x2CC JUMP JUMPDEST DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x474 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x463 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x401 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x483 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4BB SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x3EB JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x49F JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x487 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x4EC SWAP2 PUSH2 0x413 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x4FD PUSH2 0x504 SWAP3 PUSH1 0x3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E50 JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x26A0 JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x161B PUSH2 0x1625 SWAP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1631 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1641 PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165F PUSH2 0x165A PUSH2 0x1664 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167F PUSH2 0x167A PUSH2 0x1686 SWAP3 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1634 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A9 PUSH2 0x16A3 PUSH2 0x169E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A6 JUMPI PUSH2 0x16B6 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x170C PUSH1 0x20 PUSH2 0x16DA PUSH2 0x16D5 PUSH2 0x16D0 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1701 PUSH2 0x16EC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19A1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1973 JUMPI JUMPDEST POP SWAP4 PUSH2 0x1772 PUSH1 0x20 PUSH2 0x1740 PUSH2 0x173B PUSH2 0x1736 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1767 PUSH2 0x1752 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x175B PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1940 JUMPI JUMPDEST POP SWAP2 PUSH2 0x179A DUP7 PUSH2 0x1794 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AE DUP2 PUSH2 0x17A8 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17BA DUP5 DUP3 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP4 PUSH2 0x17C3 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D7 PUSH2 0x17D1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F7 JUMPI POP PUSH2 0x1804 PUSH2 0x17F6 PUSH2 0x17F1 DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x1821 PUSH2 0x1813 PUSH2 0xDEAD PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x181B PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2BAE JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1836 PUSH2 0x1830 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18DA JUMPI PUSH2 0x1849 PUSH2 0x1852 SWAP6 DUP12 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x189E JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1884 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1899 PUSH2 0x1890 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D5 PUSH2 0x18CE PUSH2 0x18B6 PUSH2 0x18B1 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C8 PUSH2 0x18C3 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18F3 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x193A SWAP1 PUSH2 0x1934 PUSH2 0x1925 PUSH2 0x191E PUSH2 0x190F DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1918 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192E DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2AAE JUMP JUMPDEST SWAP9 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1961 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1967 JUMPI JUMPDEST PUSH2 0x1959 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1785 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1994 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x199A JUMPI JUMPDEST PUSH2 0x198C DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1982 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D4 SWAP1 PUSH2 0x19CF PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19E1 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A06 PUSH2 0x1A0B SWAP2 PUSH2 0x19FE PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A21 SWAP3 SWAP2 PUSH2 0x1A1C PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1A2D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A2B PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A4D PUSH2 0x1A47 PUSH2 0x1A42 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E33 JUMPI PUSH2 0x1A5A PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A69 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A73 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1ABC PUSH1 0x20 PUSH2 0x1A8A PUSH2 0x1A85 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AB1 PUSH2 0x1A9C ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1E00 JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B19 PUSH1 0x20 PUSH2 0x1AE7 PUSH2 0x1AE2 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0E PUSH2 0x1AF9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1B02 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DCD JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3F PUSH2 0x1B3A ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST SWAP7 PUSH2 0x1B7A PUSH2 0x1B4E DUP3 DUP5 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP6 PUSH2 0x1B75 PUSH2 0x1B6E PUSH2 0x1B67 PUSH2 0x1B60 PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8F PUSH2 0x1B89 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DB2 JUMPI JUMPDEST PUSH2 0x1D95 JUMPI PUSH2 0x1BEE PUSH2 0x1BE9 PUSH2 0x1C20 SWAP7 PUSH2 0x1BB9 PUSH1 0x20 SWAP5 PUSH2 0x1BB4 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1BCF DUP14 PUSH2 0x1BC6 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0x1BE4 PUSH2 0x1BDB DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C15 PUSH2 0x1C00 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C09 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1C4C PUSH2 0x1C47 PUSH2 0x1C7E SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D63 JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C73 PUSH2 0x1C5E ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C67 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH2 0x1C9D SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D30 JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1CF4 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CDA PUSH2 0x1CD4 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEF PUSH2 0x1CE6 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D2B PUSH2 0x1D24 PUSH2 0x1D0C PUSH2 0x1D07 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1E PUSH2 0x1D19 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1D51 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D57 JUMPI JUMPDEST PUSH2 0x1D49 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C94 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D83 SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D89 JUMPI JUMPDEST PUSH2 0x1D7B DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C40 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAE PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC7 PUSH2 0x1DC1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1DEE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF4 JUMPI JUMPDEST PUSH2 0x1DE6 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B2C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DDC JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E21 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E27 JUMPI JUMPDEST PUSH2 0x1E19 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E4C PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E6A SWAP1 PUSH2 0x1E5C PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E64 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E81 PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 SWAP2 PUSH2 0x1E90 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E99 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EB0 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EE3 SWAP2 PUSH2 0x1ED9 PUSH2 0x1EDE SWAP3 PUSH2 0x1ED1 PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEE PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1EF6 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x1EFE PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x20 PUSH2 0x1F1F PUSH2 0x1F1A PUSH2 0x1F15 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F46 PUSH2 0x1F31 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F3A PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x204B JUMPI PUSH2 0x1FB6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x201D JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F84 PUSH2 0x1F7F PUSH2 0x1F7A PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FAB PUSH2 0x1F96 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2018 JUMPI PUSH2 0x1FE8 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FEA JUMPI JUMPDEST POP PUSH2 0x1FD7 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FE2 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2464 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x200B SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2011 JUMPI JUMPDEST PUSH2 0x2003 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FCC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2044 JUMPI JUMPDEST PUSH2 0x2036 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F67 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x202C JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2058 PUSH2 0x1EE6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2071 PUSH2 0x206C PUSH2 0x2076 SWAP3 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2083 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2090 PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A9 PUSH2 0x20A3 PUSH2 0x209E PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20C2 JUMPI PUSH2 0x20C0 PUSH2 0x20B9 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20DB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F6 PUSH2 0x20F1 PUSH2 0x20FB SWAP3 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2108 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x211D PUSH2 0x2116 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213F PUSH2 0x213A PUSH2 0x2144 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2169 SWAP3 SWAP5 SWAP4 PUSH2 0x2162 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21B2 PUSH2 0x21B7 SWAP4 PUSH2 0x21A3 PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x218A PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x212B JUMP JUMPDEST SWAP3 PUSH2 0x2193 PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C73 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21D0 PUSH2 0x21CB PUSH2 0x21D5 SWAP3 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E4 PUSH2 0x21EA SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F5 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220E PUSH2 0x2209 PUSH2 0x2213 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2222 PUSH2 0x2228 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2238 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2251 PUSH2 0x224C PUSH2 0x2256 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x226D PUSH2 0x2268 PUSH2 0x2272 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2294 PUSH2 0x228F PUSH2 0x2299 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A8 PUSH2 0x22AE SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22D2 PUSH2 0x22CD PUSH2 0x22D7 SWAP3 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EE PUSH2 0x22E9 PUSH2 0x22F3 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2305 PUSH2 0x230B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2316 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232F PUSH2 0x232A PUSH2 0x2334 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2350 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236E PUSH2 0x2369 PUSH2 0x2373 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238E PUSH2 0x2389 PUSH2 0x2395 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2337 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23BB PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2399 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23DA PUSH2 0x23D5 PUSH2 0x23E1 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F7 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2415 PUSH2 0x2410 PUSH2 0x241A SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2435 PUSH2 0x2430 PUSH2 0x243C SWAP3 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x241D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2462 SWAP3 SWAP5 SWAP4 PUSH2 0x245B PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2487 PUSH2 0x2481 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2673 JUMPI JUMPDEST PUSH2 0x2656 JUMPI PUSH2 0x2523 SWAP4 PUSH2 0x2510 PUSH2 0x2509 PUSH2 0x251C SWAP5 PUSH2 0x2515 SWAP5 PUSH2 0x24C5 PUSH2 0x24C0 TIMESTAMP PUSH2 0x24BA PUSH5 0x100000000 PUSH2 0x21BC JUMP JUMPDEST SWAP1 PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST SWAP8 PUSH2 0x24DA DUP10 PUSH2 0x24D4 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2216 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EF PUSH2 0x24E9 PUSH1 0x0 PUSH2 0x223D JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x263A JUMPI JUMPDEST DUP1 PUSH2 0x261E JUMPI JUMPDEST PUSH2 0x2572 JUMPI JUMPDEST POP POP POP PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x252D PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2537 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x256D PUSH2 0x2564 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2440 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2616 SWAP3 PUSH2 0x25FA PUSH2 0x25F4 PUSH2 0x25EF DUP5 PUSH2 0x25E9 PUSH2 0x25E3 PUSH2 0x260F SWAP9 PUSH2 0x25DE PUSH2 0x25D7 PUSH2 0x25C8 PUSH2 0x25B9 PUSH2 0x25B4 PUSH2 0x25A5 PUSH2 0x2600 SWAP15 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x25AE DUP8 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x25C2 DUP13 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25D2 PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xA PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2D87 JUMP JUMPDEST SWAP2 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST SWAP2 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x260A PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xB PUSH2 0x166A JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2501 JUMP JUMPDEST POP DUP1 PUSH2 0x2633 PUSH2 0x262D PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24FC JUMP JUMPDEST POP DUP2 PUSH2 0x264F PUSH2 0x2649 PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266F PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2695 PUSH2 0x268F PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248F JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A8 PUSH2 0x269B JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26BB SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E7 PUSH2 0x26EE SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26DD PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26FB SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x270C DUP2 DUP4 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2722 PUSH2 0x271C PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272F JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x2742 PUSH2 0x273C DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2769 JUMPI PUSH2 0x2760 SWAP4 SWAP5 PUSH2 0x2757 SWAP2 SWAP4 SWAP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2728 JUMP JUMPDEST POP PUSH2 0x2789 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x27A1 PUSH2 0x279C PUSH2 0x27A6 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x27B2 SWAP1 PUSH2 0x278D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x27D2 PUSH2 0x27CC PUSH2 0x27C7 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x282F JUMPI DUP2 PUSH2 0x27F3 PUSH2 0x27ED PUSH2 0x27E8 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2806 JUMPI PUSH2 0x2804 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x282B PUSH2 0x2813 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2854 PUSH2 0x283C PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2861 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x286D SWAP1 PUSH2 0x2858 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2879 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2889 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x28A5 JUMPI PUSH2 0x28A2 SWAP2 PUSH1 0x0 ADD PUSH2 0x287C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x28C1 PUSH2 0x28BC PUSH2 0x28C6 SWAP3 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28D3 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x2909 PUSH1 0x20 PUSH2 0x28F3 PUSH2 0x28EE PUSH2 0x28E9 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x2870 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x2901 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x2919 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2AA9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x294A PUSH2 0x2944 PUSH2 0x293F PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x2957 PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A40 JUMPI DUP3 PUSH2 0x2974 PUSH2 0x296E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2981 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x29A3 PUSH2 0x29A8 SWAP2 PUSH2 0x299D PUSH2 0x2997 PUSH2 0x29AE SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST SWAP2 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x29C2 PUSH2 0x29BC DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29CE JUMPI JUMPDEST DUP1 PUSH2 0x297A JUMP JUMPDEST PUSH2 0x2A0A PUSH2 0x2A10 SWAP3 PUSH2 0x2A05 PUSH2 0x29F4 PUSH2 0x29E3 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29EE DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29FF PUSH1 0x5 PUSH2 0x28AD JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x2A24 PUSH2 0x2A1E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A30 JUMPI JUMPDEST DUP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH2 0x2A39 SWAP2 PUSH2 0x2BAE JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2A2A JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A57 PUSH2 0x2A51 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A62 JUMPI JUMPDEST PUSH2 0x297F JUMP JUMPDEST PUSH2 0x2A76 PUSH2 0x2A6F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2A5D JUMP JUMPDEST PUSH2 0x2A9C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2AA2 JUMPI JUMPDEST PUSH2 0x2A94 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288B JUMP JUMPDEST CODESIZE PUSH2 0x292C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2AB7 PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2ACB PUSH2 0x2AC5 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AD8 JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2AFB PUSH2 0x2AF5 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B7C JUMPI POP DUP1 PUSH2 0x2B2C PUSH2 0x2B1C DUP4 PUSH2 0x2B16 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2B26 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B41 PUSH2 0x2B3B DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B75 JUMPI POP PUSH2 0x2B6F PUSH2 0x2B5F DUP3 PUSH2 0x2B5A DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH2 0x2B69 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B91 PUSH2 0x2B8B PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B9C JUMPI JUMPDEST PUSH2 0x2B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA8 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x2B97 JUMP JUMPDEST DUP1 PUSH2 0x2BCA PUSH2 0x2BC4 PUSH2 0x2BBF PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BE7 JUMPI PUSH2 0x2BE5 SWAP2 PUSH2 0x2BDD PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C0C PUSH2 0x2BF4 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C2D PUSH2 0x2C27 PUSH2 0x2C22 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C4A JUMPI PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x2C41 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C6F PUSH2 0x2C57 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C81 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C8A PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2D22 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2CB1 PUSH2 0x2CAB PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2D08 JUMPI POP PUSH2 0x2CC3 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CD7 PUSH2 0x2CD1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CE0 JUMPI POP JUMP JUMPDEST PUSH2 0x2CEC PUSH2 0x2D04 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D1B PUSH2 0x2D15 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D4A PUSH2 0x2D45 PUSH2 0x2D4F SWAP3 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D61 PUSH2 0x2D67 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2275 JUMP JUMPDEST SWAP3 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2D73 DUP4 DUP3 MUL PUSH2 0x2275 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D82 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D9C PUSH2 0x2DAF SWAP2 PUSH2 0x2D96 PUSH2 0x2D2E JUMP JUMPDEST POP PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x2DA9 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D36 JUMP JUMPDEST SWAP1 PUSH2 0x2D52 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DD0 PUSH2 0x2DCA PUSH2 0x2DC5 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E9E JUMPI DUP4 PUSH2 0x2DF1 PUSH2 0x2DEB PUSH2 0x2DE6 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E75 JUMPI PUSH2 0x2E15 DUP4 PUSH2 0x2E10 PUSH2 0x2E09 PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2E1F JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E6A PUSH2 0x2E58 PUSH2 0x2E52 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E61 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2E1A JUMP JUMPDEST PUSH2 0x2E9A PUSH2 0x2E82 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EC3 PUSH2 0x2EAB PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2ED2 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EF4 PUSH2 0x2EEE PUSH2 0x2EE9 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FD9 JUMPI PUSH2 0x2F19 PUSH2 0x2F12 DUP4 PUSH2 0x2F0D PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F36 PUSH2 0x2F30 PUSH2 0x2F2B PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAC JUMPI PUSH2 0x2F5B PUSH2 0x2F54 DUP4 PUSH2 0x2F4F PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2FA7 PUSH2 0x2F95 PUSH2 0x2F8F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F9E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FD4 DUP3 PUSH2 0x2FCE PUSH2 0x2FBF PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 PUSH2 0x2FC9 DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2EC7 JUMP JUMPDEST SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x2FED PUSH2 0x2FE8 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x3000 PUSH2 0x2FFA DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x3029 JUMPI PUSH2 0x3013 PUSH2 0x3024 SWAP2 DUP5 SWAP1 PUSH2 0x26F0 JUMP JUMPDEST PUSH2 0x301F PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F1A JUMP JUMPDEST SWAP1 PUSH2 0x3048 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST REVERT PREVRANDAO REVERT SGT BLOCKHASH SWAP12 TIMESTAMP SSTORE SHL 0x4E 0xC8 0xD0 0x2C TSTORE 0xD3 MLOAD EXTCODESIZE MOD 0xC8 PUSH15 0x2916DFD23D0310B6DDC88064736F6C PUSH4 0x4300081E STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 POP 0xE8 INVALID PUSH19 0x7B12ABCB61A5F6737B760ACD1F79145F3ABB48 0xAB SELFDESTRUCT 0x21 SWAPN 0x4F PUSH3 0x6ECD64 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
              "sourceMap": "278:5259:11:-:0;;;;;;;;;-1:-1:-1;278:5259:11;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;363:20::-;;;;;:::i;:::-;;:::o;278:5259::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;455:26::-;;;;;;:::i;:::-;;:::o;278:5259::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;705:25::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;;;278:5259;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;576:62::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;278:5259::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;2404:97::-;2453:7;;:::i;:::-;2479:8;:15;:8;:15;:::i;:::-;2472:22;:::o;278:5259::-;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;4984:551::-;5383:143;5367:161;4984:551;5375:152;4984:551;5056:12;;:::i;:::-;5115:6;;:15;;5124:6;5115:15;:::i;:::-;;;:::i;:::-;;:79;;;;5238:32;5147:6;5115:79;5238:32;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;5228:43;;;;:::i;:::-;;;:::i;:::-;;5401:123;5314:26;;;;;;:::i;:::-;;;;;;;;;;5304:37;;;;:::i;:::-;;;:::i;:::-;;5401:123;5431:12;5438:4;5431:12;:::i;:::-;5465:4;5457:13;5465:4;5457:13;:::i;:::-;5484:4;5401:123;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;5391:134;;;;:::i;:::-;;;:::i;:::-;;5383:143;:::i;:::-;5375:152;:::i;:::-;5367:161;:::i;:::-;4984:551;:::o;5115:79::-;5179:6;5238:32;5179:6;5115:79;;278:5259;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4451:269::-;4520:10;:25;;4534:11;;;:::i;:::-;4520:25;:::i;:::-;;;:::i;:::-;;4516:52;;4582:12;:26;;4598:10;4606:1;4598:10;:::i;:::-;4582:26;:::i;:::-;;;:::i;:::-;;4578:52;;4640:26;4654:12;4640:26;;:::i;:::-;4681:32;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;4451:269::o;4578:52::-;4617:13;;;;;;;;;;;;:::i;:::-;;;;4516:52;4554:14;;;;;;;;;;;;:::i;:::-;;;;278:5259;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;2746:1290::-;;;;2816:12;;:::i;:::-;2889:6;;:16;;2899:6;2889:16;:::i;:::-;;;:::i;:::-;;2885:46;;3072:6;:15;;3081:6;3072:15;:::i;:::-;;;:::i;:::-;;:79;;;;;3037:114;3219:6;:20;;3229:10;3237:1;3229:10;:::i;:::-;3219:20;:::i;:::-;;;:::i;:::-;;3215:46;;3317:23;;:15;:7;3325:6;3317:15;;:::i;:::-;3333:6;3317:23;;:::i;:::-;;:::i;:::-;:37;;3344:10;3352:1;3344:10;:::i;:::-;3317:37;:::i;:::-;;;:::i;:::-;;3313:69;;3470:26;;;;;;:::i;:::-;;;;;;;;;;3548:6;3531:32;3556:6;3531:32;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3521:43;;;;:::i;:::-;;;:::i;:::-;;3583:93;;;;;;;;3732:4;3724:24;:13;3732:4;3724:13;:::i;:::-;:24;:::i;:::-;;3749:6;3757;3724:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;3072:79;3845:4;3819:30;3845:4;3819:23;:15;:7;3827:6;3819:15;;:::i;:::-;3835:6;3819:23;;:::i;:::-;:30;:::i;:::-;3859;3885:4;3859:23;:15;:7;3867:6;3859:15;;:::i;:::-;3875:6;3859:23;;:::i;:::-;:30;:::i;:::-;3936:19;:13;:8;:13;:::i;:::-;3950:4;3936:19;;:::i;:::-;3999:6;4007:4;4013:8;:15;:8;:15;:::i;:::-;3979:50;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2746:1290::o;3724:40::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;3313:69::-;3363:19;;;;;;;;;;;;:::i;:::-;;;;3215:46;3248:13;4617;;;3248;;;;;;;;:::i;:::-;;;;3072:79;;;;2885:46;2914:17;;;;;;;;;;;;:::i;:::-;;;;4149:171;4206:10;:25;;4220:11;;;:::i;:::-;4206:25;:::i;:::-;;;:::i;:::-;;4202:52;;4264:14;4272:6;4264:14;;:::i;:::-;4293:20;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;4149:171::o;4202:52::-;4240:14;4554;;;4240;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "pairFor(address,address)": "96ed28f9",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IdenticalTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PairAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeToSetter\",\"type\":\"address\"}],\"name\":\"FeeToSetterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeTo\",\"type\":\"address\"}],\"name\":\"FeeToUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairLength\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"pairFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u306e\\u4f5c\\u6210\\u3068\\u7ba1\\u7406\\u3092\\u884c\\u3046\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"errors\":{\"IdenticalTokens()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u540c\\u4e00\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u306e\\u4f5c\\u6210\"}],\"PairAlreadyExists()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u65e2\\u306b\\u5b58\\u5728\\u3059\\u308b\\u30da\\u30a2\"}],\"Unauthorized()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u6a29\\u9650\\u306a\\u3057\"}],\"ZeroAddress()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u30bc\\u30ed\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u6307\\u5b9a\"}]},\"events\":{\"FeeToSetterUpdated(address)\":{\"details\":\"feeToSetter\\u8a2d\\u5b9a\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"newFeeToSetter\":\"\\u65b0\\u3057\\u3044feeToSetter\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"FeeToUpdated(address)\":{\"details\":\"feeTo\\u8a2d\\u5b9a\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"newFeeTo\":\"\\u65b0\\u3057\\u3044feeTo\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"PairCreated(address,address,address,uint256)\":{\"details\":\"\\u30da\\u30a2\\u4f5c\\u6210\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"pair\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\",\"pairLength\":\"\\u73fe\\u5728\\u306e\\u30da\\u30a2\\u7dcf\\u6570\",\"token0\":\"\\u30da\\u30a2\\u306e\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\\uff08\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u5c0f\\u3055\\u3044\\u65b9\\uff09\",\"token1\":\"\\u30da\\u30a2\\u306e\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\\uff08\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u5927\\u304d\\u3044\\u65b9\\uff09\"}}},\"kind\":\"dev\",\"methods\":{\"allPairsLength()\":{\"details\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u7dcf\\u6570\\u3092\\u53d6\\u5f97\",\"returns\":{\"_0\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u7dcf\\u6570\"}},\"constructor\":{\"details\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\",\"params\":{\"_feeToSetter\":\"feeToSetter\\u306e\\u521d\\u671f\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"createPair(address,address)\":{\"details\":\"\\u65b0\\u3057\\u3044\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u3092\\u4f5c\\u6210\",\"params\":{\"tokenA\":\"\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenB\":\"\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"pair\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"pairFor(address,address)\":{\"details\":\"\\u7279\\u5b9a\\u306e\\u30da\\u30a2\\u30a2\\u30c9\\u30ec\\u30b9\\u3092\\u8a08\\u7b97\\uff08CREATE2\\u3092\\u4f7f\\u7528\\uff09\",\"params\":{\"tokenA\":\"\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenB\":\"\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"pair\":\"\\u8a08\\u7b97\\u3055\\u308c\\u305f\\u30da\\u30a2\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"setFeeTo(address)\":{\"details\":\"feeTo\\u30a2\\u30c9\\u30ec\\u30b9\\u3092\\u8a2d\\u5b9a\",\"params\":{\"_feeTo\":\"\\u65b0\\u3057\\u3044feeTo\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"setFeeToSetter(address)\":{\"details\":\"feeToSetter\\u30a2\\u30c9\\u30ec\\u30b9\\u3092\\u8a2d\\u5b9a\",\"params\":{\"_feeToSetter\":\"\\u65b0\\u3057\\u3044feeToSetter\\u30a2\\u30c9\\u30ec\\u30b9\"}}},\"stateVariables\":{\"allPairs\":{\"details\":\"\\u4f5c\\u6210\\u3055\\u308c\\u305f\\u30da\\u30a2\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\\u4e00\\u89a7\"},\"feeTo\":{\"details\":\"\\u30da\\u30a2\\u4f5c\\u6210\\u624b\\u6570\\u6599\\u306e\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"},\"feeToSetter\":{\"details\":\"feeTo\\u3092\\u8a2d\\u5b9a\\u3059\\u308b\\u6a29\\u9650\\u3092\\u6301\\u3064\\u30a2\\u30c9\\u30ec\\u30b9\"},\"getPair\":{\"details\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u30da\\u30a2\\u306e\\u30de\\u30c3\\u30d4\\u30f3\\u30b0 (token0 => token1 => pairAddress)\"}},\"title\":\"DexFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Uniswap V2\\u306e\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30d1\\u30bf\\u30fc\\u30f3\\u306b\\u57fa\\u3065\\u3044\\u305f\\u5b9f\\u88c5\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexFactory.sol\":\"DexFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DexFactory.sol\":{\"keccak256\":\"0x5090843192b30d8f7e7738f2d16b5dc601f22fc727ec771948656cc15093301a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e78dfd31644a66afdeb8dc300ed55d19a57210c9eefc8027f2b0c62ef4f597f\",\"dweb:/ipfs/QmavsZcoectat12P1USa4BwpYSMeqrrWa7BygaqGofLhgH\"]},\"contracts/DexPair.sol\":{\"keccak256\":\"0x8b53a5b7f2532f3629d3c3612bffaf5d8461014960ac9380fa9be5a0650b8422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d702f28491775f2a0dba25cdb6824acccd461daa11c97857251a5c91be359fc7\",\"dweb:/ipfs/QmNjbjbfPqusFGa1FsY6HVUpvUpB6qieKJr6brEbgt63vn\"]}},\"version\":1}"
        }
      },
      "contracts/DexPair.sol": {
        "DexPair": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientInputAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientLiquidity",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientLiquidityBurned",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientOutputAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidK",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidTo",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Overflow",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "_reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "_reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "_blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token1",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 126,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_string": {
                  "entryPoint": 180,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 44,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 147,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 758,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 690,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 912,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_rational_by": {
                  "entryPoint": 527,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 388,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 530,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_bytes1": {
                  "entryPoint": 880,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 561,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constructor_DexPair": {
                  "entryPoint": 489,
                  "id": 1872,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "constructor_ERC20": {
                  "entryPoint": 1262,
                  "id": 278,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "constructor_ReentrancyGuard": {
                  "entryPoint": 660,
                  "id": 1361,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 442,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 533,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_stringliteral_03cd_to_string": {
                  "entryPoint": 268,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_stringliteral_488d_to_string": {
                  "entryPoint": 344,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 430,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 402,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 597,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_byte_array_to_storage_from_string_to_string": {
                  "entryPoint": 1043,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_literal_to_memory_03cdc1b3942c53ee9c2070aaa3b60e6c18aae77653867f02fd9cd306602f7236": {
                  "entryPoint": 243,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_literal_to_memory_488dd486e3807b8e6ac07ed38226df40be52111460590ebc3909eadd7ae3bb67": {
                  "entryPoint": 319,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "divide_by_ceil": {
                  "entryPoint": 769,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 716,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": 1025,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 87,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 399,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mask_bytes_dynamic": {
                  "entryPoint": 1003,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x22": {
                  "entryPoint": 694,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 65,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 454,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 625,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 50,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 55,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 355,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 779,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 999,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_uint256": {
                  "entryPoint": 860,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "store_literal_in_memory_03cdc1b3942c53ee9c2070aaa3b60e6c18aae77653867f02fd9cd306602f7236": {
                  "entryPoint": 203,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_488dd486e3807b8e6ac07ed38226df40be52111460590ebc3909eadd7ae3bb67": {
                  "entryPoint": 279,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 783,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 574,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 361,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 457,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_string_to_string": {
                  "entryPoint": 1250,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 628,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_uint256_to_uint256": {
                  "entryPoint": 821,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 855,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234610027576100116101e9565b61001961002c565b613082610507823961308290f35b610032565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061006190610037565b810190811060018060401b0382111761007957604052565b610041565b9061009161008a61002c565b9283610057565b565b60018060401b0381116100af576100ab602091610037565b0190565b610041565b906100c66100c183610093565b61007e565b918252565b60007f444558204c5020546f6b656e0000000000000000000000000000000000000000910152565b6100fd600c6100b4565b9061010a602083016100cb565b565b6101146100f3565b90565b60007f4445582d4c500000000000000000000000000000000000000000000000000000910152565b61014960066100b4565b9061015660208301610117565b565b61016061013f565b90565b60001b90565b9061017a60018060a01b0391610163565b9181191691161790565b60018060a01b031690565b90565b6101a66101a16101ab92610184565b61018f565b610184565b90565b6101b790610192565b90565b6101c3906101ae565b90565b90565b906101de6101d96101e5926101ba565b6101c6565b8254610169565b9055565b6102026101f461010c565b6101fc610158565b90610294565b61020d3360066101c9565b565b90565b90565b61022961022461022e9261020f565b61018f565b610212565b90565b61023b6001610215565b90565b9061024b60001991610163565b9181191691161790565b61026961026461026e92610212565b61018f565b610212565b90565b90565b9061028961028461029092610255565b610271565b825461023e565b9055565b9061029e916104ee565b6102b06102a9610231565b6005610274565b565b5190565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156102ec575b60208310146102e757565b6102b6565b91607f16916102dc565b600052602060002090565b601f602091010490565b1b90565b9190600861032b9102916103256000198461030b565b9261030b565b9181191691161790565b919061034b61034661035393610255565b610271565b90835461030f565b9055565b600090565b61036e91610368610357565b91610335565b565b5b81811061037c575050565b8061038a600060019361035c565b01610371565b9190601f81116103a0575b505050565b6103ac6103d1936102f6565b9060206103b884610301565b830193106103d9575b6103ca90610301565b0190610370565b38808061039b565b91506103ca819290506103c1565b1c90565b906103fc90600019906008026103e7565b191690565b8161040b916103eb565b906002021790565b9061041d816102b2565b9060018060401b0382116104dd5761043f8261043985546102cc565b85610390565b602090601f83116001146104745791809161046393600092610468575b5050610401565b90555b565b9091500151388061045c565b601f19831691610483856102f6565b9260005b8181106104c5575091600293918560019694106104ab575b50505002019055610466565b6104bb910151601f8416906103eb565b905538808061049f565b91936020600181928787015181550195019201610487565b610041565b906104ec91610413565b565b906104fd6105049260036104e2565b60046104e2565b56fe60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119c3565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119ef565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e50565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6e565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e84565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611ebe565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a92612050565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612086565b610d11565b610acf61210b565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612464565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b91909161216b565b8d8d610dee565b6111938d61118b86610b60565b908d9161216b565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e6126a0565b9190916126ad565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb6126a0565b829084916126fe565b9190916127b5565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612086565b61168a565b906115cf61210b565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b90565b61162061161b61162592611609565b61094d565b6101bf565b90565b6116319061160c565b90565b906116416000199161151b565b9181191691161790565b61165f61165a61166492610198565b61094d565b610198565b90565b90565b9061167f61167a6116869261164b565b611667565b8254611634565b9055565b91909150816116a96116a361169e30610b88565b6101ca565b916101ca565b146119a6576116b6611416565b509290929061170c60206116da6116d56116d06007610b2b565b610b60565b610b7c565b6370a08231906117016116ec30610b88565b926116f5610183565b95869485938493610bd3565b835260048301610530565b03915afa9081156119a157600091611973575b5093611772602061174061173b6117366008610b2b565b610b60565b610b7c565b6370a082319061176761175230610b88565b9261175b610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196e57600091611940575b509161179a8661179484610af0565b90610c2e565b926117ae816117a887610af0565b90610c2e565b946117ba8482906128c9565b936117c361149c565b806117d76117d16000610ad4565b91610198565b146000146118f757506118046117f66117f1888a90610c53565b612adf565b6117fe61096c565b90610c2e565b9861182161181361dead611628565b61181b61096c565b90612bae565b5b896118366118306000610ad4565b91610198565b146118da57611849611852958b90612bae565b92909192612464565b61189e575b3390916118847f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b92611899611890610183565b92839283610885565b0390a2565b6118d56118ce6118b66118b160096113b8565b610af0565b6118c86118c360096113df565b610af0565b90610c53565b600c61166a565b611857565b600063bb55fd2760e01b8152806118f3600482016102a9565b0390fd5b61193a9061193461192561191e61190f8b8590610c53565b61191887610af0565b906115e7565b928b610c53565b61192e86610af0565b906115e7565b90612aae565b98611822565b611961915060203d8111611967575b6119598183610baa565b810190610be8565b38611785565b503d61194f565b610c07565b611994915060203d811161199a575b61198c8183610baa565b810190610be8565b3861171f565b503d611982565b610c07565b6000630521f43160e31b8152806119bf600482016102a9565b0390fd5b6119d4906119cf610b0c565b6115b4565b90565b906119e190610cc6565b600052602052604060002090565b611a06611a0b916119fe610b0c565b5060006119d7565b61148f565b90565b90611a219291611a1c612086565b611a2d565b9091611a2b61210b565b565b929192505081611a4d611a47611a4230610b88565b6101ca565b916101ca565b14611e3357611a5a611416565b5091909192611a696007610b2b565b611a736008610b2b565b90611abc6020611a8a611a8584610b60565b610b7c565b6370a0823190611ab1611a9c30610b88565b92611aa5610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2e57600091611e00575b5091611b196020611ae7611ae284610b60565b610b7c565b6370a0823190611b0e611af930610b88565b92611b02610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611dfb57600091611dcd575b5096611b3f611b3a30610b88565b6119ef565b96611b7a611b4e8284906128c9565b95611b75611b6e611b67611b6061149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8f611b896000610ad4565b91610198565b148015611db2575b611d9557611bee611be9611c2096611bb9602094611bb430610b88565b612c10565b611bcf8d611bc683610b60565b908c909161216b565b611be4611bdb88610b60565b8d8c909161216b565b610b60565b610b7c565b6370a0823190611c15611c0030610b88565b92611c09610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d9057611c4c611c47611c7e96602093600091611d63575b5095610b60565b610b7c565b6370a0823190611c73611c5e30610b88565b92611c67610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5e57611c9d94600091611d30575b50909192612464565b611cf4575b3390849184611cda611cd47fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611cef611ce6610183565b92839283610885565b0390a3565b611d2b611d24611d0c611d0760096113b8565b610af0565b611d1e611d1960096113df565b610af0565b90610c53565b600c61166a565b611ca2565b611d51915060203d8111611d57575b611d498183610baa565b810190610be8565b38611c94565b503d611d3f565b610c07565b611d839150843d8111611d89575b611d7b8183610baa565b810190610be8565b38611c40565b503d611d71565b610c07565b600063749383ad60e01b815280611dae600482016102a9565b0390fd5b5088611dc7611dc16000610ad4565b91610198565b14611b97565b611dee915060203d8111611df4575b611de68183610baa565b810190610be8565b38611b2c565b503d611ddc565b610c07565b611e21915060203d8111611e27575b611e198183610baa565b810190610be8565b38611acf565b503d611e0f565b610c07565b6000630521f43160e31b815280611e4c600482016102a9565b0390fd5b611e6a90611e5c610b0c565b611e64610b0c565b90611a0e565b9091565b611e7661124e565b50611e816004611365565b90565b611ea191611e90611454565b50611e996126a0565b9190916127b5565b600190565b90611eb090610cc6565b600052602052604060002090565b611ee391611ed9611ede92611ed1610b0c565b506001611ea6565b6119d7565b61148f565b90565b611eee612086565b611ef6611f00565b611efe61210b565b565b611f516020611f1f611f1a611f156007610b2b565b610b60565b610b7c565b6370a0823190611f46611f3130610b88565b92611f3a610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204b57611fb69160009161201d575b506020611f84611f7f611f7a6008610b2b565b610b60565b610b7c565b6370a0823190611fab611f9630610b88565b92611f9f610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201857611fe892600091611fea575b50611fd760096113b8565b90611fe260096113df565b92612464565b565b61200b915060203d8111612011575b6120038183610baa565b810190610be8565b38611fcc565b503d611ff9565b610c07565b61203e915060203d8111612044575b6120368183610baa565b810190610be8565b38611f67565b503d61202c565b610c07565b612058611ee6565b565b90565b61207161206c6120769261205a565b61094d565b610198565b90565b612083600261205d565b90565b612090600561148f565b6120a96120a361209e612079565b610198565b91610198565b146120c2576120c06120b9612079565b600561166a565b565b6000633ee5aeb560e01b8152806120db600482016102a9565b0390fd5b90565b6120f66120f16120fb926120df565b61094d565b610198565b90565b61210860016120e2565b90565b61211d6121166120fe565b600561166a565b565b63ffffffff60e01b1690565b61213f61213a612144926103d1565b610bd3565b61211f565b90565b91602061216992949361216260408201966000830190610523565b019061057b565b565b906121b26121b7936121a36004949361218a63a9059cbb91939161212b565b92612193610183565b9687946020860190815201612147565b60208201810382520383610baa565b612c73565b565b90565b6121d06121cb6121d5926121b9565b61094d565b610198565b90565b6121e46121ea91610198565b91610198565b9081156121f5570690565b6115d1565b61220e61220961221392610198565b61094d565b6103d1565b90565b612222612228916103d1565b916103d1565b90039063ffffffff821161223857565b610c18565b61225161224c61225692610ad1565b61094d565b6103d1565b90565b61226d61226861227292610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229461228f612299926103b1565b61094d565b612275565b90565b6122a86122ae91612275565b91612275565b9081156122b9570490565b6115d1565b6122d26122cd6122d792612275565b61094d565b610198565b90565b6122ee6122e96122f3926103d1565b61094d565b610198565b90565b61230561230b91939293610198565b92610198565b820180921161231657565b610c18565b61232f61232a61233492610198565b61094d565b6103b1565b90565b906123506dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236e612369612373926103b1565b61094d565b6103b1565b90565b90565b9061238e6123896123959261235a565b612376565b8254612337565b9055565b60701b90565b906123bb6dffffffffffffffffffffffffffff60701b91612399565b9181191691161790565b906123da6123d56123e19261235a565b612376565b825461239f565b9055565b906123f763ffffffff60e01b91610bd3565b9181191691161790565b61241561241061241a926103d1565b61094d565b6103d1565b90565b90565b9061243561243061243c92612401565b61241d565b82546123e5565b9055565b91602061246292949361245b604082019660008301906103c4565b01906103c4565b565b9092816124876124816dffffffffffffffffffffffffffff610af0565b91610198565b118015612673575b612656576125239361251061250961251c94612515946124c56124c0426124ba6401000000006121bc565b906121d8565b6121fa565b976124da896124d46009611409565b90612216565b91826124ef6124e9600061223d565b916103d1565b118061263a575b8061261e575b612572575b50505061231b565b6009612379565b61231b565b60096123c5565b6009612420565b61252d60096113b8565b61253760096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad19161256d612564610183565b92839283612440565b0390a1565b612616926125fa6125f46125ef846125e96125e361260f986125de6125d76125c86125b96125b46125a56126009e612d87565b6125ae87612280565b9061229c565b6122be565b6125c28c6122da565b90610c53565b6125d2600a61148f565b6122f6565b600a61166a565b612d87565b91612280565b9061229c565b6122be565b916122da565b90610c53565b61260a600b61148f565b6122f6565b600b61166a565b388080612501565b508061263361262d6000612259565b916103b1565b14156124fc565b508161264f6126496000612259565b916103b1565b14156124f6565b6000631a93c68960e11b81528061266f600482016102a9565b0390fd5b508361269561268f6dffffffffffffffffffffffffffff610af0565b91610198565b1161248f565b600090565b6126a861269b565b503390565b916126bb9291600192612db2565b565b6040906126e76126ee94969593966126dd60608401986000850190610523565b602083019061057b565b019061057b565b565b906126fb9103610198565b90565b92919261270c818390611ebe565b908161272261271c600019610198565b91610198565b1061272f575b5050509050565b8161274261273c87610198565b91610198565b106127695761276093946127579193926126f0565b90600092612db2565b80388080612728565b50612789849291926000938493637dc7a0d960e11b8552600485016126bd565b0390fd5b6127a161279c6127a692610ad1565b61094d565b6101bf565b90565b6127b29061278d565b90565b91826127d26127cc6127c760006127a9565b6101ca565b916101ca565b1461282f57816127f36127ed6127e860006127a9565b6101ca565b916101ca565b146128065761280492919091612ed5565b565b61282b61281360006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b61285461283c60006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61286190610b38565b90565b61286d90612858565b90565b61287990610b70565b90565b90505190612889826101d6565b565b906020828203126128a5576128a29160000161287c565b90565b61018e565b90565b6128c16128bc6128c6926128aa565b61094d565b610198565b90565b91906128d3611454565b5061290960206128f36128ee6128e96006610b2b565b612864565b612870565b63017e7e5890612901610183565b938492610bd3565b82528180612919600482016102a9565b03915afa908115612aa957600091612a7b575b50908161294a61294461293f60006127a9565b6101ca565b916101ca565b141593612957600c61148f565b9185600014612a40578261297461296e6000610ad4565b91610198565b03612981575b505050505b565b6129a36129a89161299d6129976129ae95610af0565b91610af0565b90610c53565b612adf565b91612adf565b90806129c26129bc84610198565b91610198565b116129ce575b8061297a565b612a0a612a1092612a056129f46129e361149c565b6129ee868590610c2e565b90610c53565b936129ff60056128ad565b90610c53565b6122f6565b906115e7565b80612a24612a1e6000610ad4565b91610198565b11612a30575b806129c8565b612a3991612bae565b3880612a2a565b50509050612a57612a516000610ad4565b91610198565b03612a62575b61297f565b612a76612a6f6000610ad4565b600c61166a565b612a5d565b612a9c915060203d8111612aa2575b612a948183610baa565b81019061288b565b3861292c565b503d612a8a565b610c07565b90612ab7610b0c565b5081612acb612ac583610198565b91610198565b10600014612ad857505b90565b9050612ad5565b612ae7610b0c565b81612afb612af56003610c8b565b91610198565b11600014612b7c575080612b2c612b1c83612b16600261205d565b906115e7565b612b2660016120e2565b906122f6565b905b81612b41612b3b83610198565b91610198565b1015612b755750612b6f612b5f82612b5a8582906115e7565b6122f6565b612b69600261205d565b906115e7565b90612b2e565b929150505b565b9190612b91612b8b6000610ad4565b91610198565b03612b9c575b612b7a565b9050612ba860016120e2565b90612b97565b80612bca612bc4612bbf60006127a9565b6101ca565b916101ca565b14612be757612be591612bdd60006127a9565b919091612ed5565b565b612c0c612bf460006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c2d612c27612c2260006127a9565b6101ca565b916101ca565b14612c4a57612c489190612c4160006127a9565b9091612ed5565b565b612c6f612c5760006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c81610b0c565b50612c8a610b0c565b50828151910182855af115612d22573d60005190612cb1612cab6000610ad4565b91610198565b14600014612d085750612cc381610b7c565b3b612cd7612cd16000610ad4565b91610198565b145b612ce05750565b612cec612d0491610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612d1b612d1560016120e2565b91610198565b1415612cd9565b6040513d6000823e3d90fd5b600090565b90565b612d4a612d45612d4f92612d33565b61094d565b612275565b90565b612d61612d6791939293612275565b92612275565b91612d73838202612275565b928184041490151715612d8257565b610c18565b612d9c612daf91612d96612d2e565b50612280565b612da9600160701b612d36565b90612d52565b90565b909281612dd0612dca612dc560006127a9565b6101ca565b916101ca565b14612e9e5783612df1612deb612de660006127a9565b6101ca565b916101ca565b14612e7557612e1583612e10612e0960018690611ea6565b87906119d7565b61166a565b612e1f575b505050565b919091612e6a612e58612e527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e61610183565b91829182610588565b0390a3388080612e1a565b612e9a612e8260006127a9565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612ec3612eab60006127a9565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ed29101610198565b90565b91909180612ef4612eee612ee960006127a9565b6101ca565b916101ca565b14600014612fd957612f19612f1283612f0d600261148f565b6122f6565b600261166a565b5b82612f36612f30612f2b60006127a9565b6101ca565b916101ca565b14600014612fac57612f5b612f5483612f4f600261148f565b6126f0565b600261166a565b5b919091612fa7612f95612f8f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f9e610183565b91829182610588565b0390a3565b612fd482612fce612fbf600087906119d7565b91612fc98361148f565b612ec7565b9061166a565b612f5c565b612fed612fe8600083906119d7565b61148f565b80613000612ffa85610198565b91610198565b10613029576130136130249184906126f0565b61301f600084906119d7565b61166a565b612f1a565b90613048909192600093849363391434e360e21b8552600485016126bd565b0390fdfea26469706673582212205bfd44fd13409b42551b4ec8d02c5dd3513b06c86e2916dfd23d0310b6ddc88064736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x27 JUMPI PUSH2 0x11 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x19 PUSH2 0x2C JUMP JUMPDEST PUSH2 0x3082 PUSH2 0x507 DUP3 CODECOPY PUSH2 0x3082 SWAP1 RETURN JUMPDEST PUSH2 0x32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x61 SWAP1 PUSH2 0x37 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x91 PUSH2 0x8A PUSH2 0x2C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x57 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAF JUMPI PUSH2 0xAB PUSH1 0x20 SWAP2 PUSH2 0x37 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0xC6 PUSH2 0xC1 DUP4 PUSH2 0x93 JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x444558204C5020546F6B656E0000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0xFD PUSH1 0xC PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x10A PUSH1 0x20 DUP4 ADD PUSH2 0xCB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x114 PUSH2 0xF3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4445582D4C500000000000000000000000000000000000000000000000000000 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x149 PUSH1 0x6 PUSH2 0xB4 JUMP JUMPDEST SWAP1 PUSH2 0x156 PUSH1 0x20 DUP4 ADD PUSH2 0x117 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 PUSH2 0x1AB SWAP3 PUSH2 0x184 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B7 SWAP1 PUSH2 0x192 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C3 SWAP1 PUSH2 0x1AE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DE PUSH2 0x1D9 PUSH2 0x1E5 SWAP3 PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x169 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x202 PUSH2 0x1F4 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x158 JUMP JUMPDEST SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH2 0x20D CALLER PUSH1 0x6 PUSH2 0x1C9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 PUSH2 0x22E SWAP3 PUSH2 0x20F JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x1 PUSH2 0x215 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x24B PUSH1 0x0 NOT SWAP2 PUSH2 0x163 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x264 PUSH2 0x26E SWAP3 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST PUSH2 0x212 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x289 PUSH2 0x284 PUSH2 0x290 SWAP3 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x29E SWAP2 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2A9 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x274 JUMP JUMPDEST JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x2EC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2E7 JUMPI JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 SWAP2 ADD DIV SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x8 PUSH2 0x32B SWAP2 MUL SWAP2 PUSH2 0x325 PUSH1 0x0 NOT DUP5 PUSH2 0x30B JUMP JUMPDEST SWAP3 PUSH2 0x30B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x34B PUSH2 0x346 PUSH2 0x353 SWAP4 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x30F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x36E SWAP2 PUSH2 0x368 PUSH2 0x357 JUMP JUMPDEST SWAP2 PUSH2 0x335 JUMP JUMPDEST JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x38A PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x35C JUMP JUMPDEST ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3A0 JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x3D1 SWAP4 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x3B8 DUP5 PUSH2 0x301 JUMP JUMPDEST DUP4 ADD SWAP4 LT PUSH2 0x3D9 JUMPI JUMPDEST PUSH2 0x3CA SWAP1 PUSH2 0x301 JUMP JUMPDEST ADD SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA DUP2 SWAP3 SWAP1 POP PUSH2 0x3C1 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3FC SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x8 MUL PUSH2 0x3E7 JUMP JUMPDEST NOT AND SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x40B SWAP2 PUSH2 0x3EB JUMP JUMPDEST SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x41D DUP2 PUSH2 0x2B2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x4DD JUMPI PUSH2 0x43F DUP3 PUSH2 0x439 DUP6 SLOAD PUSH2 0x2CC JUMP JUMPDEST DUP6 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x474 JUMPI SWAP2 DUP1 SWAP2 PUSH2 0x463 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x401 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP ADD MLOAD CODESIZE DUP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x483 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4BB SWAP2 ADD MLOAD PUSH1 0x1F DUP5 AND SWAP1 PUSH2 0x3EB JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x49F JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x487 JUMP JUMPDEST PUSH2 0x41 JUMP JUMPDEST SWAP1 PUSH2 0x4EC SWAP2 PUSH2 0x413 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x4FD PUSH2 0x504 SWAP3 PUSH1 0x3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x4E2 JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E50 JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x26A0 JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x161B PUSH2 0x1625 SWAP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1631 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1641 PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165F PUSH2 0x165A PUSH2 0x1664 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167F PUSH2 0x167A PUSH2 0x1686 SWAP3 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1634 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A9 PUSH2 0x16A3 PUSH2 0x169E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A6 JUMPI PUSH2 0x16B6 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x170C PUSH1 0x20 PUSH2 0x16DA PUSH2 0x16D5 PUSH2 0x16D0 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1701 PUSH2 0x16EC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19A1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1973 JUMPI JUMPDEST POP SWAP4 PUSH2 0x1772 PUSH1 0x20 PUSH2 0x1740 PUSH2 0x173B PUSH2 0x1736 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1767 PUSH2 0x1752 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x175B PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1940 JUMPI JUMPDEST POP SWAP2 PUSH2 0x179A DUP7 PUSH2 0x1794 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AE DUP2 PUSH2 0x17A8 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17BA DUP5 DUP3 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP4 PUSH2 0x17C3 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D7 PUSH2 0x17D1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F7 JUMPI POP PUSH2 0x1804 PUSH2 0x17F6 PUSH2 0x17F1 DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x1821 PUSH2 0x1813 PUSH2 0xDEAD PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x181B PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2BAE JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1836 PUSH2 0x1830 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18DA JUMPI PUSH2 0x1849 PUSH2 0x1852 SWAP6 DUP12 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x189E JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1884 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1899 PUSH2 0x1890 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D5 PUSH2 0x18CE PUSH2 0x18B6 PUSH2 0x18B1 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C8 PUSH2 0x18C3 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18F3 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x193A SWAP1 PUSH2 0x1934 PUSH2 0x1925 PUSH2 0x191E PUSH2 0x190F DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1918 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192E DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2AAE JUMP JUMPDEST SWAP9 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1961 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1967 JUMPI JUMPDEST PUSH2 0x1959 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1785 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1994 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x199A JUMPI JUMPDEST PUSH2 0x198C DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1982 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D4 SWAP1 PUSH2 0x19CF PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19E1 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A06 PUSH2 0x1A0B SWAP2 PUSH2 0x19FE PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A21 SWAP3 SWAP2 PUSH2 0x1A1C PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1A2D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A2B PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A4D PUSH2 0x1A47 PUSH2 0x1A42 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E33 JUMPI PUSH2 0x1A5A PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A69 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A73 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1ABC PUSH1 0x20 PUSH2 0x1A8A PUSH2 0x1A85 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AB1 PUSH2 0x1A9C ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1E00 JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B19 PUSH1 0x20 PUSH2 0x1AE7 PUSH2 0x1AE2 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0E PUSH2 0x1AF9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1B02 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DCD JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3F PUSH2 0x1B3A ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST SWAP7 PUSH2 0x1B7A PUSH2 0x1B4E DUP3 DUP5 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP6 PUSH2 0x1B75 PUSH2 0x1B6E PUSH2 0x1B67 PUSH2 0x1B60 PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8F PUSH2 0x1B89 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DB2 JUMPI JUMPDEST PUSH2 0x1D95 JUMPI PUSH2 0x1BEE PUSH2 0x1BE9 PUSH2 0x1C20 SWAP7 PUSH2 0x1BB9 PUSH1 0x20 SWAP5 PUSH2 0x1BB4 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1BCF DUP14 PUSH2 0x1BC6 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0x1BE4 PUSH2 0x1BDB DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C15 PUSH2 0x1C00 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C09 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1C4C PUSH2 0x1C47 PUSH2 0x1C7E SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D63 JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C73 PUSH2 0x1C5E ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C67 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH2 0x1C9D SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D30 JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1CF4 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CDA PUSH2 0x1CD4 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEF PUSH2 0x1CE6 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D2B PUSH2 0x1D24 PUSH2 0x1D0C PUSH2 0x1D07 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1E PUSH2 0x1D19 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1D51 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D57 JUMPI JUMPDEST PUSH2 0x1D49 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C94 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D83 SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D89 JUMPI JUMPDEST PUSH2 0x1D7B DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C40 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAE PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC7 PUSH2 0x1DC1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1DEE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF4 JUMPI JUMPDEST PUSH2 0x1DE6 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B2C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DDC JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E21 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E27 JUMPI JUMPDEST PUSH2 0x1E19 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E4C PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E6A SWAP1 PUSH2 0x1E5C PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E64 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E81 PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 SWAP2 PUSH2 0x1E90 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E99 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EB0 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EE3 SWAP2 PUSH2 0x1ED9 PUSH2 0x1EDE SWAP3 PUSH2 0x1ED1 PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEE PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1EF6 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x1EFE PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x20 PUSH2 0x1F1F PUSH2 0x1F1A PUSH2 0x1F15 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F46 PUSH2 0x1F31 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F3A PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x204B JUMPI PUSH2 0x1FB6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x201D JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F84 PUSH2 0x1F7F PUSH2 0x1F7A PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FAB PUSH2 0x1F96 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2018 JUMPI PUSH2 0x1FE8 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FEA JUMPI JUMPDEST POP PUSH2 0x1FD7 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FE2 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2464 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x200B SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2011 JUMPI JUMPDEST PUSH2 0x2003 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FCC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2044 JUMPI JUMPDEST PUSH2 0x2036 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F67 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x202C JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2058 PUSH2 0x1EE6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2071 PUSH2 0x206C PUSH2 0x2076 SWAP3 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2083 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2090 PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A9 PUSH2 0x20A3 PUSH2 0x209E PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20C2 JUMPI PUSH2 0x20C0 PUSH2 0x20B9 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20DB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F6 PUSH2 0x20F1 PUSH2 0x20FB SWAP3 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2108 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x211D PUSH2 0x2116 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213F PUSH2 0x213A PUSH2 0x2144 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2169 SWAP3 SWAP5 SWAP4 PUSH2 0x2162 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21B2 PUSH2 0x21B7 SWAP4 PUSH2 0x21A3 PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x218A PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x212B JUMP JUMPDEST SWAP3 PUSH2 0x2193 PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C73 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21D0 PUSH2 0x21CB PUSH2 0x21D5 SWAP3 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E4 PUSH2 0x21EA SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F5 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220E PUSH2 0x2209 PUSH2 0x2213 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2222 PUSH2 0x2228 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2238 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2251 PUSH2 0x224C PUSH2 0x2256 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x226D PUSH2 0x2268 PUSH2 0x2272 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2294 PUSH2 0x228F PUSH2 0x2299 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A8 PUSH2 0x22AE SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22D2 PUSH2 0x22CD PUSH2 0x22D7 SWAP3 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EE PUSH2 0x22E9 PUSH2 0x22F3 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2305 PUSH2 0x230B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2316 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232F PUSH2 0x232A PUSH2 0x2334 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2350 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236E PUSH2 0x2369 PUSH2 0x2373 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238E PUSH2 0x2389 PUSH2 0x2395 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2337 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23BB PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2399 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23DA PUSH2 0x23D5 PUSH2 0x23E1 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F7 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2415 PUSH2 0x2410 PUSH2 0x241A SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2435 PUSH2 0x2430 PUSH2 0x243C SWAP3 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x241D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2462 SWAP3 SWAP5 SWAP4 PUSH2 0x245B PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2487 PUSH2 0x2481 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2673 JUMPI JUMPDEST PUSH2 0x2656 JUMPI PUSH2 0x2523 SWAP4 PUSH2 0x2510 PUSH2 0x2509 PUSH2 0x251C SWAP5 PUSH2 0x2515 SWAP5 PUSH2 0x24C5 PUSH2 0x24C0 TIMESTAMP PUSH2 0x24BA PUSH5 0x100000000 PUSH2 0x21BC JUMP JUMPDEST SWAP1 PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST SWAP8 PUSH2 0x24DA DUP10 PUSH2 0x24D4 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2216 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EF PUSH2 0x24E9 PUSH1 0x0 PUSH2 0x223D JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x263A JUMPI JUMPDEST DUP1 PUSH2 0x261E JUMPI JUMPDEST PUSH2 0x2572 JUMPI JUMPDEST POP POP POP PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x252D PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2537 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x256D PUSH2 0x2564 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2440 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2616 SWAP3 PUSH2 0x25FA PUSH2 0x25F4 PUSH2 0x25EF DUP5 PUSH2 0x25E9 PUSH2 0x25E3 PUSH2 0x260F SWAP9 PUSH2 0x25DE PUSH2 0x25D7 PUSH2 0x25C8 PUSH2 0x25B9 PUSH2 0x25B4 PUSH2 0x25A5 PUSH2 0x2600 SWAP15 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x25AE DUP8 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x25C2 DUP13 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25D2 PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xA PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2D87 JUMP JUMPDEST SWAP2 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST SWAP2 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x260A PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xB PUSH2 0x166A JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2501 JUMP JUMPDEST POP DUP1 PUSH2 0x2633 PUSH2 0x262D PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24FC JUMP JUMPDEST POP DUP2 PUSH2 0x264F PUSH2 0x2649 PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266F PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2695 PUSH2 0x268F PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248F JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A8 PUSH2 0x269B JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26BB SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E7 PUSH2 0x26EE SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26DD PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26FB SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x270C DUP2 DUP4 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2722 PUSH2 0x271C PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272F JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x2742 PUSH2 0x273C DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2769 JUMPI PUSH2 0x2760 SWAP4 SWAP5 PUSH2 0x2757 SWAP2 SWAP4 SWAP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2728 JUMP JUMPDEST POP PUSH2 0x2789 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x27A1 PUSH2 0x279C PUSH2 0x27A6 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x27B2 SWAP1 PUSH2 0x278D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x27D2 PUSH2 0x27CC PUSH2 0x27C7 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x282F JUMPI DUP2 PUSH2 0x27F3 PUSH2 0x27ED PUSH2 0x27E8 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2806 JUMPI PUSH2 0x2804 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x282B PUSH2 0x2813 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2854 PUSH2 0x283C PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2861 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x286D SWAP1 PUSH2 0x2858 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2879 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2889 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x28A5 JUMPI PUSH2 0x28A2 SWAP2 PUSH1 0x0 ADD PUSH2 0x287C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x28C1 PUSH2 0x28BC PUSH2 0x28C6 SWAP3 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28D3 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x2909 PUSH1 0x20 PUSH2 0x28F3 PUSH2 0x28EE PUSH2 0x28E9 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x2870 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x2901 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x2919 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2AA9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x294A PUSH2 0x2944 PUSH2 0x293F PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x2957 PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A40 JUMPI DUP3 PUSH2 0x2974 PUSH2 0x296E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2981 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x29A3 PUSH2 0x29A8 SWAP2 PUSH2 0x299D PUSH2 0x2997 PUSH2 0x29AE SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST SWAP2 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x29C2 PUSH2 0x29BC DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29CE JUMPI JUMPDEST DUP1 PUSH2 0x297A JUMP JUMPDEST PUSH2 0x2A0A PUSH2 0x2A10 SWAP3 PUSH2 0x2A05 PUSH2 0x29F4 PUSH2 0x29E3 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29EE DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29FF PUSH1 0x5 PUSH2 0x28AD JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x2A24 PUSH2 0x2A1E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A30 JUMPI JUMPDEST DUP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH2 0x2A39 SWAP2 PUSH2 0x2BAE JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2A2A JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A57 PUSH2 0x2A51 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A62 JUMPI JUMPDEST PUSH2 0x297F JUMP JUMPDEST PUSH2 0x2A76 PUSH2 0x2A6F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2A5D JUMP JUMPDEST PUSH2 0x2A9C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2AA2 JUMPI JUMPDEST PUSH2 0x2A94 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288B JUMP JUMPDEST CODESIZE PUSH2 0x292C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2AB7 PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2ACB PUSH2 0x2AC5 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AD8 JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2AFB PUSH2 0x2AF5 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B7C JUMPI POP DUP1 PUSH2 0x2B2C PUSH2 0x2B1C DUP4 PUSH2 0x2B16 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2B26 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B41 PUSH2 0x2B3B DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B75 JUMPI POP PUSH2 0x2B6F PUSH2 0x2B5F DUP3 PUSH2 0x2B5A DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH2 0x2B69 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B91 PUSH2 0x2B8B PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B9C JUMPI JUMPDEST PUSH2 0x2B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA8 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x2B97 JUMP JUMPDEST DUP1 PUSH2 0x2BCA PUSH2 0x2BC4 PUSH2 0x2BBF PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BE7 JUMPI PUSH2 0x2BE5 SWAP2 PUSH2 0x2BDD PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C0C PUSH2 0x2BF4 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C2D PUSH2 0x2C27 PUSH2 0x2C22 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C4A JUMPI PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x2C41 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C6F PUSH2 0x2C57 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C81 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C8A PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2D22 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2CB1 PUSH2 0x2CAB PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2D08 JUMPI POP PUSH2 0x2CC3 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CD7 PUSH2 0x2CD1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CE0 JUMPI POP JUMP JUMPDEST PUSH2 0x2CEC PUSH2 0x2D04 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D1B PUSH2 0x2D15 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D4A PUSH2 0x2D45 PUSH2 0x2D4F SWAP3 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D61 PUSH2 0x2D67 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2275 JUMP JUMPDEST SWAP3 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2D73 DUP4 DUP3 MUL PUSH2 0x2275 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D82 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D9C PUSH2 0x2DAF SWAP2 PUSH2 0x2D96 PUSH2 0x2D2E JUMP JUMPDEST POP PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x2DA9 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D36 JUMP JUMPDEST SWAP1 PUSH2 0x2D52 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DD0 PUSH2 0x2DCA PUSH2 0x2DC5 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E9E JUMPI DUP4 PUSH2 0x2DF1 PUSH2 0x2DEB PUSH2 0x2DE6 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E75 JUMPI PUSH2 0x2E15 DUP4 PUSH2 0x2E10 PUSH2 0x2E09 PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2E1F JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E6A PUSH2 0x2E58 PUSH2 0x2E52 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E61 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2E1A JUMP JUMPDEST PUSH2 0x2E9A PUSH2 0x2E82 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EC3 PUSH2 0x2EAB PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2ED2 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EF4 PUSH2 0x2EEE PUSH2 0x2EE9 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FD9 JUMPI PUSH2 0x2F19 PUSH2 0x2F12 DUP4 PUSH2 0x2F0D PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F36 PUSH2 0x2F30 PUSH2 0x2F2B PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAC JUMPI PUSH2 0x2F5B PUSH2 0x2F54 DUP4 PUSH2 0x2F4F PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2FA7 PUSH2 0x2F95 PUSH2 0x2F8F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F9E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FD4 DUP3 PUSH2 0x2FCE PUSH2 0x2FBF PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 PUSH2 0x2FC9 DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2EC7 JUMP JUMPDEST SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x2FED PUSH2 0x2FE8 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x3000 PUSH2 0x2FFA DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x3029 JUMPI PUSH2 0x3013 PUSH2 0x3024 SWAP2 DUP5 SWAP1 PUSH2 0x26F0 JUMP JUMPDEST PUSH2 0x301F PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F1A JUMP JUMPDEST SWAP1 PUSH2 0x3048 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST REVERT PREVRANDAO REVERT SGT BLOCKHASH SWAP12 TIMESTAMP SSTORE SHL 0x4E 0xC8 0xD0 0x2C TSTORE 0xD3 MLOAD EXTCODESIZE MOD 0xC8 PUSH15 0x2916DFD23D0310B6DDC88064736F6C PUSH4 0x4300081E STOP CALLER ",
              "sourceMap": "480:12405:12:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;3700:83::-;;3720:14;;:::i;:::-;3736:8;;:::i;:::-;3700:83;;:::i;:::-;3756:20;3766:10;3756:20;;:::i;:::-;3700:83::o;480:12405::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:9:-;1857:1;;;:::i;:::-;1818:40;:::o;1857:1::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2037:52::-;;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;:::-;2037:52::o;480:12405:12:-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;1857:1:9;480:12405:12;1857:1:9;;480:12405:12;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;1582:113:4:-;;1648:13;1671:17;1582:113;1648:13;;:::i;:::-;1671:17;;:::i;:::-;1582:113::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 742,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 491,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 10364,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 1698,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_addresst_addresst_uint256": {
                  "entryPoint": 1491,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_addresst_uint256": {
                  "entryPoint": 1106,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bytes_calldata": {
                  "entryPoint": 521,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 3033,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 1975,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 10379,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 432,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256_fromMemory": {
                  "entryPoint": 3048,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_uint256t_addresst_bytes_calldata": {
                  "entryPoint": 584,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_encodeUpdatedPos_string_storage": {
                  "entryPoint": 4918,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1315,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 8519,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": 9917,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": 1170,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": 1157,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 867,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_memory_ptr": {
                  "entryPoint": 818,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string_storage": {
                  "entryPoint": 4775,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 681,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1328,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint112": {
                  "entryPoint": 964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint112_uint112": {
                  "entryPoint": 9280,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint112_uint112_uint32": {
                  "entryPoint": 999,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 1416,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 1403,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 2181,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256_uint256": {
                  "entryPoint": 3282,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint32": {
                  "entryPoint": 986,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint8": {
                  "entryPoint": 1623,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint8_to_uint8": {
                  "entryPoint": 1610,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "allocate_unbounded": {
                  "entryPoint": 387,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": 4764,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_bytes_calldata": {
                  "entryPoint": 2924,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_length_string": {
                  "entryPoint": 758,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string": {
                  "entryPoint": 4755,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_string_fromStack": {
                  "entryPoint": 762,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 8950,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint224": {
                  "entryPoint": 8860,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 5607,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint224": {
                  "entryPoint": 11602,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 3155,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3118,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint32": {
                  "entryPoint": 8726,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 458,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": 1152,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes4": {
                  "entryPoint": 8479,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": 1250,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint112": {
                  "entryPoint": 5009,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 1796,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint32": {
                  "entryPoint": 5100,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_0_by": {
                  "entryPoint": 2769,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_1_by": {
                  "entryPoint": 8415,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_2_by": {
                  "entryPoint": 8282,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_3_by": {
                  "entryPoint": 3208,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_5192296858534827628530496329220096_by": {
                  "entryPoint": 11571,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_57005_by": {
                  "entryPoint": 5641,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_5_by": {
                  "entryPoint": 10410,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 3239,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 5350,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 2378,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by_1": {
                  "entryPoint": 8633,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint112": {
                  "entryPoint": 945,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 447,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint224": {
                  "entryPoint": 8821,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint32": {
                  "entryPoint": 977,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint8": {
                  "entryPoint": 1604,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_ENTERED": {
                  "entryPoint": 8313,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_MINIMUM_LIQUIDITY": {
                  "entryPoint": 2412,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 8446,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 3270,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IERC20": {
                  "entryPoint": 2912,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IFactory": {
                  "entryPoint": 10340,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_string_storage_to_string": {
                  "entryPoint": 4965,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DexPair_to_address": {
                  "entryPoint": 2952,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": 2940,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IFactory_to_address": {
                  "entryPoint": 10352,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_0_by_1_to_uint256": {
                  "entryPoint": 2772,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1000000_by_1_to_uint256": {
                  "entryPoint": 3242,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1_by_1_to_uint256": {
                  "entryPoint": 8418,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 8285,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_3_by_1_to_uint256": {
                  "entryPoint": 3211,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_5_by_1_to_uint256": {
                  "entryPoint": 10413,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 10153,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint112": {
                  "entryPoint": 8793,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 5644,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint224": {
                  "entryPoint": 11574,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 2384,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint32": {
                  "entryPoint": 8765,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint8": {
                  "entryPoint": 5353,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_address": {
                  "entryPoint": 5672,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint160": {
                  "entryPoint": 10125,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 8636,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint112_to_uint112": {
                  "entryPoint": 9050,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint112_to_uint224": {
                  "entryPoint": 8832,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint112_to_uint256": {
                  "entryPoint": 2800,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 2928,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IERC20": {
                  "entryPoint": 2900,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IFactory": {
                  "entryPoint": 10328,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 2872,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint224_to_uint256": {
                  "entryPoint": 8894,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint112": {
                  "entryPoint": 8987,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 5707,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint32": {
                  "entryPoint": 8698,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint32_to_bytes4": {
                  "entryPoint": 8491,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint32_to_uint256": {
                  "entryPoint": 8922,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint32_to_uint32": {
                  "entryPoint": 9217,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 4931,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 771,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "external_fun_MINIMUM_LIQUIDITY": {
                  "entryPoint": 2437,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_allowance": {
                  "entryPoint": 2628,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_approve": {
                  "entryPoint": 1192,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_balanceOf": {
                  "entryPoint": 2059,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_burn": {
                  "entryPoint": 2217,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_decimals": {
                  "entryPoint": 1645,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_factory": {
                  "entryPoint": 2506,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getReserves": {
                  "entryPoint": 1050,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_initialize": {
                  "entryPoint": 1744,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_kLast": {
                  "entryPoint": 2128,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_mint": {
                  "entryPoint": 2006,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_name": {
                  "entryPoint": 892,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_price0CumulativeLast": {
                  "entryPoint": 1853,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_price1CumulativeLast": {
                  "entryPoint": 1922,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_swap": {
                  "entryPoint": 687,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_symbol": {
                  "entryPoint": 2271,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_sync": {
                  "entryPoint": 2682,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_token0": {
                  "entryPoint": 1350,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_token1": {
                  "entryPoint": 2575,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_totalSupply": {
                  "entryPoint": 1438,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transfer": {
                  "entryPoint": 2324,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferFrom": {
                  "entryPoint": 1550,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 4713,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 1261,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_uint256": {
                  "entryPoint": 1799,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_address": {
                  "entryPoint": 2839,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_t_uint112": {
                  "entryPoint": 5028,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint112": {
                  "entryPoint": 5067,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 5243,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offset_uint32": {
                  "entryPoint": 5109,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2986,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__approve": {
                  "entryPoint": 11698,
                  "id": 692,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun__burn": {
                  "entryPoint": 11280,
                  "id": 614,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__mint": {
                  "entryPoint": 11182,
                  "id": 581,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__transfer": {
                  "entryPoint": 10165,
                  "id": 471,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun__update": {
                  "entryPoint": 9316,
                  "id": 2631,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_allowance": {
                  "entryPoint": 7870,
                  "id": 368,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve": {
                  "entryPoint": 5209,
                  "id": 392,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve_632": {
                  "entryPoint": 9901,
                  "id": 632,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_balanceOf": {
                  "entryPoint": 6639,
                  "id": 327,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_burn": {
                  "entryPoint": 7760,
                  "id": 2260,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "fun_burn_inner": {
                  "entryPoint": 6701,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "fun_callOptionalReturn": {
                  "entryPoint": 11379,
                  "id": 1267,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_decimals": {
                  "entryPoint": 5381,
                  "id": 305,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_encode": {
                  "entryPoint": 11655,
                  "id": 2830,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_getReserves": {
                  "entryPoint": 5142,
                  "id": 1920,
                  "parameterSlots": 0,
                  "returnSlots": 3
                },
                "fun_initialize": {
                  "entryPoint": 5471,
                  "id": 1897,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_min": {
                  "entryPoint": 10926,
                  "id": 2809,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_mint": {
                  "entryPoint": 6595,
                  "id": 2074,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_mintFee": {
                  "entryPoint": 10441,
                  "id": 2736,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_mint_inner": {
                  "entryPoint": 5770,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_msgSender": {
                  "entryPoint": 9888,
                  "id": 1321,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_name": {
                  "entryPoint": 4977,
                  "id": 287,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_nonReentrantAfter": {
                  "entryPoint": 8459,
                  "id": 1396,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 8326,
                  "id": 1388,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_safeTransfer": {
                  "entryPoint": 8555,
                  "id": 890,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_spendAllowance": {
                  "entryPoint": 9982,
                  "id": 740,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_sqrt": {
                  "entryPoint": 10975,
                  "id": 2791,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_swap": {
                  "entryPoint": 4671,
                  "id": 2488,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_swap_inner": {
                  "entryPoint": 3345,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_symbol": {
                  "entryPoint": 7790,
                  "id": 296,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_sync": {
                  "entryPoint": 8272,
                  "id": 2518,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_sync_inner": {
                  "entryPoint": 7936,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_totalSupply": {
                  "entryPoint": 5276,
                  "id": 314,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 7812,
                  "id": 351,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transferFrom": {
                  "entryPoint": 5298,
                  "id": 424,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_update": {
                  "entryPoint": 11989,
                  "id": 548,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "getter_fun_MINIMUM_LIQUIDITY": {
                  "entryPoint": 2426,
                  "id": 1768,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_factory": {
                  "entryPoint": 2490,
                  "id": 1771,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_kLast": {
                  "entryPoint": 2112,
                  "id": 1792,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_price0CumulativeLast": {
                  "entryPoint": 1837,
                  "id": 1787,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_price1CumulativeLast": {
                  "entryPoint": 1906,
                  "id": 1789,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_token0": {
                  "entryPoint": 1299,
                  "id": 1774,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_token1": {
                  "entryPoint": 2559,
                  "id": 1777,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 2381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_mapping_address_uint256__of_address": {
                  "entryPoint": 7846,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_uint256_of_address": {
                  "entryPoint": 6615,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_uint256": {
                  "entryPoint": 8664,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant": {
                  "entryPoint": 5556,
                  "id": 1372,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_nonReentrant_2080": {
                  "entryPoint": 6670,
                  "id": 1372,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "modifier_nonReentrant_2272": {
                  "entryPoint": 2738,
                  "id": 1372,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "modifier_nonReentrant_2492": {
                  "entryPoint": 7910,
                  "id": 1372,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 3096,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 5585,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x22": {
                  "entryPoint": 4691,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2964,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": 5436,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint112": {
                  "entryPoint": 9078,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": 5735,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint32": {
                  "entryPoint": 9245,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 1285,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_uint256": {
                  "entryPoint": 1823,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 2859,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_t_uint112": {
                  "entryPoint": 5087,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint112": {
                  "entryPoint": 5048,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 5263,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint32": {
                  "entryPoint": 5129,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
                  "entryPoint": 511,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 506,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 2733,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": 516,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 403,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 393,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 398,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 3079,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 808,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 5403,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_112": {
                  "entryPoint": 9113,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 3027,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 2833,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_112_unsigned": {
                  "entryPoint": 5061,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 381,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 1246,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_14_shift": {
                  "entryPoint": 9015,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_20_shift": {
                  "entryPoint": 5409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 9189,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 5684,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_14": {
                  "entryPoint": 9119,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_address_to_address": {
                  "entryPoint": 5439,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_t_uint112_to_t_uint112": {
                  "entryPoint": 9081,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint112_to_uint112": {
                  "entryPoint": 9157,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 5738,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint32_to_uint32": {
                  "entryPoint": 9248,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 470,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 411,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "wrapping_add_uint256": {
                  "entryPoint": 11975,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "wrapping_sub_uint256": {
                  "entryPoint": 9968,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "zero_value_for_split_address": {
                  "entryPoint": 9883,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": 5204,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_string": {
                  "entryPoint": 4686,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint112": {
                  "entryPoint": 4999,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint224": {
                  "entryPoint": 11566,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 2828,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint32": {
                  "entryPoint": 5004,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint8": {
                  "entryPoint": 5345,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610013575b610aad565b61001e60003561017d565b8063022c0d9f1461017857806306fdde03146101735780630902f1ac1461016e578063095ea7b3146101695780630dfe16811461016457806318160ddd1461015f57806323b872dd1461015a578063313ce56714610155578063485cc955146101505780635909c0d51461014b5780635a3d5493146101465780636a6278421461014157806370a082311461013c5780637464fc3d1461013757806389afcb441461013257806395d89b411461012d578063a9059cbb14610128578063ba9a7a5614610123578063c45a01551461011e578063d21220a714610119578063dd62ed3e146101145763fff6cae90361000e57610a7a565b610a44565b610a0f565b6109ca565b610985565b610914565b6108df565b6108a9565b610850565b61080b565b6107d6565b610782565b61073d565b6106d0565b61066d565b61060e565b61059e565b610546565b6104a8565b61041a565b61037c565b6102af565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6101a481610198565b036101ab57565b600080fd5b905035906101bd8261019b565b565b60018060a01b031690565b6101d3906101bf565b90565b6101df816101ca565b036101e657565b600080fd5b905035906101f8826101d6565b565b600080fd5b600080fd5b600080fd5b909182601f830112156102435781359167ffffffffffffffff831161023e57602001926001830284011161023957565b610204565b6101ff565b6101fa565b906080828203126102a45761026081600084016101b0565b9261026e82602085016101b0565b9261027c83604083016101eb565b92606082013567ffffffffffffffff811161029f5761029b9201610209565b9091565b610193565b61018e565b60000190565b346102e1576102cb6102c2366004610248565b9392909261123f565b6102d3610183565b806102dd816102a9565b0390f35b610189565b60009103126102f157565b61018e565b5190565b60209181520190565b60005b838110610317575050906000910152565b806020918301518185015201610306565b601f801991011690565b61035161035a60209361035f93610348816102f6565b938480936102fa565b95869101610303565b610328565b0190565b6103799160208201916000818403910152610332565b90565b346103ac5761038c3660046102e6565b6103a8610397611371565b61039f610183565b91829182610363565b0390f35b610189565b6dffffffffffffffffffffffffffff1690565b6103cd906103b1565b9052565b63ffffffff1690565b6103e3906103d1565b9052565b6040906104116104189496959396610407606084019860008501906103c4565b60208301906103c4565b01906103da565b565b3461044d5761042a3660046102e6565b610449610435611416565b610440939193610183565b938493846103e7565b0390f35b610189565b919060408382031261047b578061046f61047892600086016101eb565b936020016101b0565b90565b61018e565b151590565b61048e90610480565b9052565b91906104a690600060208501940190610485565b565b346104d9576104d56104c46104be366004610452565b90611459565b6104cc610183565b91829182610492565b0390f35b610189565b1c90565b60018060a01b031690565b6104fd90600861050293026104de565b6104e2565b90565b9061051091546104ed565b90565b6105206007600090610505565b90565b61052c906101ca565b9052565b919061054490600060208501940190610523565b565b34610576576105563660046102e6565b610572610561610513565b610569610183565b91829182610530565b0390f35b610189565b61058490610198565b9052565b919061059c9060006020850194019061057b565b565b346105ce576105ae3660046102e6565b6105ca6105b961149c565b6105c1610183565b91829182610588565b0390f35b610189565b9091606082840312610609576106066105ef84600085016101eb565b936105fd81602086016101eb565b936040016101b0565b90565b61018e565b3461063f5761063b61062a6106243660046105d3565b916114b2565b610632610183565b91829182610492565b0390f35b610189565b60ff1690565b61065390610644565b9052565b919061066b9060006020850194019061064a565b565b3461069d5761067d3660046102e6565b610699610688611505565b610690610183565b91829182610657565b0390f35b610189565b91906040838203126106cb57806106bf6106c892600086016101eb565b936020016101eb565b90565b61018e565b346106ff576106e96106e33660046106a2565b9061155f565b6106f1610183565b806106fb816102a9565b0390f35b610189565b90565b61071790600861071c93026104de565b610704565b90565b9061072a9154610707565b90565b61073a600a60009061071f565b90565b3461076d5761074d3660046102e6565b61076961075861072d565b610760610183565b91829182610588565b0390f35b610189565b61077f600b60009061071f565b90565b346107b2576107923660046102e6565b6107ae61079d610772565b6107a5610183565b91829182610588565b0390f35b610189565b906020828203126107d1576107ce916000016101eb565b90565b61018e565b34610806576108026107f16107ec3660046107b7565b6119c3565b6107f9610183565b91829182610588565b0390f35b610189565b3461083b576108376108266108213660046107b7565b6119ef565b61082e610183565b91829182610588565b0390f35b610189565b61084d600c60009061071f565b90565b34610880576108603660046102e6565b61087c61086b610840565b610873610183565b91829182610588565b0390f35b610189565b9160206108a79294936108a06040820196600083019061057b565b019061057b565b565b346108da576108c16108bc3660046107b7565b611e50565b906108d66108cd610183565b92839283610885565b0390f35b610189565b3461090f576108ef3660046102e6565b61090b6108fa611e6e565b610902610183565b91829182610363565b0390f35b610189565b346109455761094161093061092a366004610452565b90611e84565b610938610183565b91829182610492565b0390f35b610189565b90565b90565b61096461095f6109699261094a565b61094d565b610198565b90565b6109776103e8610950565b90565b61098261096c565b90565b346109b5576109953660046102e6565b6109b16109a061097a565b6109a8610183565b91829182610588565b0390f35b610189565b6109c76006600090610505565b90565b346109fa576109da3660046102e6565b6109f66109e56109ba565b6109ed610183565b91829182610530565b0390f35b610189565b610a0c6008600090610505565b90565b34610a3f57610a1f3660046102e6565b610a3b610a2a6109ff565b610a32610183565b91829182610530565b0390f35b610189565b34610a7557610a71610a60610a5a3660046106a2565b90611ebe565b610a68610183565b91829182610588565b0390f35b610189565b34610aa857610a8a3660046102e6565b610a92612050565b610a9a610183565b80610aa4816102a9565b0390f35b610189565b600080fd5b90610ac794939291610ac2612086565b610d11565b610acf61210b565b565b90565b610ae8610ae3610aed92610ad1565b61094d565b610198565b90565b610b04610aff610b09926103b1565b61094d565b610198565b90565b600090565b60001c90565b610b23610b2891610b11565b6104e2565b90565b610b359054610b17565b90565b610b4c610b47610b51926101bf565b61094d565b6101bf565b90565b610b5d90610b38565b90565b610b6990610b54565b90565b5090565b610b7990610b38565b90565b610b8590610b70565b90565b610b9190610b70565b90565b634e487b7160e01b600052604160045260246000fd5b90610bb490610328565b810190811067ffffffffffffffff821117610bce57604052565b610b94565b60e01b90565b90505190610be68261019b565b565b90602082820312610c0257610bff91600001610bd9565b90565b61018e565b610c0f610183565b3d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b610c3d610c4391939293610198565b92610198565b8203918211610c4e57565b610c18565b610c62610c6891939293610198565b92610198565b91610c74838202610198565b928184041490151715610c8357565b610c18565b90565b610c9f610c9a610ca492610c88565b61094d565b610198565b90565b90565b610cbe610cb9610cc392610ca7565b61094d565b610198565b90565b610ccf90610b70565b90565b610d08610d0f94610cfe606094989795610cf4608086019a600087019061057b565b602085019061057b565b604083019061057b565b019061057b565b565b9093919281610d29610d236000610ad4565b91610198565b1480611224575b61120757610d3c611416565b509190919383610d54610d4e85610af0565b91610198565b101580156111ec575b6111cf57610d69610b0c565b50610d72610b0c565b50610d7d6007610b2b565b610d876008610b2b565b9287610d9b610d95846101ca565b916101ca565b1480156111b5575b61119857610e13602092610df5610e4a95610e18948a610dcc610dc66000610ad4565b91610198565b1161117e575b8d8d81610de8610de26000610ad4565b91610198565b11611162575b5050610b6c565b610e08610e026000610ad4565b91610198565b1161115d575b610b60565b610b7c565b6370a0823190610e3f610e2a30610b88565b92610e33610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561115857610e76610e71610ea89360209360009161112b575b5094610b60565b610b7c565b6370a0823190610e9d610e8830610b88565b92610e91610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611126576000916110f8575b5081610ee1610edb610ed686610ed18991610af0565b610c2e565b610198565b91610198565b116000146110e957610f0682610f0085610efb8891610af0565b610c2e565b90610c2e565b5b9481610f2d610f27610f2284610f1d8d91610af0565b610c2e565b610198565b91610198565b116000146110da57610f5282610f4c83610f478c91610af0565b610c2e565b90610c2e565b5b9386610f68610f626000610ad4565b91610198565b14806110bf575b6110a257610fe0610fa8610f8e86610f886103e8610950565b90610c53565b610fa28a610f9c6003610c8b565b90610c53565b90610c2e565b610fda610fc086610fba6103e8610950565b90610c53565b610fd489610fce6003610c8b565b90610c53565b90610c2e565b90610c53565b61102161101b611016611004610ff586610af0565b610ffe88610af0565b90610c53565b611010620f4240610caa565b90610c53565b610198565b91610198565b10611085576110339392909192612464565b611080339391929561106e6110687fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82296610cc6565b96610cc6565b96611077610183565b94859485610cd2565b0390a3565b6000632f62f0d960e21b81528061109e600482016102a9565b0390fd5b600063098fb56160e01b8152806110bb600482016102a9565b0390fd5b50846110d46110ce6000610ad4565b91610198565b14610f6f565b6110e46000610ad4565b610f53565b6110f36000610ad4565b610f07565b611119915060203d811161111f575b6111118183610baa565b810190610be8565b38610ebb565b503d611107565b610c07565b61114b9150843d8111611151575b6111438183610baa565b810190610be8565b38610e6a565b503d611139565b610c07565b610e0e565b6111779161116f8c610b60565b91909161216b565b8d8d610dee565b6111938d61118b86610b60565b908d9161216b565b610dd2565b6000630521f43160e31b8152806111b1600482016102a9565b0390fd5b50876111c96111c3866101ca565b916101ca565b14610da3565b600063bb55fd2760e01b8152806111e8600482016102a9565b0390fd5b50866112006111fa87610af0565b91610198565b1015610d5d565b60006342301c2360e01b815280611220600482016102a9565b0390fd5b50846112396112336000610ad4565b91610198565b14610d30565b9061124c94939291610ab2565b565b606090565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015611289575b602083101461128457565b611253565b91607f1691611279565b60209181520190565b600052602060002090565b90600092918054906112c26112bb83611269565b8094611293565b9160018116908160001461131b57506001146112de575b505050565b6112eb919293945061129c565b916000925b81841061130357505001903880806112d9565b600181602092959395548486015201910192906112f0565b92949550505060ff19168252151560200201903880806112d9565b90611340916112a7565b90565b9061136361135c92611353610183565b93848092611336565b0383610baa565b565b61136e90611343565b90565b61137961124e565b506113846003611365565b90565b600090565b600090565b6dffffffffffffffffffffffffffff1690565b6113b06113b591610b11565b611391565b90565b6113c290546113a4565b90565b60701c90565b6113d76113dc916113c5565b611391565b90565b6113e990546113cb565b90565b63ffffffff1690565b6114016114069161017d565b6113ec565b90565b61141390546113f5565b90565b61141e611387565b50611427611387565b5061143061138c565b5061143b60096113b8565b9061144660096113df565b906114516009611409565b90565b600090565b61147691611465611454565b5061146e6126a0565b9190916126ad565b600190565b61148761148c91610b11565b610704565b90565b611499905461147b565b90565b6114a4610b0c565b506114af600261148f565b90565b916114dc926114bf611454565b506114d46114cb6126a0565b829084916126fe565b9190916127b5565b600190565b600090565b90565b6114fd6114f8611502926114e6565b61094d565b610644565b90565b61150d6114e1565b5061151860126114e9565b90565b60001b90565b9061153260018060a01b039161151b565b9181191691161790565b90565b9061155461154f61155b92610cc6565b61153c565b8254611521565b9055565b903361157c6115766115716006610b2b565b6101ca565b916101ca565b036115985761158f61159692600761153f565b600861153f565b565b60006282b42960e81b8152806115b0600482016102a9565b0390fd5b906115c6916115c1612086565b61168a565b906115cf61210b565b565b634e487b7160e01b600052601260045260246000fd5b6115f36115f991610198565b91610198565b908115611604570490565b6115d1565b90565b61162061161b61162592611609565b61094d565b6101bf565b90565b6116319061160c565b90565b906116416000199161151b565b9181191691161790565b61165f61165a61166492610198565b61094d565b610198565b90565b90565b9061167f61167a6116869261164b565b611667565b8254611634565b9055565b91909150816116a96116a361169e30610b88565b6101ca565b916101ca565b146119a6576116b6611416565b509290929061170c60206116da6116d56116d06007610b2b565b610b60565b610b7c565b6370a08231906117016116ec30610b88565b926116f5610183565b95869485938493610bd3565b835260048301610530565b03915afa9081156119a157600091611973575b5093611772602061174061173b6117366008610b2b565b610b60565b610b7c565b6370a082319061176761175230610b88565b9261175b610183565b95869485938493610bd3565b835260048301610530565b03915afa90811561196e57600091611940575b509161179a8661179484610af0565b90610c2e565b926117ae816117a887610af0565b90610c2e565b946117ba8482906128c9565b936117c361149c565b806117d76117d16000610ad4565b91610198565b146000146118f757506118046117f66117f1888a90610c53565b612adf565b6117fe61096c565b90610c2e565b9861182161181361dead611628565b61181b61096c565b90612bae565b5b896118366118306000610ad4565b91610198565b146118da57611849611852958b90612bae565b92909192612464565b61189e575b3390916118847f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f92610cc6565b92611899611890610183565b92839283610885565b0390a2565b6118d56118ce6118b66118b160096113b8565b610af0565b6118c86118c360096113df565b610af0565b90610c53565b600c61166a565b611857565b600063bb55fd2760e01b8152806118f3600482016102a9565b0390fd5b61193a9061193461192561191e61190f8b8590610c53565b61191887610af0565b906115e7565b928b610c53565b61192e86610af0565b906115e7565b90612aae565b98611822565b611961915060203d8111611967575b6119598183610baa565b810190610be8565b38611785565b503d61194f565b610c07565b611994915060203d811161199a575b61198c8183610baa565b810190610be8565b3861171f565b503d611982565b610c07565b6000630521f43160e31b8152806119bf600482016102a9565b0390fd5b6119d4906119cf610b0c565b6115b4565b90565b906119e190610cc6565b600052602052604060002090565b611a06611a0b916119fe610b0c565b5060006119d7565b61148f565b90565b90611a219291611a1c612086565b611a2d565b9091611a2b61210b565b565b929192505081611a4d611a47611a4230610b88565b6101ca565b916101ca565b14611e3357611a5a611416565b5091909192611a696007610b2b565b611a736008610b2b565b90611abc6020611a8a611a8584610b60565b610b7c565b6370a0823190611ab1611a9c30610b88565b92611aa5610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611e2e57600091611e00575b5091611b196020611ae7611ae284610b60565b610b7c565b6370a0823190611b0e611af930610b88565b92611b02610183565b95869485938493610bd3565b835260048301610530565b03915afa908115611dfb57600091611dcd575b5096611b3f611b3a30610b88565b6119ef565b96611b7a611b4e8284906128c9565b95611b75611b6e611b67611b6061149c565b938d610c53565b83906115e7565b9b8b610c53565b6115e7565b9789611b8f611b896000610ad4565b91610198565b148015611db2575b611d9557611bee611be9611c2096611bb9602094611bb430610b88565b612c10565b611bcf8d611bc683610b60565b908c909161216b565b611be4611bdb88610b60565b8d8c909161216b565b610b60565b610b7c565b6370a0823190611c15611c0030610b88565b92611c09610183565b98899485938493610bd3565b835260048301610530565b03915afa938415611d9057611c4c611c47611c7e96602093600091611d63575b5095610b60565b610b7c565b6370a0823190611c73611c5e30610b88565b92611c67610183565b98899485938493610bd3565b835260048301610530565b03915afa8015611d5e57611c9d94600091611d30575b50909192612464565b611cf4575b3390849184611cda611cd47fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649693610cc6565b93610cc6565b93611cef611ce6610183565b92839283610885565b0390a3565b611d2b611d24611d0c611d0760096113b8565b610af0565b611d1e611d1960096113df565b610af0565b90610c53565b600c61166a565b611ca2565b611d51915060203d8111611d57575b611d498183610baa565b810190610be8565b38611c94565b503d611d3f565b610c07565b611d839150843d8111611d89575b611d7b8183610baa565b810190610be8565b38611c40565b503d611d71565b610c07565b600063749383ad60e01b815280611dae600482016102a9565b0390fd5b5088611dc7611dc16000610ad4565b91610198565b14611b97565b611dee915060203d8111611df4575b611de68183610baa565b810190610be8565b38611b2c565b503d611ddc565b610c07565b611e21915060203d8111611e27575b611e198183610baa565b810190610be8565b38611acf565b503d611e0f565b610c07565b6000630521f43160e31b815280611e4c600482016102a9565b0390fd5b611e6a90611e5c610b0c565b611e64610b0c565b90611a0e565b9091565b611e7661124e565b50611e816004611365565b90565b611ea191611e90611454565b50611e996126a0565b9190916127b5565b600190565b90611eb090610cc6565b600052602052604060002090565b611ee391611ed9611ede92611ed1610b0c565b506001611ea6565b6119d7565b61148f565b90565b611eee612086565b611ef6611f00565b611efe61210b565b565b611f516020611f1f611f1a611f156007610b2b565b610b60565b610b7c565b6370a0823190611f46611f3130610b88565b92611f3a610183565b95869485938493610bd3565b835260048301610530565b03915afa801561204b57611fb69160009161201d575b506020611f84611f7f611f7a6008610b2b565b610b60565b610b7c565b6370a0823190611fab611f9630610b88565b92611f9f610183565b96879485938493610bd3565b835260048301610530565b03915afa801561201857611fe892600091611fea575b50611fd760096113b8565b90611fe260096113df565b92612464565b565b61200b915060203d8111612011575b6120038183610baa565b810190610be8565b38611fcc565b503d611ff9565b610c07565b61203e915060203d8111612044575b6120368183610baa565b810190610be8565b38611f67565b503d61202c565b610c07565b612058611ee6565b565b90565b61207161206c6120769261205a565b61094d565b610198565b90565b612083600261205d565b90565b612090600561148f565b6120a96120a361209e612079565b610198565b91610198565b146120c2576120c06120b9612079565b600561166a565b565b6000633ee5aeb560e01b8152806120db600482016102a9565b0390fd5b90565b6120f66120f16120fb926120df565b61094d565b610198565b90565b61210860016120e2565b90565b61211d6121166120fe565b600561166a565b565b63ffffffff60e01b1690565b61213f61213a612144926103d1565b610bd3565b61211f565b90565b91602061216992949361216260408201966000830190610523565b019061057b565b565b906121b26121b7936121a36004949361218a63a9059cbb91939161212b565b92612193610183565b9687946020860190815201612147565b60208201810382520383610baa565b612c73565b565b90565b6121d06121cb6121d5926121b9565b61094d565b610198565b90565b6121e46121ea91610198565b91610198565b9081156121f5570690565b6115d1565b61220e61220961221392610198565b61094d565b6103d1565b90565b612222612228916103d1565b916103d1565b90039063ffffffff821161223857565b610c18565b61225161224c61225692610ad1565b61094d565b6103d1565b90565b61226d61226861227292610ad1565b61094d565b6103b1565b90565b60018060e01b031690565b61229461228f612299926103b1565b61094d565b612275565b90565b6122a86122ae91612275565b91612275565b9081156122b9570490565b6115d1565b6122d26122cd6122d792612275565b61094d565b610198565b90565b6122ee6122e96122f3926103d1565b61094d565b610198565b90565b61230561230b91939293610198565b92610198565b820180921161231657565b610c18565b61232f61232a61233492610198565b61094d565b6103b1565b90565b906123506dffffffffffffffffffffffffffff9161151b565b9181191691161790565b61236e612369612373926103b1565b61094d565b6103b1565b90565b90565b9061238e6123896123959261235a565b612376565b8254612337565b9055565b60701b90565b906123bb6dffffffffffffffffffffffffffff60701b91612399565b9181191691161790565b906123da6123d56123e19261235a565b612376565b825461239f565b9055565b906123f763ffffffff60e01b91610bd3565b9181191691161790565b61241561241061241a926103d1565b61094d565b6103d1565b90565b90565b9061243561243061243c92612401565b61241d565b82546123e5565b9055565b91602061246292949361245b604082019660008301906103c4565b01906103c4565b565b9092816124876124816dffffffffffffffffffffffffffff610af0565b91610198565b118015612673575b612656576125239361251061250961251c94612515946124c56124c0426124ba6401000000006121bc565b906121d8565b6121fa565b976124da896124d46009611409565b90612216565b91826124ef6124e9600061223d565b916103d1565b118061263a575b8061261e575b612572575b50505061231b565b6009612379565b61231b565b60096123c5565b6009612420565b61252d60096113b8565b61253760096113df565b7f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad19161256d612564610183565b92839283612440565b0390a1565b612616926125fa6125f46125ef846125e96125e361260f986125de6125d76125c86125b96125b46125a56126009e612d87565b6125ae87612280565b9061229c565b6122be565b6125c28c6122da565b90610c53565b6125d2600a61148f565b6122f6565b600a61166a565b612d87565b91612280565b9061229c565b6122be565b916122da565b90610c53565b61260a600b61148f565b6122f6565b600b61166a565b388080612501565b508061263361262d6000612259565b916103b1565b14156124fc565b508161264f6126496000612259565b916103b1565b14156124f6565b6000631a93c68960e11b81528061266f600482016102a9565b0390fd5b508361269561268f6dffffffffffffffffffffffffffff610af0565b91610198565b1161248f565b600090565b6126a861269b565b503390565b916126bb9291600192612db2565b565b6040906126e76126ee94969593966126dd60608401986000850190610523565b602083019061057b565b019061057b565b565b906126fb9103610198565b90565b92919261270c818390611ebe565b908161272261271c600019610198565b91610198565b1061272f575b5050509050565b8161274261273c87610198565b91610198565b106127695761276093946127579193926126f0565b90600092612db2565b80388080612728565b50612789849291926000938493637dc7a0d960e11b8552600485016126bd565b0390fd5b6127a161279c6127a692610ad1565b61094d565b6101bf565b90565b6127b29061278d565b90565b91826127d26127cc6127c760006127a9565b6101ca565b916101ca565b1461282f57816127f36127ed6127e860006127a9565b6101ca565b916101ca565b146128065761280492919091612ed5565b565b61282b61281360006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b61285461283c60006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b61286190610b38565b90565b61286d90612858565b90565b61287990610b70565b90565b90505190612889826101d6565b565b906020828203126128a5576128a29160000161287c565b90565b61018e565b90565b6128c16128bc6128c6926128aa565b61094d565b610198565b90565b91906128d3611454565b5061290960206128f36128ee6128e96006610b2b565b612864565b612870565b63017e7e5890612901610183565b938492610bd3565b82528180612919600482016102a9565b03915afa908115612aa957600091612a7b575b50908161294a61294461293f60006127a9565b6101ca565b916101ca565b141593612957600c61148f565b9185600014612a40578261297461296e6000610ad4565b91610198565b03612981575b505050505b565b6129a36129a89161299d6129976129ae95610af0565b91610af0565b90610c53565b612adf565b91612adf565b90806129c26129bc84610198565b91610198565b116129ce575b8061297a565b612a0a612a1092612a056129f46129e361149c565b6129ee868590610c2e565b90610c53565b936129ff60056128ad565b90610c53565b6122f6565b906115e7565b80612a24612a1e6000610ad4565b91610198565b11612a30575b806129c8565b612a3991612bae565b3880612a2a565b50509050612a57612a516000610ad4565b91610198565b03612a62575b61297f565b612a76612a6f6000610ad4565b600c61166a565b612a5d565b612a9c915060203d8111612aa2575b612a948183610baa565b81019061288b565b3861292c565b503d612a8a565b610c07565b90612ab7610b0c565b5081612acb612ac583610198565b91610198565b10600014612ad857505b90565b9050612ad5565b612ae7610b0c565b81612afb612af56003610c8b565b91610198565b11600014612b7c575080612b2c612b1c83612b16600261205d565b906115e7565b612b2660016120e2565b906122f6565b905b81612b41612b3b83610198565b91610198565b1015612b755750612b6f612b5f82612b5a8582906115e7565b6122f6565b612b69600261205d565b906115e7565b90612b2e565b929150505b565b9190612b91612b8b6000610ad4565b91610198565b03612b9c575b612b7a565b9050612ba860016120e2565b90612b97565b80612bca612bc4612bbf60006127a9565b6101ca565b916101ca565b14612be757612be591612bdd60006127a9565b919091612ed5565b565b612c0c612bf460006127a9565b600091829163ec442f0560e01b835260048301610530565b0390fd5b9081612c2d612c27612c2260006127a9565b6101ca565b916101ca565b14612c4a57612c489190612c4160006127a9565b9091612ed5565b565b612c6f612c5760006127a9565b6000918291634b637e8f60e11b835260048301610530565b0390fd5b906000602091612c81610b0c565b50612c8a610b0c565b50828151910182855af115612d22573d60005190612cb1612cab6000610ad4565b91610198565b14600014612d085750612cc381610b7c565b3b612cd7612cd16000610ad4565b91610198565b145b612ce05750565b612cec612d0491610b7c565b6000918291635274afe760e01b835260048301610530565b0390fd5b612d1b612d1560016120e2565b91610198565b1415612cd9565b6040513d6000823e3d90fd5b600090565b90565b612d4a612d45612d4f92612d33565b61094d565b612275565b90565b612d61612d6791939293612275565b92612275565b91612d73838202612275565b928184041490151715612d8257565b610c18565b612d9c612daf91612d96612d2e565b50612280565b612da9600160701b612d36565b90612d52565b90565b909281612dd0612dca612dc560006127a9565b6101ca565b916101ca565b14612e9e5783612df1612deb612de660006127a9565b6101ca565b916101ca565b14612e7557612e1583612e10612e0960018690611ea6565b87906119d7565b61166a565b612e1f575b505050565b919091612e6a612e58612e527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610cc6565b93610cc6565b93612e61610183565b91829182610588565b0390a3388080612e1a565b612e9a612e8260006127a9565b6000918291634a1406b160e11b835260048301610530565b0390fd5b612ec3612eab60006127a9565b600091829163e602df0560e01b835260048301610530565b0390fd5b90612ed29101610198565b90565b91909180612ef4612eee612ee960006127a9565b6101ca565b916101ca565b14600014612fd957612f19612f1283612f0d600261148f565b6122f6565b600261166a565b5b82612f36612f30612f2b60006127a9565b6101ca565b916101ca565b14600014612fac57612f5b612f5483612f4f600261148f565b6126f0565b600261166a565b5b919091612fa7612f95612f8f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610cc6565b93610cc6565b93612f9e610183565b91829182610588565b0390a3565b612fd482612fce612fbf600087906119d7565b91612fc98361148f565b612ec7565b9061166a565b612f5c565b612fed612fe8600083906119d7565b61148f565b80613000612ffa85610198565b91610198565b10613029576130136130249184906126f0565b61301f600084906119d7565b61166a565b612f1a565b90613048909192600093849363391434e360e21b8552600485016126bd565b0390fdfea26469706673582212205bfd44fd13409b42551b4ec8d02c5dd3513b06c86e2916dfd23d0310b6ddc88064736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0x17D JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x114 JUMPI PUSH4 0xFFF6CAE9 SUB PUSH2 0xE JUMPI PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x782 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1A4 DUP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1BD DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D3 SWAP1 PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1E6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1F8 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x243 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23E JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2A4 JUMPI PUSH2 0x260 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x26E DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 PUSH2 0x27C DUP4 PUSH1 0x40 DUP4 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x29B SWAP3 ADD PUSH2 0x209 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2E1 JUMPI PUSH2 0x2CB PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x248 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x2DD DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x2F1 JUMPI JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x317 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x35A PUSH1 0x20 SWAP4 PUSH2 0x35F SWAP4 PUSH2 0x348 DUP2 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2FA JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x303 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x379 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x332 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3AC JUMPI PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x397 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x39F PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CD SWAP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3E3 SWAP1 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x411 PUSH2 0x418 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x407 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x44D JUMPI PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x435 PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x440 SWAP4 SWAP2 SWAP4 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3E7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x47B JUMPI DUP1 PUSH2 0x46F PUSH2 0x478 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x48E SWAP1 PUSH2 0x480 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4A6 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x4D9 JUMPI PUSH2 0x4D5 PUSH2 0x4C4 PUSH2 0x4BE CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x4CC PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SHR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x4FD SWAP1 PUSH1 0x8 PUSH2 0x502 SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x510 SWAP2 SLOAD PUSH2 0x4ED JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x520 PUSH1 0x7 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x52C SWAP1 PUSH2 0x1CA JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x544 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x576 JUMPI PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x561 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x569 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x584 SWAP1 PUSH2 0x198 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x59C SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x5CE JUMPI PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x5B9 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x609 JUMPI PUSH2 0x606 PUSH2 0x5EF DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH2 0x5FD DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x63F JUMPI PUSH2 0x63B PUSH2 0x62A PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x653 SWAP1 PUSH2 0x644 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x66B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x64A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x699 PUSH2 0x688 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x690 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x657 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6BF PUSH2 0x6C8 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x6FF JUMPI PUSH2 0x6E9 PUSH2 0x6E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0x6FB DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x717 SWAP1 PUSH1 0x8 PUSH2 0x71C SWAP4 MUL PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x72A SWAP2 SLOAD PUSH2 0x707 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x73A PUSH1 0xA PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x76D JUMPI PUSH2 0x74D CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x769 PUSH2 0x758 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x760 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x77F PUSH1 0xB PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x7B2 JUMPI PUSH2 0x792 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79D PUSH2 0x772 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x7D1 JUMPI PUSH2 0x7CE SWAP2 PUSH1 0x0 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST CALLVALUE PUSH2 0x806 JUMPI PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x83B JUMPI PUSH2 0x837 PUSH2 0x826 PUSH2 0x821 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x82E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x84D PUSH1 0xC PUSH1 0x0 SWAP1 PUSH2 0x71F JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x880 JUMPI PUSH2 0x860 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x87C PUSH2 0x86B PUSH2 0x840 JUMP JUMPDEST PUSH2 0x873 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x8A7 SWAP3 SWAP5 SWAP4 PUSH2 0x8A0 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x8DA JUMPI PUSH2 0x8C1 PUSH2 0x8BC CALLDATASIZE PUSH1 0x4 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x1E50 JUMP JUMPDEST SWAP1 PUSH2 0x8D6 PUSH2 0x8CD PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x90F JUMPI PUSH2 0x8EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x90B PUSH2 0x8FA PUSH2 0x1E6E JUMP JUMPDEST PUSH2 0x902 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x363 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0x945 JUMPI PUSH2 0x941 PUSH2 0x930 PUSH2 0x92A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x492 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x95F PUSH2 0x969 SWAP3 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x982 PUSH2 0x96C JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9B5 JUMPI PUSH2 0x995 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x9A0 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9A8 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x6 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x9FA JUMPI PUSH2 0x9DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x9E5 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x9ED PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0xA0C PUSH1 0x8 PUSH1 0x0 SWAP1 PUSH2 0x505 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xA3F JUMPI PUSH2 0xA1F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xA2A PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xA75 JUMPI PUSH2 0xA71 PUSH2 0xA60 PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST CALLVALUE PUSH2 0xAA8 JUMPI PUSH2 0xA8A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xA92 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x183 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP2 PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH2 0xAC7 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAC2 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST PUSH2 0xACF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAE8 PUSH2 0xAE3 PUSH2 0xAED SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0xB09 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xB28 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB35 SWAP1 SLOAD PUSH2 0xB17 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xB47 PUSH2 0xB51 SWAP3 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB5D SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH2 0xB54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB85 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB91 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xBB4 SWAP1 PUSH2 0x328 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xBCE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB94 JUMP JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xBE6 DUP3 PUSH2 0x19B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC02 JUMPI PUSH2 0xBFF SWAP2 PUSH1 0x0 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x183 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC3D PUSH2 0xC43 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC4E JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xC62 PUSH2 0xC68 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0xC74 DUP4 DUP3 MUL PUSH2 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0xC83 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC9F PUSH2 0xC9A PUSH2 0xCA4 SWAP3 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCBE PUSH2 0xCB9 PUSH2 0xCC3 SWAP3 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCCF SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD08 PUSH2 0xD0F SWAP5 PUSH2 0xCFE PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0xCF4 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP2 PUSH2 0xD29 PUSH2 0xD23 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x1224 JUMPI JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0xD3C PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP4 DUP4 PUSH2 0xD54 PUSH2 0xD4E DUP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI JUMPDEST PUSH2 0x11CF JUMPI PUSH2 0xD69 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD72 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0xD7D PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xD87 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP3 DUP8 PUSH2 0xD9B PUSH2 0xD95 DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x11B5 JUMPI JUMPDEST PUSH2 0x1198 JUMPI PUSH2 0xE13 PUSH1 0x20 SWAP3 PUSH2 0xDF5 PUSH2 0xE4A SWAP6 PUSH2 0xE18 SWAP5 DUP11 PUSH2 0xDCC PUSH2 0xDC6 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x117E JUMPI JUMPDEST DUP14 DUP14 DUP2 PUSH2 0xDE8 PUSH2 0xDE2 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x1162 JUMPI JUMPDEST POP POP PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xE08 PUSH2 0xE02 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x115D JUMPI JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE3F PUSH2 0xE2A ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE33 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1158 JUMPI PUSH2 0xE76 PUSH2 0xE71 PUSH2 0xEA8 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x112B JUMPI JUMPDEST POP SWAP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0xE9D PUSH2 0xE88 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0xE91 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10F8 JUMPI JUMPDEST POP DUP2 PUSH2 0xEE1 PUSH2 0xEDB PUSH2 0xED6 DUP7 PUSH2 0xED1 DUP10 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10E9 JUMPI PUSH2 0xF06 DUP3 PUSH2 0xF00 DUP6 PUSH2 0xEFB DUP9 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP5 DUP2 PUSH2 0xF2D PUSH2 0xF27 PUSH2 0xF22 DUP5 PUSH2 0xF1D DUP14 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x10DA JUMPI PUSH2 0xF52 DUP3 PUSH2 0xF4C DUP4 PUSH2 0xF47 DUP13 SWAP2 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP4 DUP7 PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 PUSH2 0x10BF JUMPI JUMPDEST PUSH2 0x10A2 JUMPI PUSH2 0xFE0 PUSH2 0xFA8 PUSH2 0xF8E DUP7 PUSH2 0xF88 PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFA2 DUP11 PUSH2 0xF9C PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xFC0 DUP7 PUSH2 0xFBA PUSH2 0x3E8 PUSH2 0x950 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xFD4 DUP10 PUSH2 0xFCE PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x101B PUSH2 0x1016 PUSH2 0x1004 PUSH2 0xFF5 DUP7 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xFFE DUP9 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1010 PUSH3 0xF4240 PUSH2 0xCAA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x1085 JUMPI PUSH2 0x1033 SWAP4 SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1080 CALLER SWAP4 SWAP2 SWAP3 SWAP6 PUSH2 0x106E PUSH2 0x1068 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0xCC6 JUMP JUMPDEST SWAP7 PUSH2 0x1077 PUSH2 0x183 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0xCD2 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x2F62F0D9 PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x109E PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x98FB561 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10BB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x10D4 PUSH2 0x10CE PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x10E4 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x10F3 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x1119 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x111F JUMPI JUMPDEST PUSH2 0x1111 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xEBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x114B SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1151 JUMPI JUMPDEST PUSH2 0x1143 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0xE6A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x1177 SWAP2 PUSH2 0x116F DUP13 PUSH2 0xB60 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST DUP14 DUP14 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x1193 DUP14 PUSH2 0x118B DUP7 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP14 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x11B1 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP8 PUSH2 0x11C9 PUSH2 0x11C3 DUP7 PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x11E8 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP7 PUSH2 0x1200 PUSH2 0x11FA DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1220 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH2 0x1239 PUSH2 0x1233 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0xD30 JUMP JUMPDEST SWAP1 PUSH2 0x124C SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xAB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x1289 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1284 JUMPI JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x12C2 PUSH2 0x12BB DUP4 PUSH2 0x1269 JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x1293 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x131B JUMPI POP PUSH1 0x1 EQ PUSH2 0x12DE JUMPI JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12EB SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x129C JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x1303 JUMPI POP POP ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP6 SWAP4 SWAP6 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP3 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 CODESIZE DUP1 DUP1 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 PUSH2 0x1340 SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1363 PUSH2 0x135C SWAP3 PUSH2 0x1353 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x1336 JUMP JUMPDEST SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x136E SWAP1 PUSH2 0x1343 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1379 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1384 PUSH1 0x3 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B0 PUSH2 0x13B5 SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13C2 SWAP1 SLOAD PUSH2 0x13A4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x70 SHR SWAP1 JUMP JUMPDEST PUSH2 0x13D7 PUSH2 0x13DC SWAP2 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1391 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x13E9 SWAP1 SLOAD PUSH2 0x13CB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x1406 SWAP2 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1413 SWAP1 SLOAD PUSH2 0x13F5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141E PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1427 PUSH2 0x1387 JUMP JUMPDEST POP PUSH2 0x1430 PUSH2 0x138C JUMP JUMPDEST POP PUSH2 0x143B PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1446 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP1 PUSH2 0x1451 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1476 SWAP2 PUSH2 0x1465 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x146E PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1487 PUSH2 0x148C SWAP2 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1499 SWAP1 SLOAD PUSH2 0x147B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14A4 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x14AF PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x14DC SWAP3 PUSH2 0x14BF PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x14D4 PUSH2 0x14CB PUSH2 0x26A0 JUMP JUMPDEST DUP3 SWAP1 DUP5 SWAP2 PUSH2 0x26FE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x14F8 PUSH2 0x1502 SWAP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x150D PUSH2 0x14E1 JUMP JUMPDEST POP PUSH2 0x1518 PUSH1 0x12 PUSH2 0x14E9 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1532 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1554 PUSH2 0x154F PUSH2 0x155B SWAP3 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1521 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x157C PUSH2 0x1576 PUSH2 0x1571 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST SUB PUSH2 0x1598 JUMPI PUSH2 0x158F PUSH2 0x1596 SWAP3 PUSH1 0x7 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x8 PUSH2 0x153F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE DUP1 PUSH2 0x15B0 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15C6 SWAP2 PUSH2 0x15C1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST SWAP1 PUSH2 0x15CF PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F3 PUSH2 0x15F9 SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1604 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x161B PUSH2 0x1625 SWAP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1631 SWAP1 PUSH2 0x160C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1641 PUSH1 0x0 NOT SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x165F PUSH2 0x165A PUSH2 0x1664 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x167F PUSH2 0x167A PUSH2 0x1686 SWAP3 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1634 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 POP DUP2 PUSH2 0x16A9 PUSH2 0x16A3 PUSH2 0x169E ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x19A6 JUMPI PUSH2 0x16B6 PUSH2 0x1416 JUMP JUMPDEST POP SWAP3 SWAP1 SWAP3 SWAP1 PUSH2 0x170C PUSH1 0x20 PUSH2 0x16DA PUSH2 0x16D5 PUSH2 0x16D0 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1701 PUSH2 0x16EC ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x16F5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19A1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1973 JUMPI JUMPDEST POP SWAP4 PUSH2 0x1772 PUSH1 0x20 PUSH2 0x1740 PUSH2 0x173B PUSH2 0x1736 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1767 PUSH2 0x1752 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x175B PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1940 JUMPI JUMPDEST POP SWAP2 PUSH2 0x179A DUP7 PUSH2 0x1794 DUP5 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP3 PUSH2 0x17AE DUP2 PUSH2 0x17A8 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP5 PUSH2 0x17BA DUP5 DUP3 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP4 PUSH2 0x17C3 PUSH2 0x149C JUMP JUMPDEST DUP1 PUSH2 0x17D7 PUSH2 0x17D1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x18F7 JUMPI POP PUSH2 0x1804 PUSH2 0x17F6 PUSH2 0x17F1 DUP9 DUP11 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST PUSH2 0x17FE PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP9 PUSH2 0x1821 PUSH2 0x1813 PUSH2 0xDEAD PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x181B PUSH2 0x96C JUMP JUMPDEST SWAP1 PUSH2 0x2BAE JUMP JUMPDEST JUMPDEST DUP10 PUSH2 0x1836 PUSH2 0x1830 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x18DA JUMPI PUSH2 0x1849 PUSH2 0x1852 SWAP6 DUP12 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x189E JUMPI JUMPDEST CALLER SWAP1 SWAP2 PUSH2 0x1884 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 PUSH2 0x1899 PUSH2 0x1890 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x18D5 PUSH2 0x18CE PUSH2 0x18B6 PUSH2 0x18B1 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x18C8 PUSH2 0x18C3 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBB55FD27 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x18F3 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x193A SWAP1 PUSH2 0x1934 PUSH2 0x1925 PUSH2 0x191E PUSH2 0x190F DUP12 DUP6 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1918 DUP8 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x192E DUP7 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2AAE JUMP JUMPDEST SWAP9 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1961 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1967 JUMPI JUMPDEST PUSH2 0x1959 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1785 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x194F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1994 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x199A JUMPI JUMPDEST PUSH2 0x198C DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x171F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1982 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x19BF PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D4 SWAP1 PUSH2 0x19CF PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19E1 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1A06 PUSH2 0x1A0B SWAP2 PUSH2 0x19FE PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A21 SWAP3 SWAP2 PUSH2 0x1A1C PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1A2D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1A2B PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST SWAP3 SWAP2 SWAP3 POP POP DUP2 PUSH2 0x1A4D PUSH2 0x1A47 PUSH2 0x1A42 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x1E33 JUMPI PUSH2 0x1A5A PUSH2 0x1416 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 SWAP3 PUSH2 0x1A69 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1A73 PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST SWAP1 PUSH2 0x1ABC PUSH1 0x20 PUSH2 0x1A8A PUSH2 0x1A85 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1AB1 PUSH2 0x1A9C ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1AA5 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E2E JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1E00 JUMPI JUMPDEST POP SWAP2 PUSH2 0x1B19 PUSH1 0x20 PUSH2 0x1AE7 PUSH2 0x1AE2 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1B0E PUSH2 0x1AF9 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1B02 PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1DCD JUMPI JUMPDEST POP SWAP7 PUSH2 0x1B3F PUSH2 0x1B3A ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST SWAP7 PUSH2 0x1B7A PUSH2 0x1B4E DUP3 DUP5 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST SWAP6 PUSH2 0x1B75 PUSH2 0x1B6E PUSH2 0x1B67 PUSH2 0x1B60 PUSH2 0x149C JUMP JUMPDEST SWAP4 DUP14 PUSH2 0xC53 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP12 DUP12 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x15E7 JUMP JUMPDEST SWAP8 DUP10 PUSH2 0x1B8F PUSH2 0x1B89 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1DB2 JUMPI JUMPDEST PUSH2 0x1D95 JUMPI PUSH2 0x1BEE PUSH2 0x1BE9 PUSH2 0x1C20 SWAP7 PUSH2 0x1BB9 PUSH1 0x20 SWAP5 PUSH2 0x1BB4 ADDRESS PUSH2 0xB88 JUMP JUMPDEST PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x1BCF DUP14 PUSH2 0x1BC6 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP1 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0x1BE4 PUSH2 0x1BDB DUP9 PUSH2 0xB60 JUMP JUMPDEST DUP14 DUP13 SWAP1 SWAP2 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C15 PUSH2 0x1C00 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C09 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1D90 JUMPI PUSH2 0x1C4C PUSH2 0x1C47 PUSH2 0x1C7E SWAP7 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x1D63 JUMPI JUMPDEST POP SWAP6 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1C73 PUSH2 0x1C5E ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1C67 PUSH2 0x183 JUMP JUMPDEST SWAP9 DUP10 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1D5E JUMPI PUSH2 0x1C9D SWAP5 PUSH1 0x0 SWAP2 PUSH2 0x1D30 JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x1CF4 JUMPI JUMPDEST CALLER SWAP1 DUP5 SWAP2 DUP5 PUSH2 0x1CDA PUSH2 0x1CD4 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x1CEF PUSH2 0x1CE6 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x885 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1D2B PUSH2 0x1D24 PUSH2 0x1D0C PUSH2 0x1D07 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x1D1E PUSH2 0x1D19 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1CA2 JUMP JUMPDEST PUSH2 0x1D51 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1D57 JUMPI JUMPDEST PUSH2 0x1D49 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C94 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1D83 SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1D89 JUMPI JUMPDEST PUSH2 0x1D7B DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1C40 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D71 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x749383AD PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DAE PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP9 PUSH2 0x1DC7 PUSH2 0x1DC1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1DEE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DF4 JUMPI JUMPDEST PUSH2 0x1DE6 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1B2C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DDC JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x1E21 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E27 JUMPI JUMPDEST PUSH2 0x1E19 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1ACF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x521F431 PUSH1 0xE3 SHL DUP2 MSTORE DUP1 PUSH2 0x1E4C PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E6A SWAP1 PUSH2 0x1E5C PUSH2 0xB0C JUMP JUMPDEST PUSH2 0x1E64 PUSH2 0xB0C JUMP JUMPDEST SWAP1 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1E76 PUSH2 0x124E JUMP JUMPDEST POP PUSH2 0x1E81 PUSH1 0x4 PUSH2 0x1365 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EA1 SWAP2 PUSH2 0x1E90 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x1E99 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1EB0 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1EE3 SWAP2 PUSH2 0x1ED9 PUSH2 0x1EDE SWAP3 PUSH2 0x1ED1 PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EEE PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1EF6 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x1EFE PUSH2 0x210B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x20 PUSH2 0x1F1F PUSH2 0x1F1A PUSH2 0x1F15 PUSH1 0x7 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F46 PUSH2 0x1F31 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F3A PUSH2 0x183 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x204B JUMPI PUSH2 0x1FB6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x201D JUMPI JUMPDEST POP PUSH1 0x20 PUSH2 0x1F84 PUSH2 0x1F7F PUSH2 0x1F7A PUSH1 0x8 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1FAB PUSH2 0x1F96 ADDRESS PUSH2 0xB88 JUMP JUMPDEST SWAP3 PUSH2 0x1F9F PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH2 0xBD3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x2018 JUMPI PUSH2 0x1FE8 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x1FEA JUMPI JUMPDEST POP PUSH2 0x1FD7 PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 PUSH2 0x1FE2 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST SWAP3 PUSH2 0x2464 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x200B SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2011 JUMPI JUMPDEST PUSH2 0x2003 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1FCC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x203E SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2044 JUMPI JUMPDEST PUSH2 0x2036 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST CODESIZE PUSH2 0x1F67 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x202C JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x2058 PUSH2 0x1EE6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2071 PUSH2 0x206C PUSH2 0x2076 SWAP3 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2083 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2090 PUSH1 0x5 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x20A9 PUSH2 0x20A3 PUSH2 0x209E PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH2 0x20C2 JUMPI PUSH2 0x20C0 PUSH2 0x20B9 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x20DB PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20F6 PUSH2 0x20F1 PUSH2 0x20FB SWAP3 PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2108 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x211D PUSH2 0x2116 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x5 PUSH2 0x166A JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x213F PUSH2 0x213A PUSH2 0x2144 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x211F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2169 SWAP3 SWAP5 SWAP4 PUSH2 0x2162 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x21B2 PUSH2 0x21B7 SWAP4 PUSH2 0x21A3 PUSH1 0x4 SWAP5 SWAP4 PUSH2 0x218A PUSH4 0xA9059CBB SWAP2 SWAP4 SWAP2 PUSH2 0x212B JUMP JUMPDEST SWAP3 PUSH2 0x2193 PUSH2 0x183 JUMP JUMPDEST SWAP7 DUP8 SWAP5 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x2C73 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21D0 PUSH2 0x21CB PUSH2 0x21D5 SWAP3 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x21E4 PUSH2 0x21EA SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x21F5 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x220E PUSH2 0x2209 PUSH2 0x2213 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2222 PUSH2 0x2228 SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST SWAP1 SUB SWAP1 PUSH4 0xFFFFFFFF DUP3 GT PUSH2 0x2238 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2251 PUSH2 0x224C PUSH2 0x2256 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x226D PUSH2 0x2268 PUSH2 0x2272 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xE0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2294 PUSH2 0x228F PUSH2 0x2299 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22A8 PUSH2 0x22AE SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2275 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x22B9 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x22D2 PUSH2 0x22CD PUSH2 0x22D7 SWAP3 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x22EE PUSH2 0x22E9 PUSH2 0x22F3 SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2305 PUSH2 0x230B SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x198 JUMP JUMPDEST SWAP3 PUSH2 0x198 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2316 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x232F PUSH2 0x232A PUSH2 0x2334 SWAP3 PUSH2 0x198 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2350 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0x151B JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x236E PUSH2 0x2369 PUSH2 0x2373 SWAP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x238E PUSH2 0x2389 PUSH2 0x2395 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2337 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x70 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23BB PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL SWAP2 PUSH2 0x2399 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x23DA PUSH2 0x23D5 PUSH2 0x23E1 SWAP3 PUSH2 0x235A JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x239F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x23F7 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL SWAP2 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x2415 PUSH2 0x2410 PUSH2 0x241A SWAP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2435 PUSH2 0x2430 PUSH2 0x243C SWAP3 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x241D JUMP JUMPDEST DUP3 SLOAD PUSH2 0x23E5 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2462 SWAP3 SWAP5 SWAP4 PUSH2 0x245B PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST ADD SWAP1 PUSH2 0x3C4 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2487 PUSH2 0x2481 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x2673 JUMPI JUMPDEST PUSH2 0x2656 JUMPI PUSH2 0x2523 SWAP4 PUSH2 0x2510 PUSH2 0x2509 PUSH2 0x251C SWAP5 PUSH2 0x2515 SWAP5 PUSH2 0x24C5 PUSH2 0x24C0 TIMESTAMP PUSH2 0x24BA PUSH5 0x100000000 PUSH2 0x21BC JUMP JUMPDEST SWAP1 PUSH2 0x21D8 JUMP JUMPDEST PUSH2 0x21FA JUMP JUMPDEST SWAP8 PUSH2 0x24DA DUP10 PUSH2 0x24D4 PUSH1 0x9 PUSH2 0x1409 JUMP JUMPDEST SWAP1 PUSH2 0x2216 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x24EF PUSH2 0x24E9 PUSH1 0x0 PUSH2 0x223D JUMP JUMPDEST SWAP2 PUSH2 0x3D1 JUMP JUMPDEST GT DUP1 PUSH2 0x263A JUMPI JUMPDEST DUP1 PUSH2 0x261E JUMPI JUMPDEST PUSH2 0x2572 JUMPI JUMPDEST POP POP POP PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x231B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x252D PUSH1 0x9 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x2537 PUSH1 0x9 PUSH2 0x13DF JUMP JUMPDEST PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 PUSH2 0x256D PUSH2 0x2564 PUSH2 0x183 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x2440 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2616 SWAP3 PUSH2 0x25FA PUSH2 0x25F4 PUSH2 0x25EF DUP5 PUSH2 0x25E9 PUSH2 0x25E3 PUSH2 0x260F SWAP9 PUSH2 0x25DE PUSH2 0x25D7 PUSH2 0x25C8 PUSH2 0x25B9 PUSH2 0x25B4 PUSH2 0x25A5 PUSH2 0x2600 SWAP15 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x25AE DUP8 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x25C2 DUP13 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x25D2 PUSH1 0xA PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xA PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2D87 JUMP JUMPDEST SWAP2 PUSH2 0x2280 JUMP JUMPDEST SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0x22BE JUMP JUMPDEST SWAP2 PUSH2 0x22DA JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x260A PUSH1 0xB PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0xB PUSH2 0x166A JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2501 JUMP JUMPDEST POP DUP1 PUSH2 0x2633 PUSH2 0x262D PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24FC JUMP JUMPDEST POP DUP2 PUSH2 0x264F PUSH2 0x2649 PUSH1 0x0 PUSH2 0x2259 JUMP JUMPDEST SWAP2 PUSH2 0x3B1 JUMP JUMPDEST EQ ISZERO PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1A93C689 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 PUSH2 0x266F PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH2 0x2695 PUSH2 0x268F PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x248F JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26A8 PUSH2 0x269B JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x26BB SWAP3 SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x26E7 PUSH2 0x26EE SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x26DD PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST ADD SWAP1 PUSH2 0x57B JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH2 0x26FB SWAP2 SUB PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x270C DUP2 DUP4 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2722 PUSH2 0x271C PUSH1 0x0 NOT PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x272F JUMPI JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x2742 PUSH2 0x273C DUP8 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x2769 JUMPI PUSH2 0x2760 SWAP4 SWAP5 PUSH2 0x2757 SWAP2 SWAP4 SWAP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2DB2 JUMP JUMPDEST DUP1 CODESIZE DUP1 DUP1 PUSH2 0x2728 JUMP JUMPDEST POP PUSH2 0x2789 DUP5 SWAP3 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x27A1 PUSH2 0x279C PUSH2 0x27A6 SWAP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x27B2 SWAP1 PUSH2 0x278D JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x27D2 PUSH2 0x27CC PUSH2 0x27C7 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x282F JUMPI DUP2 PUSH2 0x27F3 PUSH2 0x27ED PUSH2 0x27E8 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2806 JUMPI PUSH2 0x2804 SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x282B PUSH2 0x2813 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2854 PUSH2 0x283C PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2861 SWAP1 PUSH2 0xB38 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x286D SWAP1 PUSH2 0x2858 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2879 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2889 DUP3 PUSH2 0x1D6 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x28A5 JUMPI PUSH2 0x28A2 SWAP2 PUSH1 0x0 ADD PUSH2 0x287C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x28C1 PUSH2 0x28BC PUSH2 0x28C6 SWAP3 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28D3 PUSH2 0x1454 JUMP JUMPDEST POP PUSH2 0x2909 PUSH1 0x20 PUSH2 0x28F3 PUSH2 0x28EE PUSH2 0x28E9 PUSH1 0x6 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x2864 JUMP JUMPDEST PUSH2 0x2870 JUMP JUMPDEST PUSH4 0x17E7E58 SWAP1 PUSH2 0x2901 PUSH2 0x183 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xBD3 JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x2919 PUSH1 0x4 DUP3 ADD PUSH2 0x2A9 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2AA9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x294A PUSH2 0x2944 PUSH2 0x293F PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ ISZERO SWAP4 PUSH2 0x2957 PUSH1 0xC PUSH2 0x148F JUMP JUMPDEST SWAP2 DUP6 PUSH1 0x0 EQ PUSH2 0x2A40 JUMPI DUP3 PUSH2 0x2974 PUSH2 0x296E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2981 JUMPI JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x29A3 PUSH2 0x29A8 SWAP2 PUSH2 0x299D PUSH2 0x2997 PUSH2 0x29AE SWAP6 PUSH2 0xAF0 JUMP JUMPDEST SWAP2 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x2ADF JUMP JUMPDEST SWAP2 PUSH2 0x2ADF JUMP JUMPDEST SWAP1 DUP1 PUSH2 0x29C2 PUSH2 0x29BC DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x29CE JUMPI JUMPDEST DUP1 PUSH2 0x297A JUMP JUMPDEST PUSH2 0x2A0A PUSH2 0x2A10 SWAP3 PUSH2 0x2A05 PUSH2 0x29F4 PUSH2 0x29E3 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x29EE DUP7 DUP6 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP4 PUSH2 0x29FF PUSH1 0x5 PUSH2 0x28AD JUMP JUMPDEST SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST DUP1 PUSH2 0x2A24 PUSH2 0x2A1E PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH2 0x2A30 JUMPI JUMPDEST DUP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH2 0x2A39 SWAP2 PUSH2 0x2BAE JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2A2A JUMP JUMPDEST POP POP SWAP1 POP PUSH2 0x2A57 PUSH2 0x2A51 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2A62 JUMPI JUMPDEST PUSH2 0x297F JUMP JUMPDEST PUSH2 0x2A76 PUSH2 0x2A6F PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0xC PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2A5D JUMP JUMPDEST PUSH2 0x2A9C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2AA2 JUMPI JUMPDEST PUSH2 0x2A94 DUP2 DUP4 PUSH2 0xBAA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x288B JUMP JUMPDEST CODESIZE PUSH2 0x292C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x2AB7 PUSH2 0xB0C JUMP JUMPDEST POP DUP2 PUSH2 0x2ACB PUSH2 0x2AC5 DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2AD8 JUMPI POP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2AE7 PUSH2 0xB0C JUMP JUMPDEST DUP2 PUSH2 0x2AFB PUSH2 0x2AF5 PUSH1 0x3 PUSH2 0xC8B JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST GT PUSH1 0x0 EQ PUSH2 0x2B7C JUMPI POP DUP1 PUSH2 0x2B2C PUSH2 0x2B1C DUP4 PUSH2 0x2B16 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x2B26 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 PUSH2 0x2B41 PUSH2 0x2B3B DUP4 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT ISZERO PUSH2 0x2B75 JUMPI POP PUSH2 0x2B6F PUSH2 0x2B5F DUP3 PUSH2 0x2B5A DUP6 DUP3 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH2 0x2B69 PUSH1 0x2 PUSH2 0x205D JUMP JUMPDEST SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 PUSH2 0x2B2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B91 PUSH2 0x2B8B PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST SUB PUSH2 0x2B9C JUMPI JUMPDEST PUSH2 0x2B7A JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA8 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP1 PUSH2 0x2B97 JUMP JUMPDEST DUP1 PUSH2 0x2BCA PUSH2 0x2BC4 PUSH2 0x2BBF PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2BE7 JUMPI PUSH2 0x2BE5 SWAP2 PUSH2 0x2BDD PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C0C PUSH2 0x2BF4 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH2 0x2C2D PUSH2 0x2C27 PUSH2 0x2C22 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2C4A JUMPI PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x2C41 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2ED5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2C6F PUSH2 0x2C57 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2C81 PUSH2 0xB0C JUMP JUMPDEST POP PUSH2 0x2C8A PUSH2 0xB0C JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2D22 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2CB1 PUSH2 0x2CAB PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2D08 JUMPI POP PUSH2 0x2CC3 DUP2 PUSH2 0xB7C JUMP JUMPDEST EXTCODESIZE PUSH2 0x2CD7 PUSH2 0x2CD1 PUSH1 0x0 PUSH2 0xAD4 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2CE0 JUMPI POP JUMP JUMPDEST PUSH2 0x2CEC PUSH2 0x2D04 SWAP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D1B PUSH2 0x2D15 PUSH1 0x1 PUSH2 0x20E2 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST EQ ISZERO PUSH2 0x2CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D4A PUSH2 0x2D45 PUSH2 0x2D4F SWAP3 PUSH2 0x2D33 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x2275 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2D61 PUSH2 0x2D67 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0x2275 JUMP JUMPDEST SWAP3 PUSH2 0x2275 JUMP JUMPDEST SWAP2 PUSH2 0x2D73 DUP4 DUP3 MUL PUSH2 0x2275 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2D82 JUMPI JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x2D9C PUSH2 0x2DAF SWAP2 PUSH2 0x2D96 PUSH2 0x2D2E JUMP JUMPDEST POP PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x2DA9 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x2D36 JUMP JUMPDEST SWAP1 PUSH2 0x2D52 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 PUSH2 0x2DD0 PUSH2 0x2DCA PUSH2 0x2DC5 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E9E JUMPI DUP4 PUSH2 0x2DF1 PUSH2 0x2DEB PUSH2 0x2DE6 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH2 0x2E75 JUMPI PUSH2 0x2E15 DUP4 PUSH2 0x2E10 PUSH2 0x2E09 PUSH1 0x1 DUP7 SWAP1 PUSH2 0x1EA6 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2E1F JUMPI JUMPDEST POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2E6A PUSH2 0x2E58 PUSH2 0x2E52 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2E61 PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 CODESIZE DUP1 DUP1 PUSH2 0x2E1A JUMP JUMPDEST PUSH2 0x2E9A PUSH2 0x2E82 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EC3 PUSH2 0x2EAB PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x530 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2ED2 SWAP2 ADD PUSH2 0x198 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 PUSH2 0x2EF4 PUSH2 0x2EEE PUSH2 0x2EE9 PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FD9 JUMPI PUSH2 0x2F19 PUSH2 0x2F12 DUP4 PUSH2 0x2F0D PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST DUP3 PUSH2 0x2F36 PUSH2 0x2F30 PUSH2 0x2F2B PUSH1 0x0 PUSH2 0x27A9 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP2 PUSH2 0x1CA JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x2FAC JUMPI PUSH2 0x2F5B PUSH2 0x2F54 DUP4 PUSH2 0x2F4F PUSH1 0x2 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2FA7 PUSH2 0x2F95 PUSH2 0x2F8F PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0xCC6 JUMP JUMPDEST SWAP4 PUSH2 0x2F9E PUSH2 0x183 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x588 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x2FD4 DUP3 PUSH2 0x2FCE PUSH2 0x2FBF PUSH1 0x0 DUP8 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST SWAP2 PUSH2 0x2FC9 DUP4 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x2EC7 JUMP JUMPDEST SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F5C JUMP JUMPDEST PUSH2 0x2FED PUSH2 0x2FE8 PUSH1 0x0 DUP4 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x148F JUMP JUMPDEST DUP1 PUSH2 0x3000 PUSH2 0x2FFA DUP6 PUSH2 0x198 JUMP JUMPDEST SWAP2 PUSH2 0x198 JUMP JUMPDEST LT PUSH2 0x3029 JUMPI PUSH2 0x3013 PUSH2 0x3024 SWAP2 DUP5 SWAP1 PUSH2 0x26F0 JUMP JUMPDEST PUSH2 0x301F PUSH1 0x0 DUP5 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST PUSH2 0x2F1A JUMP JUMPDEST SWAP1 PUSH2 0x3048 SWAP1 SWAP2 SWAP3 PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST REVERT PREVRANDAO REVERT SGT BLOCKHASH SWAP12 TIMESTAMP SSTORE SHL 0x4E 0xC8 0xD0 0x2C TSTORE 0xD3 MLOAD EXTCODESIZE MOD 0xC8 PUSH15 0x2916DFD23D0310B6DDC88064736F6C PUSH4 0x4300081E STOP CALLER ",
              "sourceMap": "480:12405:12:-:0;;;;;;;;;-1:-1:-1;480:12405:12;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;866:21::-;;;;;;:::i;:::-;;:::o;480:12405::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;1202:35::-;;;;;;:::i;:::-;;:::o;480:12405::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;1243:35::-;;;;;;:::i;:::-;;:::o;480:12405::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;1332:20::-;;;;;;:::i;:::-;;:::o;480:12405::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;652:49::-;696:5;;;:::i;:::-;652:49;:::o;:::-;;;:::i;:::-;;:::o;480:12405::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;777:22::-;;;;;;:::i;:::-;;:::o;480:12405::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;957:21::-;;;;;;:::i;:::-;;:::o;480:12405::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2466:103:9;;2531:1;2466:103;;;;;;:::i;:::-;2531:1;:::i;:::-;;;:::i;:::-;2466:103::o;480:12405:12:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;7975:2104::-;;;;;8136:10;:15;;8150:1;8136:15;:::i;:::-;;;:::i;:::-;;:34;;;7975:2104;8132:73;;8266:13;;:::i;:::-;8224:55;;;;8293:10;;:23;;8307:9;8293:23;:::i;:::-;;;:::i;:::-;;;:50;;;;7975:2104;8289:86;;8394:16;;:::i;:::-;8420;;;:::i;:::-;8478:6;;;;:::i;:::-;8516;;;:::i;:::-;8540:2;;:13;;8546:7;8540:13;:::i;:::-;;;:::i;:::-;;:30;;;;7975:2104;8536:54;;9023:15;:40;8621:10;8857:11;9023:40;8621:10;9023:25;8621:10;;:14;;8634:1;8621:14;:::i;:::-;;;:::i;:::-;;8617:64;;7975:2104;8699:10;;;:14;;8712:1;8699:14;:::i;:::-;;;:::i;:::-;;8695:64;;7975:2104;8857:4;;:11;:::i;:::-;:15;;8871:1;8857:15;:::i;:::-;;;:::i;:::-;;8853:133;;7975:2104;9023:15;:::i;:::-;:25;:::i;:::-;;9057:4;9023:40;9049:13;9057:4;9049:13;:::i;:::-;9023:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;9088:25;:15;:40;9023;9088;9023;;;;;7975:2104;9012:51;9095:7;9088:15;:::i;:::-;:25;:::i;:::-;;9122:4;9088:40;9114:13;9122:4;9114:13;:::i;:::-;9088:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;7975:2104;9077:51;9177:8;:33;;9188:22;:9;:22;9200:10;9188:22;;:::i;:::-;;:::i;:::-;9177:33;:::i;:::-;;;:::i;:::-;;:101;;;;9226:35;:8;9238:22;:9;:22;9250:10;9238:22;;:::i;:::-;;:::i;:::-;9226:35;;:::i;:::-;9177:101;9308:8;;:33;;9319:22;:9;:22;9331:10;9319:22;;:::i;:::-;;:::i;:::-;9308:33;:::i;:::-;;;:::i;:::-;;:101;;;;9357:35;:8;9369:22;:9;:22;9381:10;9369:22;;:::i;:::-;;:::i;:::-;9357:35;;:::i;:::-;9308:101;9432:9;;:14;;9445:1;9432:14;:::i;:::-;;;:::i;:::-;;:32;;;9308:101;9428:70;;9775:35;9633;9634:15;:8;:15;9645:4;9634:15;:::i;:::-;;;:::i;:::-;9654:13;:9;:13;9666:1;9654:13;:::i;:::-;;;:::i;:::-;9633:35;;:::i;:::-;9709;9710:15;:8;:15;9721:4;9710:15;:::i;:::-;;;:::i;:::-;9730:13;:9;:13;9742:1;9730:13;:::i;:::-;;;:::i;:::-;9709:35;;:::i;:::-;9775;;:::i;:::-;:78;;9813:40;:30;:18;9821:9;9813:18;:::i;:::-;:30;9834:9;9813:30;:::i;:::-;;;:::i;:::-;:40;9846:7;9813:40;:::i;:::-;;;:::i;:::-;9775:78;:::i;:::-;;;:::i;:::-;;9771:134;;9972:9;9941:8;9951;9961:9;9972;;;:::i;:::-;10006:66;10011:10;10023:9;10034;10045:10;10057;10006:66;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;7975:2104::o;9771:134::-;9880:10;;;;;;;;;;;;:::i;:::-;;;;9428:70;9473:25;;;;;;;;;;;;:::i;:::-;;;;9432:32;9450:9;;:14;;9463:1;9450:14;:::i;:::-;;;:::i;:::-;;9432:32;;9308:101;;9408:1;9308:101;:::i;:::-;;;9177;;9277:1;9177:101;:::i;:::-;;;9088:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;9023:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;8853:133::-;;;8695:64;8748:10;8722:7;8715:15;8722:7;8715:15;:::i;:::-;8744:2;8748:10;;;:::i;:::-;8695:64;;;;8617;8670:10;8644:7;8637:15;8644:7;8637:15;:::i;:::-;8666:2;8670:10;;;:::i;:::-;8617:64;;8536:54;8579:11;;;;;;;;;;;;:::i;:::-;;;;8540:30;8557:2;;:13;;8563:7;8557:13;:::i;:::-;;;:::i;:::-;;8540:30;;8289:86;8352:23;;;;;;;;;;;;:::i;:::-;;;;8293:50;8320:10;;:23;;8334:9;8320:23;:::i;:::-;;;:::i;:::-;;;8293:50;;8132:73;8179:26;;;;;;;;;;;;:::i;:::-;;;;8136:34;8155:10;;:15;;8169:1;8155:15;:::i;:::-;;;:::i;:::-;;8136:34;;7975:2104;;;;;;;;:::i;:::-;:::o;480:12405::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;1760:89:4:-;1805:13;;:::i;:::-;1837:5;1830:12;1837:5;1830:12;:::i;:::-;;:::o;480:12405:12:-;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;4454:257::-;4507:17;;:::i;:::-;4534;;;:::i;:::-;4561:26;;;:::i;:::-;4616:8;;;;:::i;:::-;4646;;;;:::i;:::-;4686:18;;;;:::i;:::-;4454:257;:::o;480:12405::-;;;:::o;3902:186:4:-;4054:5;3902:186;3975:4;;:::i;:::-;4007:12;;;:::i;:::-;4045:7;4054:5;;;:::i;:::-;4077:4;4070:11;:::o;480:12405:12:-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;2803:97:4:-;2855:7;;:::i;:::-;2881:12;;;;:::i;:::-;2874:19;:::o;4680:244::-;;4890:5;4680:244;4767:4;;:::i;:::-;4801:12;4854:5;4801:12;;:::i;:::-;4839:4;4845:7;4854:5;;;:::i;:::-;4886:2;4890:5;;;:::i;:::-;4913:4;4906:11;:::o;480:12405:12:-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2688:82:4:-;2737:5;;:::i;:::-;2761:2;2754:9;2761:2;2754:9;:::i;:::-;;:::o;480:12405:12:-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4003:180::-;;4080:10;:21;;4094:7;;;:::i;:::-;4080:21;:::i;:::-;;;:::i;:::-;;4076:48;;4134:16;4160;4143:7;4134:16;;:::i;:::-;4160;;:::i;:::-;4003:180::o;4076:48::-;4110:14;;;;;;;;;;;;:::i;:::-;;;;2466:103:9;;2531:1;2466:103;;;:::i;:::-;2531:1;:::i;:::-;;;;:::i;:::-;2466:103::o;480:12405:12:-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;4912:1308::-;;;;5002:2;;:19;;5008:13;5016:4;5008:13;:::i;:::-;5002:19;:::i;:::-;;;:::i;:::-;;4998:43;;5102:13;;:::i;:::-;5060:55;;;;5151:6;5144:39;;:24;:14;5151:6;;;:::i;:::-;5144:14;:::i;:::-;:24;:::i;:::-;;5177:4;5144:39;5169:13;5177:4;5169:13;:::i;:::-;5144:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;4912:1308;5125:58;5219:6;5212:39;;:24;:14;5219:6;;;:::i;:::-;5212:14;:::i;:::-;:24;:::i;:::-;;5245:4;5212:39;5237:13;5245:4;5237:13;:::i;:::-;5212:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;4912:1308;5193:58;5279:8;:20;:8;:20;5290:9;5279:20;:::i;:::-;;;:::i;:::-;5327:8;:20;:8;:20;5338:9;5327:20;:::i;:::-;;;:::i;:::-;5388:9;5379:30;5388:9;5399;5379:30;;:::i;:::-;5442:13;;;:::i;:::-;5478:12;:17;;5494:1;5478:17;:::i;:::-;;;:::i;:::-;;5474:458;;;;5566:7;5560:44;:24;5566:17;:7;5576;5566:17;;:::i;:::-;5560:24;:::i;:::-;5587:17;;:::i;:::-;5560:44;;:::i;:::-;5632:6;5641:17;5624:15;5632:6;5624:15;:::i;:::-;5641:17;;:::i;:::-;;;:::i;:::-;5474:458;5954:9;:14;;5967:1;5954:14;:::i;:::-;;;:::i;:::-;;5950:50;;6020:9;6088;6016:2;6020:9;;;:::i;:::-;6067:8;6077:9;6088;;;:::i;:::-;6108:47;;5474:458;6184:10;6196:7;6205;6179:34;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;4912:1308::o;6108:47::-;6119:36;6127:28;:17;6135:8;;;:::i;:::-;6127:17;:::i;:::-;:28;6147:8;;;:::i;:::-;6127:28;:::i;:::-;;;:::i;:::-;6119:36;;:::i;:::-;6108:47;;5950:50;5977:23;8352;;;5977;;;;;;;;:::i;:::-;;;;5474:458;5795:126;5818:7;5871:36;5872:22;5817:36;5818:22;:7;5828:12;5818:22;;:::i;:::-;5817:36;5844:9;5817:36;:::i;:::-;;;:::i;:::-;5872:7;;:22;:::i;:::-;5871:36;5898:9;5871:36;:::i;:::-;;;:::i;:::-;5795:126;;:::i;:::-;5474:458;;;5212:39;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;5144:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;4998:43::-;5030:11;8579;;;5030;;;;;;;;:::i;:::-;;;;4912:1308;4969:17;4912:1308;4969:17;;:::i;:::-;;:::i;:::-;4912:1308;:::o;480:12405::-;;;;;:::i;:::-;;;;;;;;;:::o;2933:116:4:-;3024:18;;2933:116;2998:7;;:::i;:::-;3024:9;;:18;:::i;:::-;;:::i;:::-;3017:25;:::o;2466:103:9:-;;2531:1;2466:103;;;;:::i;:::-;2531:1;:::i;:::-;;;;;:::i;:::-;2466:103::o;6457:1275:12:-;;;;;6562:2;;:19;;6568:13;6576:4;6568:13;:::i;:::-;6562:19;:::i;:::-;;;:::i;:::-;;6558:43;;6662:13;;:::i;:::-;6620:55;;;;6703:6;;;;:::i;:::-;6737;;;:::i;:::-;6779:7;6772:40;;:25;:15;6779:7;6772:15;:::i;:::-;:25;:::i;:::-;;6806:4;6772:40;6798:13;6806:4;6798:13;:::i;:::-;6772:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;6457:1275;6753:59;6848:7;6841:40;;:25;:15;6848:7;6841:15;:::i;:::-;:25;:::i;:::-;;6875:4;6841:40;6867:13;6875:4;6867:13;:::i;:::-;6841:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;6457:1275;6822:59;6929:4;6911:24;6921:13;6929:4;6921:13;:::i;:::-;6911:24;:::i;:::-;6976:9;7129:37;6967:30;6976:9;6987;6967:30;;:::i;:::-;7030:13;7130:20;7072:37;7073:20;7030:13;;:::i;:::-;7073:9;;:20;:::i;:::-;7097:12;7072:37;;:::i;:::-;7130:9;;:20;:::i;:::-;7129:37;:::i;:::-;7189:7;;:12;;7200:1;7189:12;:::i;:::-;;;:::i;:::-;;:28;;;;6457:1275;7185:70;;7437:25;:15;:40;7288:4;7295:9;7437:40;7288:4;7280:13;7288:4;7280:13;:::i;:::-;7295:9;:::i;:::-;7348:7;7322;7315:15;7322:7;7315:15;:::i;:::-;7344:2;;7348:7;;;:::i;:::-;7399;7366:15;7373:7;7366:15;:::i;:::-;7395:2;;7399:7;;;:::i;:::-;7437:15;:::i;:::-;:25;:::i;:::-;;7471:4;7437:40;7463:13;7471:4;7463:13;:::i;:::-;7437:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;7498:25;:15;:40;7437;7498;7437;;;;;6457:1275;7426:51;7505:7;7498:15;:::i;:::-;:25;:::i;:::-;;7532:4;7498:40;7524:13;7532:4;7524:13;:::i;:::-;7498:40;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;7596:9;7498:40;;;;;6457:1275;7487:51;7585:9;7596;;;:::i;:::-;7616:47;;6457:1275;7692:10;7704:7;;7713;;7687:38;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;6457:1275::o;7616:47::-;7627:36;7635:28;:17;7643:8;;;:::i;:::-;7635:17;:::i;:::-;:28;7655:8;;;:::i;:::-;7635:28;:::i;:::-;;;:::i;:::-;7627:36;;:::i;:::-;7616:47;;7498:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7437:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;7185:70::-;7226:29;;;;;;;;;;;;:::i;:::-;;;;7189:28;7205:7;;:12;;7216:1;7205:12;:::i;:::-;;;:::i;:::-;;7189:28;;6841:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;6772:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;6558:43::-;6590:11;8579;;;6590;;;;;;;;:::i;:::-;;;;6457:1275;6531:15;6457:1275;6514:15;;:::i;:::-;6531;;:::i;:::-;;;:::i;:::-;6457:1275;;:::o;1962:93:4:-;2009:13;;:::i;:::-;2041:7;2034:14;2041:7;2034:14;:::i;:::-;;:::o;3244:178::-;3388:5;3244:178;3313:4;;:::i;:::-;3345:12;;;:::i;:::-;3384:2;3388:5;;;:::i;:::-;3411:4;3404:11;:::o;480:12405:12:-;;;;;:::i;:::-;;;;;;;;;:::o;3455:140:4:-;3561:27;3455:140;3561:18;:27;3455:140;3535:7;;:::i;:::-;3561:11;;:18;:::i;:::-;:27;:::i;:::-;;:::i;:::-;3554:34;:::o;2466:103:9:-;;;:::i;:::-;2531:1;;:::i;:::-;;;:::i;:::-;2466:103::o;10160:222:12:-;10229:39;;:24;:14;10236:6;;;:::i;:::-;10229:14;:::i;:::-;:24;:::i;:::-;;10262:4;10229:39;10254:13;10262:4;10254:13;:::i;:::-;10229:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;10282;10229;;;;;10160:222;10289:6;10282:39;:24;:14;10289:6;;;:::i;:::-;10282:14;:::i;:::-;:24;:::i;:::-;;10315:4;10282:39;10307:13;10315:4;10307:13;:::i;:::-;10282:39;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;10357:8;10282:39;;;;;10160:222;10335:8;;;;:::i;:::-;10357;;;;:::i;:::-;;;:::i;:::-;10160:222::o;10282:39::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;10229:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;10160:222::-;;;:::i;:::-;:::o;480:12405::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1864:36:9:-;1899:1;;;:::i;:::-;1864:36;:::o;2575:307::-;2702:7;;;:::i;:::-;:18;;2713:7;;:::i;:::-;2702:18;:::i;:::-;;;:::i;:::-;;2698:86;;2858:17;2868:7;;:::i;:::-;2858:17;;:::i;:::-;2575:307::o;2698:86::-;2743:30;;;;;;;;;;;;:::i;:::-;;;;480:12405:12;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:9:-;1857:1;;;:::i;:::-;1818:40;:::o;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;:::-;2888:208::o;480:12405:12:-;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;1219:160:7:-;;1328:43;;1219:160;1328:43;;1219:160;1343:14;1328:43;1343:14;1360:2;1364:5;1328:43;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1219:160::o;480:12405:12:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;10442:847::-;;;10593:8;:28;;10604:17;10593:28;:::i;:::-;;;:::i;:::-;;:60;;;;10442:847;10589:108;;11199:35;10746:15;11123:28;11134:17;11161:28;10746:15;11172:17;10746:15;10739:31;10746:23;:15;:23;10764:5;10746:23;:::i;:::-;;;:::i;:::-;10739:31;:::i;:::-;10801:14;:35;:14;10818:18;;;:::i;:::-;10801:35;;:::i;:::-;10859:11;;:15;;10873:1;10859:15;:::i;:::-;;;:::i;:::-;;:33;;;10442:847;10859:51;;;10442:847;10855:250;;10442:847;11142:8;;;11134:17;:::i;:::-;11123:28;;:::i;:::-;11172:17;:::i;:::-;11161:28;;:::i;:::-;11199:35;;:::i;:::-;11263:8;;;:::i;:::-;11273;;;:::i;:::-;11258:24;;;;;:::i;:::-;;;;;;:::i;:::-;;;;10442:847::o;10855:250::-;11017:77;10966:9;11041:53;:39;11049:30;10966:9;11049:30;:18;11017:77;10966:9;10926:77;;10950:53;:39;10958:30;:18;11041:53;10966:9;10958:18;:::i;:::-;:30;10979:9;10958:30;:::i;:::-;;;:::i;:::-;10950:39;:::i;:::-;:53;10992:11;10950:53;:::i;:::-;;;:::i;:::-;10926:77;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;11049:18;:::i;:::-;11070:9;11049:30;:::i;:::-;;;:::i;:::-;11041:39;:::i;:::-;11083:11;11041:53;:::i;:::-;;;:::i;:::-;11017:77;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;10855:250;;;;;10859:51;10896:9;;:14;;10909:1;10896:14;:::i;:::-;;;:::i;:::-;;;10859:51;;:33;10878:9;;:14;;10891:1;10878:14;:::i;:::-;;;:::i;:::-;;;10859:33;;10589:108;10676:10;;;;;;;;;;;;:::i;:::-;;;;10593:60;10625:8;;:28;;10636:17;10625:28;:::i;:::-;;;:::i;:::-;;10593:60;;480:12405;;;:::o;656:96:8:-;709:7;;:::i;:::-;735:10;;728:17;:::o;8630:128:4:-;;8746:4;8630:128;8730:7;8746:4;;;:::i;:::-;8630:128::o;480:12405:12:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::o;10319:476:4:-;;;;10445:25;10455:5;10462:7;10445:25;;:::i;:::-;10484:16;;:36;;480:12405:12;;10484:36:4;:::i;:::-;;;:::i;:::-;;10480:309;;10319:476;;;;;;:::o;10480:309::-;10540:16;:24;;10559:5;10540:24;:::i;:::-;;;:::i;:::-;;10536:130;;10758:5;10716;;10732:24;10716:5;10723:7;10732:16;:24;:::i;:::-;10758:5;;;;:::i;:::-;10480:309;;;;;;10536:130;10618:7;10591:60;10618:7;;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;480:12405:12;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;5297:300:4:-;;5380:4;:18;;5388:10;5396:1;5388:10;:::i;:::-;5380:18;:::i;:::-;;;:::i;:::-;;5376:86;;5475:2;:16;;5481:10;5489:1;5481:10;:::i;:::-;5475:16;:::i;:::-;;;:::i;:::-;;5471:86;;5584:5;5574:4;5580:2;5584:5;;;:::i;:::-;5297:300::o;5471:86::-;5514:32;5535:10;5543:1;5535:10;:::i;:::-;5514:32;;;;;;;;;;;;;:::i;:::-;;;;5376:86;5421:30;5440:10;5448:1;5440:10;:::i;:::-;5421:30;;;;;;;;;;;;;:::i;:::-;;;;480:12405:12;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;11349:808::-;;;11422:10;;:::i;:::-;11469:7;11460:25;;:23;:17;11469:7;;;:::i;:::-;11460:17;:::i;:::-;:23;:::i;:::-;;:25;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;11349:808;11444:41;11503:5;;:19;;11512:10;11520:1;11512:10;:::i;:::-;11503:19;:::i;:::-;;;:::i;:::-;;;11549:5;;;;:::i;:::-;11577;;11573:578;;;;11602:6;:11;;11612:1;11602:11;:::i;:::-;;;:::i;:::-;;11598:486;;11573:578;;;;;;11349:808::o;11598:486::-;11655:30;11649:37;11663:9;11655:30;:18;11724:13;11663:9;11655:18;:::i;:::-;11676:9;11655:30;:::i;:::-;;;:::i;:::-;11649:37;:::i;:::-;11730:6;11724:13;:::i;:::-;11759:5;;:17;;11767:9;11759:17;:::i;:::-;;;:::i;:::-;;11755:315;;11598:486;;;;11755:315;11899:23;11964;11820:13;11900:9;11820:35;:13;;:::i;:::-;11837:17;:5;11845:9;11837:17;;:::i;:::-;11820:35;;:::i;:::-;11900:5;:9;11908:1;11900:9;:::i;:::-;;;:::i;:::-;11899:23;:::i;:::-;11964;;:::i;:::-;12013:9;:13;;12025:1;12013:13;:::i;:::-;;;:::i;:::-;;12009:42;;11755:315;;;;12009:42;12041:9;12034:5;12041:9;:::i;:::-;12009:42;;;;11573:578;12104:6;;;;:11;;12114:1;12104:11;:::i;:::-;;;:::i;:::-;;12100:51;;11573:578;;;12100:51;12131:9;;12139:1;12131:9;:::i;:::-;;;:::i;:::-;12100:51;;11460:25;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;12596:104::-;;12654:7;;:::i;:::-;12680:1;;:5;;12684:1;12680:5;:::i;:::-;;;:::i;:::-;;:13;;;;12688:1;12680:13;12673:20;:::o;12680:13::-;12692:1;;12680:13;;12238:301;12286:9;;:::i;:::-;12311:1;:5;;12315:1;12311:5;:::i;:::-;;;:::i;:::-;;12307:226;;;;12336:1;;12363:9;:5;:1;:5;12367:1;12363:5;:::i;:::-;;;:::i;:::-;:9;12371:1;12363:9;:::i;:::-;;;:::i;:::-;12386:89;;12393:1;:5;;12397:1;12393:5;:::i;:::-;;;:::i;:::-;;;;;12422:1;12445:15;12446:9;12422:1;12446:5;:1;12450;12446:5;;:::i;:::-;:9;:::i;:::-;12445:15;12459:1;12445:15;:::i;:::-;;;:::i;:::-;12386:89;;;12393:5;;;;;12307:226;12238:301::o;12307:226::-;12495:1;;:6;;12500:1;12495:6;:::i;:::-;;;:::i;:::-;;12491:42;;12307:226;;;12491:42;12521:1;;12517:5;12521:1;12517:5;:::i;:::-;12491:42;;;7362:208:4;7432:7;:21;;7443:10;7451:1;7443:10;:::i;:::-;7432:21;:::i;:::-;;;:::i;:::-;;7428:91;;7557:5;7544:1;7536:10;7544:1;7536:10;:::i;:::-;7548:7;7557:5;;;:::i;:::-;7362:208::o;7428:91::-;7476:32;7497:10;7505:1;7497:10;:::i;:::-;7476:32;5514;;;;;;7476;;;;;;:::i;:::-;;;;7888:206;;7958:7;:21;;7969:10;7977:1;7969:10;:::i;:::-;7958:21;:::i;:::-;;;:::i;:::-;;7954:89;;8081:5;8060:7;8077:1;8069:10;8077:1;8069:10;:::i;:::-;8081:5;;;:::i;:::-;7888:206::o;7954:89::-;8002:30;8021:10;8029:1;8021:10;:::i;:::-;8002:30;5421;;;;;;8002;;;;;;:::i;:::-;;;;8370:720:7;;8507:421;;8370:720;8450:18;;:::i;:::-;8478:19;;;:::i;:::-;8507:421;;;;;;;;;;;;;;;;8942:10;:15;;8956:1;8942:15;:::i;:::-;;;:::i;:::-;;:68;;;;8968:5;8960:14;8968:5;8960:14;:::i;:::-;:26;:31;;8990:1;8960:31;:::i;:::-;;;:::i;:::-;;8942:68;8938:146;;8370:720;:::o;8938:146::-;9058:14;9033:40;9066:5;9058:14;:::i;:::-;9033:40;;;;;;;;;;;;;:::i;:::-;;;;8942:68;8994:16;;9009:1;8994:16;:::i;:::-;;;:::i;:::-;;;8942:68;;8507:421;;;;;;;;;;480:12405:12;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;12772:111::-;12848:10;:28;12772:111;12822:7;;:::i;:::-;12856:1;12848:10;:::i;:::-;12861:15;480:12405;;;12861:15;:::i;:::-;12848:28;;:::i;:::-;12841:35;:::o;9605:432:4:-;;;9717:5;:19;;9726:10;9734:1;9726:10;:::i;:::-;9717:19;:::i;:::-;;;:::i;:::-;;9713:89;;9815:7;:21;;9826:10;9834:1;9826:10;:::i;:::-;9815:21;:::i;:::-;;;:::i;:::-;;9811:90;;9910:35;9940:5;9910:27;:18;:11;9922:5;9910:18;;:::i;:::-;9929:7;9910:27;;:::i;:::-;:35;:::i;:::-;9955:76;;9605:432;;;;:::o;9955:76::-;10005:7;10014:5;9989:31;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;9955:76;;;;;9811:90;9859:31;9879:10;9887:1;9879:10;:::i;:::-;9859:31;;;;;;;;;;;;;:::i;:::-;;;;9713:89;9759:32;9780:10;9788:1;9780:10;:::i;:::-;9759:32;;;;;;;;;;;;;:::i;:::-;;;;480:12405:12;;;;;;:::i;:::-;;:::o;5912:1107:4:-;;;;6001:4;:18;;6009:10;6017:1;6009:10;:::i;:::-;6001:18;:::i;:::-;;;:::i;:::-;;5997:540;;;;6137:21;;6153:5;6137:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5997:540;6551:2;:16;;6557:10;6565:1;6557:10;:::i;:::-;6551:16;:::i;:::-;;;:::i;:::-;;6547:425;;;;6714:21;;6730:5;6714:21;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;7002:2;7006:5;6987:25;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;5912:1107::o;6547:425::-;6925:22;6942:5;6925:22;:13;:9;6935:2;6925:13;;:::i;:::-;:22;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6547:425;;5997:540;6211:15;;:9;6221:4;6211:15;;:::i;:::-;;:::i;:::-;6244:11;:19;;6258:5;6244:19;:::i;:::-;;;:::i;:::-;;6240:115;;6493:19;6475:37;6493:11;6507:5;6493:19;;:::i;:::-;6475:15;:9;6485:4;6475:15;;:::i;:::-;:37;:::i;:::-;5997:540;;6240:115;6315:4;6290:50;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityBurned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u30d7\\u30fc\\u30eb\\u3068LP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u6a5f\\u80fd\\u3092\\u63d0\\u4f9b\\u3059\\u308b\\u30da\\u30a2\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InsufficientInputAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u5165\\u529b\\u91cf\"}],\"InsufficientLiquidity()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u6d41\\u52d5\\u6027\"}],\"InsufficientLiquidityBurned()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u6d41\\u52d5\\u6027\\u3092\\u30d0\\u30fc\\u30f3\"}],\"InsufficientOutputAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u51fa\\u529b\\u91cf\"}],\"InvalidK()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u6b63\\u306aK\\u5024\"}],\"InvalidTo()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u7121\\u52b9\\u306a\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"}],\"Overflow()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u30aa\\u30fc\\u30d0\\u30fc\\u30d5\\u30ed\\u30fc\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"Unauthorized()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u6a29\\u9650\\u306a\\u3057\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Burn(address,uint256,uint256,address)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u524a\\u9664\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount0\":\"\\u524a\\u9664\\u3055\\u308c\\u305ftoken0\\u306e\\u91cf\",\"amount1\":\"\\u524a\\u9664\\u3055\\u308c\\u305ftoken1\\u306e\\u91cf\",\"sender\":\"\\u6d41\\u52d5\\u6027\\u3092\\u524a\\u9664\\u3057\\u305f\\u30a2\\u30c9\\u30ec\\u30b9\",\"to\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"}},\"Mint(address,uint256,uint256)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u8ffd\\u52a0\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount0\":\"\\u8ffd\\u52a0\\u3055\\u308c\\u305ftoken0\\u306e\\u91cf\",\"amount1\":\"\\u8ffd\\u52a0\\u3055\\u308c\\u305ftoken1\\u306e\\u91cf\",\"sender\":\"\\u6d41\\u52d5\\u6027\\u3092\\u8ffd\\u52a0\\u3057\\u305f\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"Swap(address,uint256,uint256,uint256,uint256,address)\":{\"details\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"amount0In\":\"token0\\u306e\\u5165\\u529b\\u91cf\",\"amount0Out\":\"token0\\u306e\\u51fa\\u529b\\u91cf\",\"amount1In\":\"token1\\u306e\\u5165\\u529b\\u91cf\",\"amount1Out\":\"token1\\u306e\\u51fa\\u529b\\u91cf\",\"sender\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u3092\\u5b9f\\u884c\\u3057\\u305f\\u30a2\\u30c9\\u30ec\\u30b9\",\"to\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"}},\"Sync(uint112,uint112)\":{\"details\":\"\\u30ea\\u30b6\\u30fc\\u30d6\\u540c\\u671f\\u6642\\u306b\\u767a\\u751f\\u3059\\u308b\\u30a4\\u30d9\\u30f3\\u30c8\",\"params\":{\"reserve0\":\"token0\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\",\"reserve1\":\"token1\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(address)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u3092\\u30d0\\u30fc\\u30f3\\uff08\\u6d41\\u52d5\\u6027\\u524a\\u9664\\uff09\",\"params\":{\"to\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"amount0\":\"\\u8fd4\\u5374\\u3055\\u308c\\u308btoken0\\u306e\\u91cf\",\"amount1\":\"\\u8fd4\\u5374\\u3055\\u308c\\u308btoken1\\u306e\\u91cf\"}},\"constructor\":{\"details\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getReserves()\":{\"details\":\"\\u73fe\\u5728\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\\u3068\\u6700\\u7d42\\u66f4\\u65b0\\u30d6\\u30ed\\u30c3\\u30af\\u6642\\u523b\\u3092\\u53d6\\u5f97\",\"returns\":{\"_blockTimestampLast\":\"\\u6700\\u7d42\\u66f4\\u65b0\\u30d6\\u30ed\\u30c3\\u30af\\u6642\\u523b\",\"_reserve0\":\"token0\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\",\"_reserve1\":\"token1\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"}},\"initialize(address,address)\":{\"details\":\"\\u30da\\u30a2\\u306e\\u521d\\u671f\\u5316\\uff08\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u304b\\u3089\\u547c\\u3073\\u51fa\\u3055\\u308c\\u308b\\uff09\",\"params\":{\"_token0\":\"\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\",\"_token1\":\"\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"mint(address)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u3092\\u30df\\u30f3\\u30c8\\uff08\\u6d41\\u52d5\\u6027\\u8ffd\\u52a0\\uff09\",\"params\":{\"to\":\"LP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"liquidity\":\"\\u30df\\u30f3\\u30c8\\u3055\\u308c\\u305fLP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"swap(uint256,uint256,address,bytes)\":{\"details\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u5b9f\\u884c\",\"params\":{\"amount0Out\":\"token0\\u306e\\u51fa\\u529b\\u91cf\",\"amount1Out\":\"token1\\u306e\\u51fa\\u529b\\u91cf\",\"data\":\"\\u30b3\\u30fc\\u30eb\\u30d0\\u30c3\\u30af\\u7528\\u30c7\\u30fc\\u30bf\",\"to\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"sync()\":{\"details\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u6b8b\\u9ad8\\u3092\\u30ea\\u30b6\\u30fc\\u30d6\\u306b\\u540c\\u671f\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"stateVariables\":{\"MINIMUM_LIQUIDITY\":{\"details\":\"\\u6700\\u5c0f\\u6d41\\u52d5\\u6027\\u91cf\\uff08\\u6700\\u521d\\u306e\\u6d41\\u52d5\\u6027\\u63d0\\u4f9b\\u6642\\u306b\\u30ed\\u30c3\\u30af\\u3055\\u308c\\u308b\\uff09\"},\"factory\":{\"details\":\"\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"},\"kLast\":{\"details\":\"kLast\\uff08\\u624b\\u6570\\u6599\\u8a08\\u7b97\\u7528\\uff09\"},\"price0CumulativeLast\":{\"details\":\"\\u7d2f\\u7a4d\\u4fa1\\u683c\\uff08\\u4fa1\\u683c\\u30aa\\u30e9\\u30af\\u30eb\\u7528\\uff09\"},\"reserve0\":{\"details\":\"\\u524d\\u56de\\u306e\\u5404\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"},\"token0\":{\"details\":\"\\u30da\\u30a2\\u306e\\u6700\\u521d\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"},\"token1\":{\"details\":\"\\u30da\\u30a2\\u306e\\u4e8c\\u756a\\u76ee\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"title\":\"DexPair\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Uniswap V2\\u306e\\u30da\\u30a2\\u30d1\\u30bf\\u30fc\\u30f3\\u306b\\u57fa\\u3065\\u3044\\u305f\\u5b9f\\u88c5\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexPair.sol\":\"DexPair\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DexPair.sol\":{\"keccak256\":\"0x8b53a5b7f2532f3629d3c3612bffaf5d8461014960ac9380fa9be5a0650b8422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d702f28491775f2a0dba25cdb6824acccd461daa11c97857251a5c91be359fc7\",\"dweb:/ipfs/QmNjbjbfPqusFGa1FsY6HVUpvUpB6qieKJr6brEbgt63vn\"]}},\"version\":1}"
        },
        "IFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "feeTo()": "017e7e58"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30a4\\u30f3\\u30bf\\u30fc\\u30d5\\u30a7\\u30fc\\u30b9\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexPair.sol\":\"IFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DexPair.sol\":{\"keccak256\":\"0x8b53a5b7f2532f3629d3c3612bffaf5d8461014960ac9380fa9be5a0650b8422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d702f28491775f2a0dba25cdb6824acccd461daa11c97857251a5c91be359fc7\",\"dweb:/ipfs/QmNjbjbfPqusFGa1FsY6HVUpvUpB6qieKJr6brEbgt63vn\"]}},\"version\":1}"
        }
      },
      "contracts/DexRouter.sol": {
        "DexRouter": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "factoryAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "DeadlineExpired",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExcessiveInputAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "IdenticalTokens",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientAAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientBAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientOutputAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInputAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidPath",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "PairDoesNotExist",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ZeroAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FACTORY",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountADesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsIn",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reserveA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 276,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 291,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 401,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 206,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 124,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 243,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 482,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 355,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 232,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 485,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 516,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constructor_DexRouter": {
                  "entryPoint": 407,
                  "id": 2906,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_ReentrancyGuard": {
                  "entryPoint": 621,
                  "id": 1361,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 389,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 361,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 488,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 558,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_DexRouter": {
                  "entryPoint": 322,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 167,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 358,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 145,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_uint256": {
                  "entryPoint": 586,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 130,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 227,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 135,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 529,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 535,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 589,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 255,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a06040523461007757610019610014610142565b610197565b61002161007c565b6128af61028282396080518181816103fc01528181610ef30152818161121f0152818161147d0152818161190c01528181611b7901528181611ccb015281816121f00152818161228f015261250101526128af90f35b610082565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906100b190610087565b810190811060018060401b038211176100c957604052565b610091565b906100e16100da61007c565b92836100a7565b565b600080fd5b60018060a01b031690565b6100fc906100e8565b90565b610108816100f3565b0361010f57565b600080fd5b90505190610121826100ff565b565b9060208282031261013d5761013a91600001610114565b90565b6100e3565b610160612b3180380380610155816100ce565b928339810190610123565b90565b90565b90565b61017d61017861018292610163565b610166565b6100e8565b90565b61018e90610169565b90565b60000190565b61019f61026d565b806101bb6101b56101b06000610185565b6100f3565b916100f3565b146101c557608052565b600063d92e233d60e01b8152806101de60048201610191565b0390fd5b90565b90565b6101fc6101f7610201926101e2565b610166565b6101e5565b90565b61020e60016101e8565b90565b60001b90565b9061022460001991610211565b9181191691161790565b61024261023d610247926101e5565b610166565b6101e5565b90565b90565b9061026261025d6102699261022e565b61024a565b8254610217565b9055565b61027f610278610204565b600061024d565b56fe60806040526004361015610013575b61083d565b61001e6000356100bd565b8063054d50d4146100b85780631f00ca74146100b35780632dd31000146100ae57806338ed1739146100a957806385f8c259146100a45780638803dbee1461009f578063baa2abde1461009a578063d06ca61f14610095578063d52bb6f4146100905763e8e337000361000e576107fb565b61070f565b6106ab565b61066e565b61059d565b610567565b61052b565b610441565b6103b4565b61015d565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6100e4816100d8565b036100eb57565b600080fd5b905035906100fd826100db565b565b90916060828403126101355761013261011b84600085016100f0565b9361012981602086016100f0565b936040016100f0565b90565b6100ce565b610143906100d8565b9052565b919061015b9060006020850194019061013a565b565b3461018e5761018a6101796101733660046100ff565b91610955565b6101816100c3565b91829182610147565b0390f35b6100c9565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906101c290610198565b810190811067ffffffffffffffff8211176101dc57604052565b6101a2565b906101f46101ed6100c3565b92836101b8565b565b67ffffffffffffffff811161020e5760208091020190565b6101a2565b600080fd5b60018060a01b031690565b61022c90610218565b90565b61023881610223565b0361023f57565b600080fd5b905035906102518261022f565b565b90929192610268610263826101f6565b6101e1565b93818552602080860192028301928184116102a557915b83831061028c5750505050565b6020809161029a8486610244565b81520192019161027f565b610213565b9080601f830112156102c8578160206102c593359101610253565b90565b610193565b91909160408184031261030e576102e783600083016100f0565b92602082013567ffffffffffffffff81116103095761030692016102aa565b90565b6100d3565b6100ce565b5190565b60209181520190565b60200190565b61032f906100d8565b9052565b9061034081602093610326565b0190565b60200190565b9061036761036161035a84610313565b8093610317565b92610320565b9060005b8181106103785750505090565b90919261039161038b6001928651610333565b94610344565b910191909161036b565b6103b1916020820191600081840391015261034a565b90565b346103e5576103e16103d06103ca3660046102cd565b90610b9c565b6103d86100c3565b9182918261039b565b0390f35b6100c9565b60009103126103f557565b6100ce565b7f000000000000000000000000000000000000000000000000000000000000000090565b61042790610223565b9052565b919061043f9060006020850194019061041e565b565b34610471576104513660046103ea565b61046d61045c6103fa565b6104646100c3565b9182918261042b565b0390f35b6100c9565b600080fd5b909182601f830112156104b55781359167ffffffffffffffff83116104b05760200192602083028401116104ab57565b610213565b610476565b610193565b9060a082820312610526576104d281600084016100f0565b926104e082602085016100f0565b9260408101359167ffffffffffffffff8311610521576105058461051e94840161047b565b9390946105158160608601610244565b936080016100f0565b90565b6100d3565b6100ce565b346105625761055e61054d6105413660046104ba565b9493909392919261102b565b6105556100c3565b9182918261039b565b0390f35b6100c9565b346105985761059461058361057d3660046100ff565b91611044565b61058b6100c3565b91829182610147565b0390f35b6100c9565b346105d4576105d06105bf6105b33660046104ba565b94939093929192611357565b6105c76100c3565b9182918261039b565b0390f35b6100c9565b60e081830312610645576105f08260008301610244565b926105fe8360208401610244565b9261060c81604085016100f0565b9261061a82606083016100f0565b9261064261062b84608085016100f0565b936106398160a08601610244565b9360c0016100f0565b90565b6100ce565b91602061066c9294936106656040820196600083019061013a565b019061013a565b565b346106a65761068d6106813660046105d9565b959490949391936116a6565b906106a26106996100c3565b9283928361064a565b0390f35b6100c9565b346106dc576106d86106c76106c13660046102cd565b906116d9565b6106cf6100c3565b9182918261039b565b0390f35b6100c9565b919060408382031261070a57806106fe6107079260008601610244565b93602001610244565b90565b6100ce565b34610741576107286107223660046106e1565b906118e2565b9061073d6107346100c3565b9283928361064a565b0390f35b6100c9565b9190610100838203126107c3576107608160008501610244565b9261076e8260208301610244565b9261077c83604084016100f0565b9261078a81606085016100f0565b9261079882608083016100f0565b926107c06107a98460a085016100f0565b936107b78160c08601610244565b9360e0016100f0565b90565b6100ce565b6040906107f26107f994969593966107e86060840198600085019061013a565b602083019061013a565b019061013a565b565b3461083857610834610820610811366004610746565b96959095949194939293611dcc565b61082b9391936100c3565b938493846107c8565b0390f35b6100c9565b600080fd5b600090565b90565b90565b61086161085c61086692610847565b61084a565b6100d8565b90565b60000190565b90565b61088661088161088b9261086f565b61084a565b6100d8565b90565b634e487b7160e01b600052601160045260246000fd5b6108b36108b9919392936100d8565b926100d8565b916108c58382026100d8565b9281840414901517156108d457565b61088e565b90565b6108f06108eb6108f5926108d9565b61084a565b6100d8565b90565b61090761090d919392936100d8565b926100d8565b820180921161091857565b61088e565b634e487b7160e01b600052601260045260246000fd5b61093f610945916100d8565b916100d8565b908115610950570490565b61091d565b61095d610842565b508061097261096c600061084d565b916100d8565b14610a18578161098b610985600061084d565b916100d8565b1480156109fd575b6109e0576109dd926109d26109c06109b96109d7946109b36103e5610872565b906108a4565b92836108a4565b936109cc6103e86108dc565b906108a4565b6108f8565b90610933565b90565b60006342301c2360e01b8152806109f960048201610869565b0390fd5b5082610a12610a0c600061084d565b916100d8565b14610993565b600063340dabef60e01b815280610a3160048201610869565b0390fd5b606090565b5190565b90565b610a55610a50610a5a92610a3e565b61084a565b6100d8565b90565b67ffffffffffffffff8111610a755760208091020190565b6101a2565b90610a8c610a8783610a5d565b6101e1565b918252565b369037565b90610abb610aa383610a7a565b92602080610ab18693610a5d565b9201910390610a91565b565b90565b610ad4610acf610ad992610abd565b61084a565b6100d8565b90565b610aeb610af1919392936100d8565b926100d8565b8203918211610afc57565b61088e565b634e487b7160e01b600052603260045260246000fd5b90610b2182610313565b811015610b32576020809102010190565b610b01565b90610b41906100d8565b9052565b610b4e906100d8565b60008114610b5d576001900390565b61088e565b90610b6c82610a3a565b811015610b7d576020809102010190565b610b01565b610b8c9051610223565b90565b610b9990516100d8565b90565b9190610ba6610a35565b50610bb081610a3a565b610bc3610bbd6002610a41565b916100d8565b10610cdb57610c0a610bdc610bd783610a3a565b610a96565b93610c058591610bfe610bee88610313565b610bf86001610ac0565b90610adc565b9092610b17565b610b37565b610c26610c1682610a3a565b610c206001610ac0565b90610adc565b5b80610c3b610c35600061084d565b916100d8565b1115610cd757610cd290610ccd610ca8610c8d610c74610c6f87610c6987610c636001610ac0565b90610adc565b90610b62565b610b82565b610c87610c82888790610b62565b610b82565b906118e2565b610ca0610c9b8a8790610b17565b610b8f565b919091611044565b610cc88791610cc185610cbb6001610ac0565b90610adc565b9092610b17565b610b37565b610b45565b610c27565b5050565b60006320db826760e01b815280610cf460048201610869565b0390fd5b95949392919085610d12610d0c42926100d8565b916100d8565b11610d2357610d2096610d40565b90565b6000631ab7da6b60e01b815280610d3c60048201610869565b0390fd5b90610d57969594939291610d52611e8d565b610e64565b90610d60611ef3565b565b610d6d913691610253565b90565b9190811015610d80576020020190565b610b01565b35610d8f8161022f565b90565b610da6610da1610dab92610218565b61084a565b610218565b90565b610db790610d92565b90565b610dc390610dae565b90565b610dcf90610d92565b90565b610ddb90610dc6565b90565b610de790610d92565b90565b610df390610dde565b90565b600080fd5b60e01b90565b90505190610e0e8261022f565b565b90602082820312610e2a57610e2791600001610e01565b90565b6100ce565b916020610e51929493610e4a6040820196600083019061041e565b019061041e565b565b610e5b6100c3565b3d6000823e3d90fd5b610e7d9297965050610e77838590610d62565b906116d9565b94610ebe610eb8610eb2610ead89610ea7610e978c610313565b610ea16001610ac0565b90610adc565b90610b17565b610b8f565b926100d8565b916100d8565b1061100e57610ee8610ee3610ede8385610ed8600061084d565b91610d70565b610d85565b610dba565b923390610f1c610f177f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a4390591610f41610f3c8789610f36600061084d565b91610d70565b610d85565b90610f7a610f62610f5d898b610f576001610ac0565b91610d70565b610d85565b94610f85610f6e6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa95861561100957610fd796610fd194610fc793600092610fd9575b50610fc1610fbc8c610fb6600061084d565b90610b17565b610b8f565b92611f6e565b8692939093610d62565b906120db565b565b610ffb91925060203d8111611002575b610ff381836101b8565b810190610e10565b9038610fa4565b503d610fe9565b610e53565b60006342301c2360e01b81528061102760048201610869565b0390fd5b90611041959493929161103c610a35565b610cf8565b90565b9161104d610842565b508261106261105c600061084d565b916100d8565b1461111b578161107b611075600061084d565b916100d8565b148015611100575b6110e3576110ca6110b96110e0946110b36110a26110d09683906108a4565b6110ad6103e86108dc565b906108a4565b93610adc565b6110c46103e5610872565b906108a4565b90610933565b6110da6001610ac0565b906108f8565b90565b600063340dabef60e01b8152806110fc60048201610869565b0390fd5b508061111561110f600061084d565b916100d8565b14611083565b60006342301c2360e01b81528061113460048201610869565b0390fd5b9594939291908561115261114c42926100d8565b916100d8565b116111635761116096611180565b90565b6000631ab7da6b60e01b81528061117c60048201610869565b0390fd5b90611197969594939291611192611e8d565b6111a2565b906111a0611ef3565b565b6111bb92979650506111b5838590610d62565b90610b9c565b946111ea6111e46111de6111d9896111d3600061084d565b90610b17565b610b8f565b926100d8565b916100d8565b1161133a5761121461120f61120a8385611204600061084d565b91610d70565b610d85565b610dba565b9233906112486112437f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a439059161126d6112688789611262600061084d565b91610d70565b610d85565b906112a661128e611289898b6112836001610ac0565b91610d70565b610d85565b946112b161129a6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa95861561133557611303966112fd946112f393600092611305575b506112ed6112e88c6112e2600061084d565b90610b17565b610b8f565b92611f6e565b8692939093610d62565b906120db565b565b61132791925060203d811161132e575b61131f81836101b8565b810190610e10565b90386112d0565b503d611315565b610e53565b600063e1b0da4f60e01b81528061135360048201610869565b0390fd5b9061136d9594939291611368610a35565b611138565b90565b97969594939291908761138c61138642926100d8565b916100d8565b1161139e5761139a986113bb565b9091565b6000631ab7da6b60e01b8152806113b760048201610869565b0390fd5b906113d498979695949392916113cf611e8d565b611469565b90916113de611ef3565b565b6113f46113ef6113f992610847565b61084a565b610218565b90565b611405906113e0565b90565b61141190610d92565b90565b61141d90611408565b90565b61142990610dde565b90565b90505190611439826100db565b565b91906040838203126114645780611458611461926000860161142c565b9360200161142c565b90565b6100ce565b9091939297509795939750506114a66114a17f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a439059184906114cc8a946114d76114c06100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa9081156116a157600091611673575b5092836115086115026114fd60006113fc565b610223565b91610223565b146116565761153a6115358561153060409561152661156399610dba565b9033849192611f6e565b611414565b611420565b61155860006389afcb4461154c6100c3565b97889586948593610dfb565b83526004830161042b565b03925af1801561165157600080939091611614575b5061159161158b61159792949784612436565b50610223565b91610223565b1460001461160f57925b92936115b66115b086926100d8565b916100d8565b106115f2576115ce6115c884926100d8565b916100d8565b106115d557565b600063ef71d09160e01b8152806115ee60048201610869565b0390fd5b6000638dc525d160e01b81528061160b60048201610869565b0390fd5b6115a1565b61158b935061159791506116416115919160403d811161164a575b61163981836101b8565b81019061143b565b94509150611578565b503d61162f565b610e53565b600063317f12fd60e21b81528061166f60048201610869565b0390fd5b611694915060203d811161169a575b61168c81836101b8565b810190610e10565b386114ea565b503d611682565b610e53565b906116c69695949392916116b8610842565b6116c0610842565b90611370565b9091565b60016116d691016100d8565b90565b91906116e3610a35565b506116ed81610a3a565b6117006116fa6002610a41565b916100d8565b1061180a5761173361171961171483610a3a565b610a96565b9361172e85611728600061084d565b90610b17565b610b37565b61173b610842565b5b8061176a61176461175f61174f86610a3a565b6117596001610ac0565b90610adc565b6100d8565b916100d8565b101561180657611801906117fc6117d76117bc61179061178b878690610b62565b610b82565b6117b66117b1886117ab886117a56001610ac0565b906108f8565b90610b62565b610b82565b906118e2565b6117cf6117ca8a8790610b17565b610b8f565b919091610955565b6117f787916117f0856117ea6001610ac0565b906108f8565b9092610b17565b610b37565b6116ca565b61173c565b5050565b60006320db826760e01b81528061182360048201610869565b0390fd5b6dffffffffffffffffffffffffffff1690565b61184381611827565b0361184a57565b600080fd5b9050519061185c8261183a565b565b63ffffffff1690565b6118708161185e565b0361187757565b600080fd5b9050519061188982611867565b565b90916060828403126118c1576118be6118a7846000850161184f565b936118b5816020860161184f565b9360400161187c565b90565b6100ce565b6118da6118d56118df92611827565b61084a565b6100d8565b90565b906118eb610842565b506118f4610842565b50611900828290612436565b509060206119356119307f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b9163e6a439059261195986929461196461194d6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa908115611ab657600091611a88575b50908161199561198f61198a60006113fc565b610223565b91610223565b14611a6b5760606119b06119ab6119c694611414565b611420565b630902f1ac906119be6100c3565b948592610dfb565b825281806119d660048201610869565b03915afa8015611a6657600080939091611a24575b50611a0b611a046119fe611a11936118c6565b946118c6565b9492610223565b91610223565b14600014611a1f57905b9091565b611a1b565b6119fe9350611a119150611a04611a54611a0b9260603d8111611a5f575b611a4c81836101b8565b81019061188b565b5095509250506119eb565b503d611a42565b610e53565b505050600090611a85611a7f60009361084d565b9261084d565b90565b611aa9915060203d8111611aaf575b611aa181836101b8565b810190610e10565b38611977565b503d611a97565b610e53565b9998979695949392919089611ad9611ad342926100d8565b916100d8565b11611aec57611ae79a611b09565b909192565b6000631ab7da6b60e01b815280611b0560048201610869565b0390fd5b90611b249a999897969594939291611b1f611e8d565b611b50565b909192611b2f611ef3565b565b90602082820312611b4b57611b489160000161142c565b90565b6100ce565b611b6e97949b999a50979495929750505085938990919293946124e1565b939094611ba2611b9d7f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a43905918590611bc88594611bd3611bbc6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa908115611dc757600091611d99575b509283611c04611bfe611bf960006113fc565b610223565b91610223565b14611cc0575b611c48611c7694611c43611c3960209695611c34611c2a611c4d97610dba565b8d33879192611f6e565b610dba565b3383908b92611f6e565b611414565b611420565b611c6b6000636a627842611c5f6100c3565b96879586948593610dfb565b83526004830161042b565b03925af1908115611cbb57600091611c8d575b5090565b611cae915060203d8111611cb4575b611ca681836101b8565b810190611b31565b38611c89565b503d611c9c565b610e53565b925090611cf4611cef7f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063c9c65396918590611d1c60008795611d27611d106100c3565b97889687958694610dfb565b845260048401610e2f565b03925af1928315611d9457611c7694611c43611c39611c4893611c34611c2a602099611c4d98600091611d67575b509a5050509596505050915050611c0a565b611d8791508b3d8111611d8d575b611d7f81836101b8565b810190610e10565b38611d55565b503d611d75565b610e53565b611dba915060203d8111611dc0575b611db281836101b8565b810190610e10565b38611be6565b503d611da8565b610e53565b90611df597969594939291611ddf610842565b611de7610842565b611def610842565b91611abb565b909192565b60001c90565b90565b611e0f611e1491611dfa565b611e00565b90565b611e219054611e03565b90565b611e2e6002610a41565b90565b60001b90565b90611e4460001991611e31565b9181191691161790565b611e62611e5d611e67926100d8565b61084a565b6100d8565b90565b90565b90611e82611e7d611e8992611e4e565b611e6a565b8254611e37565b9055565b611e976000611e17565b611eb0611eaa611ea5611e24565b6100d8565b916100d8565b14611ec957611ec7611ec0611e24565b6000611e6d565b565b6000633ee5aeb560e01b815280611ee260048201610869565b0390fd5b611ef06001610ac0565b90565b611f05611efe611ee6565b6000611e6d565b565b611f1090610dde565b90565b63ffffffff60e01b1690565b611f33611f2e611f389261185e565b610dfb565b611f13565b90565b604090611f65611f6c9496959396611f5b6060840198600085019061041e565b602083019061041e565b019061013a565b565b600492611fa8611fbc9593611fb79394611f8f6323b872dd92949192611f1f565b93611f986100c3565b9788956020870190815201611f3b565b602082018103825203836101b8565b612712565b565b67ffffffffffffffff8111611fdc57611fd8602091610198565b0190565b6101a2565b90611ff3611fee83611fbe565b6101e1565b918252565b369037565b9061202261200a83611fe1565b926020806120188693611fbe565b9201910390611ff8565b565b600091031261202f57565b6100ce565b5190565b60209181520190565b60005b838110612055575050906000910152565b806020918301518185015201612044565b61208561208e6020936120939361207c81612034565b93848093612038565b95869101612041565b610198565b0190565b90926120cb906120c16120d896946120b76080860197600087019061013a565b602085019061013a565b604083019061041e565b6060818403910152612066565b90565b9092916120e6610842565b5b8061211561210f61210a6120fa89610a3a565b6121046001610ac0565b90610adc565b6100d8565b916100d8565b101561242a5761212e612129868390610b62565b610b82565b906121556121508761214a846121446001610ac0565b906108f8565b90610b62565b610b82565b91612161818490612436565b50906121896121848761217e866121786001610ac0565b906108f8565b90610b17565b610b8f565b9161219d6121978392610223565b91610223565b1460001461241a576121af600061084d565b5b9190836121e06121da6121d56121c58d610a3a565b6121cf6002610a41565b90610adc565b6100d8565b916100d8565b10600014612412576122196122147f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b60208a63e6a439059261226461224c6122478b946122418c61223b6002610a41565b906108f8565b90610b62565b610b82565b9461226f6122586100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa801561240d576020916000916123e0575b505b956122b86122b37f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b6122da63e6a439059492946122e56122ce6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa9081156123db5761230b91612306916000916123ad575b50611414565b611420565b63022c0d9f929194612325612320600061084d565b611ffd565b823b156123a857600094612357869261234c946123406100c3565b9a8b9889978896610dfb565b865260048601612097565b03925af19182156123a35761237192612376575b506116ca565b6120e7565b6123969060003d811161239c575b61238e81836101b8565b810190612024565b3861236b565b503d612384565b610e53565b610df6565b6123ce915060203d81116123d4575b6123c681836101b8565b810190610e10565b38612300565b503d6123bc565b610e53565b6124009150823d8111612406575b6123f881836101b8565b810190610e10565b38612284565b503d6123ee565b610e53565b602086612286565b612424600061084d565b916121b0565b5050509050565b600090565b61243e612431565b50612447612431565b508061245b61245584610223565b91610223565b146124c4578061247361246d84610223565b91610223565b106000146124bf57905b90918261249b61249561249060006113fc565b610223565b91610223565b146124a257565b600063d92e233d60e01b8152806124bb60048201610869565b0390fd5b61247d565b6000635c6d7b7360e01b8152806124dd60048201610869565b0390fd5b9094919392946124ef610842565b506124f8610842565b5061252a6125257f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a43905918490612550859461255b6125446100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa90811561270d576000916126df575b5061258a61258461257f60006113fc565b610223565b91610223565b1460001461259a5750505050915b565b6125a3916118e2565b929092836125ba6125b4600061084d565b916100d8565b14806126c4575b6000146125d35750505050915b612598565b6125e385969394968783916127cd565b95866125f76125f1866100d8565b916100d8565b1115600014612640575050505061261761261184926100d8565b916100d8565b1061262357915b6125ce565b600063ef71d09160e01b81528061263c60048201610869565b0390fd5b90919350826126539396509190916127cd565b9161266761266184926100d8565b916100d8565b116126a75761267f61267983926100d8565b916100d8565b1061268a579161261e565b6000638dc525d160e01b8152806126a360048201610869565b0390fd5b600063e1b0da4f60e01b8152806126c060048201610869565b0390fd5b50806126d96126d3600061084d565b916100d8565b146125c1565b612700915060203d8111612706575b6126f881836101b8565b810190610e10565b3861256e565b503d6126ee565b610e53565b906000602091612720610842565b50612729610842565b50828151910182855af1156127c1573d6000519061275061274a600061084d565b916100d8565b146000146127a7575061276281611f07565b3b612776612770600061084d565b916100d8565b145b61277f5750565b61278b6127a391611f07565b6000918291635274afe760e01b83526004830161042b565b0390fd5b6127ba6127b46001610ac0565b916100d8565b1415612778565b6040513d6000823e3d90fd5b6127d5610842565b50806127ea6127e4600061084d565b916100d8565b1461285c57816128036127fd600061084d565b916100d8565b148015612841575b612824576128219261281c916108a4565b610933565b90565b60006342301c2360e01b81528061283d60048201610869565b0390fd5b5082612856612850600061084d565b916100d8565b1461280b565b6000638dc525d160e01b81528061287560048201610869565b0390fdfea264697066735822122079c13c1e76957798084965add50180a01d312ae3270ac94d95e5385781d6c10964736f6c634300081e0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x77 JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST PUSH2 0x21 PUSH2 0x7C JUMP JUMPDEST PUSH2 0x28AF PUSH2 0x282 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x3FC ADD MSTORE DUP2 DUP2 PUSH2 0xEF3 ADD MSTORE DUP2 DUP2 PUSH2 0x121F ADD MSTORE DUP2 DUP2 PUSH2 0x147D ADD MSTORE DUP2 DUP2 PUSH2 0x190C ADD MSTORE DUP2 DUP2 PUSH2 0x1B79 ADD MSTORE DUP2 DUP2 PUSH2 0x1CCB ADD MSTORE DUP2 DUP2 PUSH2 0x21F0 ADD MSTORE DUP2 DUP2 PUSH2 0x228F ADD MSTORE PUSH2 0x2501 ADD MSTORE PUSH2 0x28AF SWAP1 RETURN JUMPDEST PUSH2 0x82 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xB1 SWAP1 PUSH2 0x87 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xC9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST SWAP1 PUSH2 0xE1 PUSH2 0xDA PUSH2 0x7C JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xA7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFC SWAP1 PUSH2 0xE8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x108 DUP2 PUSH2 0xF3 JUMP JUMPDEST SUB PUSH2 0x10F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x121 DUP3 PUSH2 0xFF JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x13D JUMPI PUSH2 0x13A SWAP2 PUSH1 0x0 ADD PUSH2 0x114 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x160 PUSH2 0x2B31 DUP1 CODESIZE SUB DUP1 PUSH2 0x155 DUP2 PUSH2 0xCE JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x123 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x178 PUSH2 0x182 SWAP3 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18E SWAP1 PUSH2 0x169 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x26D JUMP JUMPDEST DUP1 PUSH2 0x1BB PUSH2 0x1B5 PUSH2 0x1B0 PUSH1 0x0 PUSH2 0x185 JUMP JUMPDEST PUSH2 0xF3 JUMP JUMPDEST SWAP2 PUSH2 0xF3 JUMP JUMPDEST EQ PUSH2 0x1C5 JUMPI PUSH1 0x80 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1DE PUSH1 0x4 DUP3 ADD PUSH2 0x191 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1FC PUSH2 0x1F7 PUSH2 0x201 SWAP3 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH1 0x1 PUSH2 0x1E8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x224 PUSH1 0x0 NOT SWAP2 PUSH2 0x211 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23D PUSH2 0x247 SWAP3 PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x262 PUSH2 0x25D PUSH2 0x269 SWAP3 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x217 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x27F PUSH2 0x278 PUSH2 0x204 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xBD JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1F00CA74 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x2DD31000 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x85F8C259 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x8803DBEE EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xD06CA61F EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xD52BB6F4 EQ PUSH2 0x90 JUMPI PUSH4 0xE8E33700 SUB PUSH2 0xE JUMPI PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE4 DUP2 PUSH2 0xD8 JUMP JUMPDEST SUB PUSH2 0xEB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xFD DUP3 PUSH2 0xDB JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x135 JUMPI PUSH2 0x132 PUSH2 0x11B DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH2 0x129 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0xD8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x15B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x18E JUMPI PUSH2 0x18A PUSH2 0x179 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF JUMP JUMPDEST SWAP2 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x181 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x147 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x1C2 SWAP1 PUSH2 0x198 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST SWAP1 PUSH2 0x1F4 PUSH2 0x1ED PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x1B8 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x20E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x22C SWAP1 PUSH2 0x218 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x223 JUMP JUMPDEST SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x251 DUP3 PUSH2 0x22F JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x268 PUSH2 0x263 DUP3 PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x2A5 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x28C JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x29A DUP5 DUP7 PUSH2 0x244 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 PUSH2 0x2C5 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x253 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x30E JUMPI PUSH2 0x2E7 DUP4 PUSH1 0x0 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x309 JUMPI PUSH2 0x306 SWAP3 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x32F SWAP1 PUSH2 0xD8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x340 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x326 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x367 PUSH2 0x361 PUSH2 0x35A DUP5 PUSH2 0x313 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x317 JUMP JUMPDEST SWAP3 PUSH2 0x320 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x378 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x391 PUSH2 0x38B PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x333 JUMP JUMPDEST SWAP5 PUSH2 0x344 JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x36B JUMP JUMPDEST PUSH2 0x3B1 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x34A JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3E5 JUMPI PUSH2 0x3E1 PUSH2 0x3D0 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD JUMP JUMPDEST SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x3F5 JUMPI JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x427 SWAP1 PUSH2 0x223 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x43F SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x471 JUMPI PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x46D PUSH2 0x45C PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x464 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x42B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4B5 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x4B0 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x4AB JUMPI JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x526 JUMPI PUSH2 0x4D2 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x4E0 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x521 JUMPI PUSH2 0x505 DUP5 PUSH2 0x51E SWAP5 DUP5 ADD PUSH2 0x47B JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x515 DUP2 PUSH1 0x60 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0x80 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST CALLVALUE PUSH2 0x562 JUMPI PUSH2 0x55E PUSH2 0x54D PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BA JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x555 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST CALLVALUE PUSH2 0x598 JUMPI PUSH2 0x594 PUSH2 0x583 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0xFF JUMP JUMPDEST SWAP2 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0x58B PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x147 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST CALLVALUE PUSH2 0x5D4 JUMPI PUSH2 0x5D0 PUSH2 0x5BF PUSH2 0x5B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BA JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x645 JUMPI PUSH2 0x5F0 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x5FE DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x60C DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x61A DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x642 PUSH2 0x62B DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH2 0x639 DUP2 PUSH1 0xA0 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0xC0 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x66C SWAP3 SWAP5 SWAP4 PUSH2 0x665 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x6A6 JUMPI PUSH2 0x68D PUSH2 0x681 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 PUSH2 0x6A2 PUSH2 0x699 PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x64A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST CALLVALUE PUSH2 0x6DC JUMPI PUSH2 0x6D8 PUSH2 0x6C7 PUSH2 0x6C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD JUMP JUMPDEST SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x6CF PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x70A JUMPI DUP1 PUSH2 0x6FE PUSH2 0x707 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x244 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST CALLVALUE PUSH2 0x741 JUMPI PUSH2 0x728 PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 PUSH2 0x73D PUSH2 0x734 PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x64A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x7C3 JUMPI PUSH2 0x760 DUP2 PUSH1 0x0 DUP6 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x76E DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x77C DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x78A DUP2 PUSH1 0x60 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x798 DUP3 PUSH1 0x80 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x7C0 PUSH2 0x7A9 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH2 0x7B7 DUP2 PUSH1 0xC0 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0xE0 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x7F2 PUSH2 0x7F9 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x7E8 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x838 JUMPI PUSH2 0x834 PUSH2 0x820 PUSH2 0x811 CALLDATASIZE PUSH1 0x4 PUSH2 0x746 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x1DCC JUMP JUMPDEST PUSH2 0x82B SWAP4 SWAP2 SWAP4 PUSH2 0xC3 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x7C8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x861 PUSH2 0x85C PUSH2 0x866 SWAP3 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x886 PUSH2 0x881 PUSH2 0x88B SWAP3 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8B3 PUSH2 0x8B9 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xD8 JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0x8C5 DUP4 DUP3 MUL PUSH2 0xD8 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8D4 JUMPI JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x8F0 PUSH2 0x8EB PUSH2 0x8F5 SWAP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x90D SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xD8 JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x918 JUMPI JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x93F PUSH2 0x945 SWAP2 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x950 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH2 0x95D PUSH2 0x842 JUMP JUMPDEST POP DUP1 PUSH2 0x972 PUSH2 0x96C PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0xA18 JUMPI DUP2 PUSH2 0x98B PUSH2 0x985 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x9FD JUMPI JUMPDEST PUSH2 0x9E0 JUMPI PUSH2 0x9DD SWAP3 PUSH2 0x9D2 PUSH2 0x9C0 PUSH2 0x9B9 PUSH2 0x9D7 SWAP5 PUSH2 0x9B3 PUSH2 0x3E5 PUSH2 0x872 JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8A4 JUMP JUMPDEST SWAP4 PUSH2 0x9CC PUSH2 0x3E8 PUSH2 0x8DC JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0x933 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x9F9 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH2 0xA12 PUSH2 0xA0C PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x340DABEF PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xA31 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA55 PUSH2 0xA50 PUSH2 0xA5A SWAP3 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA75 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST SWAP1 PUSH2 0xA8C PUSH2 0xA87 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0xABB PUSH2 0xAA3 DUP4 PUSH2 0xA7A JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0xAB1 DUP7 SWAP4 PUSH2 0xA5D JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0xA91 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xACF PUSH2 0xAD9 SWAP3 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAEB PUSH2 0xAF1 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xD8 JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xAFC JUMPI JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xB21 DUP3 PUSH2 0x313 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB32 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST SWAP1 PUSH2 0xB41 SWAP1 PUSH2 0xD8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0xB4E SWAP1 PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0xB5D JUMPI PUSH1 0x1 SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST SWAP1 PUSH2 0xB6C DUP3 PUSH2 0xA3A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH2 0xB8C SWAP1 MLOAD PUSH2 0x223 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB99 SWAP1 MLOAD PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBA6 PUSH2 0xA35 JUMP JUMPDEST POP PUSH2 0xBB0 DUP2 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xBC3 PUSH2 0xBBD PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0xCDB JUMPI PUSH2 0xC0A PUSH2 0xBDC PUSH2 0xBD7 DUP4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST SWAP4 PUSH2 0xC05 DUP6 SWAP2 PUSH2 0xBFE PUSH2 0xBEE DUP9 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xBF8 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0xC26 PUSH2 0xC16 DUP3 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xC20 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC3B PUSH2 0xC35 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCD2 SWAP1 PUSH2 0xCCD PUSH2 0xCA8 PUSH2 0xC8D PUSH2 0xC74 PUSH2 0xC6F DUP8 PUSH2 0xC69 DUP8 PUSH2 0xC63 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0xC87 PUSH2 0xC82 DUP9 DUP8 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xCA0 PUSH2 0xC9B DUP11 DUP8 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0xCC8 DUP8 SWAP2 PUSH2 0xCC1 DUP6 PUSH2 0xCBB PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x20DB8267 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xCF4 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 PUSH2 0xD12 PUSH2 0xD0C TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0xD23 JUMPI PUSH2 0xD20 SWAP7 PUSH2 0xD40 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD3C PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xD57 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xD52 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST SWAP1 PUSH2 0xD60 PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD6D SWAP2 CALLDATASIZE SWAP2 PUSH2 0x253 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST CALLDATALOAD PUSH2 0xD8F DUP2 PUSH2 0x22F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0xDA1 PUSH2 0xDAB SWAP3 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDB7 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDC3 SWAP1 PUSH2 0xDAE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDCF SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDDB SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE7 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDF3 SWAP1 PUSH2 0xDDE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE0E DUP3 PUSH2 0x22F JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE2A JUMPI PUSH2 0xE27 SWAP2 PUSH1 0x0 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE51 SWAP3 SWAP5 SWAP4 PUSH2 0xE4A PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE5B PUSH2 0xC3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xE7D SWAP3 SWAP8 SWAP7 POP POP PUSH2 0xE77 DUP4 DUP6 SWAP1 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP5 PUSH2 0xEBE PUSH2 0xEB8 PUSH2 0xEB2 PUSH2 0xEAD DUP10 PUSH2 0xEA7 PUSH2 0xE97 DUP13 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xEA1 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x100E JUMPI PUSH2 0xEE8 PUSH2 0xEE3 PUSH2 0xEDE DUP4 DUP6 PUSH2 0xED8 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP3 CALLER SWAP1 PUSH2 0xF1C PUSH2 0xF17 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 PUSH2 0xF41 PUSH2 0xF3C DUP8 DUP10 PUSH2 0xF36 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP1 PUSH2 0xF7A PUSH2 0xF62 PUSH2 0xF5D DUP10 DUP12 PUSH2 0xF57 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP5 PUSH2 0xF85 PUSH2 0xF6E PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1009 JUMPI PUSH2 0xFD7 SWAP7 PUSH2 0xFD1 SWAP5 PUSH2 0xFC7 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xFD9 JUMPI JUMPDEST POP PUSH2 0xFC1 PUSH2 0xFBC DUP13 PUSH2 0xFB6 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0x1F6E JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP1 SWAP4 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0x20DB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFFB SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1002 JUMPI JUMPDEST PUSH2 0xFF3 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFA4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1027 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1041 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x103C PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x104D PUSH2 0x842 JUMP JUMPDEST POP DUP3 PUSH2 0x1062 PUSH2 0x105C PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x111B JUMPI DUP2 PUSH2 0x107B PUSH2 0x1075 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1100 JUMPI JUMPDEST PUSH2 0x10E3 JUMPI PUSH2 0x10CA PUSH2 0x10B9 PUSH2 0x10E0 SWAP5 PUSH2 0x10B3 PUSH2 0x10A2 PUSH2 0x10D0 SWAP7 DUP4 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x10AD PUSH2 0x3E8 PUSH2 0x8DC JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP4 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x10C4 PUSH2 0x3E5 PUSH2 0x872 JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x10DA PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x340DABEF PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10FC PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x1115 PUSH2 0x110F PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1134 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 PUSH2 0x1152 PUSH2 0x114C TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x1163 JUMPI PUSH2 0x1160 SWAP7 PUSH2 0x1180 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x117C PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1197 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1192 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x11A2 JUMP JUMPDEST SWAP1 PUSH2 0x11A0 PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11BB SWAP3 SWAP8 SWAP7 POP POP PUSH2 0x11B5 DUP4 DUP6 SWAP1 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0xB9C JUMP JUMPDEST SWAP5 PUSH2 0x11EA PUSH2 0x11E4 PUSH2 0x11DE PUSH2 0x11D9 DUP10 PUSH2 0x11D3 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x133A JUMPI PUSH2 0x1214 PUSH2 0x120F PUSH2 0x120A DUP4 DUP6 PUSH2 0x1204 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP3 CALLER SWAP1 PUSH2 0x1248 PUSH2 0x1243 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 PUSH2 0x126D PUSH2 0x1268 DUP8 DUP10 PUSH2 0x1262 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP1 PUSH2 0x12A6 PUSH2 0x128E PUSH2 0x1289 DUP10 DUP12 PUSH2 0x1283 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP5 PUSH2 0x12B1 PUSH2 0x129A PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1335 JUMPI PUSH2 0x1303 SWAP7 PUSH2 0x12FD SWAP5 PUSH2 0x12F3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1305 JUMPI JUMPDEST POP PUSH2 0x12ED PUSH2 0x12E8 DUP13 PUSH2 0x12E2 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0x1F6E JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP1 SWAP4 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0x20DB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1327 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x132E JUMPI JUMPDEST PUSH2 0x131F DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x12D0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1315 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE1B0DA4F PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1353 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x136D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1368 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP8 PUSH2 0x138C PUSH2 0x1386 TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x139E JUMPI PUSH2 0x139A SWAP9 PUSH2 0x13BB JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x13B7 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x13D4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x13CF PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x13DE PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13F4 PUSH2 0x13EF PUSH2 0x13F9 SWAP3 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1405 SWAP1 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1411 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141D SWAP1 PUSH2 0x1408 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1429 SWAP1 PUSH2 0xDDE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x1439 DUP3 PUSH2 0xDB JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x1464 JUMPI DUP1 PUSH2 0x1458 PUSH2 0x1461 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x142C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 SWAP8 POP SWAP8 SWAP6 SWAP4 SWAP8 POP POP PUSH2 0x14A6 PUSH2 0x14A1 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 DUP5 SWAP1 PUSH2 0x14CC DUP11 SWAP5 PUSH2 0x14D7 PUSH2 0x14C0 PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1673 JUMPI JUMPDEST POP SWAP3 DUP4 PUSH2 0x1508 PUSH2 0x1502 PUSH2 0x14FD PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x1656 JUMPI PUSH2 0x153A PUSH2 0x1535 DUP6 PUSH2 0x1530 PUSH1 0x40 SWAP6 PUSH2 0x1526 PUSH2 0x1563 SWAP10 PUSH2 0xDBA JUMP JUMPDEST SWAP1 CALLER DUP5 SWAP2 SWAP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x0 PUSH4 0x89AFCB44 PUSH2 0x154C PUSH2 0xC3 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH2 0xDFB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x42B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1651 JUMPI PUSH1 0x0 DUP1 SWAP4 SWAP1 SWAP2 PUSH2 0x1614 JUMPI JUMPDEST POP PUSH2 0x1591 PUSH2 0x158B PUSH2 0x1597 SWAP3 SWAP5 SWAP8 DUP5 PUSH2 0x2436 JUMP JUMPDEST POP PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x160F JUMPI SWAP3 JUMPDEST SWAP3 SWAP4 PUSH2 0x15B6 PUSH2 0x15B0 DUP7 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x15F2 JUMPI PUSH2 0x15CE PUSH2 0x15C8 DUP5 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x15D5 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEF71D091 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x15EE PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x8DC525D1 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x160B PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x158B SWAP4 POP PUSH2 0x1597 SWAP2 POP PUSH2 0x1641 PUSH2 0x1591 SWAP2 PUSH1 0x40 RETURNDATASIZE DUP2 GT PUSH2 0x164A JUMPI JUMPDEST PUSH2 0x1639 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP5 POP SWAP2 POP PUSH2 0x1578 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x162F JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x317F12FD PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x166F PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1694 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x169A JUMPI JUMPDEST PUSH2 0x168C DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x14EA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1682 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP1 PUSH2 0x16C6 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x16B8 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x16C0 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0x1370 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x16D6 SWAP2 ADD PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x16E3 PUSH2 0xA35 JUMP JUMPDEST POP PUSH2 0x16ED DUP2 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x1700 PUSH2 0x16FA PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x180A JUMPI PUSH2 0x1733 PUSH2 0x1719 PUSH2 0x1714 DUP4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST SWAP4 PUSH2 0x172E DUP6 PUSH2 0x1728 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x173B PUSH2 0x842 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x176A PUSH2 0x1764 PUSH2 0x175F PUSH2 0x174F DUP7 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x1759 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT ISZERO PUSH2 0x1806 JUMPI PUSH2 0x1801 SWAP1 PUSH2 0x17FC PUSH2 0x17D7 PUSH2 0x17BC PUSH2 0x1790 PUSH2 0x178B DUP8 DUP7 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x17B6 PUSH2 0x17B1 DUP9 PUSH2 0x17AB DUP9 PUSH2 0x17A5 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x17CF PUSH2 0x17CA DUP11 DUP8 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x17F7 DUP8 SWAP2 PUSH2 0x17F0 DUP6 PUSH2 0x17EA PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x173C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x20DB8267 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1823 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1827 JUMP JUMPDEST SUB PUSH2 0x184A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x185C DUP3 PUSH2 0x183A JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1870 DUP2 PUSH2 0x185E JUMP JUMPDEST SUB PUSH2 0x1877 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x1889 DUP3 PUSH2 0x1867 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x18C1 JUMPI PUSH2 0x18BE PUSH2 0x18A7 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x184F JUMP JUMPDEST SWAP4 PUSH2 0x18B5 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x187C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x18DA PUSH2 0x18D5 PUSH2 0x18DF SWAP3 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x18EB PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x18F4 PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x1900 DUP3 DUP3 SWAP1 PUSH2 0x2436 JUMP JUMPDEST POP SWAP1 PUSH1 0x20 PUSH2 0x1935 PUSH2 0x1930 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST SWAP2 PUSH4 0xE6A43905 SWAP3 PUSH2 0x1959 DUP7 SWAP3 SWAP5 PUSH2 0x1964 PUSH2 0x194D PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1AB6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1A88 JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x1995 PUSH2 0x198F PUSH2 0x198A PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x1A6B JUMPI PUSH1 0x60 PUSH2 0x19B0 PUSH2 0x19AB PUSH2 0x19C6 SWAP5 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH4 0x902F1AC SWAP1 PUSH2 0x19BE PUSH2 0xC3 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH2 0xDFB JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x19D6 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1A66 JUMPI PUSH1 0x0 DUP1 SWAP4 SWAP1 SWAP2 PUSH2 0x1A24 JUMPI JUMPDEST POP PUSH2 0x1A0B PUSH2 0x1A04 PUSH2 0x19FE PUSH2 0x1A11 SWAP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP5 SWAP3 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x1A1F JUMPI SWAP1 JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x19FE SWAP4 POP PUSH2 0x1A11 SWAP2 POP PUSH2 0x1A04 PUSH2 0x1A54 PUSH2 0x1A0B SWAP3 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x1A5F JUMPI JUMPDEST PUSH2 0x1A4C DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x188B JUMP JUMPDEST POP SWAP6 POP SWAP3 POP POP PUSH2 0x19EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A42 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 PUSH2 0x1A85 PUSH2 0x1A7F PUSH1 0x0 SWAP4 PUSH2 0x84D JUMP JUMPDEST SWAP3 PUSH2 0x84D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1AA9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1AAF JUMPI JUMPDEST PUSH2 0x1AA1 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x1977 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP10 PUSH2 0x1AD9 PUSH2 0x1AD3 TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x1AEC JUMPI PUSH2 0x1AE7 SWAP11 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1B05 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B24 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1B1F PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1B2F PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1B4B JUMPI PUSH2 0x1B48 SWAP2 PUSH1 0x0 ADD PUSH2 0x142C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x1B6E SWAP8 SWAP5 SWAP12 SWAP10 SWAP11 POP SWAP8 SWAP5 SWAP6 SWAP3 SWAP8 POP POP POP DUP6 SWAP4 DUP10 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x24E1 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x1BA2 PUSH2 0x1B9D PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 DUP6 SWAP1 PUSH2 0x1BC8 DUP6 SWAP5 PUSH2 0x1BD3 PUSH2 0x1BBC PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DC7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1D99 JUMPI JUMPDEST POP SWAP3 DUP4 PUSH2 0x1C04 PUSH2 0x1BFE PUSH2 0x1BF9 PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x1CC0 JUMPI JUMPDEST PUSH2 0x1C48 PUSH2 0x1C76 SWAP5 PUSH2 0x1C43 PUSH2 0x1C39 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x1C34 PUSH2 0x1C2A PUSH2 0x1C4D SWAP8 PUSH2 0xDBA JUMP JUMPDEST DUP14 CALLER DUP8 SWAP2 SWAP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST CALLER DUP4 SWAP1 DUP12 SWAP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x1C6B PUSH1 0x0 PUSH4 0x6A627842 PUSH2 0x1C5F PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH2 0xDFB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x42B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1CBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1C8D JUMPI JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1CAE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1CB4 JUMPI JUMPDEST PUSH2 0x1CA6 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1B31 JUMP JUMPDEST CODESIZE PUSH2 0x1C89 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP3 POP SWAP1 PUSH2 0x1CF4 PUSH2 0x1CEF PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xC9C65396 SWAP2 DUP6 SWAP1 PUSH2 0x1D1C PUSH1 0x0 DUP8 SWAP6 PUSH2 0x1D27 PUSH2 0x1D10 PUSH2 0xC3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x1D94 JUMPI PUSH2 0x1C76 SWAP5 PUSH2 0x1C43 PUSH2 0x1C39 PUSH2 0x1C48 SWAP4 PUSH2 0x1C34 PUSH2 0x1C2A PUSH1 0x20 SWAP10 PUSH2 0x1C4D SWAP9 PUSH1 0x0 SWAP2 PUSH2 0x1D67 JUMPI JUMPDEST POP SWAP11 POP POP POP SWAP6 SWAP7 POP POP POP SWAP2 POP POP PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x1D87 SWAP2 POP DUP12 RETURNDATASIZE DUP2 GT PUSH2 0x1D8D JUMPI JUMPDEST PUSH2 0x1D7F DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x1D55 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x1DBA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DC0 JUMPI JUMPDEST PUSH2 0x1DB2 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x1BE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP1 PUSH2 0x1DF5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1DDF PUSH2 0x842 JUMP JUMPDEST PUSH2 0x1DE7 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x1DEF PUSH2 0x842 JUMP JUMPDEST SWAP2 PUSH2 0x1ABB JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E0F PUSH2 0x1E14 SWAP2 PUSH2 0x1DFA JUMP JUMPDEST PUSH2 0x1E00 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E21 SWAP1 SLOAD PUSH2 0x1E03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E2E PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E44 PUSH1 0x0 NOT SWAP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1E62 PUSH2 0x1E5D PUSH2 0x1E67 SWAP3 PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E82 PUSH2 0x1E7D PUSH2 0x1E89 SWAP3 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0x1E6A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1E37 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E97 PUSH1 0x0 PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x1EB0 PUSH2 0x1EAA PUSH2 0x1EA5 PUSH2 0x1E24 JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x1EC9 JUMPI PUSH2 0x1EC7 PUSH2 0x1EC0 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1EE2 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EF0 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F05 PUSH2 0x1EFE PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F10 SWAP1 PUSH2 0xDDE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x1F33 PUSH2 0x1F2E PUSH2 0x1F38 SWAP3 PUSH2 0x185E JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x1F13 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1F65 PUSH2 0x1F6C SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1F5B PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SWAP3 PUSH2 0x1FA8 PUSH2 0x1FBC SWAP6 SWAP4 PUSH2 0x1FB7 SWAP4 SWAP5 PUSH2 0x1F8F PUSH4 0x23B872DD SWAP3 SWAP5 SWAP2 SWAP3 PUSH2 0x1F1F JUMP JUMPDEST SWAP4 PUSH2 0x1F98 PUSH2 0xC3 JUMP JUMPDEST SWAP8 DUP9 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x2712 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FDC JUMPI PUSH2 0x1FD8 PUSH1 0x20 SWAP2 PUSH2 0x198 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST SWAP1 PUSH2 0x1FF3 PUSH2 0x1FEE DUP4 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x2022 PUSH2 0x200A DUP4 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0x2018 DUP7 SWAP4 PUSH2 0x1FBE JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x202F JUMPI JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2055 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2085 PUSH2 0x208E PUSH1 0x20 SWAP4 PUSH2 0x2093 SWAP4 PUSH2 0x207C DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2038 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x20CB SWAP1 PUSH2 0x20C1 PUSH2 0x20D8 SWAP7 SWAP5 PUSH2 0x20B7 PUSH1 0x80 DUP7 ADD SWAP8 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2066 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH2 0x20E6 PUSH2 0x842 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2115 PUSH2 0x210F PUSH2 0x210A PUSH2 0x20FA DUP10 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x2104 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT ISZERO PUSH2 0x242A JUMPI PUSH2 0x212E PUSH2 0x2129 DUP7 DUP4 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP1 PUSH2 0x2155 PUSH2 0x2150 DUP8 PUSH2 0x214A DUP5 PUSH2 0x2144 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP2 PUSH2 0x2161 DUP2 DUP5 SWAP1 PUSH2 0x2436 JUMP JUMPDEST POP SWAP1 PUSH2 0x2189 PUSH2 0x2184 DUP8 PUSH2 0x217E DUP7 PUSH2 0x2178 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP2 PUSH2 0x219D PUSH2 0x2197 DUP4 SWAP3 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x241A JUMPI PUSH2 0x21AF PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 DUP4 PUSH2 0x21E0 PUSH2 0x21DA PUSH2 0x21D5 PUSH2 0x21C5 DUP14 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x21CF PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2412 JUMPI PUSH2 0x2219 PUSH2 0x2214 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 DUP11 PUSH4 0xE6A43905 SWAP3 PUSH2 0x2264 PUSH2 0x224C PUSH2 0x2247 DUP12 SWAP5 PUSH2 0x2241 DUP13 PUSH2 0x223B PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP5 PUSH2 0x226F PUSH2 0x2258 PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x240D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x23E0 JUMPI JUMPDEST POP JUMPDEST SWAP6 PUSH2 0x22B8 PUSH2 0x22B3 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x22DA PUSH4 0xE6A43905 SWAP5 SWAP3 SWAP5 PUSH2 0x22E5 PUSH2 0x22CE PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23DB JUMPI PUSH2 0x230B SWAP2 PUSH2 0x2306 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x23AD JUMPI JUMPDEST POP PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH4 0x22C0D9F SWAP3 SWAP2 SWAP5 PUSH2 0x2325 PUSH2 0x2320 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x1FFD JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x23A8 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x2357 DUP7 SWAP3 PUSH2 0x234C SWAP5 PUSH2 0x2340 PUSH2 0xC3 JUMP JUMPDEST SWAP11 DUP12 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH2 0xDFB JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x2097 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x2371 SWAP3 PUSH2 0x2376 JUMPI JUMPDEST POP PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x2396 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0x239C JUMPI JUMPDEST PUSH2 0x238E DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2024 JUMP JUMPDEST CODESIZE PUSH2 0x236B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2384 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x23CE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x23D4 JUMPI JUMPDEST PUSH2 0x23C6 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x2300 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x23BC JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x2400 SWAP2 POP DUP3 RETURNDATASIZE DUP2 GT PUSH2 0x2406 JUMPI JUMPDEST PUSH2 0x23F8 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x2284 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2286 JUMP JUMPDEST PUSH2 0x2424 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0x21B0 JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x243E PUSH2 0x2431 JUMP JUMPDEST POP PUSH2 0x2447 PUSH2 0x2431 JUMP JUMPDEST POP DUP1 PUSH2 0x245B PUSH2 0x2455 DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x24C4 JUMPI DUP1 PUSH2 0x2473 PUSH2 0x246D DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x24BF JUMPI SWAP1 JUMPDEST SWAP1 SWAP2 DUP3 PUSH2 0x249B PUSH2 0x2495 PUSH2 0x2490 PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x24A2 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x24BB PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5C6D7B73 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x24DD PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP5 SWAP2 SWAP4 SWAP3 SWAP5 PUSH2 0x24EF PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x24F8 PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x252A PUSH2 0x2525 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 DUP5 SWAP1 PUSH2 0x2550 DUP6 SWAP5 PUSH2 0x255B PUSH2 0x2544 PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x270D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x26DF JUMPI JUMPDEST POP PUSH2 0x258A PUSH2 0x2584 PUSH2 0x257F PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x259A JUMPI POP POP POP POP SWAP2 JUMPDEST JUMP JUMPDEST PUSH2 0x25A3 SWAP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 DUP4 PUSH2 0x25BA PUSH2 0x25B4 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 PUSH2 0x26C4 JUMPI JUMPDEST PUSH1 0x0 EQ PUSH2 0x25D3 JUMPI POP POP POP POP SWAP2 JUMPDEST PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x25E3 DUP6 SWAP7 SWAP4 SWAP5 SWAP7 DUP8 DUP4 SWAP2 PUSH2 0x27CD JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x25F7 PUSH2 0x25F1 DUP7 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT ISZERO PUSH1 0x0 EQ PUSH2 0x2640 JUMPI POP POP POP POP PUSH2 0x2617 PUSH2 0x2611 DUP5 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x2623 JUMPI SWAP2 JUMPDEST PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEF71D091 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x263C PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP4 POP DUP3 PUSH2 0x2653 SWAP4 SWAP7 POP SWAP2 SWAP1 SWAP2 PUSH2 0x27CD JUMP JUMPDEST SWAP2 PUSH2 0x2667 PUSH2 0x2661 DUP5 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x26A7 JUMPI PUSH2 0x267F PUSH2 0x2679 DUP4 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x268A JUMPI SWAP2 PUSH2 0x261E JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DC525D1 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x26A3 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xE1B0DA4F PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x26C0 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x26D9 PUSH2 0x26D3 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x2700 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2706 JUMPI JUMPDEST PUSH2 0x26F8 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x256E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x26EE JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2720 PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x2729 PUSH2 0x842 JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x27C1 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2750 PUSH2 0x274A PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x27A7 JUMPI POP PUSH2 0x2762 DUP2 PUSH2 0x1F07 JUMP JUMPDEST EXTCODESIZE PUSH2 0x2776 PUSH2 0x2770 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x277F JUMPI POP JUMP JUMPDEST PUSH2 0x278B PUSH2 0x27A3 SWAP2 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x42B JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x27BA PUSH2 0x27B4 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ ISZERO PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x27D5 PUSH2 0x842 JUMP JUMPDEST POP DUP1 PUSH2 0x27EA PUSH2 0x27E4 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x285C JUMPI DUP2 PUSH2 0x2803 PUSH2 0x27FD PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x2841 JUMPI JUMPDEST PUSH2 0x2824 JUMPI PUSH2 0x2821 SWAP3 PUSH2 0x281C SWAP2 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x283D PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH2 0x2856 PUSH2 0x2850 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x280B JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DC525D1 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x2875 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xC13C1E76957798084965ADD50180A01D312AE3270AC94D95E538 JUMPI DUP2 0xD6 0xC1 MULMOD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "480:13834:13:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;1744:141::-;;;:::i;:::-;1794:14;:28;;1812:10;1820:1;1812:10;:::i;:::-;1794:28;:::i;:::-;;;:::i;:::-;;1790:54;;1854:24;;1744:141::o;1790:54::-;1831:13;;;;;;;;;;;;:::i;:::-;;;;480:13834;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1818:40:9:-;1857:1;;;:::i;:::-;1818:40;:::o;1857:1::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2037:52::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;:::-;2037:52::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 1002,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 580,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 3585,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_address": {
                  "entryPoint": 1761,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256": {
                  "entryPoint": 1497,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 7
                },
                "abi_decode_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
                  "entryPoint": 1862,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 8
                },
                "abi_decode_array_address_dyn": {
                  "entryPoint": 682,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_address_dyn_calldata": {
                  "entryPoint": 1147,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_available_length_array_address_dyn": {
                  "entryPoint": 595,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_fromMemory": {
                  "entryPoint": 8228,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 5164,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 3600,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint112_fromMemory": {
                  "entryPoint": 6223,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint112t_uint112t_uint32_fromMemory": {
                  "entryPoint": 6283,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_uint256": {
                  "entryPoint": 240,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256_fromMemory": {
                  "entryPoint": 6961,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256t_array_address_dyn": {
                  "entryPoint": 717,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint256t_uint256_fromMemory": {
                  "entryPoint": 5179,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_uint256t_uint256t_array_address_dyn_calldatat_addresst_uint256": {
                  "entryPoint": 1210,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 6
                },
                "abi_decode_uint256t_uint256t_uint256": {
                  "entryPoint": 255,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_uint32_fromMemory": {
                  "entryPoint": 6268,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_uint256": {
                  "entryPoint": 819,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 1054,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_address": {
                  "entryPoint": 3631,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 7995,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 923,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn_memory_ptr": {
                  "entryPoint": 842,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 8294,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple": {
                  "entryPoint": 2153,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 1067,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": 327,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": 806,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_to_uint256_fromStack": {
                  "entryPoint": 314,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 1610,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_address_bytes": {
                  "entryPoint": 8343,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256": {
                  "entryPoint": 1992,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_uint256_dyn": {
                  "entryPoint": 2710,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_bytes": {
                  "entryPoint": 8189,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 481,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_array_uint256_dyn": {
                  "entryPoint": 2682,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory_array_bytes": {
                  "entryPoint": 8161,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 195,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 502,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 2653,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 8126,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_array_uint256_dyn": {
                  "entryPoint": 800,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_address_dyn": {
                  "entryPoint": 2618,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_array_uint256_dyn": {
                  "entryPoint": 787,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_bytes": {
                  "entryPoint": 8244,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_array_uint256_dyn": {
                  "entryPoint": 836,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_array_uint256_dyn": {
                  "entryPoint": 791,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_bytes": {
                  "entryPoint": 8248,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "calldata_array_index_access_address_dyn_calldata": {
                  "entryPoint": 3440,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2296,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 2355,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 2212,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 2780,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 547,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bytes4": {
                  "entryPoint": 7955,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": 7680,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_2_by": {
                  "entryPoint": 2622,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": 2265,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": 2159,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": 2749,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by_1": {
                  "entryPoint": 2119,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint112": {
                  "entryPoint": 6183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": 536,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": 216,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint32": {
                  "entryPoint": 6238,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constant_ENTERED": {
                  "entryPoint": 7716,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "constant_NOT_ENTERED": {
                  "entryPoint": 7910,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "convert_address_to_contract_DexFactory": {
                  "entryPoint": 3538,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_DexPair": {
                  "entryPoint": 5140,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IERC20": {
                  "entryPoint": 3514,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_array_array_address_dyn_calldata_to_array_address_dyn": {
                  "entryPoint": 3426,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "convert_contract_DexFactory_to_address": {
                  "entryPoint": 3562,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_DexPair_to_address": {
                  "entryPoint": 5152,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": 7943,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_0_by_1_to_uint256": {
                  "entryPoint": 2125,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_1_by_1_to_uint256": {
                  "entryPoint": 2752,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_2_by_1_to_uint256": {
                  "entryPoint": 2625,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 5116,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 5088,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 2268,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": 2162,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint112_to_uint256": {
                  "entryPoint": 6342,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 3550,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_DexFactory": {
                  "entryPoint": 3526,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_DexPair": {
                  "entryPoint": 5128,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IERC20": {
                  "entryPoint": 3502,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 3474,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 7758,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint32_to_bytes4": {
                  "entryPoint": 7967,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 8257,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "decrement_uint256": {
                  "entryPoint": 2885,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_FACTORY": {
                  "entryPoint": 1089,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_addLiquidity": {
                  "entryPoint": 2043,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getAmountIn": {
                  "entryPoint": 1383,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getAmountOut": {
                  "entryPoint": 349,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getAmountsIn": {
                  "entryPoint": 948,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getAmountsOut": {
                  "entryPoint": 1707,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getReserves": {
                  "entryPoint": 1807,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeLiquidity": {
                  "entryPoint": 1646,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_swapExactTokensForTokens": {
                  "entryPoint": 1323,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_swapTokensForExactTokens": {
                  "entryPoint": 1437,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_offset_uint256": {
                  "entryPoint": 7683,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 440,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_addLiquidity": {
                  "entryPoint": 9441,
                  "id": 3405,
                  "parameterSlots": 6,
                  "returnSlots": 2
                },
                "fun_addLiquidity_3023": {
                  "entryPoint": 7628,
                  "id": 3023,
                  "parameterSlots": 8,
                  "returnSlots": 3
                },
                "fun_addLiquidity_inner": {
                  "entryPoint": 6992,
                  "id": null,
                  "parameterSlots": 11,
                  "returnSlots": 3
                },
                "fun_callOptionalReturn": {
                  "entryPoint": 10002,
                  "id": 1267,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_getAmountIn": {
                  "entryPoint": 4164,
                  "id": 3704,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_getAmountOut": {
                  "entryPoint": 2389,
                  "id": 3647,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_getAmountsIn": {
                  "entryPoint": 2972,
                  "id": 3866,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_getAmountsOut": {
                  "entryPoint": 5849,
                  "id": 3783,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_getReserves": {
                  "entryPoint": 6370,
                  "id": 3589,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "fun_nonReentrantAfter": {
                  "entryPoint": 7923,
                  "id": 1396,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 7821,
                  "id": 1388,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_quote": {
                  "entryPoint": 10189,
                  "id": 3906,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_removeLiquidity": {
                  "entryPoint": 5798,
                  "id": 3128,
                  "parameterSlots": 7,
                  "returnSlots": 2
                },
                "fun_removeLiquidity_inner": {
                  "entryPoint": 5225,
                  "id": null,
                  "parameterSlots": 9,
                  "returnSlots": 2
                },
                "fun_safeTransferFrom": {
                  "entryPoint": 8046,
                  "id": 917,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_sortTokens": {
                  "entryPoint": 9270,
                  "id": 3951,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "fun_swap": {
                  "entryPoint": 8411,
                  "id": 3523,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_swapExactTokensForTokens": {
                  "entryPoint": 4139,
                  "id": 3201,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "fun_swapExactTokensForTokens_inner": {
                  "entryPoint": 3684,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "fun_swapTokensForExactTokens": {
                  "entryPoint": 4951,
                  "id": 3271,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "fun_swapTokensForExactTokens_inner": {
                  "entryPoint": 4514,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "getter_fun_FACTORY": {
                  "entryPoint": 1018,
                  "id": 2855,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 2122,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_wrapping_uint256": {
                  "entryPoint": 5834,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_address_dyn": {
                  "entryPoint": 2914,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 2839,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_ensure": {
                  "entryPoint": 6843,
                  "id": 2921,
                  "parameterSlots": 11,
                  "returnSlots": 3
                },
                "modifier_ensure_3042": {
                  "entryPoint": 4976,
                  "id": 2921,
                  "parameterSlots": 9,
                  "returnSlots": 2
                },
                "modifier_ensure_3144": {
                  "entryPoint": 3320,
                  "id": 2921,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "modifier_ensure_3217": {
                  "entryPoint": 4408,
                  "id": 2921,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "modifier_nonReentrant": {
                  "entryPoint": 6921,
                  "id": 1372,
                  "parameterSlots": 11,
                  "returnSlots": 3
                },
                "modifier_nonReentrant_3044": {
                  "entryPoint": 5051,
                  "id": 1372,
                  "parameterSlots": 9,
                  "returnSlots": 2
                },
                "modifier_nonReentrant_3146": {
                  "entryPoint": 3392,
                  "id": 1372,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "modifier_nonReentrant_3219": {
                  "entryPoint": 4480,
                  "id": 1372,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 2190,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 2333,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 2817,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 418,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_uint256": {
                  "entryPoint": 7786,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 3461,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_address": {
                  "entryPoint": 2946,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_memoryt_uint256": {
                  "entryPoint": 2959,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 7703,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_0cc013b6b3b6beabea4e3a74a6d380f0df81852ca99887912475e1f66b2a2c20": {
                  "entryPoint": 3574,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
                  "entryPoint": 1142,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 403,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": 2109,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": 531,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 211,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": 201,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 206,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 3667,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": 408,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": 7729,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": 3579,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": 7674,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": 189,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 7735,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offset_uint256_to_uint256": {
                  "entryPoint": 7789,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 559,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint112": {
                  "entryPoint": 6202,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 219,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint32": {
                  "entryPoint": 6247,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "write_to_memory_uint256": {
                  "entryPoint": 2871,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "zero_memory_chunk_bytes1": {
                  "entryPoint": 8184,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "zero_memory_chunk_uint256": {
                  "entryPoint": 2705,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": 9265,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_array_uint256_dyn": {
                  "entryPoint": 2613,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_uint256": {
                  "entryPoint": 2114,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "2855": [
                  {
                    "length": 32,
                    "start": 1020
                  },
                  {
                    "length": 32,
                    "start": 3827
                  },
                  {
                    "length": 32,
                    "start": 4639
                  },
                  {
                    "length": 32,
                    "start": 5245
                  },
                  {
                    "length": 32,
                    "start": 6412
                  },
                  {
                    "length": 32,
                    "start": 7033
                  },
                  {
                    "length": 32,
                    "start": 7371
                  },
                  {
                    "length": 32,
                    "start": 8688
                  },
                  {
                    "length": 32,
                    "start": 8847
                  },
                  {
                    "length": 32,
                    "start": 9473
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361015610013575b61083d565b61001e6000356100bd565b8063054d50d4146100b85780631f00ca74146100b35780632dd31000146100ae57806338ed1739146100a957806385f8c259146100a45780638803dbee1461009f578063baa2abde1461009a578063d06ca61f14610095578063d52bb6f4146100905763e8e337000361000e576107fb565b61070f565b6106ab565b61066e565b61059d565b610567565b61052b565b610441565b6103b4565b61015d565b60e01c90565b60405190565b600080fd5b600080fd5b600080fd5b90565b6100e4816100d8565b036100eb57565b600080fd5b905035906100fd826100db565b565b90916060828403126101355761013261011b84600085016100f0565b9361012981602086016100f0565b936040016100f0565b90565b6100ce565b610143906100d8565b9052565b919061015b9060006020850194019061013a565b565b3461018e5761018a6101796101733660046100ff565b91610955565b6101816100c3565b91829182610147565b0390f35b6100c9565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b906101c290610198565b810190811067ffffffffffffffff8211176101dc57604052565b6101a2565b906101f46101ed6100c3565b92836101b8565b565b67ffffffffffffffff811161020e5760208091020190565b6101a2565b600080fd5b60018060a01b031690565b61022c90610218565b90565b61023881610223565b0361023f57565b600080fd5b905035906102518261022f565b565b90929192610268610263826101f6565b6101e1565b93818552602080860192028301928184116102a557915b83831061028c5750505050565b6020809161029a8486610244565b81520192019161027f565b610213565b9080601f830112156102c8578160206102c593359101610253565b90565b610193565b91909160408184031261030e576102e783600083016100f0565b92602082013567ffffffffffffffff81116103095761030692016102aa565b90565b6100d3565b6100ce565b5190565b60209181520190565b60200190565b61032f906100d8565b9052565b9061034081602093610326565b0190565b60200190565b9061036761036161035a84610313565b8093610317565b92610320565b9060005b8181106103785750505090565b90919261039161038b6001928651610333565b94610344565b910191909161036b565b6103b1916020820191600081840391015261034a565b90565b346103e5576103e16103d06103ca3660046102cd565b90610b9c565b6103d86100c3565b9182918261039b565b0390f35b6100c9565b60009103126103f557565b6100ce565b7f000000000000000000000000000000000000000000000000000000000000000090565b61042790610223565b9052565b919061043f9060006020850194019061041e565b565b34610471576104513660046103ea565b61046d61045c6103fa565b6104646100c3565b9182918261042b565b0390f35b6100c9565b600080fd5b909182601f830112156104b55781359167ffffffffffffffff83116104b05760200192602083028401116104ab57565b610213565b610476565b610193565b9060a082820312610526576104d281600084016100f0565b926104e082602085016100f0565b9260408101359167ffffffffffffffff8311610521576105058461051e94840161047b565b9390946105158160608601610244565b936080016100f0565b90565b6100d3565b6100ce565b346105625761055e61054d6105413660046104ba565b9493909392919261102b565b6105556100c3565b9182918261039b565b0390f35b6100c9565b346105985761059461058361057d3660046100ff565b91611044565b61058b6100c3565b91829182610147565b0390f35b6100c9565b346105d4576105d06105bf6105b33660046104ba565b94939093929192611357565b6105c76100c3565b9182918261039b565b0390f35b6100c9565b60e081830312610645576105f08260008301610244565b926105fe8360208401610244565b9261060c81604085016100f0565b9261061a82606083016100f0565b9261064261062b84608085016100f0565b936106398160a08601610244565b9360c0016100f0565b90565b6100ce565b91602061066c9294936106656040820196600083019061013a565b019061013a565b565b346106a65761068d6106813660046105d9565b959490949391936116a6565b906106a26106996100c3565b9283928361064a565b0390f35b6100c9565b346106dc576106d86106c76106c13660046102cd565b906116d9565b6106cf6100c3565b9182918261039b565b0390f35b6100c9565b919060408382031261070a57806106fe6107079260008601610244565b93602001610244565b90565b6100ce565b34610741576107286107223660046106e1565b906118e2565b9061073d6107346100c3565b9283928361064a565b0390f35b6100c9565b9190610100838203126107c3576107608160008501610244565b9261076e8260208301610244565b9261077c83604084016100f0565b9261078a81606085016100f0565b9261079882608083016100f0565b926107c06107a98460a085016100f0565b936107b78160c08601610244565b9360e0016100f0565b90565b6100ce565b6040906107f26107f994969593966107e86060840198600085019061013a565b602083019061013a565b019061013a565b565b3461083857610834610820610811366004610746565b96959095949194939293611dcc565b61082b9391936100c3565b938493846107c8565b0390f35b6100c9565b600080fd5b600090565b90565b90565b61086161085c61086692610847565b61084a565b6100d8565b90565b60000190565b90565b61088661088161088b9261086f565b61084a565b6100d8565b90565b634e487b7160e01b600052601160045260246000fd5b6108b36108b9919392936100d8565b926100d8565b916108c58382026100d8565b9281840414901517156108d457565b61088e565b90565b6108f06108eb6108f5926108d9565b61084a565b6100d8565b90565b61090761090d919392936100d8565b926100d8565b820180921161091857565b61088e565b634e487b7160e01b600052601260045260246000fd5b61093f610945916100d8565b916100d8565b908115610950570490565b61091d565b61095d610842565b508061097261096c600061084d565b916100d8565b14610a18578161098b610985600061084d565b916100d8565b1480156109fd575b6109e0576109dd926109d26109c06109b96109d7946109b36103e5610872565b906108a4565b92836108a4565b936109cc6103e86108dc565b906108a4565b6108f8565b90610933565b90565b60006342301c2360e01b8152806109f960048201610869565b0390fd5b5082610a12610a0c600061084d565b916100d8565b14610993565b600063340dabef60e01b815280610a3160048201610869565b0390fd5b606090565b5190565b90565b610a55610a50610a5a92610a3e565b61084a565b6100d8565b90565b67ffffffffffffffff8111610a755760208091020190565b6101a2565b90610a8c610a8783610a5d565b6101e1565b918252565b369037565b90610abb610aa383610a7a565b92602080610ab18693610a5d565b9201910390610a91565b565b90565b610ad4610acf610ad992610abd565b61084a565b6100d8565b90565b610aeb610af1919392936100d8565b926100d8565b8203918211610afc57565b61088e565b634e487b7160e01b600052603260045260246000fd5b90610b2182610313565b811015610b32576020809102010190565b610b01565b90610b41906100d8565b9052565b610b4e906100d8565b60008114610b5d576001900390565b61088e565b90610b6c82610a3a565b811015610b7d576020809102010190565b610b01565b610b8c9051610223565b90565b610b9990516100d8565b90565b9190610ba6610a35565b50610bb081610a3a565b610bc3610bbd6002610a41565b916100d8565b10610cdb57610c0a610bdc610bd783610a3a565b610a96565b93610c058591610bfe610bee88610313565b610bf86001610ac0565b90610adc565b9092610b17565b610b37565b610c26610c1682610a3a565b610c206001610ac0565b90610adc565b5b80610c3b610c35600061084d565b916100d8565b1115610cd757610cd290610ccd610ca8610c8d610c74610c6f87610c6987610c636001610ac0565b90610adc565b90610b62565b610b82565b610c87610c82888790610b62565b610b82565b906118e2565b610ca0610c9b8a8790610b17565b610b8f565b919091611044565b610cc88791610cc185610cbb6001610ac0565b90610adc565b9092610b17565b610b37565b610b45565b610c27565b5050565b60006320db826760e01b815280610cf460048201610869565b0390fd5b95949392919085610d12610d0c42926100d8565b916100d8565b11610d2357610d2096610d40565b90565b6000631ab7da6b60e01b815280610d3c60048201610869565b0390fd5b90610d57969594939291610d52611e8d565b610e64565b90610d60611ef3565b565b610d6d913691610253565b90565b9190811015610d80576020020190565b610b01565b35610d8f8161022f565b90565b610da6610da1610dab92610218565b61084a565b610218565b90565b610db790610d92565b90565b610dc390610dae565b90565b610dcf90610d92565b90565b610ddb90610dc6565b90565b610de790610d92565b90565b610df390610dde565b90565b600080fd5b60e01b90565b90505190610e0e8261022f565b565b90602082820312610e2a57610e2791600001610e01565b90565b6100ce565b916020610e51929493610e4a6040820196600083019061041e565b019061041e565b565b610e5b6100c3565b3d6000823e3d90fd5b610e7d9297965050610e77838590610d62565b906116d9565b94610ebe610eb8610eb2610ead89610ea7610e978c610313565b610ea16001610ac0565b90610adc565b90610b17565b610b8f565b926100d8565b916100d8565b1061100e57610ee8610ee3610ede8385610ed8600061084d565b91610d70565b610d85565b610dba565b923390610f1c610f177f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a4390591610f41610f3c8789610f36600061084d565b91610d70565b610d85565b90610f7a610f62610f5d898b610f576001610ac0565b91610d70565b610d85565b94610f85610f6e6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa95861561100957610fd796610fd194610fc793600092610fd9575b50610fc1610fbc8c610fb6600061084d565b90610b17565b610b8f565b92611f6e565b8692939093610d62565b906120db565b565b610ffb91925060203d8111611002575b610ff381836101b8565b810190610e10565b9038610fa4565b503d610fe9565b610e53565b60006342301c2360e01b81528061102760048201610869565b0390fd5b90611041959493929161103c610a35565b610cf8565b90565b9161104d610842565b508261106261105c600061084d565b916100d8565b1461111b578161107b611075600061084d565b916100d8565b148015611100575b6110e3576110ca6110b96110e0946110b36110a26110d09683906108a4565b6110ad6103e86108dc565b906108a4565b93610adc565b6110c46103e5610872565b906108a4565b90610933565b6110da6001610ac0565b906108f8565b90565b600063340dabef60e01b8152806110fc60048201610869565b0390fd5b508061111561110f600061084d565b916100d8565b14611083565b60006342301c2360e01b81528061113460048201610869565b0390fd5b9594939291908561115261114c42926100d8565b916100d8565b116111635761116096611180565b90565b6000631ab7da6b60e01b81528061117c60048201610869565b0390fd5b90611197969594939291611192611e8d565b6111a2565b906111a0611ef3565b565b6111bb92979650506111b5838590610d62565b90610b9c565b946111ea6111e46111de6111d9896111d3600061084d565b90610b17565b610b8f565b926100d8565b916100d8565b1161133a5761121461120f61120a8385611204600061084d565b91610d70565b610d85565b610dba565b9233906112486112437f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a439059161126d6112688789611262600061084d565b91610d70565b610d85565b906112a661128e611289898b6112836001610ac0565b91610d70565b610d85565b946112b161129a6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa95861561133557611303966112fd946112f393600092611305575b506112ed6112e88c6112e2600061084d565b90610b17565b610b8f565b92611f6e565b8692939093610d62565b906120db565b565b61132791925060203d811161132e575b61131f81836101b8565b810190610e10565b90386112d0565b503d611315565b610e53565b600063e1b0da4f60e01b81528061135360048201610869565b0390fd5b9061136d9594939291611368610a35565b611138565b90565b97969594939291908761138c61138642926100d8565b916100d8565b1161139e5761139a986113bb565b9091565b6000631ab7da6b60e01b8152806113b760048201610869565b0390fd5b906113d498979695949392916113cf611e8d565b611469565b90916113de611ef3565b565b6113f46113ef6113f992610847565b61084a565b610218565b90565b611405906113e0565b90565b61141190610d92565b90565b61141d90611408565b90565b61142990610dde565b90565b90505190611439826100db565b565b91906040838203126114645780611458611461926000860161142c565b9360200161142c565b90565b6100ce565b9091939297509795939750506114a66114a17f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a439059184906114cc8a946114d76114c06100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa9081156116a157600091611673575b5092836115086115026114fd60006113fc565b610223565b91610223565b146116565761153a6115358561153060409561152661156399610dba565b9033849192611f6e565b611414565b611420565b61155860006389afcb4461154c6100c3565b97889586948593610dfb565b83526004830161042b565b03925af1801561165157600080939091611614575b5061159161158b61159792949784612436565b50610223565b91610223565b1460001461160f57925b92936115b66115b086926100d8565b916100d8565b106115f2576115ce6115c884926100d8565b916100d8565b106115d557565b600063ef71d09160e01b8152806115ee60048201610869565b0390fd5b6000638dc525d160e01b81528061160b60048201610869565b0390fd5b6115a1565b61158b935061159791506116416115919160403d811161164a575b61163981836101b8565b81019061143b565b94509150611578565b503d61162f565b610e53565b600063317f12fd60e21b81528061166f60048201610869565b0390fd5b611694915060203d811161169a575b61168c81836101b8565b810190610e10565b386114ea565b503d611682565b610e53565b906116c69695949392916116b8610842565b6116c0610842565b90611370565b9091565b60016116d691016100d8565b90565b91906116e3610a35565b506116ed81610a3a565b6117006116fa6002610a41565b916100d8565b1061180a5761173361171961171483610a3a565b610a96565b9361172e85611728600061084d565b90610b17565b610b37565b61173b610842565b5b8061176a61176461175f61174f86610a3a565b6117596001610ac0565b90610adc565b6100d8565b916100d8565b101561180657611801906117fc6117d76117bc61179061178b878690610b62565b610b82565b6117b66117b1886117ab886117a56001610ac0565b906108f8565b90610b62565b610b82565b906118e2565b6117cf6117ca8a8790610b17565b610b8f565b919091610955565b6117f787916117f0856117ea6001610ac0565b906108f8565b9092610b17565b610b37565b6116ca565b61173c565b5050565b60006320db826760e01b81528061182360048201610869565b0390fd5b6dffffffffffffffffffffffffffff1690565b61184381611827565b0361184a57565b600080fd5b9050519061185c8261183a565b565b63ffffffff1690565b6118708161185e565b0361187757565b600080fd5b9050519061188982611867565b565b90916060828403126118c1576118be6118a7846000850161184f565b936118b5816020860161184f565b9360400161187c565b90565b6100ce565b6118da6118d56118df92611827565b61084a565b6100d8565b90565b906118eb610842565b506118f4610842565b50611900828290612436565b509060206119356119307f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b9163e6a439059261195986929461196461194d6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa908115611ab657600091611a88575b50908161199561198f61198a60006113fc565b610223565b91610223565b14611a6b5760606119b06119ab6119c694611414565b611420565b630902f1ac906119be6100c3565b948592610dfb565b825281806119d660048201610869565b03915afa8015611a6657600080939091611a24575b50611a0b611a046119fe611a11936118c6565b946118c6565b9492610223565b91610223565b14600014611a1f57905b9091565b611a1b565b6119fe9350611a119150611a04611a54611a0b9260603d8111611a5f575b611a4c81836101b8565b81019061188b565b5095509250506119eb565b503d611a42565b610e53565b505050600090611a85611a7f60009361084d565b9261084d565b90565b611aa9915060203d8111611aaf575b611aa181836101b8565b810190610e10565b38611977565b503d611a97565b610e53565b9998979695949392919089611ad9611ad342926100d8565b916100d8565b11611aec57611ae79a611b09565b909192565b6000631ab7da6b60e01b815280611b0560048201610869565b0390fd5b90611b249a999897969594939291611b1f611e8d565b611b50565b909192611b2f611ef3565b565b90602082820312611b4b57611b489160000161142c565b90565b6100ce565b611b6e97949b999a50979495929750505085938990919293946124e1565b939094611ba2611b9d7f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a43905918590611bc88594611bd3611bbc6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa908115611dc757600091611d99575b509283611c04611bfe611bf960006113fc565b610223565b91610223565b14611cc0575b611c48611c7694611c43611c3960209695611c34611c2a611c4d97610dba565b8d33879192611f6e565b610dba565b3383908b92611f6e565b611414565b611420565b611c6b6000636a627842611c5f6100c3565b96879586948593610dfb565b83526004830161042b565b03925af1908115611cbb57600091611c8d575b5090565b611cae915060203d8111611cb4575b611ca681836101b8565b810190611b31565b38611c89565b503d611c9c565b610e53565b925090611cf4611cef7f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063c9c65396918590611d1c60008795611d27611d106100c3565b97889687958694610dfb565b845260048401610e2f565b03925af1928315611d9457611c7694611c43611c39611c4893611c34611c2a602099611c4d98600091611d67575b509a5050509596505050915050611c0a565b611d8791508b3d8111611d8d575b611d7f81836101b8565b810190610e10565b38611d55565b503d611d75565b610e53565b611dba915060203d8111611dc0575b611db281836101b8565b810190610e10565b38611be6565b503d611da8565b610e53565b90611df597969594939291611ddf610842565b611de7610842565b611def610842565b91611abb565b909192565b60001c90565b90565b611e0f611e1491611dfa565b611e00565b90565b611e219054611e03565b90565b611e2e6002610a41565b90565b60001b90565b90611e4460001991611e31565b9181191691161790565b611e62611e5d611e67926100d8565b61084a565b6100d8565b90565b90565b90611e82611e7d611e8992611e4e565b611e6a565b8254611e37565b9055565b611e976000611e17565b611eb0611eaa611ea5611e24565b6100d8565b916100d8565b14611ec957611ec7611ec0611e24565b6000611e6d565b565b6000633ee5aeb560e01b815280611ee260048201610869565b0390fd5b611ef06001610ac0565b90565b611f05611efe611ee6565b6000611e6d565b565b611f1090610dde565b90565b63ffffffff60e01b1690565b611f33611f2e611f389261185e565b610dfb565b611f13565b90565b604090611f65611f6c9496959396611f5b6060840198600085019061041e565b602083019061041e565b019061013a565b565b600492611fa8611fbc9593611fb79394611f8f6323b872dd92949192611f1f565b93611f986100c3565b9788956020870190815201611f3b565b602082018103825203836101b8565b612712565b565b67ffffffffffffffff8111611fdc57611fd8602091610198565b0190565b6101a2565b90611ff3611fee83611fbe565b6101e1565b918252565b369037565b9061202261200a83611fe1565b926020806120188693611fbe565b9201910390611ff8565b565b600091031261202f57565b6100ce565b5190565b60209181520190565b60005b838110612055575050906000910152565b806020918301518185015201612044565b61208561208e6020936120939361207c81612034565b93848093612038565b95869101612041565b610198565b0190565b90926120cb906120c16120d896946120b76080860197600087019061013a565b602085019061013a565b604083019061041e565b6060818403910152612066565b90565b9092916120e6610842565b5b8061211561210f61210a6120fa89610a3a565b6121046001610ac0565b90610adc565b6100d8565b916100d8565b101561242a5761212e612129868390610b62565b610b82565b906121556121508761214a846121446001610ac0565b906108f8565b90610b62565b610b82565b91612161818490612436565b50906121896121848761217e866121786001610ac0565b906108f8565b90610b17565b610b8f565b9161219d6121978392610223565b91610223565b1460001461241a576121af600061084d565b5b9190836121e06121da6121d56121c58d610a3a565b6121cf6002610a41565b90610adc565b6100d8565b916100d8565b10600014612412576122196122147f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b60208a63e6a439059261226461224c6122478b946122418c61223b6002610a41565b906108f8565b90610b62565b610b82565b9461226f6122586100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa801561240d576020916000916123e0575b505b956122b86122b37f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b6122da63e6a439059492946122e56122ce6100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa9081156123db5761230b91612306916000916123ad575b50611414565b611420565b63022c0d9f929194612325612320600061084d565b611ffd565b823b156123a857600094612357869261234c946123406100c3565b9a8b9889978896610dfb565b865260048601612097565b03925af19182156123a35761237192612376575b506116ca565b6120e7565b6123969060003d811161239c575b61238e81836101b8565b810190612024565b3861236b565b503d612384565b610e53565b610df6565b6123ce915060203d81116123d4575b6123c681836101b8565b810190610e10565b38612300565b503d6123bc565b610e53565b6124009150823d8111612406575b6123f881836101b8565b810190610e10565b38612284565b503d6123ee565b610e53565b602086612286565b612424600061084d565b916121b0565b5050509050565b600090565b61243e612431565b50612447612431565b508061245b61245584610223565b91610223565b146124c4578061247361246d84610223565b91610223565b106000146124bf57905b90918261249b61249561249060006113fc565b610223565b91610223565b146124a257565b600063d92e233d60e01b8152806124bb60048201610869565b0390fd5b61247d565b6000635c6d7b7360e01b8152806124dd60048201610869565b0390fd5b9094919392946124ef610842565b506124f8610842565b5061252a6125257f0000000000000000000000000000000000000000000000000000000000000000610dd2565b610dea565b602063e6a43905918490612550859461255b6125446100c3565b96879586948594610dfb565b845260048401610e2f565b03915afa90811561270d576000916126df575b5061258a61258461257f60006113fc565b610223565b91610223565b1460001461259a5750505050915b565b6125a3916118e2565b929092836125ba6125b4600061084d565b916100d8565b14806126c4575b6000146125d35750505050915b612598565b6125e385969394968783916127cd565b95866125f76125f1866100d8565b916100d8565b1115600014612640575050505061261761261184926100d8565b916100d8565b1061262357915b6125ce565b600063ef71d09160e01b81528061263c60048201610869565b0390fd5b90919350826126539396509190916127cd565b9161266761266184926100d8565b916100d8565b116126a75761267f61267983926100d8565b916100d8565b1061268a579161261e565b6000638dc525d160e01b8152806126a360048201610869565b0390fd5b600063e1b0da4f60e01b8152806126c060048201610869565b0390fd5b50806126d96126d3600061084d565b916100d8565b146125c1565b612700915060203d8111612706575b6126f881836101b8565b810190610e10565b3861256e565b503d6126ee565b610e53565b906000602091612720610842565b50612729610842565b50828151910182855af1156127c1573d6000519061275061274a600061084d565b916100d8565b146000146127a7575061276281611f07565b3b612776612770600061084d565b916100d8565b145b61277f5750565b61278b6127a391611f07565b6000918291635274afe760e01b83526004830161042b565b0390fd5b6127ba6127b46001610ac0565b916100d8565b1415612778565b6040513d6000823e3d90fd5b6127d5610842565b50806127ea6127e4600061084d565b916100d8565b1461285c57816128036127fd600061084d565b916100d8565b148015612841575b612824576128219261281c916108a4565b610933565b90565b60006342301c2360e01b81528061283d60048201610869565b0390fd5b5082612856612850600061084d565b916100d8565b1461280b565b6000638dc525d160e01b81528061287560048201610869565b0390fdfea264697066735822122079c13c1e76957798084965add50180a01d312ae3270ac94d95e5385781d6c10964736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH2 0x1E PUSH1 0x0 CALLDATALOAD PUSH2 0xBD JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1F00CA74 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x2DD31000 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x38ED1739 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x85F8C259 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x8803DBEE EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xBAA2ABDE EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xD06CA61F EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xD52BB6F4 EQ PUSH2 0x90 JUMPI PUSH4 0xE8E33700 SUB PUSH2 0xE JUMPI PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE4 DUP2 PUSH2 0xD8 JUMP JUMPDEST SUB PUSH2 0xEB JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xFD DUP3 PUSH2 0xDB JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x135 JUMPI PUSH2 0x132 PUSH2 0x11B DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH2 0x129 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0xD8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x15B SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x18E JUMPI PUSH2 0x18A PUSH2 0x179 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF JUMP JUMPDEST SWAP2 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x181 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x147 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F DUP1 NOT SWAP2 ADD AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x1C2 SWAP1 PUSH2 0x198 JUMP JUMPDEST DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1DC JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST SWAP1 PUSH2 0x1F4 PUSH2 0x1ED PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x1B8 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x20E JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x22C SWAP1 PUSH2 0x218 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x223 JUMP JUMPDEST SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x251 DUP3 PUSH2 0x22F JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x268 PUSH2 0x263 DUP3 PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x2A5 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x28C JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x29A DUP5 DUP7 PUSH2 0x244 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2C8 JUMPI DUP2 PUSH1 0x20 PUSH2 0x2C5 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x253 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x30E JUMPI PUSH2 0x2E7 DUP4 PUSH1 0x0 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x309 JUMPI PUSH2 0x306 SWAP3 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x32F SWAP1 PUSH2 0xD8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x340 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x326 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x367 PUSH2 0x361 PUSH2 0x35A DUP5 PUSH2 0x313 JUMP JUMPDEST DUP1 SWAP4 PUSH2 0x317 JUMP JUMPDEST SWAP3 PUSH2 0x320 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x378 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x391 PUSH2 0x38B PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x333 JUMP JUMPDEST SWAP5 PUSH2 0x344 JUMP JUMPDEST SWAP2 ADD SWAP2 SWAP1 SWAP2 PUSH2 0x36B JUMP JUMPDEST PUSH2 0x3B1 SWAP2 PUSH1 0x20 DUP3 ADD SWAP2 PUSH1 0x0 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x34A JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3E5 JUMPI PUSH2 0x3E1 PUSH2 0x3D0 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD JUMP JUMPDEST SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x3F5 JUMPI JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x427 SWAP1 PUSH2 0x223 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x43F SWAP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP5 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x471 JUMPI PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x46D PUSH2 0x45C PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x464 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x42B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4B5 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x4B0 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x4AB JUMPI JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x526 JUMPI PUSH2 0x4D2 DUP2 PUSH1 0x0 DUP5 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x4E0 DUP3 PUSH1 0x20 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x521 JUMPI PUSH2 0x505 DUP5 PUSH2 0x51E SWAP5 DUP5 ADD PUSH2 0x47B JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x515 DUP2 PUSH1 0x60 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0x80 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST CALLVALUE PUSH2 0x562 JUMPI PUSH2 0x55E PUSH2 0x54D PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BA JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x555 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST CALLVALUE PUSH2 0x598 JUMPI PUSH2 0x594 PUSH2 0x583 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0xFF JUMP JUMPDEST SWAP2 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0x58B PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x147 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST CALLVALUE PUSH2 0x5D4 JUMPI PUSH2 0x5D0 PUSH2 0x5BF PUSH2 0x5B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BA JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x5C7 PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x645 JUMPI PUSH2 0x5F0 DUP3 PUSH1 0x0 DUP4 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x5FE DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x60C DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x61A DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x642 PUSH2 0x62B DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH2 0x639 DUP2 PUSH1 0xA0 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0xC0 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x66C SWAP3 SWAP5 SWAP4 PUSH2 0x665 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x6A6 JUMPI PUSH2 0x68D PUSH2 0x681 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x16A6 JUMP JUMPDEST SWAP1 PUSH2 0x6A2 PUSH2 0x699 PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x64A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST CALLVALUE PUSH2 0x6DC JUMPI PUSH2 0x6D8 PUSH2 0x6C7 PUSH2 0x6C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD JUMP JUMPDEST SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x6CF PUSH2 0xC3 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x39B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x70A JUMPI DUP1 PUSH2 0x6FE PUSH2 0x707 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x244 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST CALLVALUE PUSH2 0x741 JUMPI PUSH2 0x728 PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 PUSH2 0x73D PUSH2 0x734 PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x64A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 DUP4 DUP3 SUB SLT PUSH2 0x7C3 JUMPI PUSH2 0x760 DUP2 PUSH1 0x0 DUP6 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x76E DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x244 JUMP JUMPDEST SWAP3 PUSH2 0x77C DUP4 PUSH1 0x40 DUP5 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x78A DUP2 PUSH1 0x60 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x798 DUP3 PUSH1 0x80 DUP4 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP3 PUSH2 0x7C0 PUSH2 0x7A9 DUP5 PUSH1 0xA0 DUP6 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP4 PUSH2 0x7B7 DUP2 PUSH1 0xC0 DUP7 ADD PUSH2 0x244 JUMP JUMPDEST SWAP4 PUSH1 0xE0 ADD PUSH2 0xF0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x7F2 PUSH2 0x7F9 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x7E8 PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x838 JUMPI PUSH2 0x834 PUSH2 0x820 PUSH2 0x811 CALLDATASIZE PUSH1 0x4 PUSH2 0x746 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x1DCC JUMP JUMPDEST PUSH2 0x82B SWAP4 SWAP2 SWAP4 PUSH2 0xC3 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x7C8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x861 PUSH2 0x85C PUSH2 0x866 SWAP3 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x886 PUSH2 0x881 PUSH2 0x88B SWAP3 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8B3 PUSH2 0x8B9 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xD8 JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0x8C5 DUP4 DUP3 MUL PUSH2 0xD8 JUMP JUMPDEST SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x8D4 JUMPI JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x8F0 PUSH2 0x8EB PUSH2 0x8F5 SWAP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x907 PUSH2 0x90D SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xD8 JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x918 JUMPI JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x93F PUSH2 0x945 SWAP2 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x950 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH2 0x95D PUSH2 0x842 JUMP JUMPDEST POP DUP1 PUSH2 0x972 PUSH2 0x96C PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0xA18 JUMPI DUP2 PUSH2 0x98B PUSH2 0x985 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x9FD JUMPI JUMPDEST PUSH2 0x9E0 JUMPI PUSH2 0x9DD SWAP3 PUSH2 0x9D2 PUSH2 0x9C0 PUSH2 0x9B9 PUSH2 0x9D7 SWAP5 PUSH2 0x9B3 PUSH2 0x3E5 PUSH2 0x872 JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8A4 JUMP JUMPDEST SWAP4 PUSH2 0x9CC PUSH2 0x3E8 PUSH2 0x8DC JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0x933 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x9F9 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH2 0xA12 PUSH2 0xA0C PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x340DABEF PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xA31 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA55 PUSH2 0xA50 PUSH2 0xA5A SWAP3 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA75 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST SWAP1 PUSH2 0xA8C PUSH2 0xA87 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0xABB PUSH2 0xAA3 DUP4 PUSH2 0xA7A JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0xAB1 DUP7 SWAP4 PUSH2 0xA5D JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0xA91 JUMP JUMPDEST JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xACF PUSH2 0xAD9 SWAP3 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAEB PUSH2 0xAF1 SWAP2 SWAP4 SWAP3 SWAP4 PUSH2 0xD8 JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST DUP3 SUB SWAP2 DUP3 GT PUSH2 0xAFC JUMPI JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0xB21 DUP3 PUSH2 0x313 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB32 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST SWAP1 PUSH2 0xB41 SWAP1 PUSH2 0xD8 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0xB4E SWAP1 PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0xB5D JUMPI PUSH1 0x1 SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST SWAP1 PUSH2 0xB6C DUP3 PUSH2 0xA3A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB7D JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH2 0xB8C SWAP1 MLOAD PUSH2 0x223 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB99 SWAP1 MLOAD PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBA6 PUSH2 0xA35 JUMP JUMPDEST POP PUSH2 0xBB0 DUP2 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xBC3 PUSH2 0xBBD PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0xCDB JUMPI PUSH2 0xC0A PUSH2 0xBDC PUSH2 0xBD7 DUP4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST SWAP4 PUSH2 0xC05 DUP6 SWAP2 PUSH2 0xBFE PUSH2 0xBEE DUP9 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xBF8 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0xC26 PUSH2 0xC16 DUP3 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xC20 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC3B PUSH2 0xC35 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCD2 SWAP1 PUSH2 0xCCD PUSH2 0xCA8 PUSH2 0xC8D PUSH2 0xC74 PUSH2 0xC6F DUP8 PUSH2 0xC69 DUP8 PUSH2 0xC63 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0xC87 PUSH2 0xC82 DUP9 DUP8 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0xCA0 PUSH2 0xC9B DUP11 DUP8 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1044 JUMP JUMPDEST PUSH2 0xCC8 DUP8 SWAP2 PUSH2 0xCC1 DUP6 PUSH2 0xCBB PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xC27 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x20DB8267 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xCF4 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 PUSH2 0xD12 PUSH2 0xD0C TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0xD23 JUMPI PUSH2 0xD20 SWAP7 PUSH2 0xD40 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0xD3C PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xD57 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xD52 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xE64 JUMP JUMPDEST SWAP1 PUSH2 0xD60 PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD6D SWAP2 CALLDATASIZE SWAP2 PUSH2 0x253 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST CALLDATALOAD PUSH2 0xD8F DUP2 PUSH2 0x22F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0xDA1 PUSH2 0xDAB SWAP3 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDB7 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDC3 SWAP1 PUSH2 0xDAE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDCF SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDDB SWAP1 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDE7 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xDF3 SWAP1 PUSH2 0xDDE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE0E DUP3 PUSH2 0x22F JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xE2A JUMPI PUSH2 0xE27 SWAP2 PUSH1 0x0 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE51 SWAP3 SWAP5 SWAP4 PUSH2 0xE4A PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE5B PUSH2 0xC3 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xE7D SWAP3 SWAP8 SWAP7 POP POP PUSH2 0xE77 DUP4 DUP6 SWAP1 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP5 PUSH2 0xEBE PUSH2 0xEB8 PUSH2 0xEB2 PUSH2 0xEAD DUP10 PUSH2 0xEA7 PUSH2 0xE97 DUP13 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xEA1 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x100E JUMPI PUSH2 0xEE8 PUSH2 0xEE3 PUSH2 0xEDE DUP4 DUP6 PUSH2 0xED8 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP3 CALLER SWAP1 PUSH2 0xF1C PUSH2 0xF17 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 PUSH2 0xF41 PUSH2 0xF3C DUP8 DUP10 PUSH2 0xF36 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP1 PUSH2 0xF7A PUSH2 0xF62 PUSH2 0xF5D DUP10 DUP12 PUSH2 0xF57 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP5 PUSH2 0xF85 PUSH2 0xF6E PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1009 JUMPI PUSH2 0xFD7 SWAP7 PUSH2 0xFD1 SWAP5 PUSH2 0xFC7 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xFD9 JUMPI JUMPDEST POP PUSH2 0xFC1 PUSH2 0xFBC DUP13 PUSH2 0xFB6 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0x1F6E JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP1 SWAP4 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0x20DB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFFB SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1002 JUMPI JUMPDEST PUSH2 0xFF3 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFA4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1027 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1041 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x103C PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x104D PUSH2 0x842 JUMP JUMPDEST POP DUP3 PUSH2 0x1062 PUSH2 0x105C PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x111B JUMPI DUP2 PUSH2 0x107B PUSH2 0x1075 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1100 JUMPI JUMPDEST PUSH2 0x10E3 JUMPI PUSH2 0x10CA PUSH2 0x10B9 PUSH2 0x10E0 SWAP5 PUSH2 0x10B3 PUSH2 0x10A2 PUSH2 0x10D0 SWAP7 DUP4 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x10AD PUSH2 0x3E8 PUSH2 0x8DC JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP4 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x10C4 PUSH2 0x3E5 PUSH2 0x872 JUMP JUMPDEST SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 PUSH2 0x933 JUMP JUMPDEST PUSH2 0x10DA PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x340DABEF PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x10FC PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x1115 PUSH2 0x110F PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1134 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP6 PUSH2 0x1152 PUSH2 0x114C TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x1163 JUMPI PUSH2 0x1160 SWAP7 PUSH2 0x1180 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x117C PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1197 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1192 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x11A2 JUMP JUMPDEST SWAP1 PUSH2 0x11A0 PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x11BB SWAP3 SWAP8 SWAP7 POP POP PUSH2 0x11B5 DUP4 DUP6 SWAP1 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0xB9C JUMP JUMPDEST SWAP5 PUSH2 0x11EA PUSH2 0x11E4 PUSH2 0x11DE PUSH2 0x11D9 DUP10 PUSH2 0x11D3 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x133A JUMPI PUSH2 0x1214 PUSH2 0x120F PUSH2 0x120A DUP4 DUP6 PUSH2 0x1204 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP3 CALLER SWAP1 PUSH2 0x1248 PUSH2 0x1243 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 PUSH2 0x126D PUSH2 0x1268 DUP8 DUP10 PUSH2 0x1262 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP1 PUSH2 0x12A6 PUSH2 0x128E PUSH2 0x1289 DUP10 DUP12 PUSH2 0x1283 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST SWAP5 PUSH2 0x12B1 PUSH2 0x129A PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x1335 JUMPI PUSH2 0x1303 SWAP7 PUSH2 0x12FD SWAP5 PUSH2 0x12F3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1305 JUMPI JUMPDEST POP PUSH2 0x12ED PUSH2 0x12E8 DUP13 PUSH2 0x12E2 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP3 PUSH2 0x1F6E JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP1 SWAP4 PUSH2 0xD62 JUMP JUMPDEST SWAP1 PUSH2 0x20DB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1327 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x132E JUMPI JUMPDEST PUSH2 0x131F DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x12D0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1315 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xE1B0DA4F PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1353 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x136D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1368 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP8 PUSH2 0x138C PUSH2 0x1386 TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x139E JUMPI PUSH2 0x139A SWAP9 PUSH2 0x13BB JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x13B7 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x13D4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x13CF PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x13DE PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13F4 PUSH2 0x13EF PUSH2 0x13F9 SWAP3 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1405 SWAP1 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1411 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x141D SWAP1 PUSH2 0x1408 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1429 SWAP1 PUSH2 0xDDE JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x1439 DUP3 PUSH2 0xDB JUMP JUMPDEST JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x1464 JUMPI DUP1 PUSH2 0x1458 PUSH2 0x1461 SWAP3 PUSH1 0x0 DUP7 ADD PUSH2 0x142C JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x142C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP3 SWAP8 POP SWAP8 SWAP6 SWAP4 SWAP8 POP POP PUSH2 0x14A6 PUSH2 0x14A1 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 DUP5 SWAP1 PUSH2 0x14CC DUP11 SWAP5 PUSH2 0x14D7 PUSH2 0x14C0 PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x16A1 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1673 JUMPI JUMPDEST POP SWAP3 DUP4 PUSH2 0x1508 PUSH2 0x1502 PUSH2 0x14FD PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x1656 JUMPI PUSH2 0x153A PUSH2 0x1535 DUP6 PUSH2 0x1530 PUSH1 0x40 SWAP6 PUSH2 0x1526 PUSH2 0x1563 SWAP10 PUSH2 0xDBA JUMP JUMPDEST SWAP1 CALLER DUP5 SWAP2 SWAP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x0 PUSH4 0x89AFCB44 PUSH2 0x154C PUSH2 0xC3 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH2 0xDFB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x42B JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1651 JUMPI PUSH1 0x0 DUP1 SWAP4 SWAP1 SWAP2 PUSH2 0x1614 JUMPI JUMPDEST POP PUSH2 0x1591 PUSH2 0x158B PUSH2 0x1597 SWAP3 SWAP5 SWAP8 DUP5 PUSH2 0x2436 JUMP JUMPDEST POP PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x160F JUMPI SWAP3 JUMPDEST SWAP3 SWAP4 PUSH2 0x15B6 PUSH2 0x15B0 DUP7 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x15F2 JUMPI PUSH2 0x15CE PUSH2 0x15C8 DUP5 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x15D5 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEF71D091 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x15EE PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x8DC525D1 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x160B PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x158B SWAP4 POP PUSH2 0x1597 SWAP2 POP PUSH2 0x1641 PUSH2 0x1591 SWAP2 PUSH1 0x40 RETURNDATASIZE DUP2 GT PUSH2 0x164A JUMPI JUMPDEST PUSH2 0x1639 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x143B JUMP JUMPDEST SWAP5 POP SWAP2 POP PUSH2 0x1578 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x162F JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x317F12FD PUSH1 0xE2 SHL DUP2 MSTORE DUP1 PUSH2 0x166F PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1694 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x169A JUMPI JUMPDEST PUSH2 0x168C DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x14EA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1682 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP1 PUSH2 0x16C6 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x16B8 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x16C0 PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH2 0x1370 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x16D6 SWAP2 ADD PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x16E3 PUSH2 0xA35 JUMP JUMPDEST POP PUSH2 0x16ED DUP2 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x1700 PUSH2 0x16FA PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x180A JUMPI PUSH2 0x1733 PUSH2 0x1719 PUSH2 0x1714 DUP4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST SWAP4 PUSH2 0x172E DUP6 PUSH2 0x1728 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x173B PUSH2 0x842 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x176A PUSH2 0x1764 PUSH2 0x175F PUSH2 0x174F DUP7 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x1759 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT ISZERO PUSH2 0x1806 JUMPI PUSH2 0x1801 SWAP1 PUSH2 0x17FC PUSH2 0x17D7 PUSH2 0x17BC PUSH2 0x1790 PUSH2 0x178B DUP8 DUP7 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x17B6 PUSH2 0x17B1 DUP9 PUSH2 0x17AB DUP9 PUSH2 0x17A5 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP1 PUSH2 0x18E2 JUMP JUMPDEST PUSH2 0x17CF PUSH2 0x17CA DUP11 DUP8 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x17F7 DUP8 SWAP2 PUSH2 0x17F0 DUP6 PUSH2 0x17EA PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x173C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x20DB8267 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1823 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1827 JUMP JUMPDEST SUB PUSH2 0x184A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x185C DUP3 PUSH2 0x183A JUMP JUMPDEST JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1870 DUP2 PUSH2 0x185E JUMP JUMPDEST SUB PUSH2 0x1877 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x1889 DUP3 PUSH2 0x1867 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x18C1 JUMPI PUSH2 0x18BE PUSH2 0x18A7 DUP5 PUSH1 0x0 DUP6 ADD PUSH2 0x184F JUMP JUMPDEST SWAP4 PUSH2 0x18B5 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x187C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x18DA PUSH2 0x18D5 PUSH2 0x18DF SWAP3 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x18EB PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x18F4 PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x1900 DUP3 DUP3 SWAP1 PUSH2 0x2436 JUMP JUMPDEST POP SWAP1 PUSH1 0x20 PUSH2 0x1935 PUSH2 0x1930 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST SWAP2 PUSH4 0xE6A43905 SWAP3 PUSH2 0x1959 DUP7 SWAP3 SWAP5 PUSH2 0x1964 PUSH2 0x194D PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1AB6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1A88 JUMPI JUMPDEST POP SWAP1 DUP2 PUSH2 0x1995 PUSH2 0x198F PUSH2 0x198A PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x1A6B JUMPI PUSH1 0x60 PUSH2 0x19B0 PUSH2 0x19AB PUSH2 0x19C6 SWAP5 PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH4 0x902F1AC SWAP1 PUSH2 0x19BE PUSH2 0xC3 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH2 0xDFB JUMP JUMPDEST DUP3 MSTORE DUP2 DUP1 PUSH2 0x19D6 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1A66 JUMPI PUSH1 0x0 DUP1 SWAP4 SWAP1 SWAP2 PUSH2 0x1A24 JUMPI JUMPDEST POP PUSH2 0x1A0B PUSH2 0x1A04 PUSH2 0x19FE PUSH2 0x1A11 SWAP4 PUSH2 0x18C6 JUMP JUMPDEST SWAP5 PUSH2 0x18C6 JUMP JUMPDEST SWAP5 SWAP3 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x1A1F JUMPI SWAP1 JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x19FE SWAP4 POP PUSH2 0x1A11 SWAP2 POP PUSH2 0x1A04 PUSH2 0x1A54 PUSH2 0x1A0B SWAP3 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x1A5F JUMPI JUMPDEST PUSH2 0x1A4C DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x188B JUMP JUMPDEST POP SWAP6 POP SWAP3 POP POP PUSH2 0x19EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A42 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 PUSH2 0x1A85 PUSH2 0x1A7F PUSH1 0x0 SWAP4 PUSH2 0x84D JUMP JUMPDEST SWAP3 PUSH2 0x84D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1AA9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1AAF JUMPI JUMPDEST PUSH2 0x1AA1 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x1977 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP10 PUSH2 0x1AD9 PUSH2 0x1AD3 TIMESTAMP SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x1AEC JUMPI PUSH2 0x1AE7 SWAP11 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1B05 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B24 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1B1F PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1B2F PUSH2 0x1EF3 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x1B4B JUMPI PUSH2 0x1B48 SWAP2 PUSH1 0x0 ADD PUSH2 0x142C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x1B6E SWAP8 SWAP5 SWAP12 SWAP10 SWAP11 POP SWAP8 SWAP5 SWAP6 SWAP3 SWAP8 POP POP POP DUP6 SWAP4 DUP10 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH2 0x24E1 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x1BA2 PUSH2 0x1B9D PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 DUP6 SWAP1 PUSH2 0x1BC8 DUP6 SWAP5 PUSH2 0x1BD3 PUSH2 0x1BBC PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DC7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1D99 JUMPI JUMPDEST POP SWAP3 DUP4 PUSH2 0x1C04 PUSH2 0x1BFE PUSH2 0x1BF9 PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x1CC0 JUMPI JUMPDEST PUSH2 0x1C48 PUSH2 0x1C76 SWAP5 PUSH2 0x1C43 PUSH2 0x1C39 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x1C34 PUSH2 0x1C2A PUSH2 0x1C4D SWAP8 PUSH2 0xDBA JUMP JUMPDEST DUP14 CALLER DUP8 SWAP2 SWAP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST CALLER DUP4 SWAP1 DUP12 SWAP3 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x1C6B PUSH1 0x0 PUSH4 0x6A627842 PUSH2 0x1C5F PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH2 0xDFB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x42B JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1CBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1C8D JUMPI JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1CAE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1CB4 JUMPI JUMPDEST PUSH2 0x1CA6 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1B31 JUMP JUMPDEST CODESIZE PUSH2 0x1C89 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP3 POP SWAP1 PUSH2 0x1CF4 PUSH2 0x1CEF PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xC9C65396 SWAP2 DUP6 SWAP1 PUSH2 0x1D1C PUSH1 0x0 DUP8 SWAP6 PUSH2 0x1D27 PUSH2 0x1D10 PUSH2 0xC3 JUMP JUMPDEST SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x1D94 JUMPI PUSH2 0x1C76 SWAP5 PUSH2 0x1C43 PUSH2 0x1C39 PUSH2 0x1C48 SWAP4 PUSH2 0x1C34 PUSH2 0x1C2A PUSH1 0x20 SWAP10 PUSH2 0x1C4D SWAP9 PUSH1 0x0 SWAP2 PUSH2 0x1D67 JUMPI JUMPDEST POP SWAP11 POP POP POP SWAP6 SWAP7 POP POP POP SWAP2 POP POP PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x1D87 SWAP2 POP DUP12 RETURNDATASIZE DUP2 GT PUSH2 0x1D8D JUMPI JUMPDEST PUSH2 0x1D7F DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x1D55 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x1DBA SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1DC0 JUMPI JUMPDEST PUSH2 0x1DB2 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x1BE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP1 PUSH2 0x1DF5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1DDF PUSH2 0x842 JUMP JUMPDEST PUSH2 0x1DE7 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x1DEF PUSH2 0x842 JUMP JUMPDEST SWAP2 PUSH2 0x1ABB JUMP JUMPDEST SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E0F PUSH2 0x1E14 SWAP2 PUSH2 0x1DFA JUMP JUMPDEST PUSH2 0x1E00 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E21 SWAP1 SLOAD PUSH2 0x1E03 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E2E PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E44 PUSH1 0x0 NOT SWAP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x1E62 PUSH2 0x1E5D PUSH2 0x1E67 SWAP3 PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E82 PUSH2 0x1E7D PUSH2 0x1E89 SWAP3 PUSH2 0x1E4E JUMP JUMPDEST PUSH2 0x1E6A JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1E37 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E97 PUSH1 0x0 PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x1EB0 PUSH2 0x1EAA PUSH2 0x1EA5 PUSH2 0x1E24 JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x1EC9 JUMPI PUSH2 0x1EC7 PUSH2 0x1EC0 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x1EE2 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EF0 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F05 PUSH2 0x1EFE PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F10 SWAP1 PUSH2 0xDDE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SWAP1 JUMP JUMPDEST PUSH2 0x1F33 PUSH2 0x1F2E PUSH2 0x1F38 SWAP3 PUSH2 0x185E JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x1F13 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x1F65 PUSH2 0x1F6C SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x1F5B PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SWAP3 PUSH2 0x1FA8 PUSH2 0x1FBC SWAP6 SWAP4 PUSH2 0x1FB7 SWAP4 SWAP5 PUSH2 0x1F8F PUSH4 0x23B872DD SWAP3 SWAP5 SWAP2 SWAP3 PUSH2 0x1F1F JUMP JUMPDEST SWAP4 PUSH2 0x1F98 PUSH2 0xC3 JUMP JUMPDEST SWAP8 DUP9 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP4 PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x2712 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FDC JUMPI PUSH2 0x1FD8 PUSH1 0x20 SWAP2 PUSH2 0x198 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST SWAP1 PUSH2 0x1FF3 PUSH2 0x1FEE DUP4 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x2022 PUSH2 0x200A DUP4 PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP1 PUSH2 0x2018 DUP7 SWAP4 PUSH2 0x1FBE JUMP JUMPDEST SWAP3 ADD SWAP2 SUB SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x202F JUMPI JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2055 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH1 0x20 SWAP2 DUP4 ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2085 PUSH2 0x208E PUSH1 0x20 SWAP4 PUSH2 0x2093 SWAP4 PUSH2 0x207C DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP4 PUSH2 0x2038 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x2041 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x20CB SWAP1 PUSH2 0x20C1 PUSH2 0x20D8 SWAP7 SWAP5 PUSH2 0x20B7 PUSH1 0x80 DUP7 ADD SWAP8 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2066 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH2 0x20E6 PUSH2 0x842 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2115 PUSH2 0x210F PUSH2 0x210A PUSH2 0x20FA DUP10 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x2104 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT ISZERO PUSH2 0x242A JUMPI PUSH2 0x212E PUSH2 0x2129 DUP7 DUP4 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP1 PUSH2 0x2155 PUSH2 0x2150 DUP8 PUSH2 0x214A DUP5 PUSH2 0x2144 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP2 PUSH2 0x2161 DUP2 DUP5 SWAP1 PUSH2 0x2436 JUMP JUMPDEST POP SWAP1 PUSH2 0x2189 PUSH2 0x2184 DUP8 PUSH2 0x217E DUP7 PUSH2 0x2178 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST SWAP2 PUSH2 0x219D PUSH2 0x2197 DUP4 SWAP3 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x241A JUMPI PUSH2 0x21AF PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 DUP4 PUSH2 0x21E0 PUSH2 0x21DA PUSH2 0x21D5 PUSH2 0x21C5 DUP14 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x21CF PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x2412 JUMPI PUSH2 0x2219 PUSH2 0x2214 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 DUP11 PUSH4 0xE6A43905 SWAP3 PUSH2 0x2264 PUSH2 0x224C PUSH2 0x2247 DUP12 SWAP5 PUSH2 0x2241 DUP13 PUSH2 0x223B PUSH1 0x2 PUSH2 0xA41 JUMP JUMPDEST SWAP1 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST SWAP5 PUSH2 0x226F PUSH2 0x2258 PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x240D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x23E0 JUMPI JUMPDEST POP JUMPDEST SWAP6 PUSH2 0x22B8 PUSH2 0x22B3 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH2 0x22DA PUSH4 0xE6A43905 SWAP5 SWAP3 SWAP5 PUSH2 0x22E5 PUSH2 0x22CE PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23DB JUMPI PUSH2 0x230B SWAP2 PUSH2 0x2306 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x23AD JUMPI JUMPDEST POP PUSH2 0x1414 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST PUSH4 0x22C0D9F SWAP3 SWAP2 SWAP5 PUSH2 0x2325 PUSH2 0x2320 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x1FFD JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x23A8 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x2357 DUP7 SWAP3 PUSH2 0x234C SWAP5 PUSH2 0x2340 PUSH2 0xC3 JUMP JUMPDEST SWAP11 DUP12 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH2 0xDFB JUMP JUMPDEST DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x2097 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x2371 SWAP3 PUSH2 0x2376 JUMPI JUMPDEST POP PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x2396 SWAP1 PUSH1 0x0 RETURNDATASIZE DUP2 GT PUSH2 0x239C JUMPI JUMPDEST PUSH2 0x238E DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2024 JUMP JUMPDEST CODESIZE PUSH2 0x236B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2384 JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x23CE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x23D4 JUMPI JUMPDEST PUSH2 0x23C6 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x2300 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x23BC JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x2400 SWAP2 POP DUP3 RETURNDATASIZE DUP2 GT PUSH2 0x2406 JUMPI JUMPDEST PUSH2 0x23F8 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x2284 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2286 JUMP JUMPDEST PUSH2 0x2424 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0x21B0 JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x243E PUSH2 0x2431 JUMP JUMPDEST POP PUSH2 0x2447 PUSH2 0x2431 JUMP JUMPDEST POP DUP1 PUSH2 0x245B PUSH2 0x2455 DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x24C4 JUMPI DUP1 PUSH2 0x2473 PUSH2 0x246D DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST LT PUSH1 0x0 EQ PUSH2 0x24BF JUMPI SWAP1 JUMPDEST SWAP1 SWAP2 DUP3 PUSH2 0x249B PUSH2 0x2495 PUSH2 0x2490 PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH2 0x24A2 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x24BB PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5C6D7B73 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x24DD PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP5 SWAP2 SWAP4 SWAP3 SWAP5 PUSH2 0x24EF PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x24F8 PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x252A PUSH2 0x2525 PUSH32 0x0 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST PUSH1 0x20 PUSH4 0xE6A43905 SWAP2 DUP5 SWAP1 PUSH2 0x2550 DUP6 SWAP5 PUSH2 0x255B PUSH2 0x2544 PUSH2 0xC3 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH2 0xDFB JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xE2F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x270D JUMPI PUSH1 0x0 SWAP2 PUSH2 0x26DF JUMPI JUMPDEST POP PUSH2 0x258A PUSH2 0x2584 PUSH2 0x257F PUSH1 0x0 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST SWAP2 PUSH2 0x223 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x259A JUMPI POP POP POP POP SWAP2 JUMPDEST JUMP JUMPDEST PUSH2 0x25A3 SWAP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 DUP4 PUSH2 0x25BA PUSH2 0x25B4 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 PUSH2 0x26C4 JUMPI JUMPDEST PUSH1 0x0 EQ PUSH2 0x25D3 JUMPI POP POP POP POP SWAP2 JUMPDEST PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x25E3 DUP6 SWAP7 SWAP4 SWAP5 SWAP7 DUP8 DUP4 SWAP2 PUSH2 0x27CD JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x25F7 PUSH2 0x25F1 DUP7 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT ISZERO PUSH1 0x0 EQ PUSH2 0x2640 JUMPI POP POP POP POP PUSH2 0x2617 PUSH2 0x2611 DUP5 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x2623 JUMPI SWAP2 JUMPDEST PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x0 PUSH4 0xEF71D091 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x263C PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP4 POP DUP3 PUSH2 0x2653 SWAP4 SWAP7 POP SWAP2 SWAP1 SWAP2 PUSH2 0x27CD JUMP JUMPDEST SWAP2 PUSH2 0x2667 PUSH2 0x2661 DUP5 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST GT PUSH2 0x26A7 JUMPI PUSH2 0x267F PUSH2 0x2679 DUP4 SWAP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST LT PUSH2 0x268A JUMPI SWAP2 PUSH2 0x261E JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DC525D1 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x26A3 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xE1B0DA4F PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x26C0 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x26D9 PUSH2 0x26D3 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x2700 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2706 JUMPI JUMPDEST PUSH2 0x26F8 DUP2 DUP4 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE10 JUMP JUMPDEST CODESIZE PUSH2 0x256E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x26EE JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 PUSH2 0x2720 PUSH2 0x842 JUMP JUMPDEST POP PUSH2 0x2729 PUSH2 0x842 JUMP JUMPDEST POP DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x27C1 JUMPI RETURNDATASIZE PUSH1 0x0 MLOAD SWAP1 PUSH2 0x2750 PUSH2 0x274A PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH1 0x0 EQ PUSH2 0x27A7 JUMPI POP PUSH2 0x2762 DUP2 PUSH2 0x1F07 JUMP JUMPDEST EXTCODESIZE PUSH2 0x2776 PUSH2 0x2770 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x277F JUMPI POP JUMP JUMPDEST PUSH2 0x278B PUSH2 0x27A3 SWAP2 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x42B JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x27BA PUSH2 0x27B4 PUSH1 0x1 PUSH2 0xAC0 JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ ISZERO PUSH2 0x2778 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x27D5 PUSH2 0x842 JUMP JUMPDEST POP DUP1 PUSH2 0x27EA PUSH2 0x27E4 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x285C JUMPI DUP2 PUSH2 0x2803 PUSH2 0x27FD PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x2841 JUMPI JUMPDEST PUSH2 0x2824 JUMPI PUSH2 0x2821 SWAP3 PUSH2 0x281C SWAP2 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x42301C23 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x283D PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP DUP3 PUSH2 0x2856 PUSH2 0x2850 PUSH1 0x0 PUSH2 0x84D JUMP JUMPDEST SWAP2 PUSH2 0xD8 JUMP JUMPDEST EQ PUSH2 0x280B JUMP JUMPDEST PUSH1 0x0 PUSH4 0x8DC525D1 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 PUSH2 0x2875 PUSH1 0x4 DUP3 ADD PUSH2 0x869 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xC13C1E76957798084965ADD50180A01D312AE3270AC94D95E538 JUMPI DUP2 0xD6 0xC1 MULMOD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "480:13834:13:-:0;;;;;;;;;-1:-1:-1;480:13834:13;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;626:32::-;;;:::o;480:13834::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;10891:522::-;10999:17;;:::i;:::-;11032:8;;:13;;11044:1;11032:13;:::i;:::-;;;:::i;:::-;;11028:46;;11088:9;:14;;11101:1;11088:14;:::i;:::-;;;:::i;:::-;;:33;;;;10891:522;11084:72;;11383:23;11201:8;11326:16;11265:28;11201:14;11325:36;11201:8;:14;11212:3;11201:14;:::i;:::-;;;:::i;:::-;11265:15;;:28;:::i;:::-;11326:9;:16;11338:4;11326:16;:::i;:::-;;;:::i;:::-;11325:36;:::i;:::-;11383:23;;:::i;:::-;10891:522;:::o;11084:72::-;11130:26;;;;;;;;;;;;:::i;:::-;;;;11088:33;11106:10;;:15;;11120:1;11106:15;:::i;:::-;;;:::i;:::-;;11088:33;;11028:46;11054:20;;;;;;;;;;;;:::i;:::-;;;;480:13834;;;:::o;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;13026:513::-;;;13119:24;;:::i;:::-;13159:4;:11;:4;:11;:::i;:::-;:15;;13173:1;13159:15;:::i;:::-;;;:::i;:::-;;13155:41;;13252:39;13216:26;13230:11;:4;:11;:::i;:::-;13216:26;:::i;:::-;13282:9;13252:39;:7;13260;:18;:14;:7;:14;:::i;:::-;:18;13277:1;13260:18;:::i;:::-;;;:::i;:::-;13252:39;;;:::i;:::-;;:::i;:::-;13327:15;:11;:4;:11;:::i;:::-;:15;13341:1;13327:15;:::i;:::-;;;:::i;:::-;13351:3;13344:1;:5;;13348:1;13344:5;:::i;:::-;;;:::i;:::-;;;;;13351:3;13424:4;13459:63;13476:46;13412:33;13424:11;;:4;13429:5;:1;:5;13433:1;13429:5;:::i;:::-;;;:::i;:::-;13424:11;;:::i;:::-;;:::i;:::-;13437:7;;:4;13442:1;13437:7;;:::i;:::-;;:::i;:::-;13412:33;;:::i;:::-;13488:10;;:7;13496:1;13488:10;;:::i;:::-;;:::i;:::-;13500:9;13511:10;13476:46;;:::i;:::-;13459:63;:7;13467:1;:5;:1;:5;13471:1;13467:5;:::i;:::-;;;:::i;:::-;13459:63;;;:::i;:::-;;:::i;:::-;13351:3;:::i;:::-;13315:27;;13344:5;;;13026:513::o;13155:41::-;13183:13;;;;;;;;;;;;:::i;:::-;;;;2017:118;;;;;;;5786:8;2065:26;;:15;2083:8;2065:26;:::i;:::-;;;:::i;:::-;;2061:56;;2127:1;;;:::i;:::-;2017:118;:::o;2061:56::-;2100:17;;;;;;;;;;;;:::i;:::-;;;;2466:103:9;;2531:1;2466:103;;;;;;;;:::i;:::-;2531:1;:::i;:::-;;;;:::i;:::-;2466:103::o;480:13834:13:-;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;5595:598;5864:29;5595:598;;;;5878:8;5864:29;5888:4;;5864:29;;:::i;:::-;;;:::i;:::-;5907:7;:42;;:27;;:7;5915:18;:14;:7;:14;:::i;:::-;:18;5932:1;5915:18;:::i;:::-;;;:::i;:::-;5907:27;;:::i;:::-;;:::i;:::-;5937:12;5907:42;:::i;:::-;;;:::i;:::-;;5903:81;;6003:15;6010:7;;:4;;:7;6015:1;6010:7;:::i;:::-;;;:::i;:::-;;:::i;:::-;6003:15;:::i;:::-;6049:10;;6084:7;6073:27;:19;6084:7;6073:19;:::i;:::-;:27;:::i;:::-;:45;:27;6101:4;:7;;:4;;:7;6106:1;6101:7;:::i;:::-;;;:::i;:::-;;:::i;:::-;6110:4;6073:45;6110:7;;:4;;:7;6115:1;6110:7;:::i;:::-;;;:::i;:::-;;:::i;:::-;6073:45;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;6162:24;6073:45;6162:24;6073:45;6132:10;6073:45;;;;;5595:598;6132:7;:10;;:7;:10;6140:1;6132:10;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6168:7;6177:4;;6183:2;6162:24;;:::i;:::-;;;:::i;:::-;5595:598::o;6073:45::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;5903:81::-;5958:26;11130;;;5958;;;;;;;;:::i;:::-;;;;5595:598;;5818:24;5595:598;;;;;5818:24;;:::i;:::-;;:::i;:::-;5595:598;:::o;11706:451::-;;11814:16;;:::i;:::-;11846:9;;:14;;11859:1;11846:14;:::i;:::-;;;:::i;:::-;;11842:53;;11909:9;:14;;11922:1;11909:14;:::i;:::-;;;:::i;:::-;;:33;;;;11706:451;11905:66;;12070:30;12071:22;12121:29;12010:9;:28;:21;12122:23;12010:9;12022;12010:21;;:::i;:::-;:28;12034:4;12010:28;:::i;:::-;;;:::i;:::-;12071:10;:22;:::i;:::-;12070:30;12097:3;12070:30;:::i;:::-;;;:::i;:::-;12122:23;;:::i;:::-;12121:29;12149:1;12121:29;:::i;:::-;;;:::i;:::-;11706:451;:::o;11905:66::-;11951:20;11054;;;11951;;;;;;;;:::i;:::-;;;;11909:33;11927:10;;:15;;11941:1;11927:15;:::i;:::-;;;:::i;:::-;;11909:33;;11842:53;11869:26;11130;;;11869;;;;;;;;:::i;:::-;;;;2017:118;;;;;;;6807:8;2065:26;;:15;2083:8;2065:26;:::i;:::-;;;:::i;:::-;;2061:56;;2127:1;;;:::i;:::-;2017:118;:::o;2061:56::-;2100:17;;;;;;;;;;;;:::i;:::-;;;;2466:103:9;;2531:1;2466:103;;;;;;;;:::i;:::-;2531:1;:::i;:::-;;;;:::i;:::-;2466:103::o;6616:576:13:-;6885:29;6616:576;;;;6898:9;6885:29;6909:4;;6885:29;;:::i;:::-;;;:::i;:::-;6928:7;:24;;:10;;:7;:10;6936:1;6928:10;:::i;:::-;;;:::i;:::-;;:::i;:::-;6941:11;6928:24;:::i;:::-;;;:::i;:::-;;6924:59;;7002:15;7009:7;;:4;;:7;7014:1;7009:7;:::i;:::-;;;:::i;:::-;;:::i;:::-;7002:15;:::i;:::-;7048:10;;7083:7;7072:27;:19;7083:7;7072:19;:::i;:::-;:27;:::i;:::-;:45;:27;7100:4;:7;;:4;;:7;7105:1;7100:7;:::i;:::-;;;:::i;:::-;;:::i;:::-;7109:4;7072:45;7109:7;;:4;;:7;7114:1;7109:7;:::i;:::-;;;:::i;:::-;;:::i;:::-;7072:45;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;7161:24;7072:45;7161:24;7072:45;7131:10;7072:45;;;;;6616:576;7131:7;:10;;:7;:10;7139:1;7131:10;:::i;:::-;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;7167:7;7176:4;;7182:2;7161:24;;:::i;:::-;;;:::i;:::-;6616:576::o;7072:45::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;6924:59::-;6961:22;;;;;;;;;;;;:::i;:::-;;;;6616:576;;6839:24;6616:576;;;;;6839:24;;:::i;:::-;;:::i;:::-;6616:576;:::o;2017:118::-;;;;;;;;;4534:8;2065:26;;:15;2083:8;2065:26;:::i;:::-;;;:::i;:::-;;2061:56;;2127:1;;;:::i;:::-;2017:118;;:::o;2061:56::-;2100:17;;;;;;;;;;;;:::i;:::-;;;;2466:103:9;;2531:1;2466:103;;;;;;;;;;:::i;:::-;2531:1;:::i;:::-;;;;;:::i;:::-;2466:103::o;480:13834:13:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;4310:862::-;;;;;;;;;;;;4636:7;4625:27;:19;4636:7;4625:19;:::i;:::-;:27;:::i;:::-;:43;:27;4653:6;;4661;4625:43;4661:6;4625:43;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;4310:862;4610:58;4682:4;;:18;;4690:10;4698:1;4690:10;:::i;:::-;4682:18;:::i;:::-;;;:::i;:::-;;4678:49;;4851:18;:13;4753:4;4794:9;4851:22;4753:4;4746:12;4851:22;4753:4;4746:12;:::i;:::-;4776:10;;4788:4;4794:9;;;:::i;:::-;4851:13;:::i;:::-;:18;:::i;:::-;:22;;:18;:22;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4310:862;4814:59;4970:16;4912:27;4970:16;4814:59;;4924:6;;4912:27;:::i;:::-;4892:47;4970:16;:::i;:::-;;;:::i;:::-;;:58;;;;;;4949:79;5051:7;:20;;:7;5061:10;5051:20;:::i;:::-;;;:::i;:::-;;5047:54;;5115:20;;:7;5125:10;5115:20;:::i;:::-;;;:::i;:::-;;5111:54;;4310:862::o;5111:54::-;5144:21;;;;;;;;;;;;:::i;:::-;;;;5047:54;5080:21;;;;;;;;;;;;:::i;:::-;;;;4970:58;;;4851:22;4912:27;4851:22;;4970:16;4851:22;;;4970:16;4851:22;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;4678:49::-;4709:18;;;;;;;;;;;;:::i;:::-;;;;4625:43;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;4310:862::-;;4583:15;4310:862;;;;;;4566:15;;:::i;:::-;4583;;:::i;:::-;;;:::i;:::-;4310:862;;:::o;480:13834::-;;;;;;:::i;:::-;;:::o;12345:492::-;;;12438:24;;:::i;:::-;12478:4;:11;:4;:11;:::i;:::-;:15;;12492:1;12478:15;:::i;:::-;;;:::i;:::-;;12474:41;;12571:21;12535:26;12549:11;:4;:11;:::i;:::-;12535:26;:::i;:::-;12584:8;12571:21;:7;:21;12579:1;12571:21;:::i;:::-;;;:::i;:::-;;:::i;:::-;12616:9;;:::i;:::-;12648:3;12627:1;:19;;12631:15;:11;:4;:11;:::i;:::-;:15;12645:1;12631:15;:::i;:::-;;;:::i;:::-;12627:19;:::i;:::-;;;:::i;:::-;;;;;12648:3;12721:4;12756:64;12773:47;12709:33;12721:7;;:4;12726:1;12721:7;;:::i;:::-;;:::i;:::-;12730:11;;:4;12735:5;:1;:5;12739:1;12735:5;:::i;:::-;;;:::i;:::-;12730:11;;:::i;:::-;;:::i;:::-;12709:33;;:::i;:::-;12786:10;;:7;12794:1;12786:10;;:::i;:::-;;:::i;:::-;12798:9;12809:10;12773:47;;:::i;:::-;12756:64;:7;12764:1;:5;:1;:5;12768:1;12764:5;:::i;:::-;;;:::i;:::-;12756:64;;;:::i;:::-;;:::i;:::-;12648:3;:::i;:::-;12616:9;;12627:19;;;12345:492::o;12474:41::-;12502:13;13183;;;12502;;;;;;;;:::i;:::-;;;;480:13834;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;10119:479::-;;10202:16;;:::i;:::-;10220;;;:::i;:::-;10280:6;10268:27;10280:6;10288;10268:27;;:::i;:::-;10248:47;10331:7;10320:43;:27;:19;10331:7;10320:19;:::i;:::-;:27;:::i;:::-;;;10348:6;10320:43;10348:6;10356;10320:43;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;10119:479;10305:58;10377:4;;:18;;10385:10;10393:1;10385:10;:::i;:::-;10377:18;:::i;:::-;;;:::i;:::-;;10373:37;;10469:27;:25;:13;:27;10477:4;10469:13;:::i;:::-;:25;:::i;:::-;;:27;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10119:479;10429:67;10529:16;10429:67;;10529:16;10429:67;;:::i;:::-;;;:::i;:::-;10529:6;10539;10529:16;:::i;:::-;;;:::i;:::-;;:62;;;;;;10506:85;10119:479;:::o;10529:62::-;;;10469:27;10429:67;10469:27;;10529:16;10469:27;;10429:67;10469:27;10529:16;10469:27;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;10373:37::-;10405:1;;;;10408;10397:13;;10408:1;10397:13;;:::i;:::-;;;:::i;:::-;;:::o;10320:43::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;2017:118::-;;;;;;;;;;;3076:8;2065:26;;:15;2083:8;2065:26;:::i;:::-;;;:::i;:::-;;2061:56;;2127:1;;;:::i;:::-;2017:118;;;:::o;2061:56::-;2100:17;;;;;;;;;;;;:::i;:::-;;;;2466:103:9;;2531:1;2466:103;;;;;;;;;;;;:::i;:::-;2531:1;:::i;:::-;;;;;;:::i;:::-;2466:103::o;480:13834:13:-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;2818:955::-;3222:167;2818:955;;;;;;;;;;;;;3249:6;;3269;;3289:14;3317;3345:10;3369;3222:167;;:::i;:::-;3201:188;;3434:7;3423:27;:19;3434:7;3423:19;:::i;:::-;:27;:::i;:::-;:43;:27;3451:6;;3459;3423:43;3459:6;3423:43;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;2818:955;3408:58;3480:4;;:18;;3488:10;3496:1;3488:10;:::i;:::-;3480:18;:::i;:::-;;;:::i;:::-;;3476:102;;2818:955;3744:13;:22;3603:6;3714:7;3664:14;3744:22;3603:6;;3646:7;3596:14;3744:18;3603:6;3596:14;:::i;:::-;3628:10;;3640:4;3646:7;;;:::i;:::-;3664:14;:::i;:::-;3696:10;3708:4;3714:7;;;;:::i;:::-;3744:13;:::i;:::-;:18;:::i;:::-;:22;;:18;:22;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;2818:955;3732:34;2818:955;:::o;3744:22::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;3476:102::-;3532:7;;;3521:30;:19;3532:7;3521:19;:::i;:::-;:30;:::i;:::-;:46;:30;3552:6;;3560;3521:46;;3560:6;3521:46;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;3744:22;3521:46;3714:7;3664:14;3744:13;3521:46;3646:7;3596:14;3744:22;3521:46;3744:18;3521:46;;;;;3476:102;3514:53;3476:102;;;;;;;;;;;;;;3521:46;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;3423:43::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;2818:955::-;;3167:17;2818:955;;;;;;;3117:15;;:::i;:::-;3142;;:::i;:::-;3167:17;;:::i;:::-;;;:::i;:::-;2818:955;;;:::o;480:13834::-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1864:36:9:-;1899:1;;;:::i;:::-;1864:36;:::o;1899:1::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;2575:307::-;2702:7;;;:::i;:::-;:18;;2713:7;;:::i;:::-;2702:18;:::i;:::-;;;:::i;:::-;;2698:86;;2858:17;2868:7;;:::i;:::-;2858:17;;:::i;:::-;2575:307::o;2698:86::-;2743:30;;;;;;;;;;;;:::i;:::-;;;;1818:40;1857:1;;;:::i;:::-;1818:40;:::o;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;:::-;2888:208::o;480:13834:13:-;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;1618:188:7:-;1745:53;1618:188;1745:53;;1618:188;;1745:53;1618:188;1760:18;1745:53;1760:18;1781:4;1787:2;1791:5;1745:53;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1618:188::o;480:13834:13:-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::o;9013:831::-;;;;9114:9;;:::i;:::-;9146:3;9125:1;:19;;9129:15;:11;:4;:11;:::i;:::-;:15;9143:1;9129:15;:::i;:::-;;;:::i;:::-;9125:19;:::i;:::-;;;:::i;:::-;;;;;9200:7;;:4;9205:1;9200:7;;:::i;:::-;;:::i;:::-;9209:4;:11;;:4;9214:5;:1;:5;9218:1;9214:5;:::i;:::-;;;:::i;:::-;9209:11;;:::i;:::-;;:::i;:::-;9267:5;9255:26;9267:5;9274:6;9255:26;;:::i;:::-;9235:46;9315:7;:14;;:7;9323:5;:1;:5;9327:1;9323:5;:::i;:::-;;;:::i;:::-;9315:14;;:::i;:::-;;:::i;:::-;9386:5;:15;;:5;9395:6;9386:15;:::i;:::-;;;:::i;:::-;;:101;;;;9422:10;9430:1;9422:10;:::i;:::-;9386:101;9343:144;9514:1;;:19;;9518:15;:11;:4;:11;:::i;:::-;:15;9532:1;9518:15;:::i;:::-;;;:::i;:::-;9514:19;:::i;:::-;;;:::i;:::-;;:110;;;;9553:27;:19;9564:7;9553:19;:::i;:::-;:27;:::i;:::-;:48;:27;;9581:6;9553:48;9589:11;;9581:6;9589:4;9594:5;:1;:5;9598:1;9594:5;:::i;:::-;;;:::i;:::-;9589:11;;:::i;:::-;;:::i;:::-;9553:48;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;9659:42;9553:48;;;;;9514:110;;;9670:7;9659:27;:19;9670:7;9659:19;:::i;:::-;:27;:::i;:::-;:42;:27;9687:5;9694:6;9659:42;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;9651:56;9659:42;9651:51;9659:42;;;;;9514:110;9651:51;;:::i;:::-;:56;:::i;:::-;;9725:10;9753;9781:2;9801:12;;9811:1;9801:12;:::i;:::-;;:::i;:::-;9651:176;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;9146:3;9651:176;;;9514:110;9146:3;;:::i;:::-;9114:9;;9651:176;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;9659:42::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;9553:48::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;9514:110::-;9659:42;9621:3;9514:110;;9386:101;9476:10;9484:1;9476:10;:::i;:::-;9386:101;;;9125:19;;;;;;9013:831::o;480:13834::-;;;:::o;13994:318::-;14079:14;;:::i;:::-;14095;;;:::i;:::-;14125:6;;:16;;14135:6;14125:16;:::i;:::-;;;:::i;:::-;;14121:46;;14196:6;:15;;14205:6;14196:15;:::i;:::-;;;:::i;:::-;;:53;;;;;;14177:72;14263:6;;:20;;14273:10;14281:1;14273:10;:::i;:::-;14263:20;:::i;:::-;;;:::i;:::-;;14259:46;;13994:318::o;14259:46::-;14292:13;;;;;;;;;;;;:::i;:::-;;;;14196:53;;;14121:46;14150:17;;;;;;;;;;;;:::i;:::-;;;;7279:1674;;;;;;;7499:15;;:::i;:::-;7516;;;:::i;:::-;7569:7;7558:27;:19;7569:7;7558:19;:::i;:::-;:27;:::i;:::-;:43;:27;7586:6;;7594;7558:43;7594:6;7558:43;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;7279:1674;7543:58;7624:18;;7632:10;7640:1;7632:10;:::i;:::-;7624:18;:::i;:::-;;;:::i;:::-;;7620:1327;;;;7720:14;;;;7620:1327;;7279:1674::o;7620:1327::-;7882:27;7894:6;7882:27;:::i;:::-;7843:66;;;7940:8;:13;;7952:1;7940:13;:::i;:::-;;;:::i;:::-;;:30;;;7620:1327;7936:1001;;;;8108:14;;;;7936:1001;;7620:1327;;7936:1001;8271:42;8278:14;;;;;8294:8;8304;8271:42;;:::i;:::-;8352:14;;:32;;8370:14;8352:32;:::i;:::-;;;:::i;:::-;;;8348:575;;;;8412:14;;;;:27;;:14;8429:10;8412:27;:::i;:::-;;;:::i;:::-;;8408:61;;8348:575;;7936:1001;;8408:61;8448:21;5144;;;8448;;;;;;;;:::i;:::-;;;;8348:575;8623:14;;;;;8616:42;8623:14;;;8639:8;8649;8616:42;;:::i;:::-;8684:14;:31;;:14;8701;8684:31;:::i;:::-;;;:::i;:::-;;8680:66;;8772:27;;:14;8789:10;8772:27;:::i;:::-;;;:::i;:::-;;8768:61;;8348:575;;;8768:61;8808:21;5080;;;8808;;;;;;;;:::i;:::-;;;;8680:66;8724:22;6961;;;8724;;;;;;;;:::i;:::-;;;;7940:30;7957:8;;:13;;7969:1;7957:13;:::i;:::-;;;:::i;:::-;;7940:30;;7558:43;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;8370:720:7:-;;8507:421;;8370:720;8450:18;;:::i;:::-;8478:19;;;:::i;:::-;8507:421;;;;;;;;;;;;;;;;8942:10;:15;;8956:1;8942:15;:::i;:::-;;;:::i;:::-;;:68;;;;8968:5;8960:14;8968:5;8960:14;:::i;:::-;:26;:31;;8990:1;8960:31;:::i;:::-;;;:::i;:::-;;8942:68;8938:146;;8370:720;:::o;8938:146::-;9058:14;9033:40;9066:5;9058:14;:::i;:::-;9033:40;;;;;;;;;;;;;:::i;:::-;;;;8942:68;8994:16;;9009:1;8994:16;:::i;:::-;;;:::i;:::-;;;8942:68;;8507:421;;;;;;;;;;13608:311:13;13709:15;;:::i;:::-;13740:7;;:12;;13751:1;13740:12;:::i;:::-;;;:::i;:::-;;13736:46;;13796:8;:13;;13808:1;13796:13;:::i;:::-;;;:::i;:::-;;:30;;;;13608:311;13792:69;;13881:31;13882:7;:18;:7;:18;:::i;:::-;13881:31;:::i;:::-;13608:311;:::o;13792:69::-;13835:26;11130;;;13835;;;;;;;;:::i;:::-;;;;13796:30;13813:8;;:13;;13825:1;13813:13;:::i;:::-;;;:::i;:::-;;13796:30;;13736:46;13761:21;5080;;;13761;;;;;;;;:::i;:::-;;;"
            },
            "methodIdentifiers": {
              "FACTORY()": "2dd31000",
              "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
              "getAmountIn(uint256,uint256,uint256)": "85f8c259",
              "getAmountOut(uint256,uint256,uint256)": "054d50d4",
              "getAmountsIn(uint256,address[])": "1f00ca74",
              "getAmountsOut(uint256,address[])": "d06ca61f",
              "getReserves(address,address)": "d52bb6f4",
              "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
              "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
              "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdenticalTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PairDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u30e6\\u30fc\\u30b6\\u30fc\\u3068\\u306e\\u4e3b\\u8981\\u30a4\\u30f3\\u30bf\\u30fc\\u30d5\\u30a7\\u30fc\\u30b9\\u3092\\u63d0\\u4f9b\\u3059\\u308b\\u30eb\\u30fc\\u30bf\\u30fc\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\",\"errors\":{\"DeadlineExpired()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u671f\\u9650\\u5207\\u308c\"}],\"ExcessiveInputAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u904e\\u5ea6\\u306a\\u5165\\u529b\\u91cf\"}],\"IdenticalTokens()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u540c\\u4e00\\u30c8\\u30fc\\u30af\\u30f3\"}],\"InsufficientAAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306aA\\u91cf\"}],\"InsufficientBAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306aB\\u91cf\"}],\"InsufficientOutputAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u5341\\u5206\\u306a\\u51fa\\u529b\\u91cf\"}],\"InvalidInputAmount()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u6b63\\u306a\\u5165\\u529b\\u91cf\"}],\"InvalidPath()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u4e0d\\u6b63\\u306a\\u30d1\\u30b9\"}],\"PairDoesNotExist()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u30da\\u30a2\\u304c\\u5b58\\u5728\\u3057\\u306a\\u3044\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"ZeroAddress()\":[{\"details\":\"\\u30a8\\u30e9\\u30fc\\uff1a\\u30bc\\u30ed\\u30a2\\u30c9\\u30ec\\u30b9\"}]},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u3092\\u8ffd\\u52a0\",\"params\":{\"amountADesired\":\"\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u5e0c\\u671b\\u8ffd\\u52a0\\u91cf\",\"amountAMin\":\"\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u6700\\u5c0f\\u8ffd\\u52a0\\u91cf\",\"amountBDesired\":\"\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u5e0c\\u671b\\u8ffd\\u52a0\\u91cf\",\"amountBMin\":\"\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u6700\\u5c0f\\u8ffd\\u52a0\\u91cf\",\"deadline\":\"\\u671f\\u9650\\u30bf\\u30a4\\u30e0\\u30b9\\u30bf\\u30f3\\u30d7\",\"to\":\"LP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\",\"tokenA\":\"\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenB\":\"\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"amountA\":\"\\u5b9f\\u969b\\u306b\\u8ffd\\u52a0\\u3055\\u308c\\u305f\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u91cf\",\"amountB\":\"\\u5b9f\\u969b\\u306b\\u8ffd\\u52a0\\u3055\\u308c\\u305f\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u91cf\",\"liquidity\":\"\\u53d7\\u3051\\u53d6\\u3063\\u305fLP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\"}},\"constructor\":{\"details\":\"\\u30b3\\u30f3\\u30b9\\u30c8\\u30e9\\u30af\\u30bf\",\"params\":{\"factoryAddress\":\"\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"getAmountIn(uint256,uint256,uint256)\":{\"details\":\"\\u51fa\\u529b\\u91cf\\u304b\\u3089\\u5165\\u529b\\u91cf\\u3092\\u8a08\\u7b97\",\"params\":{\"amountOut\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\",\"reserveIn\":\"\\u5165\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\",\"reserveOut\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"},\"returns\":{\"amountIn\":\"\\u5165\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\"}},\"getAmountOut(uint256,uint256,uint256)\":{\"details\":\"\\u5165\\u529b\\u91cf\\u304b\\u3089\\u51fa\\u529b\\u91cf\\u3092\\u8a08\\u7b97\",\"params\":{\"amountIn\":\"\\u5165\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\",\"reserveIn\":\"\\u5165\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\",\"reserveOut\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"},\"returns\":{\"amountOut\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\"}},\"getAmountsIn(uint256,address[])\":{\"details\":\"\\u30d1\\u30b9\\u5168\\u4f53\\u3067\\u306e\\u5165\\u529b\\u91cf\\u3092\\u8a08\\u7b97\",\"params\":{\"amountOut\":\"\\u51fa\\u529b\\u91cf\",\"path\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u30d1\\u30b9\"},\"returns\":{\"amounts\":\"\\u5404\\u6bb5\\u968e\\u3067\\u306e\\u91cf\"}},\"getAmountsOut(uint256,address[])\":{\"details\":\"\\u30d1\\u30b9\\u5168\\u4f53\\u3067\\u306e\\u51fa\\u529b\\u91cf\\u3092\\u8a08\\u7b97\",\"params\":{\"amountIn\":\"\\u5165\\u529b\\u91cf\",\"path\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u30d1\\u30b9\"},\"returns\":{\"amounts\":\"\\u5404\\u6bb5\\u968e\\u3067\\u306e\\u91cf\"}},\"getReserves(address,address)\":{\"details\":\"\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\\u3092\\u53d6\\u5f97\",\"params\":{\"tokenA\":\"\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenB\":\"\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"reserveA\":\"\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\",\"reserveB\":\"\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u30ea\\u30b6\\u30fc\\u30d6\\u91cf\"}},\"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)\":{\"details\":\"\\u6d41\\u52d5\\u6027\\u3092\\u524a\\u9664\",\"params\":{\"amountAMin\":\"\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u6700\\u5c0f\\u53d7\\u53d6\\u91cf\",\"amountBMin\":\"\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u6700\\u5c0f\\u53d7\\u53d6\\u91cf\",\"deadline\":\"\\u671f\\u9650\\u30bf\\u30a4\\u30e0\\u30b9\\u30bf\\u30f3\\u30d7\",\"liquidity\":\"\\u524a\\u9664\\u3059\\u308bLP\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\",\"to\":\"\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\",\"tokenA\":\"\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\",\"tokenB\":\"\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"},\"returns\":{\"amountA\":\"\\u53d7\\u3051\\u53d6\\u3063\\u305f\\u30c8\\u30fc\\u30af\\u30f3A\\u306e\\u91cf\",\"amountB\":\"\\u53d7\\u3051\\u53d6\\u3063\\u305f\\u30c8\\u30fc\\u30af\\u30f3B\\u306e\\u91cf\"}},\"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"\\u6b63\\u78ba\\u306a\\u5165\\u529b\\u91cf\\u3067\\u30c8\\u30fc\\u30af\\u30f3\\u3092\\u30b9\\u30ef\\u30c3\\u30d7\",\"params\":{\"amountIn\":\"\\u5165\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\",\"amountOutMin\":\"\\u6700\\u5c0f\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\",\"deadline\":\"\\u671f\\u9650\\u30bf\\u30a4\\u30e0\\u30b9\\u30bf\\u30f3\\u30d7\",\"path\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u30d1\\u30b9\\uff08\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u914d\\u5217\\uff09\",\"to\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"},\"returns\":{\"amounts\":\"\\u5404\\u6bb5\\u968e\\u3067\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u91cf\"}},\"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)\":{\"details\":\"\\u6b63\\u78ba\\u306a\\u51fa\\u529b\\u91cf\\u3067\\u30c8\\u30fc\\u30af\\u30f3\\u3092\\u30b9\\u30ef\\u30c3\\u30d7\",\"params\":{\"amountInMax\":\"\\u6700\\u5927\\u5165\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\",\"amountOut\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u91cf\",\"deadline\":\"\\u671f\\u9650\\u30bf\\u30a4\\u30e0\\u30b9\\u30bf\\u30f3\\u30d7\",\"path\":\"\\u30b9\\u30ef\\u30c3\\u30d7\\u30d1\\u30b9\\uff08\\u30c8\\u30fc\\u30af\\u30f3\\u30a2\\u30c9\\u30ec\\u30b9\\u306e\\u914d\\u5217\\uff09\",\"to\":\"\\u51fa\\u529b\\u30c8\\u30fc\\u30af\\u30f3\\u306e\\u53d7\\u53d6\\u4eba\"},\"returns\":{\"amounts\":\"\\u5404\\u6bb5\\u968e\\u3067\\u306e\\u30c8\\u30fc\\u30af\\u30f3\\u91cf\"}}},\"stateVariables\":{\"FACTORY\":{\"details\":\"\\u30d5\\u30a1\\u30af\\u30c8\\u30ea\\u30fc\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a2\\u30c9\\u30ec\\u30b9\"}},\"title\":\"DexRouter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u6d41\\u52d5\\u6027\\u7ba1\\u7406\\u3068\\u30b9\\u30ef\\u30c3\\u30d7\\u6a5f\\u80fd\\u3092\\u63d0\\u4f9b\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexRouter.sol\":\"DexRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/DexFactory.sol\":{\"keccak256\":\"0x5090843192b30d8f7e7738f2d16b5dc601f22fc727ec771948656cc15093301a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e78dfd31644a66afdeb8dc300ed55d19a57210c9eefc8027f2b0c62ef4f597f\",\"dweb:/ipfs/QmavsZcoectat12P1USa4BwpYSMeqrrWa7BygaqGofLhgH\"]},\"contracts/DexPair.sol\":{\"keccak256\":\"0x8b53a5b7f2532f3629d3c3612bffaf5d8461014960ac9380fa9be5a0650b8422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d702f28491775f2a0dba25cdb6824acccd461daa11c97857251a5c91be359fc7\",\"dweb:/ipfs/QmNjbjbfPqusFGa1FsY6HVUpvUpB6qieKJr6brEbgt63vn\"]},\"contracts/DexRouter.sol\":{\"keccak256\":\"0x3f5f9852fb53fbe8e97e0c901b564b84cc9959ef9e2bf5a4391f5a865a60023d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e075f9977cc1b93dce16d4da7a8d8c28e529c6edb83bd14400ca28164f43ba2e\",\"dweb:/ipfs/QmVsF3F3wvQcpffmeoPFXKuuad54Ah6B6egsJMhUrmYYRw\"]}},\"version\":1}"
        }
      }
    }
  }
}